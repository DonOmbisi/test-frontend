{"version":3,"sources":["node_modules/@angular/common/fesm2022/module.mjs","node_modules/@angular/common/fesm2022/http/testing.mjs","node_modules/@angular/forms/fesm2022/forms.mjs","node_modules/@angular/cdk/fesm2022/fake-event-detection-DWOdFTFz.mjs","node_modules/@angular/cdk/fesm2022/keycodes-CpHkExLC.mjs","node_modules/@angular/cdk/fesm2022/shadow-dom-B0oHn41l.mjs","node_modules/@angular/cdk/fesm2022/platform-DNDzkVcI.mjs","node_modules/@angular/cdk/fesm2022/passive-listeners-esHZRgIN.mjs","node_modules/@angular/cdk/fesm2022/element-x4z00URv.mjs","node_modules/@angular/cdk/fesm2022/focus-monitor-DUe99AIS.mjs","node_modules/@angular/cdk/fesm2022/style-loader-B2sGQXxD.mjs","node_modules/@angular/cdk/fesm2022/private.mjs","node_modules/@angular/cdk/fesm2022/array-I1yfCXUO.mjs","node_modules/@angular/cdk/fesm2022/breakpoints-observer-QutrMj4x.mjs","node_modules/@angular/cdk/fesm2022/observers.mjs","node_modules/@angular/cdk/fesm2022/a11y-module-BPzgKr79.mjs","node_modules/@angular/cdk/fesm2022/id-generator-LuoRZSid.mjs","node_modules/@angular/cdk/fesm2022/typeahead-9ZW4Dtsf.mjs","node_modules/@angular/cdk/fesm2022/keycodes.mjs","node_modules/@angular/cdk/fesm2022/list-key-manager-C7tp3RbG.mjs","node_modules/@angular/cdk/fesm2022/focus-key-manager-CPmlyB_c.mjs","node_modules/@angular/cdk/fesm2022/a11y.mjs","node_modules/@angular/cdk/fesm2022/scrolling-BkvA05C8.mjs","node_modules/@angular/cdk/fesm2022/test-environment-CT0XxPyp.mjs","node_modules/@angular/cdk/fesm2022/platform.mjs","node_modules/@angular/cdk/fesm2022/layout.mjs","node_modules/@angular/material/fesm2022/animation-ChQ1vjiF.mjs","node_modules/@angular/cdk/fesm2022/css-pixel-value-C_HEqLhI.mjs","node_modules/@angular/cdk/fesm2022/coercion.mjs","node_modules/@angular/material/fesm2022/ripple-BMyyyLz2.mjs","node_modules/@angular/material/fesm2022/ripple-loader-wNDzC_j6.mjs","node_modules/@angular/material/fesm2022/structural-styles-CObeNzjn.mjs","node_modules/@angular/material/fesm2022/icon-button-Qqf7bl_c.mjs","node_modules/@angular/cdk/fesm2022/directionality-CChdj3az.mjs","node_modules/@angular/cdk/fesm2022/bidi.mjs","node_modules/@angular/material/fesm2022/common-module-cKSwHniA.mjs","node_modules/@angular/material/fesm2022/index-BRImSAOu.mjs","node_modules/@angular/material/fesm2022/button.mjs","node_modules/@angular/cdk/fesm2022/portal.mjs","node_modules/@angular/cdk/fesm2022/data-source-D34wiQZj.mjs","node_modules/@angular/cdk/fesm2022/recycle-view-repeater-strategy-SfuyU210.mjs","node_modules/@angular/cdk/fesm2022/scrolling.mjs","node_modules/@angular/cdk/fesm2022/overlay-module-Bd2UplUU.mjs","node_modules/@angular/cdk/fesm2022/overlay.mjs","node_modules/@angular/material/fesm2022/snack-bar.mjs","node_modules/@angular/animations/fesm2022/private_export.mjs","node_modules/@angular/animations/fesm2022/util.mjs","node_modules/@angular/animations/fesm2022/browser.mjs","node_modules/@angular/platform-browser/fesm2022/animations.mjs","angular:jit:style:inline:src\\app\\components\\data-generation\\data-generation.component.ts;","node_modules/@angular/material/fesm2022/card.mjs","node_modules/@angular/cdk/fesm2022/observers/private.mjs","node_modules/@angular/material/fesm2022/form-field-C_dE1cl0.mjs","node_modules/@angular/material/fesm2022/module-ko3UutPV.mjs","node_modules/@angular/material/fesm2022/form-field.mjs","node_modules/@angular/cdk/fesm2022/text-field.mjs","node_modules/@angular/material/fesm2022/input-value-accessor-D1GvPuqO.mjs","node_modules/@angular/material/fesm2022/error-options-DCNQlTOA.mjs","node_modules/@angular/material/fesm2022/error-state-Dtb1IHM-.mjs","node_modules/@angular/material/fesm2022/input.mjs","node_modules/@angular/material/fesm2022/progress-bar.mjs","node_modules/@angular/common/fesm2022/http.mjs","node_modules/@angular/platform-browser/fesm2022/platform-browser.mjs","node_modules/@angular/material/fesm2022/icon-registry-CwOTJ7YM.mjs","node_modules/@angular/material/fesm2022/icon.mjs","node_modules/@angular/material/fesm2022/slider.mjs","node_modules/@angular/material/fesm2022/chips.mjs","src/app/components/data-generation/data-generation.component.ts","src/app/components/data-generation/data-generation.component.spec.ts"],"sourcesContent":["/**\n * @license Angular v20.1.7\n * (c) 2010-2025 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport * as i0 from '@angular/core';\nimport { ɵRuntimeError as _RuntimeError, Injectable, InjectionToken, inject, NgZone, DestroyRef, ɵformatRuntimeError as _formatRuntimeError, PendingTasks, ɵConsole as _Console, runInInjectionContext, DOCUMENT, Inject, makeEnvironmentProviders, NgModule } from '@angular/core';\nimport { concatMap, filter, map, finalize, switchMap } from 'rxjs/operators';\nimport { of, Observable, from } from 'rxjs';\nimport { XhrFactory, parseCookieValue } from './xhr.mjs';\n\n/**\n * Transforms an `HttpRequest` into a stream of `HttpEvent`s, one of which will likely be a\n * `HttpResponse`.\n *\n * `HttpHandler` is injectable. When injected, the handler instance dispatches requests to the\n * first interceptor in the chain, which dispatches to the second, etc, eventually reaching the\n * `HttpBackend`.\n *\n * In an `HttpInterceptor`, the `HttpHandler` parameter is the next interceptor in the chain.\n *\n * @publicApi\n */\nclass HttpHandler {\n}\n/**\n * A final `HttpHandler` which will dispatch the request via browser HTTP APIs to a backend.\n *\n * Interceptors sit between the `HttpClient` interface and the `HttpBackend`.\n *\n * When injected, `HttpBackend` dispatches requests directly to the backend, without going\n * through the interceptor chain.\n *\n * @publicApi\n */\nclass HttpBackend {\n}\n\n/**\n * Represents the header configuration options for an HTTP request.\n * Instances are immutable. Modifying methods return a cloned\n * instance with the change. The original object is never changed.\n *\n * @publicApi\n */\nclass HttpHeaders {\n    /**\n     * Internal map of lowercase header names to values.\n     */\n    headers;\n    /**\n     * Internal map of lowercased header names to the normalized\n     * form of the name (the form seen first).\n     */\n    normalizedNames = new Map();\n    /**\n     * Complete the lazy initialization of this object (needed before reading).\n     */\n    lazyInit;\n    /**\n     * Queued updates to be materialized the next initialization.\n     */\n    lazyUpdate = null;\n    /**  Constructs a new HTTP header object with the given values.*/\n    constructor(headers) {\n        if (!headers) {\n            this.headers = new Map();\n        }\n        else if (typeof headers === 'string') {\n            this.lazyInit = () => {\n                this.headers = new Map();\n                headers.split('\\n').forEach((line) => {\n                    const index = line.indexOf(':');\n                    if (index > 0) {\n                        const name = line.slice(0, index);\n                        const value = line.slice(index + 1).trim();\n                        this.addHeaderEntry(name, value);\n                    }\n                });\n            };\n        }\n        else if (typeof Headers !== 'undefined' && headers instanceof Headers) {\n            this.headers = new Map();\n            headers.forEach((value, name) => {\n                this.addHeaderEntry(name, value);\n            });\n        }\n        else {\n            this.lazyInit = () => {\n                if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                    assertValidHeaders(headers);\n                }\n                this.headers = new Map();\n                Object.entries(headers).forEach(([name, values]) => {\n                    this.setHeaderEntries(name, values);\n                });\n            };\n        }\n    }\n    /**\n     * Checks for existence of a given header.\n     *\n     * @param name The header name to check for existence.\n     *\n     * @returns True if the header exists, false otherwise.\n     */\n    has(name) {\n        this.init();\n        return this.headers.has(name.toLowerCase());\n    }\n    /**\n     * Retrieves the first value of a given header.\n     *\n     * @param name The header name.\n     *\n     * @returns The value string if the header exists, null otherwise\n     */\n    get(name) {\n        this.init();\n        const values = this.headers.get(name.toLowerCase());\n        return values && values.length > 0 ? values[0] : null;\n    }\n    /**\n     * Retrieves the names of the headers.\n     *\n     * @returns A list of header names.\n     */\n    keys() {\n        this.init();\n        return Array.from(this.normalizedNames.values());\n    }\n    /**\n     * Retrieves a list of values for a given header.\n     *\n     * @param name The header name from which to retrieve values.\n     *\n     * @returns A string of values if the header exists, null otherwise.\n     */\n    getAll(name) {\n        this.init();\n        return this.headers.get(name.toLowerCase()) || null;\n    }\n    /**\n     * Appends a new value to the existing set of values for a header\n     * and returns them in a clone of the original instance.\n     *\n     * @param name The header name for which to append the values.\n     * @param value The value to append.\n     *\n     * @returns A clone of the HTTP headers object with the value appended to the given header.\n     */\n    append(name, value) {\n        return this.clone({ name, value, op: 'a' });\n    }\n    /**\n     * Sets or modifies a value for a given header in a clone of the original instance.\n     * If the header already exists, its value is replaced with the given value\n     * in the returned object.\n     *\n     * @param name The header name.\n     * @param value The value or values to set or override for the given header.\n     *\n     * @returns A clone of the HTTP headers object with the newly set header value.\n     */\n    set(name, value) {\n        return this.clone({ name, value, op: 's' });\n    }\n    /**\n     * Deletes values for a given header in a clone of the original instance.\n     *\n     * @param name The header name.\n     * @param value The value or values to delete for the given header.\n     *\n     * @returns A clone of the HTTP headers object with the given value deleted.\n     */\n    delete(name, value) {\n        return this.clone({ name, value, op: 'd' });\n    }\n    maybeSetNormalizedName(name, lcName) {\n        if (!this.normalizedNames.has(lcName)) {\n            this.normalizedNames.set(lcName, name);\n        }\n    }\n    init() {\n        if (!!this.lazyInit) {\n            if (this.lazyInit instanceof HttpHeaders) {\n                this.copyFrom(this.lazyInit);\n            }\n            else {\n                this.lazyInit();\n            }\n            this.lazyInit = null;\n            if (!!this.lazyUpdate) {\n                this.lazyUpdate.forEach((update) => this.applyUpdate(update));\n                this.lazyUpdate = null;\n            }\n        }\n    }\n    copyFrom(other) {\n        other.init();\n        Array.from(other.headers.keys()).forEach((key) => {\n            this.headers.set(key, other.headers.get(key));\n            this.normalizedNames.set(key, other.normalizedNames.get(key));\n        });\n    }\n    clone(update) {\n        const clone = new HttpHeaders();\n        clone.lazyInit = !!this.lazyInit && this.lazyInit instanceof HttpHeaders ? this.lazyInit : this;\n        clone.lazyUpdate = (this.lazyUpdate || []).concat([update]);\n        return clone;\n    }\n    applyUpdate(update) {\n        const key = update.name.toLowerCase();\n        switch (update.op) {\n            case 'a':\n            case 's':\n                let value = update.value;\n                if (typeof value === 'string') {\n                    value = [value];\n                }\n                if (value.length === 0) {\n                    return;\n                }\n                this.maybeSetNormalizedName(update.name, key);\n                const base = (update.op === 'a' ? this.headers.get(key) : undefined) || [];\n                base.push(...value);\n                this.headers.set(key, base);\n                break;\n            case 'd':\n                const toDelete = update.value;\n                if (!toDelete) {\n                    this.headers.delete(key);\n                    this.normalizedNames.delete(key);\n                }\n                else {\n                    let existing = this.headers.get(key);\n                    if (!existing) {\n                        return;\n                    }\n                    existing = existing.filter((value) => toDelete.indexOf(value) === -1);\n                    if (existing.length === 0) {\n                        this.headers.delete(key);\n                        this.normalizedNames.delete(key);\n                    }\n                    else {\n                        this.headers.set(key, existing);\n                    }\n                }\n                break;\n        }\n    }\n    addHeaderEntry(name, value) {\n        const key = name.toLowerCase();\n        this.maybeSetNormalizedName(name, key);\n        if (this.headers.has(key)) {\n            this.headers.get(key).push(value);\n        }\n        else {\n            this.headers.set(key, [value]);\n        }\n    }\n    setHeaderEntries(name, values) {\n        const headerValues = (Array.isArray(values) ? values : [values]).map((value) => value.toString());\n        const key = name.toLowerCase();\n        this.headers.set(key, headerValues);\n        this.maybeSetNormalizedName(name, key);\n    }\n    /**\n     * @internal\n     */\n    forEach(fn) {\n        this.init();\n        Array.from(this.normalizedNames.keys()).forEach((key) => fn(this.normalizedNames.get(key), this.headers.get(key)));\n    }\n}\n/**\n * Verifies that the headers object has the right shape: the values\n * must be either strings, numbers or arrays. Throws an error if an invalid\n * header value is present.\n */\nfunction assertValidHeaders(headers) {\n    for (const [key, value] of Object.entries(headers)) {\n        if (!(typeof value === 'string' || typeof value === 'number') && !Array.isArray(value)) {\n            throw new Error(`Unexpected value of the \\`${key}\\` header provided. ` +\n                `Expecting either a string, a number or an array, but got: \\`${value}\\`.`);\n        }\n    }\n}\n\n/**\n * Provides encoding and decoding of URL parameter and query-string values.\n *\n * Serializes and parses URL parameter keys and values to encode and decode them.\n * If you pass URL query parameters without encoding,\n * the query parameters can be misinterpreted at the receiving end.\n *\n *\n * @publicApi\n */\nclass HttpUrlEncodingCodec {\n    /**\n     * Encodes a key name for a URL parameter or query-string.\n     * @param key The key name.\n     * @returns The encoded key name.\n     */\n    encodeKey(key) {\n        return standardEncoding(key);\n    }\n    /**\n     * Encodes the value of a URL parameter or query-string.\n     * @param value The value.\n     * @returns The encoded value.\n     */\n    encodeValue(value) {\n        return standardEncoding(value);\n    }\n    /**\n     * Decodes an encoded URL parameter or query-string key.\n     * @param key The encoded key name.\n     * @returns The decoded key name.\n     */\n    decodeKey(key) {\n        return decodeURIComponent(key);\n    }\n    /**\n     * Decodes an encoded URL parameter or query-string value.\n     * @param value The encoded value.\n     * @returns The decoded value.\n     */\n    decodeValue(value) {\n        return decodeURIComponent(value);\n    }\n}\nfunction paramParser(rawParams, codec) {\n    const map = new Map();\n    if (rawParams.length > 0) {\n        // The `window.location.search` can be used while creating an instance of the `HttpParams` class\n        // (e.g. `new HttpParams({ fromString: window.location.search })`). The `window.location.search`\n        // may start with the `?` char, so we strip it if it's present.\n        const params = rawParams.replace(/^\\?/, '').split('&');\n        params.forEach((param) => {\n            const eqIdx = param.indexOf('=');\n            const [key, val] = eqIdx == -1\n                ? [codec.decodeKey(param), '']\n                : [codec.decodeKey(param.slice(0, eqIdx)), codec.decodeValue(param.slice(eqIdx + 1))];\n            const list = map.get(key) || [];\n            list.push(val);\n            map.set(key, list);\n        });\n    }\n    return map;\n}\n/**\n * Encode input string with standard encodeURIComponent and then un-encode specific characters.\n */\nconst STANDARD_ENCODING_REGEX = /%(\\d[a-f0-9])/gi;\nconst STANDARD_ENCODING_REPLACEMENTS = {\n    '40': '@',\n    '3A': ':',\n    '24': '$',\n    '2C': ',',\n    '3B': ';',\n    '3D': '=',\n    '3F': '?',\n    '2F': '/',\n};\nfunction standardEncoding(v) {\n    return encodeURIComponent(v).replace(STANDARD_ENCODING_REGEX, (s, t) => STANDARD_ENCODING_REPLACEMENTS[t] ?? s);\n}\nfunction valueToString(value) {\n    return `${value}`;\n}\n/**\n * An HTTP request/response body that represents serialized parameters,\n * per the MIME type `application/x-www-form-urlencoded`.\n *\n * This class is immutable; all mutation operations return a new instance.\n *\n * @publicApi\n */\nclass HttpParams {\n    map;\n    encoder;\n    updates = null;\n    cloneFrom = null;\n    constructor(options = {}) {\n        this.encoder = options.encoder || new HttpUrlEncodingCodec();\n        if (options.fromString) {\n            if (options.fromObject) {\n                throw new _RuntimeError(2805 /* RuntimeErrorCode.CANNOT_SPECIFY_BOTH_FROM_STRING_AND_FROM_OBJECT */, ngDevMode && 'Cannot specify both fromString and fromObject.');\n            }\n            this.map = paramParser(options.fromString, this.encoder);\n        }\n        else if (!!options.fromObject) {\n            this.map = new Map();\n            Object.keys(options.fromObject).forEach((key) => {\n                const value = options.fromObject[key];\n                // convert the values to strings\n                const values = Array.isArray(value) ? value.map(valueToString) : [valueToString(value)];\n                this.map.set(key, values);\n            });\n        }\n        else {\n            this.map = null;\n        }\n    }\n    /**\n     * Reports whether the body includes one or more values for a given parameter.\n     * @param param The parameter name.\n     * @returns True if the parameter has one or more values,\n     * false if it has no value or is not present.\n     */\n    has(param) {\n        this.init();\n        return this.map.has(param);\n    }\n    /**\n     * Retrieves the first value for a parameter.\n     * @param param The parameter name.\n     * @returns The first value of the given parameter,\n     * or `null` if the parameter is not present.\n     */\n    get(param) {\n        this.init();\n        const res = this.map.get(param);\n        return !!res ? res[0] : null;\n    }\n    /**\n     * Retrieves all values for a  parameter.\n     * @param param The parameter name.\n     * @returns All values in a string array,\n     * or `null` if the parameter not present.\n     */\n    getAll(param) {\n        this.init();\n        return this.map.get(param) || null;\n    }\n    /**\n     * Retrieves all the parameters for this body.\n     * @returns The parameter names in a string array.\n     */\n    keys() {\n        this.init();\n        return Array.from(this.map.keys());\n    }\n    /**\n     * Appends a new value to existing values for a parameter.\n     * @param param The parameter name.\n     * @param value The new value to add.\n     * @return A new body with the appended value.\n     */\n    append(param, value) {\n        return this.clone({ param, value, op: 'a' });\n    }\n    /**\n     * Constructs a new body with appended values for the given parameter name.\n     * @param params parameters and values\n     * @return A new body with the new value.\n     */\n    appendAll(params) {\n        const updates = [];\n        Object.keys(params).forEach((param) => {\n            const value = params[param];\n            if (Array.isArray(value)) {\n                value.forEach((_value) => {\n                    updates.push({ param, value: _value, op: 'a' });\n                });\n            }\n            else {\n                updates.push({ param, value: value, op: 'a' });\n            }\n        });\n        return this.clone(updates);\n    }\n    /**\n     * Replaces the value for a parameter.\n     * @param param The parameter name.\n     * @param value The new value.\n     * @return A new body with the new value.\n     */\n    set(param, value) {\n        return this.clone({ param, value, op: 's' });\n    }\n    /**\n     * Removes a given value or all values from a parameter.\n     * @param param The parameter name.\n     * @param value The value to remove, if provided.\n     * @return A new body with the given value removed, or with all values\n     * removed if no value is specified.\n     */\n    delete(param, value) {\n        return this.clone({ param, value, op: 'd' });\n    }\n    /**\n     * Serializes the body to an encoded string, where key-value pairs (separated by `=`) are\n     * separated by `&`s.\n     */\n    toString() {\n        this.init();\n        return (this.keys()\n            .map((key) => {\n            const eKey = this.encoder.encodeKey(key);\n            // `a: ['1']` produces `'a=1'`\n            // `b: []` produces `''`\n            // `c: ['1', '2']` produces `'c=1&c=2'`\n            return this.map.get(key)\n                .map((value) => eKey + '=' + this.encoder.encodeValue(value))\n                .join('&');\n        })\n            // filter out empty values because `b: []` produces `''`\n            // which results in `a=1&&c=1&c=2` instead of `a=1&c=1&c=2` if we don't\n            .filter((param) => param !== '')\n            .join('&'));\n    }\n    clone(update) {\n        const clone = new HttpParams({ encoder: this.encoder });\n        clone.cloneFrom = this.cloneFrom || this;\n        clone.updates = (this.updates || []).concat(update);\n        return clone;\n    }\n    init() {\n        if (this.map === null) {\n            this.map = new Map();\n        }\n        if (this.cloneFrom !== null) {\n            this.cloneFrom.init();\n            this.cloneFrom.keys().forEach((key) => this.map.set(key, this.cloneFrom.map.get(key)));\n            this.updates.forEach((update) => {\n                switch (update.op) {\n                    case 'a':\n                    case 's':\n                        const base = (update.op === 'a' ? this.map.get(update.param) : undefined) || [];\n                        base.push(valueToString(update.value));\n                        this.map.set(update.param, base);\n                        break;\n                    case 'd':\n                        if (update.value !== undefined) {\n                            let base = this.map.get(update.param) || [];\n                            const idx = base.indexOf(valueToString(update.value));\n                            if (idx !== -1) {\n                                base.splice(idx, 1);\n                            }\n                            if (base.length > 0) {\n                                this.map.set(update.param, base);\n                            }\n                            else {\n                                this.map.delete(update.param);\n                            }\n                        }\n                        else {\n                            this.map.delete(update.param);\n                            break;\n                        }\n                }\n            });\n            this.cloneFrom = this.updates = null;\n        }\n    }\n}\n\n/**\n * A token used to manipulate and access values stored in `HttpContext`.\n *\n * @publicApi\n */\nclass HttpContextToken {\n    defaultValue;\n    constructor(defaultValue) {\n        this.defaultValue = defaultValue;\n    }\n}\n/**\n * Http context stores arbitrary user defined values and ensures type safety without\n * actually knowing the types. It is backed by a `Map` and guarantees that keys do not clash.\n *\n * This context is mutable and is shared between cloned requests unless explicitly specified.\n *\n * @usageNotes\n *\n * ### Usage Example\n *\n * ```ts\n * // inside cache.interceptors.ts\n * export const IS_CACHE_ENABLED = new HttpContextToken<boolean>(() => false);\n *\n * export class CacheInterceptor implements HttpInterceptor {\n *\n *   intercept(req: HttpRequest<any>, delegate: HttpHandler): Observable<HttpEvent<any>> {\n *     if (req.context.get(IS_CACHE_ENABLED) === true) {\n *       return ...;\n *     }\n *     return delegate.handle(req);\n *   }\n * }\n *\n * // inside a service\n *\n * this.httpClient.get('/api/weather', {\n *   context: new HttpContext().set(IS_CACHE_ENABLED, true)\n * }).subscribe(...);\n * ```\n *\n * @publicApi\n */\nclass HttpContext {\n    map = new Map();\n    /**\n     * Store a value in the context. If a value is already present it will be overwritten.\n     *\n     * @param token The reference to an instance of `HttpContextToken`.\n     * @param value The value to store.\n     *\n     * @returns A reference to itself for easy chaining.\n     */\n    set(token, value) {\n        this.map.set(token, value);\n        return this;\n    }\n    /**\n     * Retrieve the value associated with the given token.\n     *\n     * @param token The reference to an instance of `HttpContextToken`.\n     *\n     * @returns The stored value or default if one is defined.\n     */\n    get(token) {\n        if (!this.map.has(token)) {\n            this.map.set(token, token.defaultValue());\n        }\n        return this.map.get(token);\n    }\n    /**\n     * Delete the value associated with the given token.\n     *\n     * @param token The reference to an instance of `HttpContextToken`.\n     *\n     * @returns A reference to itself for easy chaining.\n     */\n    delete(token) {\n        this.map.delete(token);\n        return this;\n    }\n    /**\n     * Checks for existence of a given token.\n     *\n     * @param token The reference to an instance of `HttpContextToken`.\n     *\n     * @returns True if the token exists, false otherwise.\n     */\n    has(token) {\n        return this.map.has(token);\n    }\n    /**\n     * @returns a list of tokens currently stored in the context.\n     */\n    keys() {\n        return this.map.keys();\n    }\n}\n\n/**\n * Determine whether the given HTTP method may include a body.\n */\nfunction mightHaveBody(method) {\n    switch (method) {\n        case 'DELETE':\n        case 'GET':\n        case 'HEAD':\n        case 'OPTIONS':\n        case 'JSONP':\n            return false;\n        default:\n            return true;\n    }\n}\n/**\n * Safely assert whether the given value is an ArrayBuffer.\n *\n * In some execution environments ArrayBuffer is not defined.\n */\nfunction isArrayBuffer(value) {\n    return typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer;\n}\n/**\n * Safely assert whether the given value is a Blob.\n *\n * In some execution environments Blob is not defined.\n */\nfunction isBlob(value) {\n    return typeof Blob !== 'undefined' && value instanceof Blob;\n}\n/**\n * Safely assert whether the given value is a FormData instance.\n *\n * In some execution environments FormData is not defined.\n */\nfunction isFormData(value) {\n    return typeof FormData !== 'undefined' && value instanceof FormData;\n}\n/**\n * Safely assert whether the given value is a URLSearchParams instance.\n *\n * In some execution environments URLSearchParams is not defined.\n */\nfunction isUrlSearchParams(value) {\n    return typeof URLSearchParams !== 'undefined' && value instanceof URLSearchParams;\n}\n/**\n * `Content-Type` is an HTTP header used to indicate the media type\n * (also known as MIME type) of the resource being sent to the client\n * or received from the server.\n */\nconst CONTENT_TYPE_HEADER = 'Content-Type';\n/**\n * The `Accept` header is an HTTP request header that indicates the media types\n * (or content types) the client is willing to receive from the server.\n */\nconst ACCEPT_HEADER = 'Accept';\n/**\n * `X-Request-URL` is a custom HTTP header used in older browser versions,\n * including Firefox (< 32), Chrome (< 37), Safari (< 8), and Internet Explorer,\n * to include the full URL of the request in cross-origin requests.\n */\nconst X_REQUEST_URL_HEADER = 'X-Request-URL';\n/**\n * `text/plain` is a content type used to indicate that the content being\n * sent is plain text with no special formatting or structured data\n * like HTML, XML, or JSON.\n */\nconst TEXT_CONTENT_TYPE = 'text/plain';\n/**\n * `application/json` is a content type used to indicate that the content\n * being sent is in the JSON format.\n */\nconst JSON_CONTENT_TYPE = 'application/json';\n/**\n * `application/json, text/plain, *\\/*` is a content negotiation string often seen in the\n * Accept header of HTTP requests. It indicates the types of content the client is willing\n * to accept from the server, with a preference for `application/json` and `text/plain`,\n * but also accepting any other type (*\\/*).\n */\nconst ACCEPT_HEADER_VALUE = `${JSON_CONTENT_TYPE}, ${TEXT_CONTENT_TYPE}, */*`;\n/**\n * An outgoing HTTP request with an optional typed body.\n *\n * `HttpRequest` represents an outgoing request, including URL, method,\n * headers, body, and other request configuration options. Instances should be\n * assumed to be immutable. To modify a `HttpRequest`, the `clone`\n * method should be used.\n *\n * @publicApi\n */\nclass HttpRequest {\n    url;\n    /**\n     * The request body, or `null` if one isn't set.\n     *\n     * Bodies are not enforced to be immutable, as they can include a reference to any\n     * user-defined data type. However, interceptors should take care to preserve\n     * idempotence by treating them as such.\n     */\n    body = null;\n    /**\n     * Outgoing headers for this request.\n     */\n    headers;\n    /**\n     * Shared and mutable context that can be used by interceptors\n     */\n    context;\n    /**\n     * Whether this request should be made in a way that exposes progress events.\n     *\n     * Progress events are expensive (change detection runs on each event) and so\n     * they should only be requested if the consumer intends to monitor them.\n     *\n     * Note: The `FetchBackend` doesn't support progress report on uploads.\n     */\n    reportProgress = false;\n    /**\n     * Whether this request should be sent with outgoing credentials (cookies).\n     */\n    withCredentials = false;\n    /**\n     *  The credentials mode of the request, which determines how cookies and HTTP authentication are handled.\n     *  This can affect whether cookies are sent with the request, and how authentication is handled.\n     */\n    credentials;\n    /**\n     * When using the fetch implementation and set to `true`, the browser will not abort the associated request if the page that initiated it is unloaded before the request is complete.\n     */\n    keepalive = false;\n    /**\n     * Controls how the request will interact with the browser's HTTP cache.\n     * This affects whether a response is retrieved from the cache, how it is stored, or if it bypasses the cache altogether.\n     */\n    cache;\n    /**\n     * Indicates the relative priority of the request. This may be used by the browser to decide the order in which requests are dispatched and resources fetched.\n     */\n    priority;\n    /**\n     * The mode of the request, which determines how the request will interact with the browser's security model.\n     * This can affect things like CORS (Cross-Origin Resource Sharing) and same-origin policies.\n     */\n    mode;\n    /**\n     * The redirect mode of the request, which determines how redirects are handled.\n     * This can affect whether the request follows redirects automatically, or if it fails when a redirect occurs.\n     */\n    redirect;\n    /**\n     * The expected response type of the server.\n     *\n     * This is used to parse the response appropriately before returning it to\n     * the requestee.\n     */\n    responseType = 'json';\n    /**\n     * The outgoing HTTP request method.\n     */\n    method;\n    /**\n     * Outgoing URL parameters.\n     *\n     * To pass a string representation of HTTP parameters in the URL-query-string format,\n     * the `HttpParamsOptions`' `fromString` may be used. For example:\n     *\n     * ```ts\n     * new HttpParams({fromString: 'angular=awesome'})\n     * ```\n     */\n    params;\n    /**\n     * The outgoing URL with all URL parameters set.\n     */\n    urlWithParams;\n    /**\n     * The HttpTransferCache option for the request\n     */\n    transferCache;\n    /**\n     * The timeout for the backend HTTP request in ms.\n     */\n    timeout;\n    constructor(method, url, third, fourth) {\n        this.url = url;\n        this.method = method.toUpperCase();\n        // Next, need to figure out which argument holds the HttpRequestInit\n        // options, if any.\n        let options;\n        // Check whether a body argument is expected. The only valid way to omit\n        // the body argument is to use a known no-body method like GET.\n        if (mightHaveBody(this.method) || !!fourth) {\n            // Body is the third argument, options are the fourth.\n            this.body = third !== undefined ? third : null;\n            options = fourth;\n        }\n        else {\n            // No body required, options are the third argument. The body stays null.\n            options = third;\n        }\n        // If options have been passed, interpret them.\n        if (options) {\n            // Normalize reportProgress and withCredentials.\n            this.reportProgress = !!options.reportProgress;\n            this.withCredentials = !!options.withCredentials;\n            this.keepalive = !!options.keepalive;\n            // Override default response type of 'json' if one is provided.\n            if (!!options.responseType) {\n                this.responseType = options.responseType;\n            }\n            // Override headers if they're provided.\n            if (options.headers) {\n                this.headers = options.headers;\n            }\n            if (options.context) {\n                this.context = options.context;\n            }\n            if (options.params) {\n                this.params = options.params;\n            }\n            if (options.priority) {\n                this.priority = options.priority;\n            }\n            if (options.cache) {\n                this.cache = options.cache;\n            }\n            if (options.credentials) {\n                this.credentials = options.credentials;\n            }\n            if (typeof options.timeout === 'number') {\n                // XHR will ignore any value below 1. AbortSignals only accept unsigned integers.\n                if (options.timeout < 1 || !Number.isInteger(options.timeout)) {\n                    // TODO: create a runtime error\n                    throw new Error(ngDevMode ? '`timeout` must be a positive integer value' : '');\n                }\n                this.timeout = options.timeout;\n            }\n            if (options.mode) {\n                this.mode = options.mode;\n            }\n            if (options.redirect) {\n                this.redirect = options.redirect;\n            }\n            // We do want to assign transferCache even if it's falsy (false is valid value)\n            this.transferCache = options.transferCache;\n        }\n        // If no headers have been passed in, construct a new HttpHeaders instance.\n        this.headers ??= new HttpHeaders();\n        // If no context have been passed in, construct a new HttpContext instance.\n        this.context ??= new HttpContext();\n        // If no parameters have been passed in, construct a new HttpUrlEncodedParams instance.\n        if (!this.params) {\n            this.params = new HttpParams();\n            this.urlWithParams = url;\n        }\n        else {\n            // Encode the parameters to a string in preparation for inclusion in the URL.\n            const params = this.params.toString();\n            if (params.length === 0) {\n                // No parameters, the visible URL is just the URL given at creation time.\n                this.urlWithParams = url;\n            }\n            else {\n                // Does the URL already have query parameters? Look for '?'.\n                const qIdx = url.indexOf('?');\n                // There are 3 cases to handle:\n                // 1) No existing parameters -> append '?' followed by params.\n                // 2) '?' exists and is followed by existing query string ->\n                //    append '&' followed by params.\n                // 3) '?' exists at the end of the url -> append params directly.\n                // This basically amounts to determining the character, if any, with\n                // which to join the URL and parameters.\n                const sep = qIdx === -1 ? '?' : qIdx < url.length - 1 ? '&' : '';\n                this.urlWithParams = url + sep + params;\n            }\n        }\n    }\n    /**\n     * Transform the free-form body into a serialized format suitable for\n     * transmission to the server.\n     */\n    serializeBody() {\n        // If no body is present, no need to serialize it.\n        if (this.body === null) {\n            return null;\n        }\n        // Check whether the body is already in a serialized form. If so,\n        // it can just be returned directly.\n        if (typeof this.body === 'string' ||\n            isArrayBuffer(this.body) ||\n            isBlob(this.body) ||\n            isFormData(this.body) ||\n            isUrlSearchParams(this.body)) {\n            return this.body;\n        }\n        // Check whether the body is an instance of HttpUrlEncodedParams.\n        if (this.body instanceof HttpParams) {\n            return this.body.toString();\n        }\n        // Check whether the body is an object or array, and serialize with JSON if so.\n        if (typeof this.body === 'object' ||\n            typeof this.body === 'boolean' ||\n            Array.isArray(this.body)) {\n            return JSON.stringify(this.body);\n        }\n        // Fall back on toString() for everything else.\n        return this.body.toString();\n    }\n    /**\n     * Examine the body and attempt to infer an appropriate MIME type\n     * for it.\n     *\n     * If no such type can be inferred, this method will return `null`.\n     */\n    detectContentTypeHeader() {\n        // An empty body has no content type.\n        if (this.body === null) {\n            return null;\n        }\n        // FormData bodies rely on the browser's content type assignment.\n        if (isFormData(this.body)) {\n            return null;\n        }\n        // Blobs usually have their own content type. If it doesn't, then\n        // no type can be inferred.\n        if (isBlob(this.body)) {\n            return this.body.type || null;\n        }\n        // Array buffers have unknown contents and thus no type can be inferred.\n        if (isArrayBuffer(this.body)) {\n            return null;\n        }\n        // Technically, strings could be a form of JSON data, but it's safe enough\n        // to assume they're plain strings.\n        if (typeof this.body === 'string') {\n            return TEXT_CONTENT_TYPE;\n        }\n        // `HttpUrlEncodedParams` has its own content-type.\n        if (this.body instanceof HttpParams) {\n            return 'application/x-www-form-urlencoded;charset=UTF-8';\n        }\n        // Arrays, objects, boolean and numbers will be encoded as JSON.\n        if (typeof this.body === 'object' ||\n            typeof this.body === 'number' ||\n            typeof this.body === 'boolean') {\n            return JSON_CONTENT_TYPE;\n        }\n        // No type could be inferred.\n        return null;\n    }\n    clone(update = {}) {\n        // For method, url, and responseType, take the current value unless\n        // it is overridden in the update hash.\n        const method = update.method || this.method;\n        const url = update.url || this.url;\n        const responseType = update.responseType || this.responseType;\n        const keepalive = update.keepalive ?? this.keepalive;\n        const priority = update.priority || this.priority;\n        const cache = update.cache || this.cache;\n        const mode = update.mode || this.mode;\n        const redirect = update.redirect || this.redirect;\n        const credentials = update.credentials || this.credentials;\n        // Carefully handle the transferCache to differentiate between\n        // `false` and `undefined` in the update args.\n        const transferCache = update.transferCache ?? this.transferCache;\n        const timeout = update.timeout ?? this.timeout;\n        // The body is somewhat special - a `null` value in update.body means\n        // whatever current body is present is being overridden with an empty\n        // body, whereas an `undefined` value in update.body implies no\n        // override.\n        const body = update.body !== undefined ? update.body : this.body;\n        // Carefully handle the boolean options to differentiate between\n        // `false` and `undefined` in the update args.\n        const withCredentials = update.withCredentials ?? this.withCredentials;\n        const reportProgress = update.reportProgress ?? this.reportProgress;\n        // Headers and params may be appended to if `setHeaders` or\n        // `setParams` are used.\n        let headers = update.headers || this.headers;\n        let params = update.params || this.params;\n        // Pass on context if needed\n        const context = update.context ?? this.context;\n        // Check whether the caller has asked to add headers.\n        if (update.setHeaders !== undefined) {\n            // Set every requested header.\n            headers = Object.keys(update.setHeaders).reduce((headers, name) => headers.set(name, update.setHeaders[name]), headers);\n        }\n        // Check whether the caller has asked to set params.\n        if (update.setParams) {\n            // Set every requested param.\n            params = Object.keys(update.setParams).reduce((params, param) => params.set(param, update.setParams[param]), params);\n        }\n        // Finally, construct the new HttpRequest using the pieces from above.\n        return new HttpRequest(method, url, body, {\n            params,\n            headers,\n            context,\n            reportProgress,\n            responseType,\n            withCredentials,\n            transferCache,\n            keepalive,\n            cache,\n            priority,\n            timeout,\n            mode,\n            redirect,\n            credentials,\n        });\n    }\n}\n\n/**\n * Type enumeration for the different kinds of `HttpEvent`.\n *\n * @publicApi\n */\nvar HttpEventType;\n(function (HttpEventType) {\n    /**\n     * The request was sent out over the wire.\n     */\n    HttpEventType[HttpEventType[\"Sent\"] = 0] = \"Sent\";\n    /**\n     * An upload progress event was received.\n     *\n     * Note: The `FetchBackend` doesn't support progress report on uploads.\n     */\n    HttpEventType[HttpEventType[\"UploadProgress\"] = 1] = \"UploadProgress\";\n    /**\n     * The response status code and headers were received.\n     */\n    HttpEventType[HttpEventType[\"ResponseHeader\"] = 2] = \"ResponseHeader\";\n    /**\n     * A download progress event was received.\n     */\n    HttpEventType[HttpEventType[\"DownloadProgress\"] = 3] = \"DownloadProgress\";\n    /**\n     * The full response including the body was received.\n     */\n    HttpEventType[HttpEventType[\"Response\"] = 4] = \"Response\";\n    /**\n     * A custom event from an interceptor or a backend.\n     */\n    HttpEventType[HttpEventType[\"User\"] = 5] = \"User\";\n})(HttpEventType || (HttpEventType = {}));\n/**\n * Base class for both `HttpResponse` and `HttpHeaderResponse`.\n *\n * @publicApi\n */\nclass HttpResponseBase {\n    /**\n     * All response headers.\n     */\n    headers;\n    /**\n     * Response status code.\n     */\n    status;\n    /**\n     * Textual description of response status code, defaults to OK.\n     *\n     * Do not depend on this.\n     */\n    statusText;\n    /**\n     * URL of the resource retrieved, or null if not available.\n     */\n    url;\n    /**\n     * Whether the status code falls in the 2xx range.\n     */\n    ok;\n    /**\n     * Type of the response, narrowed to either the full response or the header.\n     */\n    type;\n    /**\n     * Super-constructor for all responses.\n     *\n     * The single parameter accepted is an initialization hash. Any properties\n     * of the response passed there will override the default values.\n     */\n    constructor(init, defaultStatus = 200, defaultStatusText = 'OK') {\n        // If the hash has values passed, use them to initialize the response.\n        // Otherwise use the default values.\n        this.headers = init.headers || new HttpHeaders();\n        this.status = init.status !== undefined ? init.status : defaultStatus;\n        this.statusText = init.statusText || defaultStatusText;\n        this.url = init.url || null;\n        // Cache the ok value to avoid defining a getter.\n        this.ok = this.status >= 200 && this.status < 300;\n    }\n}\n/**\n * A partial HTTP response which only includes the status and header data,\n * but no response body.\n *\n * `HttpHeaderResponse` is a `HttpEvent` available on the response\n * event stream, only when progress events are requested.\n *\n * @publicApi\n */\nclass HttpHeaderResponse extends HttpResponseBase {\n    /**\n     * Create a new `HttpHeaderResponse` with the given parameters.\n     */\n    constructor(init = {}) {\n        super(init);\n    }\n    type = HttpEventType.ResponseHeader;\n    /**\n     * Copy this `HttpHeaderResponse`, overriding its contents with the\n     * given parameter hash.\n     */\n    clone(update = {}) {\n        // Perform a straightforward initialization of the new HttpHeaderResponse,\n        // overriding the current parameters with new ones if given.\n        return new HttpHeaderResponse({\n            headers: update.headers || this.headers,\n            status: update.status !== undefined ? update.status : this.status,\n            statusText: update.statusText || this.statusText,\n            url: update.url || this.url || undefined,\n        });\n    }\n}\n/**\n * A full HTTP response, including a typed response body (which may be `null`\n * if one was not returned).\n *\n * `HttpResponse` is a `HttpEvent` available on the response event\n * stream.\n *\n * @publicApi\n */\nclass HttpResponse extends HttpResponseBase {\n    /**\n     * The response body, or `null` if one was not returned.\n     */\n    body;\n    /**\n     * Construct a new `HttpResponse`.\n     */\n    constructor(init = {}) {\n        super(init);\n        this.body = init.body !== undefined ? init.body : null;\n    }\n    type = HttpEventType.Response;\n    clone(update = {}) {\n        return new HttpResponse({\n            body: update.body !== undefined ? update.body : this.body,\n            headers: update.headers || this.headers,\n            status: update.status !== undefined ? update.status : this.status,\n            statusText: update.statusText || this.statusText,\n            url: update.url || this.url || undefined,\n        });\n    }\n}\n/**\n * A response that represents an error or failure, either from a\n * non-successful HTTP status, an error while executing the request,\n * or some other failure which occurred during the parsing of the response.\n *\n * Any error returned on the `Observable` response stream will be\n * wrapped in an `HttpErrorResponse` to provide additional context about\n * the state of the HTTP layer when the error occurred. The error property\n * will contain either a wrapped Error object or the error response returned\n * from the server.\n *\n * @publicApi\n */\nclass HttpErrorResponse extends HttpResponseBase {\n    name = 'HttpErrorResponse';\n    message;\n    error;\n    /**\n     * Errors are never okay, even when the status code is in the 2xx success range.\n     */\n    ok = false;\n    constructor(init) {\n        // Initialize with a default status of 0 / Unknown Error.\n        super(init, 0, 'Unknown Error');\n        // If the response was successful, then this was a parse error. Otherwise, it was\n        // a protocol-level failure of some sort. Either the request failed in transit\n        // or the server returned an unsuccessful status code.\n        if (this.status >= 200 && this.status < 300) {\n            this.message = `Http failure during parsing for ${init.url || '(unknown url)'}`;\n        }\n        else {\n            this.message = `Http failure response for ${init.url || '(unknown url)'}: ${init.status} ${init.statusText}`;\n        }\n        this.error = init.error || null;\n    }\n}\n/**\n * We use these constant to prevent pulling the whole HttpStatusCode enum\n * Those are the only ones referenced directly by the framework\n */\nconst HTTP_STATUS_CODE_OK = 200;\nconst HTTP_STATUS_CODE_NO_CONTENT = 204;\n/**\n * Http status codes.\n * As per https://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml\n * @publicApi\n */\nvar HttpStatusCode;\n(function (HttpStatusCode) {\n    HttpStatusCode[HttpStatusCode[\"Continue\"] = 100] = \"Continue\";\n    HttpStatusCode[HttpStatusCode[\"SwitchingProtocols\"] = 101] = \"SwitchingProtocols\";\n    HttpStatusCode[HttpStatusCode[\"Processing\"] = 102] = \"Processing\";\n    HttpStatusCode[HttpStatusCode[\"EarlyHints\"] = 103] = \"EarlyHints\";\n    HttpStatusCode[HttpStatusCode[\"Ok\"] = 200] = \"Ok\";\n    HttpStatusCode[HttpStatusCode[\"Created\"] = 201] = \"Created\";\n    HttpStatusCode[HttpStatusCode[\"Accepted\"] = 202] = \"Accepted\";\n    HttpStatusCode[HttpStatusCode[\"NonAuthoritativeInformation\"] = 203] = \"NonAuthoritativeInformation\";\n    HttpStatusCode[HttpStatusCode[\"NoContent\"] = 204] = \"NoContent\";\n    HttpStatusCode[HttpStatusCode[\"ResetContent\"] = 205] = \"ResetContent\";\n    HttpStatusCode[HttpStatusCode[\"PartialContent\"] = 206] = \"PartialContent\";\n    HttpStatusCode[HttpStatusCode[\"MultiStatus\"] = 207] = \"MultiStatus\";\n    HttpStatusCode[HttpStatusCode[\"AlreadyReported\"] = 208] = \"AlreadyReported\";\n    HttpStatusCode[HttpStatusCode[\"ImUsed\"] = 226] = \"ImUsed\";\n    HttpStatusCode[HttpStatusCode[\"MultipleChoices\"] = 300] = \"MultipleChoices\";\n    HttpStatusCode[HttpStatusCode[\"MovedPermanently\"] = 301] = \"MovedPermanently\";\n    HttpStatusCode[HttpStatusCode[\"Found\"] = 302] = \"Found\";\n    HttpStatusCode[HttpStatusCode[\"SeeOther\"] = 303] = \"SeeOther\";\n    HttpStatusCode[HttpStatusCode[\"NotModified\"] = 304] = \"NotModified\";\n    HttpStatusCode[HttpStatusCode[\"UseProxy\"] = 305] = \"UseProxy\";\n    HttpStatusCode[HttpStatusCode[\"Unused\"] = 306] = \"Unused\";\n    HttpStatusCode[HttpStatusCode[\"TemporaryRedirect\"] = 307] = \"TemporaryRedirect\";\n    HttpStatusCode[HttpStatusCode[\"PermanentRedirect\"] = 308] = \"PermanentRedirect\";\n    HttpStatusCode[HttpStatusCode[\"BadRequest\"] = 400] = \"BadRequest\";\n    HttpStatusCode[HttpStatusCode[\"Unauthorized\"] = 401] = \"Unauthorized\";\n    HttpStatusCode[HttpStatusCode[\"PaymentRequired\"] = 402] = \"PaymentRequired\";\n    HttpStatusCode[HttpStatusCode[\"Forbidden\"] = 403] = \"Forbidden\";\n    HttpStatusCode[HttpStatusCode[\"NotFound\"] = 404] = \"NotFound\";\n    HttpStatusCode[HttpStatusCode[\"MethodNotAllowed\"] = 405] = \"MethodNotAllowed\";\n    HttpStatusCode[HttpStatusCode[\"NotAcceptable\"] = 406] = \"NotAcceptable\";\n    HttpStatusCode[HttpStatusCode[\"ProxyAuthenticationRequired\"] = 407] = \"ProxyAuthenticationRequired\";\n    HttpStatusCode[HttpStatusCode[\"RequestTimeout\"] = 408] = \"RequestTimeout\";\n    HttpStatusCode[HttpStatusCode[\"Conflict\"] = 409] = \"Conflict\";\n    HttpStatusCode[HttpStatusCode[\"Gone\"] = 410] = \"Gone\";\n    HttpStatusCode[HttpStatusCode[\"LengthRequired\"] = 411] = \"LengthRequired\";\n    HttpStatusCode[HttpStatusCode[\"PreconditionFailed\"] = 412] = \"PreconditionFailed\";\n    HttpStatusCode[HttpStatusCode[\"PayloadTooLarge\"] = 413] = \"PayloadTooLarge\";\n    HttpStatusCode[HttpStatusCode[\"UriTooLong\"] = 414] = \"UriTooLong\";\n    HttpStatusCode[HttpStatusCode[\"UnsupportedMediaType\"] = 415] = \"UnsupportedMediaType\";\n    HttpStatusCode[HttpStatusCode[\"RangeNotSatisfiable\"] = 416] = \"RangeNotSatisfiable\";\n    HttpStatusCode[HttpStatusCode[\"ExpectationFailed\"] = 417] = \"ExpectationFailed\";\n    HttpStatusCode[HttpStatusCode[\"ImATeapot\"] = 418] = \"ImATeapot\";\n    HttpStatusCode[HttpStatusCode[\"MisdirectedRequest\"] = 421] = \"MisdirectedRequest\";\n    HttpStatusCode[HttpStatusCode[\"UnprocessableEntity\"] = 422] = \"UnprocessableEntity\";\n    HttpStatusCode[HttpStatusCode[\"Locked\"] = 423] = \"Locked\";\n    HttpStatusCode[HttpStatusCode[\"FailedDependency\"] = 424] = \"FailedDependency\";\n    HttpStatusCode[HttpStatusCode[\"TooEarly\"] = 425] = \"TooEarly\";\n    HttpStatusCode[HttpStatusCode[\"UpgradeRequired\"] = 426] = \"UpgradeRequired\";\n    HttpStatusCode[HttpStatusCode[\"PreconditionRequired\"] = 428] = \"PreconditionRequired\";\n    HttpStatusCode[HttpStatusCode[\"TooManyRequests\"] = 429] = \"TooManyRequests\";\n    HttpStatusCode[HttpStatusCode[\"RequestHeaderFieldsTooLarge\"] = 431] = \"RequestHeaderFieldsTooLarge\";\n    HttpStatusCode[HttpStatusCode[\"UnavailableForLegalReasons\"] = 451] = \"UnavailableForLegalReasons\";\n    HttpStatusCode[HttpStatusCode[\"InternalServerError\"] = 500] = \"InternalServerError\";\n    HttpStatusCode[HttpStatusCode[\"NotImplemented\"] = 501] = \"NotImplemented\";\n    HttpStatusCode[HttpStatusCode[\"BadGateway\"] = 502] = \"BadGateway\";\n    HttpStatusCode[HttpStatusCode[\"ServiceUnavailable\"] = 503] = \"ServiceUnavailable\";\n    HttpStatusCode[HttpStatusCode[\"GatewayTimeout\"] = 504] = \"GatewayTimeout\";\n    HttpStatusCode[HttpStatusCode[\"HttpVersionNotSupported\"] = 505] = \"HttpVersionNotSupported\";\n    HttpStatusCode[HttpStatusCode[\"VariantAlsoNegotiates\"] = 506] = \"VariantAlsoNegotiates\";\n    HttpStatusCode[HttpStatusCode[\"InsufficientStorage\"] = 507] = \"InsufficientStorage\";\n    HttpStatusCode[HttpStatusCode[\"LoopDetected\"] = 508] = \"LoopDetected\";\n    HttpStatusCode[HttpStatusCode[\"NotExtended\"] = 510] = \"NotExtended\";\n    HttpStatusCode[HttpStatusCode[\"NetworkAuthenticationRequired\"] = 511] = \"NetworkAuthenticationRequired\";\n})(HttpStatusCode || (HttpStatusCode = {}));\n\n/**\n * Constructs an instance of `HttpRequestOptions<T>` from a source `HttpMethodOptions` and\n * the given `body`. This function clones the object and adds the body.\n *\n * Note that the `responseType` *options* value is a String that identifies the\n * single data type of the response.\n * A single overload version of the method handles each response type.\n * The value of `responseType` cannot be a union, as the combined signature could imply.\n *\n */\nfunction addBody(options, body) {\n    return {\n        body,\n        headers: options.headers,\n        context: options.context,\n        observe: options.observe,\n        params: options.params,\n        reportProgress: options.reportProgress,\n        responseType: options.responseType,\n        withCredentials: options.withCredentials,\n        transferCache: options.transferCache,\n        keepalive: options.keepalive,\n        priority: options.priority,\n        cache: options.cache,\n        mode: options.mode,\n        redirect: options.redirect,\n    };\n}\n/**\n * Performs HTTP requests.\n * This service is available as an injectable class, with methods to perform HTTP requests.\n * Each request method has multiple signatures, and the return type varies based on\n * the signature that is called (mainly the values of `observe` and `responseType`).\n *\n * Note that the `responseType` *options* value is a String that identifies the\n * single data type of the response.\n * A single overload version of the method handles each response type.\n * The value of `responseType` cannot be a union, as the combined signature could imply.\n *\n * @usageNotes\n *\n * ### HTTP Request Example\n *\n * ```ts\n *  // GET heroes whose name contains search term\n * searchHeroes(term: string): observable<Hero[]>{\n *\n *  const params = new HttpParams({fromString: 'name=term'});\n *    return this.httpClient.request('GET', this.heroesUrl, {responseType:'json', params});\n * }\n * ```\n *\n * Alternatively, the parameter string can be used without invoking HttpParams\n * by directly joining to the URL.\n * ```ts\n * this.httpClient.request('GET', this.heroesUrl + '?' + 'name=term', {responseType:'json'});\n * ```\n *\n *\n * ### JSONP Example\n * ```ts\n * requestJsonp(url, callback = 'callback') {\n *  return this.httpClient.jsonp(this.heroesURL, callback);\n * }\n * ```\n *\n * ### PATCH Example\n * ```ts\n * // PATCH one of the heroes' name\n * patchHero (id: number, heroName: string): Observable<{}> {\n * const url = `${this.heroesUrl}/${id}`;   // PATCH api/heroes/42\n *  return this.httpClient.patch(url, {name: heroName}, httpOptions)\n *    .pipe(catchError(this.handleError('patchHero')));\n * }\n * ```\n *\n * @see [HTTP Guide](guide/http)\n * @see [HTTP Request](api/common/http/HttpRequest)\n *\n * @publicApi\n */\nclass HttpClient {\n    handler;\n    constructor(handler) {\n        this.handler = handler;\n    }\n    /**\n     * Constructs an observable for a generic HTTP request that, when subscribed,\n     * fires the request through the chain of registered interceptors and on to the\n     * server.\n     *\n     * You can pass an `HttpRequest` directly as the only parameter. In this case,\n     * the call returns an observable of the raw `HttpEvent` stream.\n     *\n     * Alternatively you can pass an HTTP method as the first parameter,\n     * a URL string as the second, and an options hash containing the request body as the third.\n     * See `addBody()`. In this case, the specified `responseType` and `observe` options determine the\n     * type of returned observable.\n     *   * The `responseType` value determines how a successful response body is parsed.\n     *   * If `responseType` is the default `json`, you can pass a type interface for the resulting\n     * object as a type parameter to the call.\n     *\n     * The `observe` value determines the return type, according to what you are interested in\n     * observing.\n     *   * An `observe` value of events returns an observable of the raw `HttpEvent` stream, including\n     * progress events by default.\n     *   * An `observe` value of response returns an observable of `HttpResponse<T>`,\n     * where the `T` parameter depends on the `responseType` and any optionally provided type\n     * parameter.\n     *   * An `observe` value of body returns an observable of `<T>` with the same `T` body type.\n     *\n     */\n    request(first, url, options = {}) {\n        let req;\n        // First, check whether the primary argument is an instance of `HttpRequest`.\n        if (first instanceof HttpRequest) {\n            // It is. The other arguments must be undefined (per the signatures) and can be\n            // ignored.\n            req = first;\n        }\n        else {\n            // It's a string, so it represents a URL. Construct a request based on it,\n            // and incorporate the remaining arguments (assuming `GET` unless a method is\n            // provided.\n            // Figure out the headers.\n            let headers = undefined;\n            if (options.headers instanceof HttpHeaders) {\n                headers = options.headers;\n            }\n            else {\n                headers = new HttpHeaders(options.headers);\n            }\n            // Sort out parameters.\n            let params = undefined;\n            if (!!options.params) {\n                if (options.params instanceof HttpParams) {\n                    params = options.params;\n                }\n                else {\n                    params = new HttpParams({ fromObject: options.params });\n                }\n            }\n            // Construct the request.\n            req = new HttpRequest(first, url, options.body !== undefined ? options.body : null, {\n                headers,\n                context: options.context,\n                params,\n                reportProgress: options.reportProgress,\n                // By default, JSON is assumed to be returned for all calls.\n                responseType: options.responseType || 'json',\n                withCredentials: options.withCredentials,\n                transferCache: options.transferCache,\n                keepalive: options.keepalive,\n                priority: options.priority,\n                cache: options.cache,\n                mode: options.mode,\n                redirect: options.redirect,\n                credentials: options.credentials,\n            });\n        }\n        // Start with an Observable.of() the initial request, and run the handler (which\n        // includes all interceptors) inside a concatMap(). This way, the handler runs\n        // inside an Observable chain, which causes interceptors to be re-run on every\n        // subscription (this also makes retries re-run the handler, including interceptors).\n        const events$ = of(req).pipe(concatMap((req) => this.handler.handle(req)));\n        // If coming via the API signature which accepts a previously constructed HttpRequest,\n        // the only option is to get the event stream. Otherwise, return the event stream if\n        // that is what was requested.\n        if (first instanceof HttpRequest || options.observe === 'events') {\n            return events$;\n        }\n        // The requested stream contains either the full response or the body. In either\n        // case, the first step is to filter the event stream to extract a stream of\n        // responses(s).\n        const res$ = (events$.pipe(filter((event) => event instanceof HttpResponse)));\n        // Decide which stream to return.\n        switch (options.observe || 'body') {\n            case 'body':\n                // The requested stream is the body. Map the response stream to the response\n                // body. This could be done more simply, but a misbehaving interceptor might\n                // transform the response body into a different format and ignore the requested\n                // responseType. Guard against this by validating that the response is of the\n                // requested type.\n                switch (req.responseType) {\n                    case 'arraybuffer':\n                        return res$.pipe(map((res) => {\n                            // Validate that the body is an ArrayBuffer.\n                            if (res.body !== null && !(res.body instanceof ArrayBuffer)) {\n                                throw new _RuntimeError(2806 /* RuntimeErrorCode.RESPONSE_IS_NOT_AN_ARRAY_BUFFER */, ngDevMode && 'Response is not an ArrayBuffer.');\n                            }\n                            return res.body;\n                        }));\n                    case 'blob':\n                        return res$.pipe(map((res) => {\n                            // Validate that the body is a Blob.\n                            if (res.body !== null && !(res.body instanceof Blob)) {\n                                throw new _RuntimeError(2807 /* RuntimeErrorCode.RESPONSE_IS_NOT_A_BLOB */, ngDevMode && 'Response is not a Blob.');\n                            }\n                            return res.body;\n                        }));\n                    case 'text':\n                        return res$.pipe(map((res) => {\n                            // Validate that the body is a string.\n                            if (res.body !== null && typeof res.body !== 'string') {\n                                throw new _RuntimeError(2808 /* RuntimeErrorCode.RESPONSE_IS_NOT_A_STRING */, ngDevMode && 'Response is not a string.');\n                            }\n                            return res.body;\n                        }));\n                    case 'json':\n                    default:\n                        // No validation needed for JSON responses, as they can be of any type.\n                        return res$.pipe(map((res) => res.body));\n                }\n            case 'response':\n                // The response stream was requested directly, so return it.\n                return res$;\n            default:\n                // Guard against new future observe types being added.\n                throw new _RuntimeError(2809 /* RuntimeErrorCode.UNHANDLED_OBSERVE_TYPE */, ngDevMode && `Unreachable: unhandled observe type ${options.observe}}`);\n        }\n    }\n    /**\n     * Constructs an observable that, when subscribed, causes the configured\n     * `DELETE` request to execute on the server. See the individual overloads for\n     * details on the return type.\n     *\n     * @param url     The endpoint URL.\n     * @param options The HTTP options to send with the request.\n     *\n     */\n    delete(url, options = {}) {\n        return this.request('DELETE', url, options);\n    }\n    /**\n     * Constructs an observable that, when subscribed, causes the configured\n     * `GET` request to execute on the server. See the individual overloads for\n     * details on the return type.\n     */\n    get(url, options = {}) {\n        return this.request('GET', url, options);\n    }\n    /**\n     * Constructs an observable that, when subscribed, causes the configured\n     * `HEAD` request to execute on the server. The `HEAD` method returns\n     * meta information about the resource without transferring the\n     * resource itself. See the individual overloads for\n     * details on the return type.\n     */\n    head(url, options = {}) {\n        return this.request('HEAD', url, options);\n    }\n    /**\n     * Constructs an `Observable` that, when subscribed, causes a request with the special method\n     * `JSONP` to be dispatched via the interceptor pipeline.\n     * The [JSONP pattern](https://en.wikipedia.org/wiki/JSONP) works around limitations of certain\n     * API endpoints that don't support newer,\n     * and preferable [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) protocol.\n     * JSONP treats the endpoint API as a JavaScript file and tricks the browser to process the\n     * requests even if the API endpoint is not located on the same domain (origin) as the client-side\n     * application making the request.\n     * The endpoint API must support JSONP callback for JSONP requests to work.\n     * The resource API returns the JSON response wrapped in a callback function.\n     * You can pass the callback function name as one of the query parameters.\n     * Note that JSONP requests can only be used with `GET` requests.\n     *\n     * @param url The resource URL.\n     * @param callbackParam The callback function name.\n     *\n     */\n    jsonp(url, callbackParam) {\n        return this.request('JSONP', url, {\n            params: new HttpParams().append(callbackParam, 'JSONP_CALLBACK'),\n            observe: 'body',\n            responseType: 'json',\n        });\n    }\n    /**\n     * Constructs an `Observable` that, when subscribed, causes the configured\n     * `OPTIONS` request to execute on the server. This method allows the client\n     * to determine the supported HTTP methods and other capabilities of an endpoint,\n     * without implying a resource action. See the individual overloads for\n     * details on the return type.\n     */\n    options(url, options = {}) {\n        return this.request('OPTIONS', url, options);\n    }\n    /**\n     * Constructs an observable that, when subscribed, causes the configured\n     * `PATCH` request to execute on the server. See the individual overloads for\n     * details on the return type.\n     */\n    patch(url, body, options = {}) {\n        return this.request('PATCH', url, addBody(options, body));\n    }\n    /**\n     * Constructs an observable that, when subscribed, causes the configured\n     * `POST` request to execute on the server. The server responds with the location of\n     * the replaced resource. See the individual overloads for\n     * details on the return type.\n     */\n    post(url, body, options = {}) {\n        return this.request('POST', url, addBody(options, body));\n    }\n    /**\n     * Constructs an observable that, when subscribed, causes the configured\n     * `PUT` request to execute on the server. The `PUT` method replaces an existing resource\n     * with a new set of values.\n     * See the individual overloads for details on the return type.\n     */\n    put(url, body, options = {}) {\n        return this.request('PUT', url, addBody(options, body));\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: HttpClient, deps: [{ token: HttpHandler }], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: HttpClient });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: HttpClient, decorators: [{\n            type: Injectable\n        }], ctorParameters: () => [{ type: HttpHandler }] });\n\nconst XSSI_PREFIX$1 = /^\\)\\]\\}',?\\n/;\n/**\n * Determine an appropriate URL for the response, by checking either\n * response url or the X-Request-URL header.\n */\nfunction getResponseUrl$1(response) {\n    if (response.url) {\n        return response.url;\n    }\n    // stored as lowercase in the map\n    const xRequestUrl = X_REQUEST_URL_HEADER.toLocaleLowerCase();\n    return response.headers.get(xRequestUrl);\n}\n/**\n * An internal injection token to reference `FetchBackend` implementation\n * in a tree-shakable way.\n */\nconst FETCH_BACKEND = new InjectionToken(typeof ngDevMode === 'undefined' || ngDevMode ? 'FETCH_BACKEND' : '');\n/**\n * Uses `fetch` to send requests to a backend server.\n *\n * This `FetchBackend` requires the support of the\n * [Fetch API](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API) which is available on all\n * supported browsers and on Node.js v18 or later.\n *\n * @see {@link HttpHandler}\n *\n * @publicApi\n */\nclass FetchBackend {\n    // We use an arrow function to always reference the current global implementation of `fetch`.\n    // This is helpful for cases when the global `fetch` implementation is modified by external code,\n    // see https://github.com/angular/angular/issues/57527.\n    fetchImpl = inject(FetchFactory, { optional: true })?.fetch ?? ((...args) => globalThis.fetch(...args));\n    ngZone = inject(NgZone);\n    destroyRef = inject(DestroyRef);\n    destroyed = false;\n    constructor() {\n        this.destroyRef.onDestroy(() => {\n            this.destroyed = true;\n        });\n    }\n    handle(request) {\n        return new Observable((observer) => {\n            const aborter = new AbortController();\n            this.doRequest(request, aborter.signal, observer).then(noop, (error) => observer.error(new HttpErrorResponse({ error })));\n            let timeoutId;\n            if (request.timeout) {\n                // TODO: Replace with AbortSignal.any([aborter.signal, AbortSignal.timeout(request.timeout)])\n                // when AbortSignal.any support is Baseline widely available (NET nov. 2026)\n                timeoutId = this.ngZone.runOutsideAngular(() => setTimeout(() => {\n                    if (!aborter.signal.aborted) {\n                        aborter.abort(new DOMException('signal timed out', 'TimeoutError'));\n                    }\n                }, request.timeout));\n            }\n            return () => {\n                if (timeoutId !== undefined) {\n                    clearTimeout(timeoutId);\n                }\n                aborter.abort();\n            };\n        });\n    }\n    async doRequest(request, signal, observer) {\n        const init = this.createRequestInit(request);\n        let response;\n        try {\n            // Run fetch outside of Angular zone.\n            // This is due to Node.js fetch implementation (Undici) which uses a number of setTimeouts to check if\n            // the response should eventually timeout which causes extra CD cycles every 500ms\n            const fetchPromise = this.ngZone.runOutsideAngular(() => this.fetchImpl(request.urlWithParams, { signal, ...init }));\n            // Make sure Zone.js doesn't trigger false-positive unhandled promise\n            // error in case the Promise is rejected synchronously. See function\n            // description for additional information.\n            silenceSuperfluousUnhandledPromiseRejection(fetchPromise);\n            // Send the `Sent` event before awaiting the response.\n            observer.next({ type: HttpEventType.Sent });\n            response = await fetchPromise;\n        }\n        catch (error) {\n            observer.error(new HttpErrorResponse({\n                error,\n                status: error.status ?? 0,\n                statusText: error.statusText,\n                url: request.urlWithParams,\n                headers: error.headers,\n            }));\n            return;\n        }\n        const headers = new HttpHeaders(response.headers);\n        const statusText = response.statusText;\n        const url = getResponseUrl$1(response) ?? request.urlWithParams;\n        let status = response.status;\n        let body = null;\n        if (request.reportProgress) {\n            observer.next(new HttpHeaderResponse({ headers, status, statusText, url }));\n        }\n        if (response.body) {\n            // Read Progress\n            const contentLength = response.headers.get('content-length');\n            const chunks = [];\n            const reader = response.body.getReader();\n            let receivedLength = 0;\n            let decoder;\n            let partialText;\n            // We have to check whether the Zone is defined in the global scope because this may be called\n            // when the zone is nooped.\n            const reqZone = typeof Zone !== 'undefined' && Zone.current;\n            let canceled = false;\n            // Perform response processing outside of Angular zone to\n            // ensure no excessive change detection runs are executed\n            // Here calling the async ReadableStreamDefaultReader.read() is responsible for triggering CD\n            await this.ngZone.runOutsideAngular(async () => {\n                while (true) {\n                    // Prevent reading chunks if the app is destroyed. Otherwise, we risk doing\n                    // unnecessary work or triggering side effects after teardown.\n                    // This may happen if the app was explicitly destroyed before\n                    // the response returned entirely.\n                    if (this.destroyed) {\n                        // Streams left in a pending state (due to `break` without cancel) may\n                        // continue consuming or holding onto data behind the scenes.\n                        // Calling `reader.cancel()` allows the browser or the underlying\n                        // system to release any network or memory resources associated with the stream.\n                        await reader.cancel();\n                        canceled = true;\n                        break;\n                    }\n                    const { done, value } = await reader.read();\n                    if (done) {\n                        break;\n                    }\n                    chunks.push(value);\n                    receivedLength += value.length;\n                    if (request.reportProgress) {\n                        partialText =\n                            request.responseType === 'text'\n                                ? (partialText ?? '') +\n                                    (decoder ??= new TextDecoder()).decode(value, { stream: true })\n                                : undefined;\n                        const reportProgress = () => observer.next({\n                            type: HttpEventType.DownloadProgress,\n                            total: contentLength ? +contentLength : undefined,\n                            loaded: receivedLength,\n                            partialText,\n                        });\n                        reqZone ? reqZone.run(reportProgress) : reportProgress();\n                    }\n                }\n            });\n            // We need to manage the canceled state — because the Streams API does not\n            // expose a direct `.state` property on the reader.\n            // We need to `return` because `parseBody` may not be able to parse chunks\n            // that were only partially read (due to cancellation caused by app destruction).\n            if (canceled) {\n                observer.complete();\n                return;\n            }\n            // Combine all chunks.\n            const chunksAll = this.concatChunks(chunks, receivedLength);\n            try {\n                const contentType = response.headers.get(CONTENT_TYPE_HEADER) ?? '';\n                body = this.parseBody(request, chunksAll, contentType, status);\n            }\n            catch (error) {\n                // Body loading or parsing failed\n                observer.error(new HttpErrorResponse({\n                    error,\n                    headers: new HttpHeaders(response.headers),\n                    status: response.status,\n                    statusText: response.statusText,\n                    url: getResponseUrl$1(response) ?? request.urlWithParams,\n                }));\n                return;\n            }\n        }\n        // Same behavior as the XhrBackend\n        if (status === 0) {\n            status = body ? HTTP_STATUS_CODE_OK : 0;\n        }\n        // ok determines whether the response will be transmitted on the event or\n        // error channel. Unsuccessful status codes (not 2xx) will always be errors,\n        // but a successful status code can still result in an error if the user\n        // asked for JSON data and the body cannot be parsed as such.\n        const ok = status >= 200 && status < 300;\n        if (ok) {\n            observer.next(new HttpResponse({\n                body,\n                headers,\n                status,\n                statusText,\n                url,\n            }));\n            // The full body has been received and delivered, no further events\n            // are possible. This request is complete.\n            observer.complete();\n        }\n        else {\n            observer.error(new HttpErrorResponse({\n                error: body,\n                headers,\n                status,\n                statusText,\n                url,\n            }));\n        }\n    }\n    parseBody(request, binContent, contentType, status) {\n        switch (request.responseType) {\n            case 'json':\n                // stripping the XSSI when present\n                const text = new TextDecoder().decode(binContent).replace(XSSI_PREFIX$1, '');\n                if (text === '') {\n                    return null;\n                }\n                try {\n                    return JSON.parse(text);\n                }\n                catch (e) {\n                    // Allow handling non-JSON errors (!) as plain text, same as the XHR\n                    // backend. Without this special sauce, any non-JSON error would be\n                    // completely inaccessible downstream as the `HttpErrorResponse.error`\n                    // would be set to the `SyntaxError` from then failing `JSON.parse`.\n                    if (status < 200 || status >= 300) {\n                        return text;\n                    }\n                    throw e;\n                }\n            case 'text':\n                return new TextDecoder().decode(binContent);\n            case 'blob':\n                return new Blob([binContent], { type: contentType });\n            case 'arraybuffer':\n                return binContent.buffer;\n        }\n    }\n    createRequestInit(req) {\n        // We could share some of this logic with the XhrBackend\n        const headers = {};\n        let credentials;\n        // If the request has a credentials property, use it.\n        // Otherwise, if the request has withCredentials set to true, use 'include'.\n        credentials = req.credentials;\n        // If withCredentials is true should be set to 'include', for compatibility\n        if (req.withCredentials) {\n            // A warning is logged in development mode if the request has both\n            (typeof ngDevMode === 'undefined' || ngDevMode) && warningOptionsMessage(req);\n            credentials = 'include';\n        }\n        // Setting all the requested headers.\n        req.headers.forEach((name, values) => (headers[name] = values.join(',')));\n        // Add an Accept header if one isn't present already.\n        if (!req.headers.has(ACCEPT_HEADER)) {\n            headers[ACCEPT_HEADER] = ACCEPT_HEADER_VALUE;\n        }\n        // Auto-detect the Content-Type header if one isn't present already.\n        if (!req.headers.has(CONTENT_TYPE_HEADER)) {\n            const detectedType = req.detectContentTypeHeader();\n            // Sometimes Content-Type detection fails.\n            if (detectedType !== null) {\n                headers[CONTENT_TYPE_HEADER] = detectedType;\n            }\n        }\n        return {\n            body: req.serializeBody(),\n            method: req.method,\n            headers,\n            credentials,\n            keepalive: req.keepalive,\n            cache: req.cache,\n            priority: req.priority,\n            mode: req.mode,\n            redirect: req.redirect,\n        };\n    }\n    concatChunks(chunks, totalLength) {\n        const chunksAll = new Uint8Array(totalLength);\n        let position = 0;\n        for (const chunk of chunks) {\n            chunksAll.set(chunk, position);\n            position += chunk.length;\n        }\n        return chunksAll;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: FetchBackend, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: FetchBackend });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: FetchBackend, decorators: [{\n            type: Injectable\n        }], ctorParameters: () => [] });\n/**\n * Abstract class to provide a mocked implementation of `fetch()`\n */\nclass FetchFactory {\n}\nfunction noop() { }\nfunction warningOptionsMessage(req) {\n    if (req.credentials && req.withCredentials) {\n        console.warn(_formatRuntimeError(2819 /* RuntimeErrorCode.WITH_CREDENTIALS_OVERRIDES_EXPLICIT_CREDENTIALS */, `Angular detected that a \\`HttpClient\\` request has both \\`withCredentials: true\\` and \\`credentials: '${req.credentials}'\\` options. The \\`withCredentials\\` option is overriding the explicit \\`credentials\\` setting to 'include'. Consider removing \\`withCredentials\\` and using \\`credentials: '${req.credentials}'\\` directly for clarity.`));\n    }\n}\n/**\n * Zone.js treats a rejected promise that has not yet been awaited\n * as an unhandled error. This function adds a noop `.then` to make\n * sure that Zone.js doesn't throw an error if the Promise is rejected\n * synchronously.\n */\nfunction silenceSuperfluousUnhandledPromiseRejection(promise) {\n    promise.then(noop, noop);\n}\n\nfunction interceptorChainEndFn(req, finalHandlerFn) {\n    return finalHandlerFn(req);\n}\n/**\n * Constructs a `ChainedInterceptorFn` which adapts a legacy `HttpInterceptor` to the\n * `ChainedInterceptorFn` interface.\n */\nfunction adaptLegacyInterceptorToChain(chainTailFn, interceptor) {\n    return (initialRequest, finalHandlerFn) => interceptor.intercept(initialRequest, {\n        handle: (downstreamRequest) => chainTailFn(downstreamRequest, finalHandlerFn),\n    });\n}\n/**\n * Constructs a `ChainedInterceptorFn` which wraps and invokes a functional interceptor in the given\n * injector.\n */\nfunction chainedInterceptorFn(chainTailFn, interceptorFn, injector) {\n    return (initialRequest, finalHandlerFn) => runInInjectionContext(injector, () => interceptorFn(initialRequest, (downstreamRequest) => chainTailFn(downstreamRequest, finalHandlerFn)));\n}\n/**\n * A multi-provider token that represents the array of registered\n * `HttpInterceptor` objects.\n *\n * @publicApi\n */\nconst HTTP_INTERCEPTORS = new InjectionToken(ngDevMode ? 'HTTP_INTERCEPTORS' : '');\n/**\n * A multi-provided token of `HttpInterceptorFn`s.\n */\nconst HTTP_INTERCEPTOR_FNS = new InjectionToken(ngDevMode ? 'HTTP_INTERCEPTOR_FNS' : '');\n/**\n * A multi-provided token of `HttpInterceptorFn`s that are only set in root.\n */\nconst HTTP_ROOT_INTERCEPTOR_FNS = new InjectionToken(ngDevMode ? 'HTTP_ROOT_INTERCEPTOR_FNS' : '');\n// TODO(atscott): We need a larger discussion about stability and what should contribute to stability.\n// Should the whole interceptor chain contribute to stability or just the backend request #55075?\n// Should HttpClient contribute to stability automatically at all?\nconst REQUESTS_CONTRIBUTE_TO_STABILITY = new InjectionToken(ngDevMode ? 'REQUESTS_CONTRIBUTE_TO_STABILITY' : '', { providedIn: 'root', factory: () => true });\n/**\n * Creates an `HttpInterceptorFn` which lazily initializes an interceptor chain from the legacy\n * class-based interceptors and runs the request through it.\n */\nfunction legacyInterceptorFnFactory() {\n    let chain = null;\n    return (req, handler) => {\n        if (chain === null) {\n            const interceptors = inject(HTTP_INTERCEPTORS, { optional: true }) ?? [];\n            // Note: interceptors are wrapped right-to-left so that final execution order is\n            // left-to-right. That is, if `interceptors` is the array `[a, b, c]`, we want to\n            // produce a chain that is conceptually `c(b(a(end)))`, which we build from the inside\n            // out.\n            chain = interceptors.reduceRight(adaptLegacyInterceptorToChain, interceptorChainEndFn);\n        }\n        const pendingTasks = inject(PendingTasks);\n        const contributeToStability = inject(REQUESTS_CONTRIBUTE_TO_STABILITY);\n        if (contributeToStability) {\n            const removeTask = pendingTasks.add();\n            return chain(req, handler).pipe(finalize(removeTask));\n        }\n        else {\n            return chain(req, handler);\n        }\n    };\n}\nlet fetchBackendWarningDisplayed = false;\nclass HttpInterceptorHandler extends HttpHandler {\n    backend;\n    injector;\n    chain = null;\n    pendingTasks = inject(PendingTasks);\n    contributeToStability = inject(REQUESTS_CONTRIBUTE_TO_STABILITY);\n    constructor(backend, injector) {\n        super();\n        this.backend = backend;\n        this.injector = injector;\n        // We strongly recommend using fetch backend for HTTP calls when SSR is used\n        // for an application. The logic below checks if that's the case and produces\n        // a warning otherwise.\n        if ((typeof ngDevMode === 'undefined' || ngDevMode) && !fetchBackendWarningDisplayed) {\n            // This flag is necessary because provideHttpClientTesting() overrides the backend\n            // even if `withFetch()` is used within the test. When the testing HTTP backend is provided,\n            // no HTTP calls are actually performed during the test, so producing a warning would be\n            // misleading.\n            const isTestingBackend = this.backend.isTestingBackend;\n            if (typeof ngServerMode !== 'undefined' &&\n                ngServerMode &&\n                !(this.backend instanceof FetchBackend) &&\n                !isTestingBackend) {\n                fetchBackendWarningDisplayed = true;\n                injector\n                    .get(_Console)\n                    .warn(_formatRuntimeError(2801 /* RuntimeErrorCode.NOT_USING_FETCH_BACKEND_IN_SSR */, 'Angular detected that `HttpClient` is not configured ' +\n                    \"to use `fetch` APIs. It's strongly recommended to \" +\n                    'enable `fetch` for applications that use Server-Side Rendering ' +\n                    'for better performance and compatibility. ' +\n                    'To enable `fetch`, add the `withFetch()` to the `provideHttpClient()` ' +\n                    'call at the root of the application.'));\n            }\n        }\n    }\n    handle(initialRequest) {\n        if (this.chain === null) {\n            const dedupedInterceptorFns = Array.from(new Set([\n                ...this.injector.get(HTTP_INTERCEPTOR_FNS),\n                ...this.injector.get(HTTP_ROOT_INTERCEPTOR_FNS, []),\n            ]));\n            // Note: interceptors are wrapped right-to-left so that final execution order is\n            // left-to-right. That is, if `dedupedInterceptorFns` is the array `[a, b, c]`, we want to\n            // produce a chain that is conceptually `c(b(a(end)))`, which we build from the inside\n            // out.\n            this.chain = dedupedInterceptorFns.reduceRight((nextSequencedFn, interceptorFn) => chainedInterceptorFn(nextSequencedFn, interceptorFn, this.injector), interceptorChainEndFn);\n        }\n        if (this.contributeToStability) {\n            const removeTask = this.pendingTasks.add();\n            return this.chain(initialRequest, (downstreamRequest) => this.backend.handle(downstreamRequest)).pipe(finalize(removeTask));\n        }\n        else {\n            return this.chain(initialRequest, (downstreamRequest) => this.backend.handle(downstreamRequest));\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: HttpInterceptorHandler, deps: [{ token: HttpBackend }, { token: i0.EnvironmentInjector }], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: HttpInterceptorHandler });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: HttpInterceptorHandler, decorators: [{\n            type: Injectable\n        }], ctorParameters: () => [{ type: HttpBackend }, { type: i0.EnvironmentInjector }] });\n\n// Every request made through JSONP needs a callback name that's unique across the\n// whole page. Each request is assigned an id and the callback name is constructed\n// from that. The next id to be assigned is tracked in a global variable here that\n// is shared among all applications on the page.\nlet nextRequestId = 0;\n/**\n * When a pending <script> is unsubscribed we'll move it to this document, so it won't be\n * executed.\n */\nlet foreignDocument;\n// Error text given when a JSONP script is injected, but doesn't invoke the callback\n// passed in its URL.\nconst JSONP_ERR_NO_CALLBACK = 'JSONP injected script did not invoke callback.';\n// Error text given when a request is passed to the JsonpClientBackend that doesn't\n// have a request method JSONP.\nconst JSONP_ERR_WRONG_METHOD = 'JSONP requests must use JSONP request method.';\nconst JSONP_ERR_WRONG_RESPONSE_TYPE = 'JSONP requests must use Json response type.';\n// Error text given when a request is passed to the JsonpClientBackend that has\n// headers set\nconst JSONP_ERR_HEADERS_NOT_SUPPORTED = 'JSONP requests do not support headers.';\n/**\n * DI token/abstract type representing a map of JSONP callbacks.\n *\n * In the browser, this should always be the `window` object.\n *\n *\n */\nclass JsonpCallbackContext {\n}\n/**\n * Factory function that determines where to store JSONP callbacks.\n *\n * Ordinarily JSONP callbacks are stored on the `window` object, but this may not exist\n * in test environments. In that case, callbacks are stored on an anonymous object instead.\n *\n *\n */\nfunction jsonpCallbackContext() {\n    if (typeof window === 'object') {\n        return window;\n    }\n    return {};\n}\n/**\n * Processes an `HttpRequest` with the JSONP method,\n * by performing JSONP style requests.\n * @see {@link HttpHandler}\n * @see {@link HttpXhrBackend}\n *\n * @publicApi\n */\nclass JsonpClientBackend {\n    callbackMap;\n    document;\n    /**\n     * A resolved promise that can be used to schedule microtasks in the event handlers.\n     */\n    resolvedPromise = Promise.resolve();\n    constructor(callbackMap, document) {\n        this.callbackMap = callbackMap;\n        this.document = document;\n    }\n    /**\n     * Get the name of the next callback method, by incrementing the global `nextRequestId`.\n     */\n    nextCallback() {\n        return `ng_jsonp_callback_${nextRequestId++}`;\n    }\n    /**\n     * Processes a JSONP request and returns an event stream of the results.\n     * @param req The request object.\n     * @returns An observable of the response events.\n     *\n     */\n    handle(req) {\n        // Firstly, check both the method and response type. If either doesn't match\n        // then the request was improperly routed here and cannot be handled.\n        if (req.method !== 'JSONP') {\n            throw new _RuntimeError(2810 /* RuntimeErrorCode.JSONP_WRONG_METHOD */, ngDevMode && JSONP_ERR_WRONG_METHOD);\n        }\n        else if (req.responseType !== 'json') {\n            throw new _RuntimeError(2811 /* RuntimeErrorCode.JSONP_WRONG_RESPONSE_TYPE */, ngDevMode && JSONP_ERR_WRONG_RESPONSE_TYPE);\n        }\n        // Check the request headers. JSONP doesn't support headers and\n        // cannot set any that were supplied.\n        if (req.headers.keys().length > 0) {\n            throw new _RuntimeError(2812 /* RuntimeErrorCode.JSONP_HEADERS_NOT_SUPPORTED */, ngDevMode && JSONP_ERR_HEADERS_NOT_SUPPORTED);\n        }\n        // Everything else happens inside the Observable boundary.\n        return new Observable((observer) => {\n            // The first step to make a request is to generate the callback name, and replace the\n            // callback placeholder in the URL with the name. Care has to be taken here to ensure\n            // a trailing &, if matched, gets inserted back into the URL in the correct place.\n            const callback = this.nextCallback();\n            const url = req.urlWithParams.replace(/=JSONP_CALLBACK(&|$)/, `=${callback}$1`);\n            // Construct the <script> tag and point it at the URL.\n            const node = this.document.createElement('script');\n            node.src = url;\n            // A JSONP request requires waiting for multiple callbacks. These variables\n            // are closed over and track state across those callbacks.\n            // The response object, if one has been received, or null otherwise.\n            let body = null;\n            // Whether the response callback has been called.\n            let finished = false;\n            // Set the response callback in this.callbackMap (which will be the window\n            // object in the browser. The script being loaded via the <script> tag will\n            // eventually call this callback.\n            this.callbackMap[callback] = (data) => {\n                // Data has been received from the JSONP script. Firstly, delete this callback.\n                delete this.callbackMap[callback];\n                // Set state to indicate data was received.\n                body = data;\n                finished = true;\n            };\n            // cleanup() is a utility closure that removes the <script> from the page and\n            // the response callback from the window. This logic is used in both the\n            // success, error, and cancellation paths, so it's extracted out for convenience.\n            const cleanup = () => {\n                node.removeEventListener('load', onLoad);\n                node.removeEventListener('error', onError);\n                // Remove the <script> tag if it's still on the page.\n                node.remove();\n                // Remove the response callback from the callbackMap (window object in the\n                // browser).\n                delete this.callbackMap[callback];\n            };\n            // onLoad() is the success callback which runs after the response callback\n            // if the JSONP script loads successfully. The event itself is unimportant.\n            // If something went wrong, onLoad() may run without the response callback\n            // having been invoked.\n            const onLoad = () => {\n                // We wrap it in an extra Promise, to ensure the microtask\n                // is scheduled after the loaded endpoint has executed any potential microtask itself,\n                // which is not guaranteed in Internet Explorer and EdgeHTML. See issue #39496\n                this.resolvedPromise.then(() => {\n                    // Cleanup the page.\n                    cleanup();\n                    // Check whether the response callback has run.\n                    if (!finished) {\n                        // It hasn't, something went wrong with the request. Return an error via\n                        // the Observable error path. All JSONP errors have status 0.\n                        observer.error(new HttpErrorResponse({\n                            url,\n                            status: 0,\n                            statusText: 'JSONP Error',\n                            error: new Error(JSONP_ERR_NO_CALLBACK),\n                        }));\n                        return;\n                    }\n                    // Success. body either contains the response body or null if none was\n                    // returned.\n                    observer.next(new HttpResponse({\n                        body,\n                        status: HTTP_STATUS_CODE_OK,\n                        statusText: 'OK',\n                        url,\n                    }));\n                    // Complete the stream, the response is over.\n                    observer.complete();\n                });\n            };\n            // onError() is the error callback, which runs if the script returned generates\n            // a Javascript error. It emits the error via the Observable error channel as\n            // a HttpErrorResponse.\n            const onError = (error) => {\n                cleanup();\n                // Wrap the error in a HttpErrorResponse.\n                observer.error(new HttpErrorResponse({\n                    error,\n                    status: 0,\n                    statusText: 'JSONP Error',\n                    url,\n                }));\n            };\n            // Subscribe to both the success (load) and error events on the <script> tag,\n            // and add it to the page.\n            node.addEventListener('load', onLoad);\n            node.addEventListener('error', onError);\n            this.document.body.appendChild(node);\n            // The request has now been successfully sent.\n            observer.next({ type: HttpEventType.Sent });\n            // Cancellation handler.\n            return () => {\n                if (!finished) {\n                    this.removeListeners(node);\n                }\n                // And finally, clean up the page.\n                cleanup();\n            };\n        });\n    }\n    removeListeners(script) {\n        // Issue #34818\n        // Changing <script>'s ownerDocument will prevent it from execution.\n        // https://html.spec.whatwg.org/multipage/scripting.html#execute-the-script-block\n        foreignDocument ??= this.document.implementation.createHTMLDocument();\n        foreignDocument.adoptNode(script);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: JsonpClientBackend, deps: [{ token: JsonpCallbackContext }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: JsonpClientBackend });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: JsonpClientBackend, decorators: [{\n            type: Injectable\n        }], ctorParameters: () => [{ type: JsonpCallbackContext }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }] });\n/**\n * Identifies requests with the method JSONP and shifts them to the `JsonpClientBackend`.\n */\nfunction jsonpInterceptorFn(req, next) {\n    if (req.method === 'JSONP') {\n        return inject(JsonpClientBackend).handle(req);\n    }\n    // Fall through for normal HTTP requests.\n    return next(req);\n}\n/**\n * Identifies requests with the method JSONP and\n * shifts them to the `JsonpClientBackend`.\n *\n * @see {@link HttpInterceptor}\n *\n * @publicApi\n */\nclass JsonpInterceptor {\n    injector;\n    constructor(injector) {\n        this.injector = injector;\n    }\n    /**\n     * Identifies and handles a given JSONP request.\n     * @param initialRequest The outgoing request object to handle.\n     * @param next The next interceptor in the chain, or the backend\n     * if no interceptors remain in the chain.\n     * @returns An observable of the event stream.\n     */\n    intercept(initialRequest, next) {\n        return runInInjectionContext(this.injector, () => jsonpInterceptorFn(initialRequest, (downstreamRequest) => next.handle(downstreamRequest)));\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: JsonpInterceptor, deps: [{ token: i0.EnvironmentInjector }], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: JsonpInterceptor });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: JsonpInterceptor, decorators: [{\n            type: Injectable\n        }], ctorParameters: () => [{ type: i0.EnvironmentInjector }] });\n\nconst XSSI_PREFIX = /^\\)\\]\\}',?\\n/;\nconst X_REQUEST_URL_REGEXP = RegExp(`^${X_REQUEST_URL_HEADER}:`, 'm');\n/**\n * Determine an appropriate URL for the response, by checking either\n * XMLHttpRequest.responseURL or the X-Request-URL header.\n */\nfunction getResponseUrl(xhr) {\n    if ('responseURL' in xhr && xhr.responseURL) {\n        return xhr.responseURL;\n    }\n    if (X_REQUEST_URL_REGEXP.test(xhr.getAllResponseHeaders())) {\n        return xhr.getResponseHeader(X_REQUEST_URL_HEADER);\n    }\n    return null;\n}\n/**\n * Validates whether the request is compatible with the XHR backend.\n * Show a warning if the request contains options that are not supported by XHR.\n */\nfunction validateXhrCompatibility(req) {\n    const unsupportedOptions = [\n        {\n            property: 'keepalive',\n            errorCode: 2813 /* RuntimeErrorCode.KEEPALIVE_NOT_SUPPORTED_WITH_XHR */,\n        },\n        {\n            property: 'cache',\n            errorCode: 2814 /* RuntimeErrorCode.CACHE_NOT_SUPPORTED_WITH_XHR */,\n        },\n        {\n            property: 'priority',\n            errorCode: 2815 /* RuntimeErrorCode.PRIORITY_NOT_SUPPORTED_WITH_XHR */,\n        },\n        {\n            property: 'mode',\n            errorCode: 2816 /* RuntimeErrorCode.MODE_NOT_SUPPORTED_WITH_XHR */,\n        },\n        {\n            property: 'redirect',\n            errorCode: 2817 /* RuntimeErrorCode.REDIRECT_NOT_SUPPORTED_WITH_XHR */,\n        },\n        {\n            property: 'credentials',\n            errorCode: 2818 /* RuntimeErrorCode.CREDENTIALS_NOT_SUPPORTED_WITH_XHR */,\n        },\n    ];\n    // Check each unsupported option and warn if present\n    for (const { property, errorCode } of unsupportedOptions) {\n        if (req[property]) {\n            console.warn(_formatRuntimeError(errorCode, `Angular detected that a \\`HttpClient\\` request with the \\`${property}\\` option was sent using XHR, which does not support it. To use the \\`${property}\\` option, enable Fetch API support by passing \\`withFetch()\\` as an argument to \\`provideHttpClient()\\`.`));\n        }\n    }\n}\n/**\n * Uses `XMLHttpRequest` to send requests to a backend server.\n * @see {@link HttpHandler}\n * @see {@link JsonpClientBackend}\n *\n * @publicApi\n */\nclass HttpXhrBackend {\n    xhrFactory;\n    constructor(xhrFactory) {\n        this.xhrFactory = xhrFactory;\n    }\n    /**\n     * Processes a request and returns a stream of response events.\n     * @param req The request object.\n     * @returns An observable of the response events.\n     */\n    handle(req) {\n        // Quick check to give a better error message when a user attempts to use\n        // HttpClient.jsonp() without installing the HttpClientJsonpModule\n        if (req.method === 'JSONP') {\n            throw new _RuntimeError(-2800 /* RuntimeErrorCode.MISSING_JSONP_MODULE */, (typeof ngDevMode === 'undefined' || ngDevMode) &&\n                `Cannot make a JSONP request without JSONP support. To fix the problem, either add the \\`withJsonpSupport()\\` call (if \\`provideHttpClient()\\` is used) or import the \\`HttpClientJsonpModule\\` in the root NgModule.`);\n        }\n        // Validate that the request is compatible with the XHR backend.\n        ngDevMode && validateXhrCompatibility(req);\n        // Check whether this factory has a special function to load an XHR implementation\n        // for various non-browser environments. We currently limit it to only `ServerXhr`\n        // class, which needs to load an XHR implementation.\n        const xhrFactory = this.xhrFactory;\n        const source = \n        // Note that `ɵloadImpl` is never defined in client bundles and can be\n        // safely dropped whenever we're running in the browser.\n        // This branching is redundant.\n        // The `ngServerMode` guard also enables tree-shaking of the `from()`\n        // function from the common bundle, as it's only used in server code.\n        typeof ngServerMode !== 'undefined' && ngServerMode && xhrFactory.ɵloadImpl\n            ? from(xhrFactory.ɵloadImpl())\n            : of(null);\n        return source.pipe(switchMap(() => {\n            // Everything happens on Observable subscription.\n            return new Observable((observer) => {\n                // Start by setting up the XHR object with request method, URL, and withCredentials\n                // flag.\n                const xhr = xhrFactory.build();\n                xhr.open(req.method, req.urlWithParams);\n                if (req.withCredentials) {\n                    xhr.withCredentials = true;\n                }\n                // Add all the requested headers.\n                req.headers.forEach((name, values) => xhr.setRequestHeader(name, values.join(',')));\n                // Add an Accept header if one isn't present already.\n                if (!req.headers.has(ACCEPT_HEADER)) {\n                    xhr.setRequestHeader(ACCEPT_HEADER, ACCEPT_HEADER_VALUE);\n                }\n                // Auto-detect the Content-Type header if one isn't present already.\n                if (!req.headers.has(CONTENT_TYPE_HEADER)) {\n                    const detectedType = req.detectContentTypeHeader();\n                    // Sometimes Content-Type detection fails.\n                    if (detectedType !== null) {\n                        xhr.setRequestHeader(CONTENT_TYPE_HEADER, detectedType);\n                    }\n                }\n                if (req.timeout) {\n                    xhr.timeout = req.timeout;\n                }\n                // Set the responseType if one was requested.\n                if (req.responseType) {\n                    const responseType = req.responseType.toLowerCase();\n                    // JSON responses need to be processed as text. This is because if the server\n                    // returns an XSSI-prefixed JSON response, the browser will fail to parse it,\n                    // xhr.response will be null, and xhr.responseText cannot be accessed to\n                    // retrieve the prefixed JSON data in order to strip the prefix. Thus, all JSON\n                    // is parsed by first requesting text and then applying JSON.parse.\n                    xhr.responseType = (responseType !== 'json' ? responseType : 'text');\n                }\n                // Serialize the request body if one is present. If not, this will be set to null.\n                const reqBody = req.serializeBody();\n                // If progress events are enabled, response headers will be delivered\n                // in two events - the HttpHeaderResponse event and the full HttpResponse\n                // event. However, since response headers don't change in between these\n                // two events, it doesn't make sense to parse them twice. So headerResponse\n                // caches the data extracted from the response whenever it's first parsed,\n                // to ensure parsing isn't duplicated.\n                let headerResponse = null;\n                // partialFromXhr extracts the HttpHeaderResponse from the current XMLHttpRequest\n                // state, and memoizes it into headerResponse.\n                const partialFromXhr = () => {\n                    if (headerResponse !== null) {\n                        return headerResponse;\n                    }\n                    const statusText = xhr.statusText || 'OK';\n                    // Parse headers from XMLHttpRequest - this step is lazy.\n                    const headers = new HttpHeaders(xhr.getAllResponseHeaders());\n                    // Read the response URL from the XMLHttpResponse instance and fall back on the\n                    // request URL.\n                    const url = getResponseUrl(xhr) || req.url;\n                    // Construct the HttpHeaderResponse and memoize it.\n                    headerResponse = new HttpHeaderResponse({ headers, status: xhr.status, statusText, url });\n                    return headerResponse;\n                };\n                // Next, a few closures are defined for the various events which XMLHttpRequest can\n                // emit. This allows them to be unregistered as event listeners later.\n                // First up is the load event, which represents a response being fully available.\n                const onLoad = () => {\n                    // Read response state from the memoized partial data.\n                    let { headers, status, statusText, url } = partialFromXhr();\n                    // The body will be read out if present.\n                    let body = null;\n                    if (status !== HTTP_STATUS_CODE_NO_CONTENT) {\n                        // Use XMLHttpRequest.response if set, responseText otherwise.\n                        body = typeof xhr.response === 'undefined' ? xhr.responseText : xhr.response;\n                    }\n                    // Normalize another potential bug (this one comes from CORS).\n                    if (status === 0) {\n                        status = !!body ? HTTP_STATUS_CODE_OK : 0;\n                    }\n                    // ok determines whether the response will be transmitted on the event or\n                    // error channel. Unsuccessful status codes (not 2xx) will always be errors,\n                    // but a successful status code can still result in an error if the user\n                    // asked for JSON data and the body cannot be parsed as such.\n                    let ok = status >= 200 && status < 300;\n                    // Check whether the body needs to be parsed as JSON (in many cases the browser\n                    // will have done that already).\n                    if (req.responseType === 'json' && typeof body === 'string') {\n                        // Save the original body, before attempting XSSI prefix stripping.\n                        const originalBody = body;\n                        body = body.replace(XSSI_PREFIX, '');\n                        try {\n                            // Attempt the parse. If it fails, a parse error should be delivered to the\n                            // user.\n                            body = body !== '' ? JSON.parse(body) : null;\n                        }\n                        catch (error) {\n                            // Since the JSON.parse failed, it's reasonable to assume this might not have\n                            // been a JSON response. Restore the original body (including any XSSI prefix)\n                            // to deliver a better error response.\n                            body = originalBody;\n                            // If this was an error request to begin with, leave it as a string, it\n                            // probably just isn't JSON. Otherwise, deliver the parsing error to the user.\n                            if (ok) {\n                                // Even though the response status was 2xx, this is still an error.\n                                ok = false;\n                                // The parse error contains the text of the body that failed to parse.\n                                body = { error, text: body };\n                            }\n                        }\n                    }\n                    if (ok) {\n                        // A successful response is delivered on the event stream.\n                        observer.next(new HttpResponse({\n                            body,\n                            headers,\n                            status,\n                            statusText,\n                            url: url || undefined,\n                        }));\n                        // The full body has been received and delivered, no further events\n                        // are possible. This request is complete.\n                        observer.complete();\n                    }\n                    else {\n                        // An unsuccessful request is delivered on the error channel.\n                        observer.error(new HttpErrorResponse({\n                            // The error in this case is the response body (error from the server).\n                            error: body,\n                            headers,\n                            status,\n                            statusText,\n                            url: url || undefined,\n                        }));\n                    }\n                };\n                // The onError callback is called when something goes wrong at the network level.\n                // Connection timeout, DNS error, offline, etc. These are actual errors, and are\n                // transmitted on the error channel.\n                const onError = (error) => {\n                    const { url } = partialFromXhr();\n                    const res = new HttpErrorResponse({\n                        error,\n                        status: xhr.status || 0,\n                        statusText: xhr.statusText || 'Unknown Error',\n                        url: url || undefined,\n                    });\n                    observer.error(res);\n                };\n                let onTimeout = onError;\n                if (req.timeout) {\n                    onTimeout = (_) => {\n                        const { url } = partialFromXhr();\n                        const res = new HttpErrorResponse({\n                            error: new DOMException('Request timed out', 'TimeoutError'),\n                            status: xhr.status || 0,\n                            statusText: xhr.statusText || 'Request timeout',\n                            url: url || undefined,\n                        });\n                        observer.error(res);\n                    };\n                }\n                // The sentHeaders flag tracks whether the HttpResponseHeaders event\n                // has been sent on the stream. This is necessary to track if progress\n                // is enabled since the event will be sent on only the first download\n                // progress event.\n                let sentHeaders = false;\n                // The download progress event handler, which is only registered if\n                // progress events are enabled.\n                const onDownProgress = (event) => {\n                    // Send the HttpResponseHeaders event if it hasn't been sent already.\n                    if (!sentHeaders) {\n                        observer.next(partialFromXhr());\n                        sentHeaders = true;\n                    }\n                    // Start building the download progress event to deliver on the response\n                    // event stream.\n                    let progressEvent = {\n                        type: HttpEventType.DownloadProgress,\n                        loaded: event.loaded,\n                    };\n                    // Set the total number of bytes in the event if it's available.\n                    if (event.lengthComputable) {\n                        progressEvent.total = event.total;\n                    }\n                    // If the request was for text content and a partial response is\n                    // available on XMLHttpRequest, include it in the progress event\n                    // to allow for streaming reads.\n                    if (req.responseType === 'text' && !!xhr.responseText) {\n                        progressEvent.partialText = xhr.responseText;\n                    }\n                    // Finally, fire the event.\n                    observer.next(progressEvent);\n                };\n                // The upload progress event handler, which is only registered if\n                // progress events are enabled.\n                const onUpProgress = (event) => {\n                    // Upload progress events are simpler. Begin building the progress\n                    // event.\n                    let progress = {\n                        type: HttpEventType.UploadProgress,\n                        loaded: event.loaded,\n                    };\n                    // If the total number of bytes being uploaded is available, include\n                    // it.\n                    if (event.lengthComputable) {\n                        progress.total = event.total;\n                    }\n                    // Send the event.\n                    observer.next(progress);\n                };\n                // By default, register for load and error events.\n                xhr.addEventListener('load', onLoad);\n                xhr.addEventListener('error', onError);\n                xhr.addEventListener('timeout', onTimeout);\n                xhr.addEventListener('abort', onError);\n                // Progress events are only enabled if requested.\n                if (req.reportProgress) {\n                    // Download progress is always enabled if requested.\n                    xhr.addEventListener('progress', onDownProgress);\n                    // Upload progress depends on whether there is a body to upload.\n                    if (reqBody !== null && xhr.upload) {\n                        xhr.upload.addEventListener('progress', onUpProgress);\n                    }\n                }\n                // Fire the request, and notify the event stream that it was fired.\n                xhr.send(reqBody);\n                observer.next({ type: HttpEventType.Sent });\n                // This is the return from the Observable function, which is the\n                // request cancellation handler.\n                return () => {\n                    // On a cancellation, remove all registered event listeners.\n                    xhr.removeEventListener('error', onError);\n                    xhr.removeEventListener('abort', onError);\n                    xhr.removeEventListener('load', onLoad);\n                    xhr.removeEventListener('timeout', onTimeout);\n                    if (req.reportProgress) {\n                        xhr.removeEventListener('progress', onDownProgress);\n                        if (reqBody !== null && xhr.upload) {\n                            xhr.upload.removeEventListener('progress', onUpProgress);\n                        }\n                    }\n                    // Finally, abort the in-flight request.\n                    if (xhr.readyState !== xhr.DONE) {\n                        xhr.abort();\n                    }\n                };\n            });\n        }));\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: HttpXhrBackend, deps: [{ token: XhrFactory }], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: HttpXhrBackend });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: HttpXhrBackend, decorators: [{\n            type: Injectable\n        }], ctorParameters: () => [{ type: XhrFactory }] });\n\nconst XSRF_ENABLED = new InjectionToken(ngDevMode ? 'XSRF_ENABLED' : '');\nconst XSRF_DEFAULT_COOKIE_NAME = 'XSRF-TOKEN';\nconst XSRF_COOKIE_NAME = new InjectionToken(ngDevMode ? 'XSRF_COOKIE_NAME' : '', {\n    providedIn: 'root',\n    factory: () => XSRF_DEFAULT_COOKIE_NAME,\n});\nconst XSRF_DEFAULT_HEADER_NAME = 'X-XSRF-TOKEN';\nconst XSRF_HEADER_NAME = new InjectionToken(ngDevMode ? 'XSRF_HEADER_NAME' : '', {\n    providedIn: 'root',\n    factory: () => XSRF_DEFAULT_HEADER_NAME,\n});\n/**\n * Retrieves the current XSRF token to use with the next outgoing request.\n *\n * @publicApi\n */\nclass HttpXsrfTokenExtractor {\n}\n/**\n * `HttpXsrfTokenExtractor` which retrieves the token from a cookie.\n */\nclass HttpXsrfCookieExtractor {\n    doc;\n    cookieName;\n    lastCookieString = '';\n    lastToken = null;\n    /**\n     * @internal for testing\n     */\n    parseCount = 0;\n    constructor(doc, cookieName) {\n        this.doc = doc;\n        this.cookieName = cookieName;\n    }\n    getToken() {\n        if (typeof ngServerMode !== 'undefined' && ngServerMode) {\n            return null;\n        }\n        const cookieString = this.doc.cookie || '';\n        if (cookieString !== this.lastCookieString) {\n            this.parseCount++;\n            this.lastToken = parseCookieValue(cookieString, this.cookieName);\n            this.lastCookieString = cookieString;\n        }\n        return this.lastToken;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: HttpXsrfCookieExtractor, deps: [{ token: DOCUMENT }, { token: XSRF_COOKIE_NAME }], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: HttpXsrfCookieExtractor });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: HttpXsrfCookieExtractor, decorators: [{\n            type: Injectable\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [XSRF_COOKIE_NAME]\n                }] }] });\nfunction xsrfInterceptorFn(req, next) {\n    const lcUrl = req.url.toLowerCase();\n    // Skip both non-mutating requests and absolute URLs.\n    // Non-mutating requests don't require a token, and absolute URLs require special handling\n    // anyway as the cookie set\n    // on our origin is not the same as the token expected by another origin.\n    if (!inject(XSRF_ENABLED) ||\n        req.method === 'GET' ||\n        req.method === 'HEAD' ||\n        lcUrl.startsWith('http://') ||\n        lcUrl.startsWith('https://')) {\n        return next(req);\n    }\n    const token = inject(HttpXsrfTokenExtractor).getToken();\n    const headerName = inject(XSRF_HEADER_NAME);\n    // Be careful not to overwrite an existing header of the same name.\n    if (token != null && !req.headers.has(headerName)) {\n        req = req.clone({ headers: req.headers.set(headerName, token) });\n    }\n    return next(req);\n}\n/**\n * `HttpInterceptor` which adds an XSRF token to eligible outgoing requests.\n */\nclass HttpXsrfInterceptor {\n    injector;\n    constructor(injector) {\n        this.injector = injector;\n    }\n    intercept(initialRequest, next) {\n        return runInInjectionContext(this.injector, () => xsrfInterceptorFn(initialRequest, (downstreamRequest) => next.handle(downstreamRequest)));\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: HttpXsrfInterceptor, deps: [{ token: i0.EnvironmentInjector }], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: HttpXsrfInterceptor });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: HttpXsrfInterceptor, decorators: [{\n            type: Injectable\n        }], ctorParameters: () => [{ type: i0.EnvironmentInjector }] });\n\n/**\n * Identifies a particular kind of `HttpFeature`.\n *\n * @publicApi\n */\nvar HttpFeatureKind;\n(function (HttpFeatureKind) {\n    HttpFeatureKind[HttpFeatureKind[\"Interceptors\"] = 0] = \"Interceptors\";\n    HttpFeatureKind[HttpFeatureKind[\"LegacyInterceptors\"] = 1] = \"LegacyInterceptors\";\n    HttpFeatureKind[HttpFeatureKind[\"CustomXsrfConfiguration\"] = 2] = \"CustomXsrfConfiguration\";\n    HttpFeatureKind[HttpFeatureKind[\"NoXsrfProtection\"] = 3] = \"NoXsrfProtection\";\n    HttpFeatureKind[HttpFeatureKind[\"JsonpSupport\"] = 4] = \"JsonpSupport\";\n    HttpFeatureKind[HttpFeatureKind[\"RequestsMadeViaParent\"] = 5] = \"RequestsMadeViaParent\";\n    HttpFeatureKind[HttpFeatureKind[\"Fetch\"] = 6] = \"Fetch\";\n})(HttpFeatureKind || (HttpFeatureKind = {}));\nfunction makeHttpFeature(kind, providers) {\n    return {\n        ɵkind: kind,\n        ɵproviders: providers,\n    };\n}\n/**\n * Configures Angular's `HttpClient` service to be available for injection.\n *\n * By default, `HttpClient` will be configured for injection with its default options for XSRF\n * protection of outgoing requests. Additional configuration options can be provided by passing\n * feature functions to `provideHttpClient`. For example, HTTP interceptors can be added using the\n * `withInterceptors(...)` feature.\n *\n * <div class=\"docs-alert docs-alert-helpful\">\n *\n * It's strongly recommended to enable\n * [`fetch`](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API) for applications that use\n * Server-Side Rendering for better performance and compatibility. To enable `fetch`, add\n * `withFetch()` feature to the `provideHttpClient()` call at the root of the application:\n *\n * ```ts\n * provideHttpClient(withFetch());\n * ```\n *\n * </div>\n *\n * @see {@link withInterceptors}\n * @see {@link withInterceptorsFromDi}\n * @see {@link withXsrfConfiguration}\n * @see {@link withNoXsrfProtection}\n * @see {@link withJsonpSupport}\n * @see {@link withRequestsMadeViaParent}\n * @see {@link withFetch}\n */\nfunction provideHttpClient(...features) {\n    if (ngDevMode) {\n        const featureKinds = new Set(features.map((f) => f.ɵkind));\n        if (featureKinds.has(HttpFeatureKind.NoXsrfProtection) &&\n            featureKinds.has(HttpFeatureKind.CustomXsrfConfiguration)) {\n            throw new Error(ngDevMode\n                ? `Configuration error: found both withXsrfConfiguration() and withNoXsrfProtection() in the same call to provideHttpClient(), which is a contradiction.`\n                : '');\n        }\n    }\n    const providers = [\n        HttpClient,\n        HttpXhrBackend,\n        HttpInterceptorHandler,\n        { provide: HttpHandler, useExisting: HttpInterceptorHandler },\n        {\n            provide: HttpBackend,\n            useFactory: () => {\n                return inject(FETCH_BACKEND, { optional: true }) ?? inject(HttpXhrBackend);\n            },\n        },\n        {\n            provide: HTTP_INTERCEPTOR_FNS,\n            useValue: xsrfInterceptorFn,\n            multi: true,\n        },\n        { provide: XSRF_ENABLED, useValue: true },\n        { provide: HttpXsrfTokenExtractor, useClass: HttpXsrfCookieExtractor },\n    ];\n    for (const feature of features) {\n        providers.push(...feature.ɵproviders);\n    }\n    return makeEnvironmentProviders(providers);\n}\n/**\n * Adds one or more functional-style HTTP interceptors to the configuration of the `HttpClient`\n * instance.\n *\n * @see {@link HttpInterceptorFn}\n * @see {@link provideHttpClient}\n * @publicApi\n */\nfunction withInterceptors(interceptorFns) {\n    return makeHttpFeature(HttpFeatureKind.Interceptors, interceptorFns.map((interceptorFn) => {\n        return {\n            provide: HTTP_INTERCEPTOR_FNS,\n            useValue: interceptorFn,\n            multi: true,\n        };\n    }));\n}\nconst LEGACY_INTERCEPTOR_FN = new InjectionToken(ngDevMode ? 'LEGACY_INTERCEPTOR_FN' : '');\n/**\n * Includes class-based interceptors configured using a multi-provider in the current injector into\n * the configured `HttpClient` instance.\n *\n * Prefer `withInterceptors` and functional interceptors instead, as support for DI-provided\n * interceptors may be phased out in a later release.\n *\n * @see {@link HttpInterceptor}\n * @see {@link HTTP_INTERCEPTORS}\n * @see {@link provideHttpClient}\n */\nfunction withInterceptorsFromDi() {\n    // Note: the legacy interceptor function is provided here via an intermediate token\n    // (`LEGACY_INTERCEPTOR_FN`), using a pattern which guarantees that if these providers are\n    // included multiple times, all of the multi-provider entries will have the same instance of the\n    // interceptor function. That way, the `HttpINterceptorHandler` will dedup them and legacy\n    // interceptors will not run multiple times.\n    return makeHttpFeature(HttpFeatureKind.LegacyInterceptors, [\n        {\n            provide: LEGACY_INTERCEPTOR_FN,\n            useFactory: legacyInterceptorFnFactory,\n        },\n        {\n            provide: HTTP_INTERCEPTOR_FNS,\n            useExisting: LEGACY_INTERCEPTOR_FN,\n            multi: true,\n        },\n    ]);\n}\n/**\n * Customizes the XSRF protection for the configuration of the current `HttpClient` instance.\n *\n * This feature is incompatible with the `withNoXsrfProtection` feature.\n *\n * @see {@link provideHttpClient}\n */\nfunction withXsrfConfiguration({ cookieName, headerName, }) {\n    const providers = [];\n    if (cookieName !== undefined) {\n        providers.push({ provide: XSRF_COOKIE_NAME, useValue: cookieName });\n    }\n    if (headerName !== undefined) {\n        providers.push({ provide: XSRF_HEADER_NAME, useValue: headerName });\n    }\n    return makeHttpFeature(HttpFeatureKind.CustomXsrfConfiguration, providers);\n}\n/**\n * Disables XSRF protection in the configuration of the current `HttpClient` instance.\n *\n * This feature is incompatible with the `withXsrfConfiguration` feature.\n *\n * @see {@link provideHttpClient}\n */\nfunction withNoXsrfProtection() {\n    return makeHttpFeature(HttpFeatureKind.NoXsrfProtection, [\n        {\n            provide: XSRF_ENABLED,\n            useValue: false,\n        },\n    ]);\n}\n/**\n * Add JSONP support to the configuration of the current `HttpClient` instance.\n *\n * @see {@link provideHttpClient}\n */\nfunction withJsonpSupport() {\n    return makeHttpFeature(HttpFeatureKind.JsonpSupport, [\n        JsonpClientBackend,\n        { provide: JsonpCallbackContext, useFactory: jsonpCallbackContext },\n        { provide: HTTP_INTERCEPTOR_FNS, useValue: jsonpInterceptorFn, multi: true },\n    ]);\n}\n/**\n * Configures the current `HttpClient` instance to make requests via the parent injector's\n * `HttpClient` instead of directly.\n *\n * By default, `provideHttpClient` configures `HttpClient` in its injector to be an independent\n * instance. For example, even if `HttpClient` is configured in the parent injector with\n * one or more interceptors, they will not intercept requests made via this instance.\n *\n * With this option enabled, once the request has passed through the current injector's\n * interceptors, it will be delegated to the parent injector's `HttpClient` chain instead of\n * dispatched directly, and interceptors in the parent configuration will be applied to the request.\n *\n * If there are several `HttpClient` instances in the injector hierarchy, it's possible for\n * `withRequestsMadeViaParent` to be used at multiple levels, which will cause the request to\n * \"bubble up\" until either reaching the root level or an `HttpClient` which was not configured with\n * this option.\n *\n * @see {@link provideHttpClient}\n * @publicApi 19.0\n */\nfunction withRequestsMadeViaParent() {\n    return makeHttpFeature(HttpFeatureKind.RequestsMadeViaParent, [\n        {\n            provide: HttpBackend,\n            useFactory: () => {\n                const handlerFromParent = inject(HttpHandler, { skipSelf: true, optional: true });\n                if (ngDevMode && handlerFromParent === null) {\n                    throw new Error('withRequestsMadeViaParent() can only be used when the parent injector also configures HttpClient');\n                }\n                return handlerFromParent;\n            },\n        },\n    ]);\n}\n/**\n * Configures the current `HttpClient` instance to make requests using the fetch API.\n *\n * Note: The Fetch API doesn't support progress report on uploads.\n *\n * @publicApi\n */\nfunction withFetch() {\n    return makeHttpFeature(HttpFeatureKind.Fetch, [\n        FetchBackend,\n        { provide: FETCH_BACKEND, useExisting: FetchBackend },\n        { provide: HttpBackend, useExisting: FetchBackend },\n    ]);\n}\n\n/**\n * Configures XSRF protection support for outgoing requests.\n *\n * For a server that supports a cookie-based XSRF protection system,\n * use directly to configure XSRF protection with the correct\n * cookie and header names.\n *\n * If no names are supplied, the default cookie name is `XSRF-TOKEN`\n * and the default header name is `X-XSRF-TOKEN`.\n *\n * @publicApi\n * @deprecated Use withXsrfConfiguration({cookieName: 'XSRF-TOKEN', headerName: 'X-XSRF-TOKEN'}) as\n *     providers instead or `withNoXsrfProtection` if you want to disabled XSRF protection.\n */\nclass HttpClientXsrfModule {\n    /**\n     * Disable the default XSRF protection.\n     */\n    static disable() {\n        return {\n            ngModule: HttpClientXsrfModule,\n            providers: [withNoXsrfProtection().ɵproviders],\n        };\n    }\n    /**\n     * Configure XSRF protection.\n     * @param options An object that can specify either or both\n     * cookie name or header name.\n     * - Cookie name default is `XSRF-TOKEN`.\n     * - Header name default is `X-XSRF-TOKEN`.\n     *\n     */\n    static withOptions(options = {}) {\n        return {\n            ngModule: HttpClientXsrfModule,\n            providers: withXsrfConfiguration(options).ɵproviders,\n        };\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: HttpClientXsrfModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.1.7\", ngImport: i0, type: HttpClientXsrfModule });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: HttpClientXsrfModule, providers: [\n            HttpXsrfInterceptor,\n            { provide: HTTP_INTERCEPTORS, useExisting: HttpXsrfInterceptor, multi: true },\n            { provide: HttpXsrfTokenExtractor, useClass: HttpXsrfCookieExtractor },\n            withXsrfConfiguration({\n                cookieName: XSRF_DEFAULT_COOKIE_NAME,\n                headerName: XSRF_DEFAULT_HEADER_NAME,\n            }).ɵproviders,\n            { provide: XSRF_ENABLED, useValue: true },\n        ] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: HttpClientXsrfModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    providers: [\n                        HttpXsrfInterceptor,\n                        { provide: HTTP_INTERCEPTORS, useExisting: HttpXsrfInterceptor, multi: true },\n                        { provide: HttpXsrfTokenExtractor, useClass: HttpXsrfCookieExtractor },\n                        withXsrfConfiguration({\n                            cookieName: XSRF_DEFAULT_COOKIE_NAME,\n                            headerName: XSRF_DEFAULT_HEADER_NAME,\n                        }).ɵproviders,\n                        { provide: XSRF_ENABLED, useValue: true },\n                    ],\n                }]\n        }] });\n/**\n * Configures the dependency injector for `HttpClient`\n * with supporting services for XSRF. Automatically imported by `HttpClientModule`.\n *\n * You can add interceptors to the chain behind `HttpClient` by binding them to the\n * multiprovider for built-in DI token `HTTP_INTERCEPTORS`.\n *\n * @publicApi\n * @deprecated use `provideHttpClient(withInterceptorsFromDi())` as providers instead\n */\nclass HttpClientModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: HttpClientModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.1.7\", ngImport: i0, type: HttpClientModule });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: HttpClientModule, providers: [provideHttpClient(withInterceptorsFromDi())] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: HttpClientModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    /**\n                     * Configures the dependency injector where it is imported\n                     * with supporting services for HTTP communications.\n                     */\n                    providers: [provideHttpClient(withInterceptorsFromDi())],\n                }]\n        }] });\n/**\n * Configures the dependency injector for `HttpClient`\n * with supporting services for JSONP.\n * Without this module, Jsonp requests reach the backend\n * with method JSONP, where they are rejected.\n *\n * @publicApi\n * @deprecated `withJsonpSupport()` as providers instead\n */\nclass HttpClientJsonpModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: HttpClientJsonpModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.1.7\", ngImport: i0, type: HttpClientJsonpModule });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: HttpClientJsonpModule, providers: [withJsonpSupport().ɵproviders] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: HttpClientJsonpModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    providers: [withJsonpSupport().ɵproviders],\n                }]\n        }] });\n\nexport { FetchBackend, HTTP_INTERCEPTORS, HTTP_ROOT_INTERCEPTOR_FNS, HttpBackend, HttpClient, HttpClientJsonpModule, HttpClientModule, HttpClientXsrfModule, HttpContext, HttpContextToken, HttpErrorResponse, HttpEventType, HttpFeatureKind, HttpHandler, HttpHeaderResponse, HttpHeaders, HttpInterceptorHandler, HttpParams, HttpRequest, HttpResponse, HttpResponseBase, HttpStatusCode, HttpUrlEncodingCodec, HttpXhrBackend, HttpXsrfTokenExtractor, JsonpClientBackend, JsonpInterceptor, REQUESTS_CONTRIBUTE_TO_STABILITY, provideHttpClient, withFetch, withInterceptors, withInterceptorsFromDi, withJsonpSupport, withNoXsrfProtection, withRequestsMadeViaParent, withXsrfConfiguration };\n\n","/**\n * @license Angular v20.1.7\n * (c) 2010-2025 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport * as i0 from '@angular/core';\nimport { Injectable, NgModule } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpHeaders, HttpResponse, HttpErrorResponse, HttpStatusCode, HttpEventType, HttpBackend, REQUESTS_CONTRIBUTE_TO_STABILITY, HttpClientModule } from '../module.mjs';\nimport 'rxjs/operators';\nimport '../xhr.mjs';\n\n/**\n * Controller to be injected into tests, that allows for mocking and flushing\n * of requests.\n *\n * @publicApi\n */\nclass HttpTestingController {\n}\n\n/**\n * A mock requests that was received and is ready to be answered.\n *\n * This interface allows access to the underlying `HttpRequest`, and allows\n * responding with `HttpEvent`s or `HttpErrorResponse`s.\n *\n * @publicApi\n */\nclass TestRequest {\n    request;\n    observer;\n    /**\n     * Whether the request was cancelled after it was sent.\n     */\n    get cancelled() {\n        return this._cancelled;\n    }\n    /**\n     * @internal set by `HttpClientTestingBackend`\n     */\n    _cancelled = false;\n    constructor(request, observer) {\n        this.request = request;\n        this.observer = observer;\n    }\n    /**\n     * Resolve the request by returning a body plus additional HTTP information (such as response\n     * headers) if provided.\n     * If the request specifies an expected body type, the body is converted into the requested type.\n     * Otherwise, the body is converted to `JSON` by default.\n     *\n     * Both successful and unsuccessful responses can be delivered via `flush()`.\n     */\n    flush(body, opts = {}) {\n        if (this.cancelled) {\n            throw new Error(`Cannot flush a cancelled request.`);\n        }\n        const url = this.request.urlWithParams;\n        const headers = opts.headers instanceof HttpHeaders ? opts.headers : new HttpHeaders(opts.headers);\n        body = _maybeConvertBody(this.request.responseType, body);\n        let statusText = opts.statusText;\n        let status = opts.status !== undefined ? opts.status : HttpStatusCode.Ok;\n        if (opts.status === undefined) {\n            if (body === null) {\n                status = HttpStatusCode.NoContent;\n                statusText ||= 'No Content';\n            }\n            else {\n                statusText ||= 'OK';\n            }\n        }\n        if (statusText === undefined) {\n            throw new Error('statusText is required when setting a custom status.');\n        }\n        if (status >= 200 && status < 300) {\n            this.observer.next(new HttpResponse({ body, headers, status, statusText, url }));\n            this.observer.complete();\n        }\n        else {\n            this.observer.error(new HttpErrorResponse({ error: body, headers, status, statusText, url }));\n        }\n    }\n    error(error, opts = {}) {\n        if (this.cancelled) {\n            throw new Error(`Cannot return an error for a cancelled request.`);\n        }\n        const headers = opts.headers instanceof HttpHeaders ? opts.headers : new HttpHeaders(opts.headers);\n        this.observer.error(new HttpErrorResponse({\n            error,\n            headers,\n            status: opts.status || 0,\n            statusText: opts.statusText || '',\n            url: this.request.urlWithParams,\n        }));\n    }\n    /**\n     * Deliver an arbitrary `HttpEvent` (such as a progress event) on the response stream for this\n     * request.\n     */\n    event(event) {\n        if (this.cancelled) {\n            throw new Error(`Cannot send events to a cancelled request.`);\n        }\n        this.observer.next(event);\n    }\n}\n/**\n * Helper function to convert a response body to an ArrayBuffer.\n */\nfunction _toArrayBufferBody(body) {\n    if (typeof ArrayBuffer === 'undefined') {\n        throw new Error('ArrayBuffer responses are not supported on this platform.');\n    }\n    if (body instanceof ArrayBuffer) {\n        return body;\n    }\n    throw new Error('Automatic conversion to ArrayBuffer is not supported for response type.');\n}\n/**\n * Helper function to convert a response body to a Blob.\n */\nfunction _toBlob(body) {\n    if (typeof Blob === 'undefined') {\n        throw new Error('Blob responses are not supported on this platform.');\n    }\n    if (body instanceof Blob) {\n        return body;\n    }\n    if (ArrayBuffer && body instanceof ArrayBuffer) {\n        return new Blob([body]);\n    }\n    throw new Error('Automatic conversion to Blob is not supported for response type.');\n}\n/**\n * Helper function to convert a response body to JSON data.\n */\nfunction _toJsonBody(body, format = 'JSON') {\n    if (typeof ArrayBuffer !== 'undefined' && body instanceof ArrayBuffer) {\n        throw new Error(`Automatic conversion to ${format} is not supported for ArrayBuffers.`);\n    }\n    if (typeof Blob !== 'undefined' && body instanceof Blob) {\n        throw new Error(`Automatic conversion to ${format} is not supported for Blobs.`);\n    }\n    if (typeof body === 'string' ||\n        typeof body === 'number' ||\n        typeof body === 'object' ||\n        typeof body === 'boolean' ||\n        Array.isArray(body)) {\n        return body;\n    }\n    throw new Error(`Automatic conversion to ${format} is not supported for response type.`);\n}\n/**\n * Helper function to convert a response body to a string.\n */\nfunction _toTextBody(body) {\n    if (typeof body === 'string') {\n        return body;\n    }\n    if (typeof ArrayBuffer !== 'undefined' && body instanceof ArrayBuffer) {\n        throw new Error('Automatic conversion to text is not supported for ArrayBuffers.');\n    }\n    if (typeof Blob !== 'undefined' && body instanceof Blob) {\n        throw new Error('Automatic conversion to text is not supported for Blobs.');\n    }\n    return JSON.stringify(_toJsonBody(body, 'text'));\n}\n/**\n * Convert a response body to the requested type.\n */\nfunction _maybeConvertBody(responseType, body) {\n    if (body === null) {\n        return null;\n    }\n    switch (responseType) {\n        case 'arraybuffer':\n            return _toArrayBufferBody(body);\n        case 'blob':\n            return _toBlob(body);\n        case 'json':\n            return _toJsonBody(body);\n        case 'text':\n            return _toTextBody(body);\n        default:\n            throw new Error(`Unsupported responseType: ${responseType}`);\n    }\n}\n\n/**\n * A testing backend for `HttpClient` which both acts as an `HttpBackend`\n * and as the `HttpTestingController`.\n *\n * `HttpClientTestingBackend` works by keeping a list of all open requests.\n * As requests come in, they're added to the list. Users can assert that specific\n * requests were made and then flush them. In the end, a verify() method asserts\n * that no unexpected requests were made.\n *\n *\n */\nclass HttpClientTestingBackend {\n    /**\n     * List of pending requests which have not yet been expected.\n     */\n    open = [];\n    /**\n     * Used when checking if we need to throw the NOT_USING_FETCH_BACKEND_IN_SSR error\n     */\n    isTestingBackend = true;\n    /**\n     * Handle an incoming request by queueing it in the list of open requests.\n     */\n    handle(req) {\n        return new Observable((observer) => {\n            const testReq = new TestRequest(req, observer);\n            this.open.push(testReq);\n            observer.next({ type: HttpEventType.Sent });\n            return () => {\n                testReq._cancelled = true;\n            };\n        });\n    }\n    /**\n     * Helper function to search for requests in the list of open requests.\n     */\n    _match(match) {\n        if (typeof match === 'string') {\n            return this.open.filter((testReq) => testReq.request.urlWithParams === match);\n        }\n        else if (typeof match === 'function') {\n            return this.open.filter((testReq) => match(testReq.request));\n        }\n        else {\n            return this.open.filter((testReq) => (!match.method || testReq.request.method === match.method.toUpperCase()) &&\n                (!match.url || testReq.request.urlWithParams === match.url));\n        }\n    }\n    /**\n     * Search for requests in the list of open requests, and return all that match\n     * without asserting anything about the number of matches.\n     */\n    match(match) {\n        const results = this._match(match);\n        results.forEach((result) => {\n            const index = this.open.indexOf(result);\n            if (index !== -1) {\n                this.open.splice(index, 1);\n            }\n        });\n        return results;\n    }\n    /**\n     * Expect that a single outstanding request matches the given matcher, and return\n     * it.\n     *\n     * Requests returned through this API will no longer be in the list of open requests,\n     * and thus will not match twice.\n     */\n    expectOne(match, description) {\n        description ||= this.descriptionFromMatcher(match);\n        const matches = this.match(match);\n        if (matches.length > 1) {\n            throw new Error(`Expected one matching request for criteria \"${description}\", found ${matches.length} requests.`);\n        }\n        if (matches.length === 0) {\n            let message = `Expected one matching request for criteria \"${description}\", found none.`;\n            if (this.open.length > 0) {\n                // Show the methods and URLs of open requests in the error, for convenience.\n                const requests = this.open.map(describeRequest).join(', ');\n                message += ` Requests received are: ${requests}.`;\n            }\n            throw new Error(message);\n        }\n        return matches[0];\n    }\n    /**\n     * Expect that no outstanding requests match the given matcher, and throw an error\n     * if any do.\n     */\n    expectNone(match, description) {\n        description ||= this.descriptionFromMatcher(match);\n        const matches = this.match(match);\n        if (matches.length > 0) {\n            throw new Error(`Expected zero matching requests for criteria \"${description}\", found ${matches.length}.`);\n        }\n    }\n    /**\n     * Validate that there are no outstanding requests.\n     */\n    verify(opts = {}) {\n        let open = this.open;\n        // It's possible that some requests may be cancelled, and this is expected.\n        // The user can ask to ignore open requests which have been cancelled.\n        if (opts.ignoreCancelled) {\n            open = open.filter((testReq) => !testReq.cancelled);\n        }\n        if (open.length > 0) {\n            // Show the methods and URLs of open requests in the error, for convenience.\n            const requests = open.map(describeRequest).join(', ');\n            throw new Error(`Expected no open requests, found ${open.length}: ${requests}`);\n        }\n    }\n    descriptionFromMatcher(matcher) {\n        if (typeof matcher === 'string') {\n            return `Match URL: ${matcher}`;\n        }\n        else if (typeof matcher === 'object') {\n            const method = matcher.method || '(any)';\n            const url = matcher.url || '(any)';\n            return `Match method: ${method}, URL: ${url}`;\n        }\n        else {\n            return `Match by function: ${matcher.name}`;\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: HttpClientTestingBackend, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: HttpClientTestingBackend });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: HttpClientTestingBackend, decorators: [{\n            type: Injectable\n        }] });\nfunction describeRequest(testRequest) {\n    const url = testRequest.request.urlWithParams;\n    const method = testRequest.request.method;\n    return `${method} ${url}`;\n}\n\nfunction provideHttpClientTesting() {\n    return [\n        HttpClientTestingBackend,\n        { provide: HttpBackend, useExisting: HttpClientTestingBackend },\n        { provide: HttpTestingController, useExisting: HttpClientTestingBackend },\n        { provide: REQUESTS_CONTRIBUTE_TO_STABILITY, useValue: false },\n    ];\n}\n\n/**\n * Configures `HttpClientTestingBackend` as the `HttpBackend` used by `HttpClient`.\n *\n * Inject `HttpTestingController` to expect and flush requests in your tests.\n *\n * @publicApi\n *\n * @deprecated Add `provideHttpClientTesting()` to your providers instead.\n */\nclass HttpClientTestingModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: HttpClientTestingModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.1.7\", ngImport: i0, type: HttpClientTestingModule, imports: [HttpClientModule] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: HttpClientTestingModule, providers: [provideHttpClientTesting()], imports: [HttpClientModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: HttpClientTestingModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [HttpClientModule],\n                    providers: [provideHttpClientTesting()],\n                }]\n        }] });\n\nexport { HttpClientTestingModule, HttpTestingController, TestRequest, provideHttpClientTesting };\n\n","/**\n * @license Angular v20.1.7\n * (c) 2010-2025 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport * as i0 from '@angular/core';\nimport { Directive, InjectionToken, forwardRef, Optional, Inject, ɵisPromise as _isPromise, ɵisSubscribable as _isSubscribable, ɵRuntimeError as _RuntimeError, Self, untracked, computed, signal, EventEmitter, Input, Host, SkipSelf, booleanAttribute, ChangeDetectorRef, Output, Injectable, inject, ApplicationRef, DestroyRef, afterNextRender, NgModule, Version } from '@angular/core';\nimport { ɵgetDOM as _getDOM } from '@angular/common';\nimport { forkJoin, from, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n/**\n * Base class for all ControlValueAccessor classes defined in Forms package.\n * Contains common logic and utility functions.\n *\n * Note: this is an *internal-only* class and should not be extended or used directly in\n * applications code.\n */\nclass BaseControlValueAccessor {\n    _renderer;\n    _elementRef;\n    /**\n     * The registered callback function called when a change or input event occurs on the input\n     * element.\n     * @docs-private\n     */\n    onChange = (_) => { };\n    /**\n     * The registered callback function called when a blur event occurs on the input element.\n     * @docs-private\n     */\n    onTouched = () => { };\n    constructor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n    }\n    /**\n     * Helper method that sets a property on a target element using the current Renderer\n     * implementation.\n     * @docs-private\n     */\n    setProperty(key, value) {\n        this._renderer.setProperty(this._elementRef.nativeElement, key, value);\n    }\n    /**\n     * Registers a function called when the control is touched.\n     * @docs-private\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * Registers a function called when the control value changes.\n     * @docs-private\n     */\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    /**\n     * Sets the \"disabled\" property on the range input element.\n     * @docs-private\n     */\n    setDisabledState(isDisabled) {\n        this.setProperty('disabled', isDisabled);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: BaseControlValueAccessor, deps: [{ token: i0.Renderer2 }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.1.7\", type: BaseControlValueAccessor, isStandalone: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: BaseControlValueAccessor, decorators: [{\n            type: Directive\n        }], ctorParameters: () => [{ type: i0.Renderer2 }, { type: i0.ElementRef }] });\n/**\n * Base class for all built-in ControlValueAccessor classes (except DefaultValueAccessor, which is\n * used in case no other CVAs can be found). We use this class to distinguish between default CVA,\n * built-in CVAs and custom CVAs, so that Forms logic can recognize built-in CVAs and treat custom\n * ones with higher priority (when both built-in and custom CVAs are present).\n *\n * Note: this is an *internal-only* class and should not be extended or used directly in\n * applications code.\n */\nclass BuiltInControlValueAccessor extends BaseControlValueAccessor {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: BuiltInControlValueAccessor, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.1.7\", type: BuiltInControlValueAccessor, isStandalone: true, usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: BuiltInControlValueAccessor, decorators: [{\n            type: Directive\n        }] });\n/**\n * Used to provide a `ControlValueAccessor` for form controls.\n *\n * See `DefaultValueAccessor` for how to implement one.\n *\n * @publicApi\n */\nconst NG_VALUE_ACCESSOR = new InjectionToken(ngDevMode ? 'NgValueAccessor' : '');\n\nconst CHECKBOX_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => CheckboxControlValueAccessor),\n    multi: true,\n};\n/**\n * @description\n * A `ControlValueAccessor` for writing a value and listening to changes on a checkbox input\n * element.\n *\n * @usageNotes\n *\n * ### Using a checkbox with a reactive form.\n *\n * The following example shows how to use a checkbox with a reactive form.\n *\n * ```ts\n * const rememberLoginControl = new FormControl();\n * ```\n *\n * ```html\n * <input type=\"checkbox\" [formControl]=\"rememberLoginControl\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass CheckboxControlValueAccessor extends BuiltInControlValueAccessor {\n    /**\n     * Sets the \"checked\" property on the input element.\n     * @docs-private\n     */\n    writeValue(value) {\n        this.setProperty('checked', value);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: CheckboxControlValueAccessor, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.1.7\", type: CheckboxControlValueAccessor, isStandalone: false, selector: \"input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]\", host: { listeners: { \"change\": \"onChange($any($event.target).checked)\", \"blur\": \"onTouched()\" } }, providers: [CHECKBOX_VALUE_ACCESSOR], usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: CheckboxControlValueAccessor, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]',\n                    host: { '(change)': 'onChange($any($event.target).checked)', '(blur)': 'onTouched()' },\n                    providers: [CHECKBOX_VALUE_ACCESSOR],\n                    standalone: false,\n                }]\n        }] });\n\nconst DEFAULT_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => DefaultValueAccessor),\n    multi: true,\n};\n/**\n * We must check whether the agent is Android because composition events\n * behave differently between iOS and Android.\n */\nfunction _isAndroid() {\n    const userAgent = _getDOM() ? _getDOM().getUserAgent() : '';\n    return /android (\\d+)/.test(userAgent.toLowerCase());\n}\n/**\n * @description\n * Provide this token to control if form directives buffer IME input until\n * the \"compositionend\" event occurs.\n * @publicApi\n */\nconst COMPOSITION_BUFFER_MODE = new InjectionToken(ngDevMode ? 'CompositionEventMode' : '');\n/**\n * The default `ControlValueAccessor` for writing a value and listening to changes on input\n * elements. The accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n *\n * @usageNotes\n *\n * ### Using the default value accessor\n *\n * The following example shows how to use an input element that activates the default value accessor\n * (in this case, a text field).\n *\n * ```ts\n * const firstNameControl = new FormControl();\n * ```\n *\n * ```html\n * <input type=\"text\" [formControl]=\"firstNameControl\">\n * ```\n *\n * This value accessor is used by default for `<input type=\"text\">` and `<textarea>` elements, but\n * you could also use it for custom components that have similar behavior and do not require special\n * processing. In order to attach the default value accessor to a custom element, add the\n * `ngDefaultControl` attribute as shown below.\n *\n * ```html\n * <custom-input-component ngDefaultControl [(ngModel)]=\"value\"></custom-input-component>\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass DefaultValueAccessor extends BaseControlValueAccessor {\n    _compositionMode;\n    /** Whether the user is creating a composition string (IME events). */\n    _composing = false;\n    constructor(renderer, elementRef, _compositionMode) {\n        super(renderer, elementRef);\n        this._compositionMode = _compositionMode;\n        if (this._compositionMode == null) {\n            this._compositionMode = !_isAndroid();\n        }\n    }\n    /**\n     * Sets the \"value\" property on the input element.\n     * @docs-private\n     */\n    writeValue(value) {\n        const normalizedValue = value == null ? '' : value;\n        this.setProperty('value', normalizedValue);\n    }\n    /** @internal */\n    _handleInput(value) {\n        if (!this._compositionMode || (this._compositionMode && !this._composing)) {\n            this.onChange(value);\n        }\n    }\n    /** @internal */\n    _compositionStart() {\n        this._composing = true;\n    }\n    /** @internal */\n    _compositionEnd(value) {\n        this._composing = false;\n        this._compositionMode && this.onChange(value);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: DefaultValueAccessor, deps: [{ token: i0.Renderer2 }, { token: i0.ElementRef }, { token: COMPOSITION_BUFFER_MODE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.1.7\", type: DefaultValueAccessor, isStandalone: false, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\", host: { listeners: { \"input\": \"_handleInput($any($event.target).value)\", \"blur\": \"onTouched()\", \"compositionstart\": \"_compositionStart()\", \"compositionend\": \"_compositionEnd($any($event.target).value)\" } }, providers: [DEFAULT_VALUE_ACCESSOR], usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: DefaultValueAccessor, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]',\n                    // TODO: vsavkin replace the above selector with the one below it once\n                    // https://github.com/angular/angular/issues/3011 is implemented\n                    // selector: '[ngModel],[formControl],[formControlName]',\n                    host: {\n                        '(input)': '_handleInput($any($event.target).value)',\n                        '(blur)': 'onTouched()',\n                        '(compositionstart)': '_compositionStart()',\n                        '(compositionend)': '_compositionEnd($any($event.target).value)',\n                    },\n                    providers: [DEFAULT_VALUE_ACCESSOR],\n                    standalone: false,\n                }]\n        }], ctorParameters: () => [{ type: i0.Renderer2 }, { type: i0.ElementRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [COMPOSITION_BUFFER_MODE]\n                }] }] });\n\nfunction isEmptyInputValue(value) {\n    return value == null || lengthOrSize(value) === 0;\n}\n/**\n * Extract the length property in case it's an array or a string.\n * Extract the size property in case it's a set.\n * Return null else.\n * @param value Either an array, set or undefined.\n */\nfunction lengthOrSize(value) {\n    // non-strict comparison is intentional, to check for both `null` and `undefined` values\n    if (value == null) {\n        return null;\n    }\n    else if (Array.isArray(value) || typeof value === 'string') {\n        return value.length;\n    }\n    else if (value instanceof Set) {\n        return value.size;\n    }\n    return null;\n}\n/**\n * @description\n * An `InjectionToken` for registering additional synchronous validators used with\n * `AbstractControl`s.\n *\n * @see {@link NG_ASYNC_VALIDATORS}\n *\n * @usageNotes\n *\n * ### Providing a custom validator\n *\n * The following example registers a custom validator directive. Adding the validator to the\n * existing collection of validators requires the `multi: true` option.\n *\n * ```ts\n * @Directive({\n *   selector: '[customValidator]',\n *   providers: [{provide: NG_VALIDATORS, useExisting: CustomValidatorDirective, multi: true}]\n * })\n * class CustomValidatorDirective implements Validator {\n *   validate(control: AbstractControl): ValidationErrors | null {\n *     return { 'custom': true };\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nconst NG_VALIDATORS = new InjectionToken(ngDevMode ? 'NgValidators' : '');\n/**\n * @description\n * An `InjectionToken` for registering additional asynchronous validators used with\n * `AbstractControl`s.\n *\n * @see {@link NG_VALIDATORS}\n *\n * @usageNotes\n *\n * ### Provide a custom async validator directive\n *\n * The following example implements the `AsyncValidator` interface to create an\n * async validator directive with a custom error key.\n *\n * ```ts\n * @Directive({\n *   selector: '[customAsyncValidator]',\n *   providers: [{provide: NG_ASYNC_VALIDATORS, useExisting: CustomAsyncValidatorDirective, multi:\n * true}]\n * })\n * class CustomAsyncValidatorDirective implements AsyncValidator {\n *   validate(control: AbstractControl): Promise<ValidationErrors|null> {\n *     return Promise.resolve({'custom': true});\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nconst NG_ASYNC_VALIDATORS = new InjectionToken(ngDevMode ? 'NgAsyncValidators' : '');\n/**\n * A regular expression that matches valid e-mail addresses.\n *\n * At a high level, this regexp matches e-mail addresses of the format `local-part@tld`, where:\n * - `local-part` consists of one or more of the allowed characters (alphanumeric and some\n *   punctuation symbols).\n * - `local-part` cannot begin or end with a period (`.`).\n * - `local-part` cannot be longer than 64 characters.\n * - `tld` consists of one or more `labels` separated by periods (`.`). For example `localhost` or\n *   `foo.com`.\n * - A `label` consists of one or more of the allowed characters (alphanumeric, dashes (`-`) and\n *   periods (`.`)).\n * - A `label` cannot begin or end with a dash (`-`) or a period (`.`).\n * - A `label` cannot be longer than 63 characters.\n * - The whole address cannot be longer than 254 characters.\n *\n * ## Implementation background\n *\n * This regexp was ported over from AngularJS (see there for git history):\n * https://github.com/angular/angular.js/blob/c133ef836/src/ng/directive/input.js#L27\n * It is based on the\n * [WHATWG version](https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address) with\n * some enhancements to incorporate more RFC rules (such as rules related to domain names and the\n * lengths of different parts of the address). The main differences from the WHATWG version are:\n *   - Disallow `local-part` to begin or end with a period (`.`).\n *   - Disallow `local-part` length to exceed 64 characters.\n *   - Disallow total address length to exceed 254 characters.\n *\n * See [this commit](https://github.com/angular/angular.js/commit/f3f5cf72e) for more details.\n */\nconst EMAIL_REGEXP = /^(?=.{1,254}$)(?=.{1,64}@)[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n/**\n * @description\n * Provides a set of built-in validators that can be used by form controls.\n *\n * A validator is a function that processes a `FormControl` or collection of\n * controls and returns an error map or null. A null map means that validation has passed.\n *\n * @see [Form Validation](guide/forms/form-validation)\n *\n * @publicApi\n */\nclass Validators {\n    /**\n     * @description\n     * Validator that requires the control's value to be greater than or equal to the provided number.\n     *\n     * @usageNotes\n     *\n     * ### Validate against a minimum of 3\n     *\n     * ```ts\n     * const control = new FormControl(2, Validators.min(3));\n     *\n     * console.log(control.errors); // {min: {min: 3, actual: 2}}\n     * ```\n     *\n     * @returns A validator function that returns an error map with the\n     * `min` property if the validation check fails, otherwise `null`.\n     *\n     * @see {@link /api/forms/AbstractControl#updateValueAndValidity updateValueAndValidity}\n     *\n     */\n    static min(min) {\n        return minValidator(min);\n    }\n    /**\n     * @description\n     * Validator that requires the control's value to be less than or equal to the provided number.\n     *\n     * @usageNotes\n     *\n     * ### Validate against a maximum of 15\n     *\n     * ```ts\n     * const control = new FormControl(16, Validators.max(15));\n     *\n     * console.log(control.errors); // {max: {max: 15, actual: 16}}\n     * ```\n     *\n     * @returns A validator function that returns an error map with the\n     * `max` property if the validation check fails, otherwise `null`.\n     *\n     * @see {@link /api/forms/AbstractControl#updateValueAndValidity updateValueAndValidity}\n     *\n     */\n    static max(max) {\n        return maxValidator(max);\n    }\n    /**\n     * @description\n     * Validator that requires the control have a non-empty value.\n     *\n     * @usageNotes\n     *\n     * ### Validate that the field is non-empty\n     *\n     * ```ts\n     * const control = new FormControl('', Validators.required);\n     *\n     * console.log(control.errors); // {required: true}\n     * ```\n     *\n     * @returns An error map with the `required` property\n     * if the validation check fails, otherwise `null`.\n     *\n     * @see {@link /api/forms/AbstractControl#updateValueAndValidity updateValueAndValidity}\n     *\n     */\n    static required(control) {\n        return requiredValidator(control);\n    }\n    /**\n     * @description\n     * Validator that requires the control's value be true. This validator is commonly\n     * used for required checkboxes.\n     *\n     * @usageNotes\n     *\n     * ### Validate that the field value is true\n     *\n     * ```ts\n     * const control = new FormControl('some value', Validators.requiredTrue);\n     *\n     * console.log(control.errors); // {required: true}\n     * ```\n     *\n     * @returns An error map that contains the `required` property\n     * set to `true` if the validation check fails, otherwise `null`.\n     *\n     * @see {@link /api/forms/AbstractControl#updateValueAndValidity updateValueAndValidity}\n     *\n     */\n    static requiredTrue(control) {\n        return requiredTrueValidator(control);\n    }\n    /**\n     * @description\n     * Validator that requires the control's value pass an email validation test.\n     *\n     * Tests the value using a [regular\n     * expression](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions)\n     * pattern suitable for common use cases. The pattern is based on the definition of a valid email\n     * address in the [WHATWG HTML\n     * specification](https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address) with\n     * some enhancements to incorporate more RFC rules (such as rules related to domain names and the\n     * lengths of different parts of the address).\n     *\n     * The differences from the WHATWG version include:\n     * - Disallow `local-part` (the part before the `@` symbol) to begin or end with a period (`.`).\n     * - Disallow `local-part` to be longer than 64 characters.\n     * - Disallow the whole address to be longer than 254 characters.\n     *\n     * If this pattern does not satisfy your business needs, you can use `Validators.pattern()` to\n     * validate the value against a different pattern.\n     *\n     * @usageNotes\n     *\n     * ### Validate that the field matches a valid email pattern\n     *\n     * ```ts\n     * const control = new FormControl('bad@', Validators.email);\n     *\n     * console.log(control.errors); // {email: true}\n     * ```\n     *\n     * @returns An error map with the `email` property\n     * if the validation check fails, otherwise `null`.\n     *\n     * @see {@link /api/forms/AbstractControl#updateValueAndValidity updateValueAndValidity}\n     *\n     */\n    static email(control) {\n        return emailValidator(control);\n    }\n    /**\n     * @description\n     * Validator that requires the number of items in the control's value to be greater than or equal\n     * to the provided minimum length. This validator is also provided by default if you use\n     * the HTML5 `minlength` attribute. Note that the `minLength` validator is intended to be used\n     * only for types that have a numeric `length` or `size` property, such as strings, arrays or\n     * sets. The `minLength` validator logic is also not invoked for values when their `length` or\n     * `size` property is 0 (for example in case of an empty string or an empty array), to support\n     * optional controls. You can use the standard `required` validator if empty values should not be\n     * considered valid.\n     *\n     * @usageNotes\n     *\n     * ### Validate that the field has a minimum of 3 characters\n     *\n     * ```ts\n     * const control = new FormControl('ng', Validators.minLength(3));\n     *\n     * console.log(control.errors); // {minlength: {requiredLength: 3, actualLength: 2}}\n     * ```\n     *\n     * ```html\n     * <input minlength=\"5\">\n     * ```\n     *\n     * @returns A validator function that returns an error map with the\n     * `minlength` property if the validation check fails, otherwise `null`.\n     *\n     * @see {@link /api/forms/AbstractControl#updateValueAndValidity updateValueAndValidity}\n     *\n     */\n    static minLength(minLength) {\n        return minLengthValidator(minLength);\n    }\n    /**\n     * @description\n     * Validator that requires the number of items in the control's value to be less than or equal\n     * to the provided maximum length. This validator is also provided by default if you use\n     * the HTML5 `maxlength` attribute. Note that the `maxLength` validator is intended to be used\n     * only for types that have a numeric `length` or `size` property, such as strings, arrays or\n     * sets.\n     *\n     * @usageNotes\n     *\n     * ### Validate that the field has maximum of 5 characters\n     *\n     * ```ts\n     * const control = new FormControl('Angular', Validators.maxLength(5));\n     *\n     * console.log(control.errors); // {maxlength: {requiredLength: 5, actualLength: 7}}\n     * ```\n     *\n     * ```html\n     * <input maxlength=\"5\">\n     * ```\n     *\n     * @returns A validator function that returns an error map with the\n     * `maxlength` property if the validation check fails, otherwise `null`.\n     *\n     * @see {@link /api/forms/AbstractControl#updateValueAndValidity updateValueAndValidity}\n     *\n     */\n    static maxLength(maxLength) {\n        return maxLengthValidator(maxLength);\n    }\n    /**\n     * @description\n     * Validator that requires the control's value to match a regex pattern. This validator is also\n     * provided by default if you use the HTML5 `pattern` attribute.\n     *\n     * @usageNotes\n     *\n     * ### Validate that the field only contains letters or spaces\n     *\n     * ```ts\n     * const control = new FormControl('1', Validators.pattern('[a-zA-Z ]*'));\n     *\n     * console.log(control.errors); // {pattern: {requiredPattern: '^[a-zA-Z ]*$', actualValue: '1'}}\n     * ```\n     *\n     * ```html\n     * <input pattern=\"[a-zA-Z ]*\">\n     * ```\n     *\n     * ### Pattern matching with the global or sticky flag\n     *\n     * `RegExp` objects created with the `g` or `y` flags that are passed into `Validators.pattern`\n     * can produce different results on the same input when validations are run consecutively. This is\n     * due to how the behavior of `RegExp.prototype.test` is\n     * specified in [ECMA-262](https://tc39.es/ecma262/#sec-regexpbuiltinexec)\n     * (`RegExp` preserves the index of the last match when the global or sticky flag is used).\n     * Due to this behavior, it is recommended that when using\n     * `Validators.pattern` you **do not** pass in a `RegExp` object with either the global or sticky\n     * flag enabled.\n     *\n     * ```ts\n     * // Not recommended (since the `g` flag is used)\n     * const controlOne = new FormControl('1', Validators.pattern(/foo/g));\n     *\n     * // Good\n     * const controlTwo = new FormControl('1', Validators.pattern(/foo/));\n     * ```\n     *\n     * @param pattern A regular expression to be used as is to test the values, or a string.\n     * If a string is passed, the `^` character is prepended and the `$` character is\n     * appended to the provided string (if not already present), and the resulting regular\n     * expression is used to test the values.\n     *\n     * @returns A validator function that returns an error map with the\n     * `pattern` property if the validation check fails, otherwise `null`.\n     *\n     * @see {@link /api/forms/AbstractControl#updateValueAndValidity updateValueAndValidity}\n     *\n     */\n    static pattern(pattern) {\n        return patternValidator(pattern);\n    }\n    /**\n     * @description\n     * Validator that performs no operation.\n     *\n     * @see {@link /api/forms/AbstractControl#updateValueAndValidity updateValueAndValidity}\n     *\n     */\n    static nullValidator(control) {\n        return nullValidator();\n    }\n    static compose(validators) {\n        return compose(validators);\n    }\n    /**\n     * @description\n     * Compose multiple async validators into a single function that returns the union\n     * of the individual error objects for the provided control.\n     *\n     * @returns A validator function that returns an error map with the\n     * merged error objects of the async validators if the validation check fails, otherwise `null`.\n     *\n     * @see {@link /api/forms/AbstractControl#updateValueAndValidity updateValueAndValidity}\n     *\n     */\n    static composeAsync(validators) {\n        return composeAsync(validators);\n    }\n}\n/**\n * Validator that requires the control's value to be greater than or equal to the provided number.\n * See `Validators.min` for additional information.\n */\nfunction minValidator(min) {\n    return (control) => {\n        if (control.value == null || min == null) {\n            return null; // don't validate empty values to allow optional controls\n        }\n        const value = parseFloat(control.value);\n        // Controls with NaN values after parsing should be treated as not having a\n        // minimum, per the HTML forms spec: https://www.w3.org/TR/html5/forms.html#attr-input-min\n        return !isNaN(value) && value < min ? { 'min': { 'min': min, 'actual': control.value } } : null;\n    };\n}\n/**\n * Validator that requires the control's value to be less than or equal to the provided number.\n * See `Validators.max` for additional information.\n */\nfunction maxValidator(max) {\n    return (control) => {\n        if (control.value == null || max == null) {\n            return null; // don't validate empty values to allow optional controls\n        }\n        const value = parseFloat(control.value);\n        // Controls with NaN values after parsing should be treated as not having a\n        // maximum, per the HTML forms spec: https://www.w3.org/TR/html5/forms.html#attr-input-max\n        return !isNaN(value) && value > max ? { 'max': { 'max': max, 'actual': control.value } } : null;\n    };\n}\n/**\n * Validator that requires the control have a non-empty value.\n * See `Validators.required` for additional information.\n */\nfunction requiredValidator(control) {\n    return isEmptyInputValue(control.value) ? { 'required': true } : null;\n}\n/**\n * Validator that requires the control's value be true. This validator is commonly\n * used for required checkboxes.\n * See `Validators.requiredTrue` for additional information.\n */\nfunction requiredTrueValidator(control) {\n    return control.value === true ? null : { 'required': true };\n}\n/**\n * Validator that requires the control's value pass an email validation test.\n * See `Validators.email` for additional information.\n */\nfunction emailValidator(control) {\n    if (isEmptyInputValue(control.value)) {\n        return null; // don't validate empty values to allow optional controls\n    }\n    return EMAIL_REGEXP.test(control.value) ? null : { 'email': true };\n}\n/**\n * Validator that requires the number of items in the control's value to be greater than or equal\n * to the provided minimum length. See `Validators.minLength` for additional information.\n *\n * The minLengthValidator respects every length property in an object, regardless of whether it's an array.\n * For example, the object {id: 1, length: 0, width: 0} should be validated.\n */\nfunction minLengthValidator(minLength) {\n    return (control) => {\n        const length = control.value?.length ?? lengthOrSize(control.value);\n        if (length === null || length === 0) {\n            // don't validate empty values to allow optional controls\n            // don't validate values without `length` or `size` property\n            return null;\n        }\n        return length < minLength\n            ? { 'minlength': { 'requiredLength': minLength, 'actualLength': length } }\n            : null;\n    };\n}\n/**\n * Validator that requires the number of items in the control's value to be less than or equal\n * to the provided maximum length. See `Validators.maxLength` for additional information.\n *\n * The maxLengthValidator respects every length property in an object, regardless of whether it's an array.\n * For example, the object {id: 1, length: 0, width: 0} should be validated.\n */\nfunction maxLengthValidator(maxLength) {\n    return (control) => {\n        const length = control.value?.length ?? lengthOrSize(control.value);\n        if (length !== null && length > maxLength) {\n            return { 'maxlength': { 'requiredLength': maxLength, 'actualLength': length } };\n        }\n        return null;\n    };\n}\n/**\n * Validator that requires the control's value to match a regex pattern.\n * See `Validators.pattern` for additional information.\n */\nfunction patternValidator(pattern) {\n    if (!pattern)\n        return nullValidator;\n    let regex;\n    let regexStr;\n    if (typeof pattern === 'string') {\n        regexStr = '';\n        if (pattern.charAt(0) !== '^')\n            regexStr += '^';\n        regexStr += pattern;\n        if (pattern.charAt(pattern.length - 1) !== '$')\n            regexStr += '$';\n        regex = new RegExp(regexStr);\n    }\n    else {\n        regexStr = pattern.toString();\n        regex = pattern;\n    }\n    return (control) => {\n        if (isEmptyInputValue(control.value)) {\n            return null; // don't validate empty values to allow optional controls\n        }\n        const value = control.value;\n        return regex.test(value)\n            ? null\n            : { 'pattern': { 'requiredPattern': regexStr, 'actualValue': value } };\n    };\n}\n/**\n * Function that has `ValidatorFn` shape, but performs no operation.\n */\nfunction nullValidator(control) {\n    return null;\n}\nfunction isPresent(o) {\n    return o != null;\n}\nfunction toObservable(value) {\n    const obs = _isPromise(value) ? from(value) : value;\n    if ((typeof ngDevMode === 'undefined' || ngDevMode) && !_isSubscribable(obs)) {\n        let errorMessage = `Expected async validator to return Promise or Observable.`;\n        // A synchronous validator will return object or null.\n        if (typeof value === 'object') {\n            errorMessage +=\n                ' Are you using a synchronous validator where an async validator is expected?';\n        }\n        throw new _RuntimeError(-1101 /* RuntimeErrorCode.WRONG_VALIDATOR_RETURN_TYPE */, errorMessage);\n    }\n    return obs;\n}\nfunction mergeErrors(arrayOfErrors) {\n    let res = {};\n    arrayOfErrors.forEach((errors) => {\n        res = errors != null ? { ...res, ...errors } : res;\n    });\n    return Object.keys(res).length === 0 ? null : res;\n}\nfunction executeValidators(control, validators) {\n    return validators.map((validator) => validator(control));\n}\nfunction isValidatorFn(validator) {\n    return !validator.validate;\n}\n/**\n * Given the list of validators that may contain both functions as well as classes, return the list\n * of validator functions (convert validator classes into validator functions). This is needed to\n * have consistent structure in validators list before composing them.\n *\n * @param validators The set of validators that may contain validators both in plain function form\n *     as well as represented as a validator class.\n */\nfunction normalizeValidators(validators) {\n    return validators.map((validator) => {\n        return isValidatorFn(validator)\n            ? validator\n            : ((c) => validator.validate(c));\n    });\n}\n/**\n * Merges synchronous validators into a single validator function.\n * See `Validators.compose` for additional information.\n */\nfunction compose(validators) {\n    if (!validators)\n        return null;\n    const presentValidators = validators.filter(isPresent);\n    if (presentValidators.length == 0)\n        return null;\n    return function (control) {\n        return mergeErrors(executeValidators(control, presentValidators));\n    };\n}\n/**\n * Accepts a list of validators of different possible shapes (`Validator` and `ValidatorFn`),\n * normalizes the list (converts everything to `ValidatorFn`) and merges them into a single\n * validator function.\n */\nfunction composeValidators(validators) {\n    return validators != null ? compose(normalizeValidators(validators)) : null;\n}\n/**\n * Merges asynchronous validators into a single validator function.\n * See `Validators.composeAsync` for additional information.\n */\nfunction composeAsync(validators) {\n    if (!validators)\n        return null;\n    const presentValidators = validators.filter(isPresent);\n    if (presentValidators.length == 0)\n        return null;\n    return function (control) {\n        const observables = executeValidators(control, presentValidators).map(toObservable);\n        return forkJoin(observables).pipe(map(mergeErrors));\n    };\n}\n/**\n * Accepts a list of async validators of different possible shapes (`AsyncValidator` and\n * `AsyncValidatorFn`), normalizes the list (converts everything to `AsyncValidatorFn`) and merges\n * them into a single validator function.\n */\nfunction composeAsyncValidators(validators) {\n    return validators != null\n        ? composeAsync(normalizeValidators(validators))\n        : null;\n}\n/**\n * Merges raw control validators with a given directive validator and returns the combined list of\n * validators as an array.\n */\nfunction mergeValidators(controlValidators, dirValidator) {\n    if (controlValidators === null)\n        return [dirValidator];\n    return Array.isArray(controlValidators)\n        ? [...controlValidators, dirValidator]\n        : [controlValidators, dirValidator];\n}\n/**\n * Retrieves the list of raw synchronous validators attached to a given control.\n */\nfunction getControlValidators(control) {\n    return control._rawValidators;\n}\n/**\n * Retrieves the list of raw asynchronous validators attached to a given control.\n */\nfunction getControlAsyncValidators(control) {\n    return control._rawAsyncValidators;\n}\n/**\n * Accepts a singleton validator, an array, or null, and returns an array type with the provided\n * validators.\n *\n * @param validators A validator, validators, or null.\n * @returns A validators array.\n */\nfunction makeValidatorsArray(validators) {\n    if (!validators)\n        return [];\n    return Array.isArray(validators) ? validators : [validators];\n}\n/**\n * Determines whether a validator or validators array has a given validator.\n *\n * @param validators The validator or validators to compare against.\n * @param validator The validator to check.\n * @returns Whether the validator is present.\n */\nfunction hasValidator(validators, validator) {\n    return Array.isArray(validators) ? validators.includes(validator) : validators === validator;\n}\n/**\n * Combines two arrays of validators into one. If duplicates are provided, only one will be added.\n *\n * @param validators The new validators.\n * @param currentValidators The base array of current validators.\n * @returns An array of validators.\n */\nfunction addValidators(validators, currentValidators) {\n    const current = makeValidatorsArray(currentValidators);\n    const validatorsToAdd = makeValidatorsArray(validators);\n    validatorsToAdd.forEach((v) => {\n        // Note: if there are duplicate entries in the new validators array,\n        // only the first one would be added to the current list of validators.\n        // Duplicate ones would be ignored since `hasValidator` would detect\n        // the presence of a validator function and we update the current list in place.\n        if (!hasValidator(current, v)) {\n            current.push(v);\n        }\n    });\n    return current;\n}\nfunction removeValidators(validators, currentValidators) {\n    return makeValidatorsArray(currentValidators).filter((v) => !hasValidator(validators, v));\n}\n\n/**\n * @description\n * Base class for control directives.\n *\n * This class is only used internally in the `ReactiveFormsModule` and the `FormsModule`.\n *\n * @publicApi\n */\nclass AbstractControlDirective {\n    /**\n     * @description\n     * Reports the value of the control if it is present, otherwise null.\n     */\n    get value() {\n        return this.control ? this.control.value : null;\n    }\n    /**\n     * @description\n     * Reports whether the control is valid. A control is considered valid if no\n     * validation errors exist with the current value.\n     * If the control is not present, null is returned.\n     */\n    get valid() {\n        return this.control ? this.control.valid : null;\n    }\n    /**\n     * @description\n     * Reports whether the control is invalid, meaning that an error exists in the input value.\n     * If the control is not present, null is returned.\n     */\n    get invalid() {\n        return this.control ? this.control.invalid : null;\n    }\n    /**\n     * @description\n     * Reports whether a control is pending, meaning that async validation is occurring and\n     * errors are not yet available for the input value. If the control is not present, null is\n     * returned.\n     */\n    get pending() {\n        return this.control ? this.control.pending : null;\n    }\n    /**\n     * @description\n     * Reports whether the control is disabled, meaning that the control is disabled\n     * in the UI and is exempt from validation checks and excluded from aggregate\n     * values of ancestor controls. If the control is not present, null is returned.\n     */\n    get disabled() {\n        return this.control ? this.control.disabled : null;\n    }\n    /**\n     * @description\n     * Reports whether the control is enabled, meaning that the control is included in ancestor\n     * calculations of validity or value. If the control is not present, null is returned.\n     */\n    get enabled() {\n        return this.control ? this.control.enabled : null;\n    }\n    /**\n     * @description\n     * Reports the control's validation errors. If the control is not present, null is returned.\n     */\n    get errors() {\n        return this.control ? this.control.errors : null;\n    }\n    /**\n     * @description\n     * Reports whether the control is pristine, meaning that the user has not yet changed\n     * the value in the UI. If the control is not present, null is returned.\n     */\n    get pristine() {\n        return this.control ? this.control.pristine : null;\n    }\n    /**\n     * @description\n     * Reports whether the control is dirty, meaning that the user has changed\n     * the value in the UI. If the control is not present, null is returned.\n     */\n    get dirty() {\n        return this.control ? this.control.dirty : null;\n    }\n    /**\n     * @description\n     * Reports whether the control is touched, meaning that the user has triggered\n     * a `blur` event on it. If the control is not present, null is returned.\n     */\n    get touched() {\n        return this.control ? this.control.touched : null;\n    }\n    /**\n     * @description\n     * Reports the validation status of the control. Possible values include:\n     * 'VALID', 'INVALID', 'DISABLED', and 'PENDING'.\n     * If the control is not present, null is returned.\n     */\n    get status() {\n        return this.control ? this.control.status : null;\n    }\n    /**\n     * @description\n     * Reports whether the control is untouched, meaning that the user has not yet triggered\n     * a `blur` event on it. If the control is not present, null is returned.\n     */\n    get untouched() {\n        return this.control ? this.control.untouched : null;\n    }\n    /**\n     * @description\n     * Returns a multicasting observable that emits a validation status whenever it is\n     * calculated for the control. If the control is not present, null is returned.\n     */\n    get statusChanges() {\n        return this.control ? this.control.statusChanges : null;\n    }\n    /**\n     * @description\n     * Returns a multicasting observable of value changes for the control that emits every time the\n     * value of the control changes in the UI or programmatically.\n     * If the control is not present, null is returned.\n     */\n    get valueChanges() {\n        return this.control ? this.control.valueChanges : null;\n    }\n    /**\n     * @description\n     * Returns an array that represents the path from the top-level form to this control.\n     * Each index is the string name of the control on that level.\n     */\n    get path() {\n        return null;\n    }\n    /**\n     * Contains the result of merging synchronous validators into a single validator function\n     * (combined using `Validators.compose`).\n     */\n    _composedValidatorFn;\n    /**\n     * Contains the result of merging asynchronous validators into a single validator function\n     * (combined using `Validators.composeAsync`).\n     */\n    _composedAsyncValidatorFn;\n    /**\n     * Set of synchronous validators as they were provided while calling `setValidators` function.\n     * @internal\n     */\n    _rawValidators = [];\n    /**\n     * Set of asynchronous validators as they were provided while calling `setAsyncValidators`\n     * function.\n     * @internal\n     */\n    _rawAsyncValidators = [];\n    /**\n     * Sets synchronous validators for this directive.\n     * @internal\n     */\n    _setValidators(validators) {\n        this._rawValidators = validators || [];\n        this._composedValidatorFn = composeValidators(this._rawValidators);\n    }\n    /**\n     * Sets asynchronous validators for this directive.\n     * @internal\n     */\n    _setAsyncValidators(validators) {\n        this._rawAsyncValidators = validators || [];\n        this._composedAsyncValidatorFn = composeAsyncValidators(this._rawAsyncValidators);\n    }\n    /**\n     * @description\n     * Synchronous validator function composed of all the synchronous validators registered with this\n     * directive.\n     */\n    get validator() {\n        return this._composedValidatorFn || null;\n    }\n    /**\n     * @description\n     * Asynchronous validator function composed of all the asynchronous validators registered with\n     * this directive.\n     */\n    get asyncValidator() {\n        return this._composedAsyncValidatorFn || null;\n    }\n    /*\n     * The set of callbacks to be invoked when directive instance is being destroyed.\n     */\n    _onDestroyCallbacks = [];\n    /**\n     * Internal function to register callbacks that should be invoked\n     * when directive instance is being destroyed.\n     * @internal\n     */\n    _registerOnDestroy(fn) {\n        this._onDestroyCallbacks.push(fn);\n    }\n    /**\n     * Internal function to invoke all registered \"on destroy\" callbacks.\n     * Note: calling this function also clears the list of callbacks.\n     * @internal\n     */\n    _invokeOnDestroyCallbacks() {\n        this._onDestroyCallbacks.forEach((fn) => fn());\n        this._onDestroyCallbacks = [];\n    }\n    /**\n     * @description\n     * Resets the control with the provided value if the control is present.\n     */\n    reset(value = undefined) {\n        if (this.control)\n            this.control.reset(value);\n    }\n    /**\n     * @description\n     * Reports whether the control with the given path has the error specified.\n     *\n     * @param errorCode The code of the error to check\n     * @param path A list of control names that designates how to move from the current control\n     * to the control that should be queried for errors.\n     *\n     * @usageNotes\n     * For example, for the following `FormGroup`:\n     *\n     * ```ts\n     * form = new FormGroup({\n     *   address: new FormGroup({ street: new FormControl() })\n     * });\n     * ```\n     *\n     * The path to the 'street' control from the root form would be 'address' -> 'street'.\n     *\n     * It can be provided to this method in one of two formats:\n     *\n     * 1. An array of string control names, e.g. `['address', 'street']`\n     * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n     *\n     * If no path is given, this method checks for the error on the current control.\n     *\n     * @returns whether the given error is present in the control at the given path.\n     *\n     * If the control is not present, false is returned.\n     */\n    hasError(errorCode, path) {\n        return this.control ? this.control.hasError(errorCode, path) : false;\n    }\n    /**\n     * @description\n     * Reports error data for the control with the given path.\n     *\n     * @param errorCode The code of the error to check\n     * @param path A list of control names that designates how to move from the current control\n     * to the control that should be queried for errors.\n     *\n     * @usageNotes\n     * For example, for the following `FormGroup`:\n     *\n     * ```ts\n     * form = new FormGroup({\n     *   address: new FormGroup({ street: new FormControl() })\n     * });\n     * ```\n     *\n     * The path to the 'street' control from the root form would be 'address' -> 'street'.\n     *\n     * It can be provided to this method in one of two formats:\n     *\n     * 1. An array of string control names, e.g. `['address', 'street']`\n     * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n     *\n     * @returns error data for that particular error. If the control or error is not present,\n     * null is returned.\n     */\n    getError(errorCode, path) {\n        return this.control ? this.control.getError(errorCode, path) : null;\n    }\n}\n\n/**\n * @description\n * A base class for directives that contain multiple registered instances of `NgControl`.\n * Only used by the forms module.\n *\n * @publicApi\n */\nclass ControlContainer extends AbstractControlDirective {\n    /**\n     * @description\n     * The name for the control\n     */\n    name;\n    /**\n     * @description\n     * The top-level form directive for the control.\n     */\n    get formDirective() {\n        return null;\n    }\n    /**\n     * @description\n     * The path to this group.\n     */\n    get path() {\n        return null;\n    }\n}\n\n/**\n * @description\n * A base class that all `FormControl`-based directives extend. It binds a `FormControl`\n * object to a DOM element.\n *\n * @publicApi\n */\nclass NgControl extends AbstractControlDirective {\n    /**\n     * @description\n     * The parent form for the control.\n     *\n     * @internal\n     */\n    _parent = null;\n    /**\n     * @description\n     * The name for the control\n     */\n    name = null;\n    /**\n     * @description\n     * The value accessor for the control\n     */\n    valueAccessor = null;\n}\n\n// DO NOT REFACTOR!\n// Each status is represented by a separate function to make sure that\n// advanced Closure Compiler optimizations related to property renaming\n// can work correctly.\nclass AbstractControlStatus {\n    _cd;\n    constructor(cd) {\n        this._cd = cd;\n    }\n    get isTouched() {\n        // track the touched signal\n        this._cd?.control?._touched?.();\n        return !!this._cd?.control?.touched;\n    }\n    get isUntouched() {\n        return !!this._cd?.control?.untouched;\n    }\n    get isPristine() {\n        // track the pristine signal\n        this._cd?.control?._pristine?.();\n        return !!this._cd?.control?.pristine;\n    }\n    get isDirty() {\n        // pristine signal already tracked above\n        return !!this._cd?.control?.dirty;\n    }\n    get isValid() {\n        // track the status signal\n        this._cd?.control?._status?.();\n        return !!this._cd?.control?.valid;\n    }\n    get isInvalid() {\n        // status signal already tracked above\n        return !!this._cd?.control?.invalid;\n    }\n    get isPending() {\n        // status signal already tracked above\n        return !!this._cd?.control?.pending;\n    }\n    get isSubmitted() {\n        // track the submitted signal\n        this._cd?._submitted?.();\n        // We check for the `submitted` field from `NgForm` and `FormGroupDirective` classes, but\n        // we avoid instanceof checks to prevent non-tree-shakable references to those types.\n        return !!this._cd?.submitted;\n    }\n}\nconst ngControlStatusHost = {\n    '[class.ng-untouched]': 'isUntouched',\n    '[class.ng-touched]': 'isTouched',\n    '[class.ng-pristine]': 'isPristine',\n    '[class.ng-dirty]': 'isDirty',\n    '[class.ng-valid]': 'isValid',\n    '[class.ng-invalid]': 'isInvalid',\n    '[class.ng-pending]': 'isPending',\n};\nconst ngGroupStatusHost = {\n    ...ngControlStatusHost,\n    '[class.ng-submitted]': 'isSubmitted',\n};\n/**\n * @description\n * Directive automatically applied to Angular form controls that sets CSS classes\n * based on control status.\n *\n * @usageNotes\n *\n * ### CSS classes applied\n *\n * The following classes are applied as the properties become true:\n *\n * * ng-valid\n * * ng-invalid\n * * ng-pending\n * * ng-pristine\n * * ng-dirty\n * * ng-untouched\n * * ng-touched\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass NgControlStatus extends AbstractControlStatus {\n    constructor(cd) {\n        super(cd);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: NgControlStatus, deps: [{ token: NgControl, self: true }], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.1.7\", type: NgControlStatus, isStandalone: false, selector: \"[formControlName],[ngModel],[formControl]\", host: { properties: { \"class.ng-untouched\": \"isUntouched\", \"class.ng-touched\": \"isTouched\", \"class.ng-pristine\": \"isPristine\", \"class.ng-dirty\": \"isDirty\", \"class.ng-valid\": \"isValid\", \"class.ng-invalid\": \"isInvalid\", \"class.ng-pending\": \"isPending\" } }, usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: NgControlStatus, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[formControlName],[ngModel],[formControl]',\n                    host: ngControlStatusHost,\n                    standalone: false,\n                }]\n        }], ctorParameters: () => [{ type: NgControl, decorators: [{\n                    type: Self\n                }] }] });\n/**\n * @description\n * Directive automatically applied to Angular form groups that sets CSS classes\n * based on control status (valid/invalid/dirty/etc). On groups, this includes the additional\n * class ng-submitted.\n *\n * @see {@link NgControlStatus}\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass NgControlStatusGroup extends AbstractControlStatus {\n    constructor(cd) {\n        super(cd);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: NgControlStatusGroup, deps: [{ token: ControlContainer, optional: true, self: true }], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.1.7\", type: NgControlStatusGroup, isStandalone: false, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\", host: { properties: { \"class.ng-untouched\": \"isUntouched\", \"class.ng-touched\": \"isTouched\", \"class.ng-pristine\": \"isPristine\", \"class.ng-dirty\": \"isDirty\", \"class.ng-valid\": \"isValid\", \"class.ng-invalid\": \"isInvalid\", \"class.ng-pending\": \"isPending\", \"class.ng-submitted\": \"isSubmitted\" } }, usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: NgControlStatusGroup, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]',\n                    host: ngGroupStatusHost,\n                    standalone: false,\n                }]\n        }], ctorParameters: () => [{ type: ControlContainer, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }] }] });\n\nconst formControlNameExample = `\n  <div [formGroup]=\"myGroup\">\n    <input formControlName=\"firstName\">\n  </div>\n\n  In your class:\n\n  this.myGroup = new FormGroup({\n      firstName: new FormControl()\n  });`;\nconst formGroupNameExample = `\n  <div [formGroup]=\"myGroup\">\n      <div formGroupName=\"person\">\n        <input formControlName=\"firstName\">\n      </div>\n  </div>\n\n  In your class:\n\n  this.myGroup = new FormGroup({\n      person: new FormGroup({ firstName: new FormControl() })\n  });`;\nconst formArrayNameExample = `\n  <div [formGroup]=\"myGroup\">\n    <div formArrayName=\"cities\">\n      <div *ngFor=\"let city of cityArray.controls; index as i\">\n        <input [formControlName]=\"i\">\n      </div>\n    </div>\n  </div>\n\n  In your class:\n\n  this.cityArray = new FormArray([new FormControl('SF')]);\n  this.myGroup = new FormGroup({\n    cities: this.cityArray\n  });`;\nconst ngModelGroupExample = `\n  <form>\n      <div ngModelGroup=\"person\">\n        <input [(ngModel)]=\"person.name\" name=\"firstName\">\n      </div>\n  </form>`;\nconst ngModelWithFormGroupExample = `\n  <div [formGroup]=\"myGroup\">\n      <input formControlName=\"firstName\">\n      <input [(ngModel)]=\"showMoreControls\" [ngModelOptions]=\"{standalone: true}\">\n  </div>\n`;\n\nfunction controlParentException(nameOrIndex) {\n    return new _RuntimeError(1050 /* RuntimeErrorCode.FORM_CONTROL_NAME_MISSING_PARENT */, `formControlName must be used with a parent formGroup directive. You'll want to add a formGroup\n      directive and pass it an existing FormGroup instance (you can create one in your class).\n\n      ${describeFormControl(nameOrIndex)}\n\n    Example:\n\n    ${formControlNameExample}`);\n}\nfunction describeFormControl(nameOrIndex) {\n    if (nameOrIndex == null || nameOrIndex === '') {\n        return '';\n    }\n    const valueType = typeof nameOrIndex === 'string' ? 'name' : 'index';\n    return `Affected Form Control ${valueType}: \"${nameOrIndex}\"`;\n}\nfunction ngModelGroupException() {\n    return new _RuntimeError(1051 /* RuntimeErrorCode.FORM_CONTROL_NAME_INSIDE_MODEL_GROUP */, `formControlName cannot be used with an ngModelGroup parent. It is only compatible with parents\n      that also have a \"form\" prefix: formGroupName, formArrayName, or formGroup.\n\n      Option 1:  Update the parent to be formGroupName (reactive form strategy)\n\n      ${formGroupNameExample}\n\n      Option 2: Use ngModel instead of formControlName (template-driven strategy)\n\n      ${ngModelGroupExample}`);\n}\nfunction missingFormException() {\n    return new _RuntimeError(1052 /* RuntimeErrorCode.FORM_GROUP_MISSING_INSTANCE */, `formGroup expects a FormGroup instance. Please pass one in.\n\n      Example:\n\n      ${formControlNameExample}`);\n}\nfunction groupParentException() {\n    return new _RuntimeError(1053 /* RuntimeErrorCode.FORM_GROUP_NAME_MISSING_PARENT */, `formGroupName must be used with a parent formGroup directive.  You'll want to add a formGroup\n    directive and pass it an existing FormGroup instance (you can create one in your class).\n\n    Example:\n\n    ${formGroupNameExample}`);\n}\nfunction arrayParentException() {\n    return new _RuntimeError(1054 /* RuntimeErrorCode.FORM_ARRAY_NAME_MISSING_PARENT */, `formArrayName must be used with a parent formGroup directive.  You'll want to add a formGroup\n      directive and pass it an existing FormGroup instance (you can create one in your class).\n\n      Example:\n\n      ${formArrayNameExample}`);\n}\nconst disabledAttrWarning = `\n  It looks like you're using the disabled attribute with a reactive form directive. If you set disabled to true\n  when you set up this control in your component class, the disabled attribute will actually be set in the DOM for\n  you. We recommend using this approach to avoid 'changed after checked' errors.\n\n  Example:\n  // Specify the \\`disabled\\` property at control creation time:\n  form = new FormGroup({\n    first: new FormControl({value: 'Nancy', disabled: true}, Validators.required),\n    last: new FormControl('Drew', Validators.required)\n  });\n\n  // Controls can also be enabled/disabled after creation:\n  form.get('first')?.enable();\n  form.get('last')?.disable();\n`;\nconst asyncValidatorsDroppedWithOptsWarning = `\n  It looks like you're constructing using a FormControl with both an options argument and an\n  async validators argument. Mixing these arguments will cause your async validators to be dropped.\n  You should either put all your validators in the options object, or in separate validators\n  arguments. For example:\n\n  // Using validators arguments\n  fc = new FormControl(42, Validators.required, myAsyncValidator);\n\n  // Using AbstractControlOptions\n  fc = new FormControl(42, {validators: Validators.required, asyncValidators: myAV});\n\n  // Do NOT mix them: async validators will be dropped!\n  fc = new FormControl(42, {validators: Validators.required}, /* Oops! */ myAsyncValidator);\n`;\nfunction ngModelWarning(directiveName) {\n    return `\n  It looks like you're using ngModel on the same form field as ${directiveName}.\n  Support for using the ngModel input property and ngModelChange event with\n  reactive form directives has been deprecated in Angular v6 and will be removed\n  in a future version of Angular.\n\n  For more information on this, see our API docs here:\n  https://angular.io/api/forms/${directiveName === 'formControl' ? 'FormControlDirective' : 'FormControlName'}#use-with-ngmodel\n  `;\n}\nfunction describeKey(isFormGroup, key) {\n    return isFormGroup ? `with name: '${key}'` : `at index: ${key}`;\n}\nfunction noControlsError(isFormGroup) {\n    return `\n    There are no form controls registered with this ${isFormGroup ? 'group' : 'array'} yet. If you're using ngModel,\n    you may want to check next tick (e.g. use setTimeout).\n  `;\n}\nfunction missingControlError(isFormGroup, key) {\n    return `Cannot find form control ${describeKey(isFormGroup, key)}`;\n}\nfunction missingControlValueError(isFormGroup, key) {\n    return `Must supply a value for form control ${describeKey(isFormGroup, key)}`;\n}\n\n/**\n * Reports that a control is valid, meaning that no errors exist in the input value.\n *\n * @see {@link status}\n */\nconst VALID = 'VALID';\n/**\n * Reports that a control is invalid, meaning that an error exists in the input value.\n *\n * @see {@link status}\n */\nconst INVALID = 'INVALID';\n/**\n * Reports that a control is pending, meaning that async validation is occurring and\n * errors are not yet available for the input value.\n *\n * @see {@link markAsPending}\n * @see {@link status}\n */\nconst PENDING = 'PENDING';\n/**\n * Reports that a control is disabled, meaning that the control is exempt from ancestor\n * calculations of validity or value.\n *\n * @see {@link markAsDisabled}\n * @see {@link status}\n */\nconst DISABLED = 'DISABLED';\n/**\n * Base class for every event sent by `AbstractControl.events()`\n *\n * @publicApi\n */\nclass ControlEvent {\n}\n/**\n * Event fired when the value of a control changes.\n *\n * @publicApi\n */\nclass ValueChangeEvent extends ControlEvent {\n    value;\n    source;\n    constructor(value, source) {\n        super();\n        this.value = value;\n        this.source = source;\n    }\n}\n/**\n * Event fired when the control's pristine state changes (pristine <=> dirty).\n *\n * @publicApi */\nclass PristineChangeEvent extends ControlEvent {\n    pristine;\n    source;\n    constructor(pristine, source) {\n        super();\n        this.pristine = pristine;\n        this.source = source;\n    }\n}\n/**\n * Event fired when the control's touched status changes (touched <=> untouched).\n *\n * @publicApi\n */\nclass TouchedChangeEvent extends ControlEvent {\n    touched;\n    source;\n    constructor(touched, source) {\n        super();\n        this.touched = touched;\n        this.source = source;\n    }\n}\n/**\n * Event fired when the control's status changes.\n *\n * @publicApi\n */\nclass StatusChangeEvent extends ControlEvent {\n    status;\n    source;\n    constructor(status, source) {\n        super();\n        this.status = status;\n        this.source = source;\n    }\n}\n/**\n * Event fired when a form is submitted\n *\n * @publicApi\n */\nclass FormSubmittedEvent extends ControlEvent {\n    source;\n    constructor(source) {\n        super();\n        this.source = source;\n    }\n}\n/**\n * Event fired when a form is reset.\n *\n * @publicApi\n */\nclass FormResetEvent extends ControlEvent {\n    source;\n    constructor(source) {\n        super();\n        this.source = source;\n    }\n}\n/**\n * Gets validators from either an options object or given validators.\n */\nfunction pickValidators(validatorOrOpts) {\n    return (isOptionsObj(validatorOrOpts) ? validatorOrOpts.validators : validatorOrOpts) || null;\n}\n/**\n * Creates validator function by combining provided validators.\n */\nfunction coerceToValidator(validator) {\n    return Array.isArray(validator) ? composeValidators(validator) : validator || null;\n}\n/**\n * Gets async validators from either an options object or given validators.\n */\nfunction pickAsyncValidators(asyncValidator, validatorOrOpts) {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        if (isOptionsObj(validatorOrOpts) && asyncValidator) {\n            console.warn(asyncValidatorsDroppedWithOptsWarning);\n        }\n    }\n    return (isOptionsObj(validatorOrOpts) ? validatorOrOpts.asyncValidators : asyncValidator) || null;\n}\n/**\n * Creates async validator function by combining provided async validators.\n */\nfunction coerceToAsyncValidator(asyncValidator) {\n    return Array.isArray(asyncValidator)\n        ? composeAsyncValidators(asyncValidator)\n        : asyncValidator || null;\n}\nfunction isOptionsObj(validatorOrOpts) {\n    return (validatorOrOpts != null &&\n        !Array.isArray(validatorOrOpts) &&\n        typeof validatorOrOpts === 'object');\n}\nfunction assertControlPresent(parent, isGroup, key) {\n    const controls = parent.controls;\n    const collection = isGroup ? Object.keys(controls) : controls;\n    if (!collection.length) {\n        throw new _RuntimeError(1000 /* RuntimeErrorCode.NO_CONTROLS */, typeof ngDevMode === 'undefined' || ngDevMode ? noControlsError(isGroup) : '');\n    }\n    if (!controls[key]) {\n        throw new _RuntimeError(1001 /* RuntimeErrorCode.MISSING_CONTROL */, typeof ngDevMode === 'undefined' || ngDevMode ? missingControlError(isGroup, key) : '');\n    }\n}\nfunction assertAllValuesPresent(control, isGroup, value) {\n    control._forEachChild((_, key) => {\n        if (value[key] === undefined) {\n            throw new _RuntimeError(1002 /* RuntimeErrorCode.MISSING_CONTROL_VALUE */, typeof ngDevMode === 'undefined' || ngDevMode ? missingControlValueError(isGroup, key) : '');\n        }\n    });\n}\n/**\n * This is the base class for `FormControl`, `FormGroup`, and `FormArray`.\n *\n * It provides some of the shared behavior that all controls and groups of controls have, like\n * running validators, calculating status, and resetting state. It also defines the properties\n * that are shared between all sub-classes, like `value`, `valid`, and `dirty`. It shouldn't be\n * instantiated directly.\n *\n * The first type parameter TValue represents the value type of the control (`control.value`).\n * The optional type parameter TRawValue  represents the raw value type (`control.getRawValue()`).\n *\n * @see [Forms Guide](guide/forms)\n * @see [Reactive Forms Guide](guide/forms/reactive-forms)\n * @see [Dynamic Forms Guide](guide/forms/dynamic-forms)\n *\n * @publicApi\n */\nclass AbstractControl {\n    /** @internal */\n    _pendingDirty = false;\n    /**\n     * Indicates that a control has its own pending asynchronous validation in progress.\n     * It also stores if the control should emit events when the validation status changes.\n     *\n     * @internal\n     */\n    _hasOwnPendingAsyncValidator = null;\n    /** @internal */\n    _pendingTouched = false;\n    /** @internal */\n    _onCollectionChange = () => { };\n    /** @internal */\n    _updateOn;\n    _parent = null;\n    _asyncValidationSubscription;\n    /**\n     * Contains the result of merging synchronous validators into a single validator function\n     * (combined using `Validators.compose`).\n     *\n     * @internal\n     */\n    _composedValidatorFn;\n    /**\n     * Contains the result of merging asynchronous validators into a single validator function\n     * (combined using `Validators.composeAsync`).\n     *\n     * @internal\n     */\n    _composedAsyncValidatorFn;\n    /**\n     * Synchronous validators as they were provided:\n     *  - in `AbstractControl` constructor\n     *  - as an argument while calling `setValidators` function\n     *  - while calling the setter on the `validator` field (e.g. `control.validator = validatorFn`)\n     *\n     * @internal\n     */\n    _rawValidators;\n    /**\n     * Asynchronous validators as they were provided:\n     *  - in `AbstractControl` constructor\n     *  - as an argument while calling `setAsyncValidators` function\n     *  - while calling the setter on the `asyncValidator` field (e.g. `control.asyncValidator =\n     * asyncValidatorFn`)\n     *\n     * @internal\n     */\n    _rawAsyncValidators;\n    /**\n     * The current value of the control.\n     *\n     * * For a `FormControl`, the current value.\n     * * For an enabled `FormGroup`, the values of enabled controls as an object\n     * with a key-value pair for each member of the group.\n     * * For a disabled `FormGroup`, the values of all controls as an object\n     * with a key-value pair for each member of the group.\n     * * For a `FormArray`, the values of enabled controls as an array.\n     *\n     */\n    value;\n    /**\n     * Initialize the AbstractControl instance.\n     *\n     * @param validators The function or array of functions that is used to determine the validity of\n     *     this control synchronously.\n     * @param asyncValidators The function or array of functions that is used to determine validity of\n     *     this control asynchronously.\n     */\n    constructor(validators, asyncValidators) {\n        this._assignValidators(validators);\n        this._assignAsyncValidators(asyncValidators);\n    }\n    /**\n     * Returns the function that is used to determine the validity of this control synchronously.\n     * If multiple validators have been added, this will be a single composed function.\n     * See `Validators.compose()` for additional information.\n     */\n    get validator() {\n        return this._composedValidatorFn;\n    }\n    set validator(validatorFn) {\n        this._rawValidators = this._composedValidatorFn = validatorFn;\n    }\n    /**\n     * Returns the function that is used to determine the validity of this control asynchronously.\n     * If multiple validators have been added, this will be a single composed function.\n     * See `Validators.compose()` for additional information.\n     */\n    get asyncValidator() {\n        return this._composedAsyncValidatorFn;\n    }\n    set asyncValidator(asyncValidatorFn) {\n        this._rawAsyncValidators = this._composedAsyncValidatorFn = asyncValidatorFn;\n    }\n    /**\n     * The parent control.\n     */\n    get parent() {\n        return this._parent;\n    }\n    /**\n     * The validation status of the control.\n     *\n     * @see {@link FormControlStatus}\n     *\n     * These status values are mutually exclusive, so a control cannot be\n     * both valid AND invalid or invalid AND disabled.\n     */\n    get status() {\n        return untracked(this.statusReactive);\n    }\n    set status(v) {\n        untracked(() => this.statusReactive.set(v));\n    }\n    /** @internal */\n    _status = computed(() => this.statusReactive(), ...(ngDevMode ? [{ debugName: \"_status\" }] : []));\n    statusReactive = signal(undefined, ...(ngDevMode ? [{ debugName: \"statusReactive\" }] : []));\n    /**\n     * A control is `valid` when its `status` is `VALID`.\n     *\n     * @see {@link AbstractControl.status}\n     *\n     * @returns True if the control has passed all of its validation tests,\n     * false otherwise.\n     */\n    get valid() {\n        return this.status === VALID;\n    }\n    /**\n     * A control is `invalid` when its `status` is `INVALID`.\n     *\n     * @see {@link AbstractControl.status}\n     *\n     * @returns True if this control has failed one or more of its validation checks,\n     * false otherwise.\n     */\n    get invalid() {\n        return this.status === INVALID;\n    }\n    /**\n     * A control is `pending` when its `status` is `PENDING`.\n     *\n     * @see {@link AbstractControl.status}\n     *\n     * @returns True if this control is in the process of conducting a validation check,\n     * false otherwise.\n     */\n    get pending() {\n        return this.status == PENDING;\n    }\n    /**\n     * A control is `disabled` when its `status` is `DISABLED`.\n     *\n     * Disabled controls are exempt from validation checks and\n     * are not included in the aggregate value of their ancestor\n     * controls.\n     *\n     * @see {@link AbstractControl.status}\n     *\n     * @returns True if the control is disabled, false otherwise.\n     */\n    get disabled() {\n        return this.status === DISABLED;\n    }\n    /**\n     * A control is `enabled` as long as its `status` is not `DISABLED`.\n     *\n     * @returns True if the control has any status other than 'DISABLED',\n     * false if the status is 'DISABLED'.\n     *\n     * @see {@link AbstractControl.status}\n     *\n     */\n    get enabled() {\n        return this.status !== DISABLED;\n    }\n    /**\n     * An object containing any errors generated by failing validation,\n     * or null if there are no errors.\n     */\n    errors;\n    /**\n     * A control is `pristine` if the user has not yet changed\n     * the value in the UI.\n     *\n     * @returns True if the user has not yet changed the value in the UI; compare `dirty`.\n     * Programmatic changes to a control's value do not mark it dirty.\n     */\n    get pristine() {\n        return untracked(this.pristineReactive);\n    }\n    set pristine(v) {\n        untracked(() => this.pristineReactive.set(v));\n    }\n    /** @internal */\n    _pristine = computed(() => this.pristineReactive(), ...(ngDevMode ? [{ debugName: \"_pristine\" }] : []));\n    pristineReactive = signal(true, ...(ngDevMode ? [{ debugName: \"pristineReactive\" }] : []));\n    /**\n     * A control is `dirty` if the user has changed the value\n     * in the UI.\n     *\n     * @returns True if the user has changed the value of this control in the UI; compare `pristine`.\n     * Programmatic changes to a control's value do not mark it dirty.\n     */\n    get dirty() {\n        return !this.pristine;\n    }\n    /**\n     * True if the control is marked as `touched`.\n     *\n     * A control is marked `touched` once the user has triggered\n     * a `blur` event on it.\n     */\n    get touched() {\n        return untracked(this.touchedReactive);\n    }\n    set touched(v) {\n        untracked(() => this.touchedReactive.set(v));\n    }\n    /** @internal */\n    _touched = computed(() => this.touchedReactive(), ...(ngDevMode ? [{ debugName: \"_touched\" }] : []));\n    touchedReactive = signal(false, ...(ngDevMode ? [{ debugName: \"touchedReactive\" }] : []));\n    /**\n     * True if the control has not been marked as touched\n     *\n     * A control is `untouched` if the user has not yet triggered\n     * a `blur` event on it.\n     */\n    get untouched() {\n        return !this.touched;\n    }\n    /**\n     * Exposed as observable, see below.\n     *\n     * @internal\n     */\n    _events = new Subject();\n    /**\n     * A multicasting observable that emits an event every time the state of the control changes.\n     * It emits for value, status, pristine or touched changes.\n     *\n     * **Note**: On value change, the emit happens right after a value of this control is updated. The\n     * value of a parent control (for example if this FormControl is a part of a FormGroup) is updated\n     * later, so accessing a value of a parent control (using the `value` property) from the callback\n     * of this event might result in getting a value that has not been updated yet. Subscribe to the\n     * `events` of the parent control instead.\n     * For other event types, the events are emitted after the parent control has been updated.\n     *\n     */\n    events = this._events.asObservable();\n    /**\n     * A multicasting observable that emits an event every time the value of the control changes, in\n     * the UI or programmatically. It also emits an event each time you call enable() or disable()\n     * without passing along {emitEvent: false} as a function argument.\n     *\n     * **Note**: the emit happens right after a value of this control is updated. The value of a\n     * parent control (for example if this FormControl is a part of a FormGroup) is updated later, so\n     * accessing a value of a parent control (using the `value` property) from the callback of this\n     * event might result in getting a value that has not been updated yet. Subscribe to the\n     * `valueChanges` event of the parent control instead.\n     */\n    valueChanges;\n    /**\n     * A multicasting observable that emits an event every time the validation `status` of the control\n     * recalculates.\n     *\n     * @see {@link FormControlStatus}\n     * @see {@link AbstractControl.status}\n     */\n    statusChanges;\n    /**\n     * Reports the update strategy of the `AbstractControl` (meaning\n     * the event on which the control updates itself).\n     * Possible values: `'change'` | `'blur'` | `'submit'`\n     * Default value: `'change'`\n     */\n    get updateOn() {\n        return this._updateOn ? this._updateOn : this.parent ? this.parent.updateOn : 'change';\n    }\n    /**\n     * Sets the synchronous validators that are active on this control.  Calling\n     * this overwrites any existing synchronous validators.\n     *\n     * When you add or remove a validator at run time, you must call\n     * `updateValueAndValidity()` for the new validation to take effect.\n     *\n     * If you want to add a new validator without affecting existing ones, consider\n     * using `addValidators()` method instead.\n     */\n    setValidators(validators) {\n        this._assignValidators(validators);\n    }\n    /**\n     * Sets the asynchronous validators that are active on this control. Calling this\n     * overwrites any existing asynchronous validators.\n     *\n     * When you add or remove a validator at run time, you must call\n     * `updateValueAndValidity()` for the new validation to take effect.\n     *\n     * If you want to add a new validator without affecting existing ones, consider\n     * using `addAsyncValidators()` method instead.\n     */\n    setAsyncValidators(validators) {\n        this._assignAsyncValidators(validators);\n    }\n    /**\n     * Add a synchronous validator or validators to this control, without affecting other validators.\n     *\n     * When you add or remove a validator at run time, you must call\n     * `updateValueAndValidity()` for the new validation to take effect.\n     *\n     * Adding a validator that already exists will have no effect. If duplicate validator functions\n     * are present in the `validators` array, only the first instance would be added to a form\n     * control.\n     *\n     * @param validators The new validator function or functions to add to this control.\n     */\n    addValidators(validators) {\n        this.setValidators(addValidators(validators, this._rawValidators));\n    }\n    /**\n     * Add an asynchronous validator or validators to this control, without affecting other\n     * validators.\n     *\n     * When you add or remove a validator at run time, you must call\n     * `updateValueAndValidity()` for the new validation to take effect.\n     *\n     * Adding a validator that already exists will have no effect.\n     *\n     * @param validators The new asynchronous validator function or functions to add to this control.\n     */\n    addAsyncValidators(validators) {\n        this.setAsyncValidators(addValidators(validators, this._rawAsyncValidators));\n    }\n    /**\n     * Remove a synchronous validator from this control, without affecting other validators.\n     * Validators are compared by function reference; you must pass a reference to the exact same\n     * validator function as the one that was originally set. If a provided validator is not found,\n     * it is ignored.\n     *\n     * @usageNotes\n     *\n     * ### Reference to a ValidatorFn\n     *\n     * ```\n     * // Reference to the RequiredValidator\n     * const ctrl = new FormControl<string | null>('', Validators.required);\n     * ctrl.removeValidators(Validators.required);\n     *\n     * // Reference to anonymous function inside MinValidator\n     * const minValidator = Validators.min(3);\n     * const ctrl = new FormControl<string | null>('', minValidator);\n     * expect(ctrl.hasValidator(minValidator)).toEqual(true)\n     * expect(ctrl.hasValidator(Validators.min(3))).toEqual(false)\n     *\n     * ctrl.removeValidators(minValidator);\n     * ```\n     *\n     * When you add or remove a validator at run time, you must call\n     * `updateValueAndValidity()` for the new validation to take effect.\n     *\n     * @param validators The validator or validators to remove.\n     */\n    removeValidators(validators) {\n        this.setValidators(removeValidators(validators, this._rawValidators));\n    }\n    /**\n     * Remove an asynchronous validator from this control, without affecting other validators.\n     * Validators are compared by function reference; you must pass a reference to the exact same\n     * validator function as the one that was originally set. If a provided validator is not found, it\n     * is ignored.\n     *\n     * When you add or remove a validator at run time, you must call\n     * `updateValueAndValidity()` for the new validation to take effect.\n     *\n     * @param validators The asynchronous validator or validators to remove.\n     */\n    removeAsyncValidators(validators) {\n        this.setAsyncValidators(removeValidators(validators, this._rawAsyncValidators));\n    }\n    /**\n     * Check whether a synchronous validator function is present on this control. The provided\n     * validator must be a reference to the exact same function that was provided.\n     *\n     * @usageNotes\n     *\n     * ### Reference to a ValidatorFn\n     *\n     * ```\n     * // Reference to the RequiredValidator\n     * const ctrl = new FormControl<number | null>(0, Validators.required);\n     * expect(ctrl.hasValidator(Validators.required)).toEqual(true)\n     *\n     * // Reference to anonymous function inside MinValidator\n     * const minValidator = Validators.min(3);\n     * const ctrl = new FormControl<number | null>(0, minValidator);\n     * expect(ctrl.hasValidator(minValidator)).toEqual(true)\n     * expect(ctrl.hasValidator(Validators.min(3))).toEqual(false)\n     * ```\n     *\n     * @param validator The validator to check for presence. Compared by function reference.\n     * @returns Whether the provided validator was found on this control.\n     */\n    hasValidator(validator) {\n        return hasValidator(this._rawValidators, validator);\n    }\n    /**\n     * Check whether an asynchronous validator function is present on this control. The provided\n     * validator must be a reference to the exact same function that was provided.\n     *\n     * @param validator The asynchronous validator to check for presence. Compared by function\n     *     reference.\n     * @returns Whether the provided asynchronous validator was found on this control.\n     */\n    hasAsyncValidator(validator) {\n        return hasValidator(this._rawAsyncValidators, validator);\n    }\n    /**\n     * Empties out the synchronous validator list.\n     *\n     * When you add or remove a validator at run time, you must call\n     * `updateValueAndValidity()` for the new validation to take effect.\n     *\n     */\n    clearValidators() {\n        this.validator = null;\n    }\n    /**\n     * Empties out the async validator list.\n     *\n     * When you add or remove a validator at run time, you must call\n     * `updateValueAndValidity()` for the new validation to take effect.\n     *\n     */\n    clearAsyncValidators() {\n        this.asyncValidator = null;\n    }\n    markAsTouched(opts = {}) {\n        const changed = this.touched === false;\n        this.touched = true;\n        const sourceControl = opts.sourceControl ?? this;\n        if (this._parent && !opts.onlySelf) {\n            this._parent.markAsTouched({ ...opts, sourceControl });\n        }\n        if (changed && opts.emitEvent !== false) {\n            this._events.next(new TouchedChangeEvent(true, sourceControl));\n        }\n    }\n    /**\n     * Marks the control and all its descendant controls as `dirty`.\n     * @see {@link markAsDirty()}\n     *\n     * @param opts Configuration options that determine how the control propagates changes\n     * and emits events after marking is applied.\n     * * `emitEvent`: When true or not supplied (the default), the `events`\n     * observable emits a `PristineChangeEvent` with the `pristine` property being `false`.\n     * When false, no events are emitted.\n     */\n    markAllAsDirty(opts = {}) {\n        this.markAsDirty({ onlySelf: true, emitEvent: opts.emitEvent, sourceControl: this });\n        this._forEachChild((control) => control.markAllAsDirty(opts));\n    }\n    /**\n     * Marks the control and all its descendant controls as `touched`.\n     * @see {@link markAsTouched()}\n     *\n     * @param opts Configuration options that determine how the control propagates changes\n     * and emits events after marking is applied.\n     * * `emitEvent`: When true or not supplied (the default), the `events`\n     * observable emits a `TouchedChangeEvent` with the `touched` property being `true`.\n     * When false, no events are emitted.\n     */\n    markAllAsTouched(opts = {}) {\n        this.markAsTouched({ onlySelf: true, emitEvent: opts.emitEvent, sourceControl: this });\n        this._forEachChild((control) => control.markAllAsTouched(opts));\n    }\n    markAsUntouched(opts = {}) {\n        const changed = this.touched === true;\n        this.touched = false;\n        this._pendingTouched = false;\n        const sourceControl = opts.sourceControl ?? this;\n        this._forEachChild((control) => {\n            control.markAsUntouched({ onlySelf: true, emitEvent: opts.emitEvent, sourceControl });\n        });\n        if (this._parent && !opts.onlySelf) {\n            this._parent._updateTouched(opts, sourceControl);\n        }\n        if (changed && opts.emitEvent !== false) {\n            this._events.next(new TouchedChangeEvent(false, sourceControl));\n        }\n    }\n    markAsDirty(opts = {}) {\n        const changed = this.pristine === true;\n        this.pristine = false;\n        const sourceControl = opts.sourceControl ?? this;\n        if (this._parent && !opts.onlySelf) {\n            this._parent.markAsDirty({ ...opts, sourceControl });\n        }\n        if (changed && opts.emitEvent !== false) {\n            this._events.next(new PristineChangeEvent(false, sourceControl));\n        }\n    }\n    markAsPristine(opts = {}) {\n        const changed = this.pristine === false;\n        this.pristine = true;\n        this._pendingDirty = false;\n        const sourceControl = opts.sourceControl ?? this;\n        this._forEachChild((control) => {\n            /** We don't propagate the source control downwards */\n            control.markAsPristine({ onlySelf: true, emitEvent: opts.emitEvent });\n        });\n        if (this._parent && !opts.onlySelf) {\n            this._parent._updatePristine(opts, sourceControl);\n        }\n        if (changed && opts.emitEvent !== false) {\n            this._events.next(new PristineChangeEvent(true, sourceControl));\n        }\n    }\n    markAsPending(opts = {}) {\n        this.status = PENDING;\n        const sourceControl = opts.sourceControl ?? this;\n        if (opts.emitEvent !== false) {\n            this._events.next(new StatusChangeEvent(this.status, sourceControl));\n            this.statusChanges.emit(this.status);\n        }\n        if (this._parent && !opts.onlySelf) {\n            this._parent.markAsPending({ ...opts, sourceControl });\n        }\n    }\n    disable(opts = {}) {\n        // If parent has been marked artificially dirty we don't want to re-calculate the\n        // parent's dirtiness based on the children.\n        const skipPristineCheck = this._parentMarkedDirty(opts.onlySelf);\n        this.status = DISABLED;\n        this.errors = null;\n        this._forEachChild((control) => {\n            /** We don't propagate the source control downwards */\n            control.disable({ ...opts, onlySelf: true });\n        });\n        this._updateValue();\n        const sourceControl = opts.sourceControl ?? this;\n        if (opts.emitEvent !== false) {\n            this._events.next(new ValueChangeEvent(this.value, sourceControl));\n            this._events.next(new StatusChangeEvent(this.status, sourceControl));\n            this.valueChanges.emit(this.value);\n            this.statusChanges.emit(this.status);\n        }\n        this._updateAncestors({ ...opts, skipPristineCheck }, this);\n        this._onDisabledChange.forEach((changeFn) => changeFn(true));\n    }\n    /**\n     * Enables the control. This means the control is included in validation checks and\n     * the aggregate value of its parent. Its status recalculates based on its value and\n     * its validators.\n     *\n     * By default, if the control has children, all children are enabled.\n     *\n     * @see {@link AbstractControl.status}\n     *\n     * @param opts Configure options that control how the control propagates changes and\n     * emits events when marked as untouched\n     * * `onlySelf`: When true, mark only this control. When false or not supplied,\n     * marks all direct ancestors. Default is false.\n     * * `emitEvent`: When true or not supplied (the default), the `statusChanges`,\n     * `valueChanges` and `events`\n     * observables emit events with the latest status and value when the control is enabled.\n     * When false, no events are emitted.\n     */\n    enable(opts = {}) {\n        // If parent has been marked artificially dirty we don't want to re-calculate the\n        // parent's dirtiness based on the children.\n        const skipPristineCheck = this._parentMarkedDirty(opts.onlySelf);\n        this.status = VALID;\n        this._forEachChild((control) => {\n            control.enable({ ...opts, onlySelf: true });\n        });\n        this.updateValueAndValidity({ onlySelf: true, emitEvent: opts.emitEvent });\n        this._updateAncestors({ ...opts, skipPristineCheck }, this);\n        this._onDisabledChange.forEach((changeFn) => changeFn(false));\n    }\n    _updateAncestors(opts, sourceControl) {\n        if (this._parent && !opts.onlySelf) {\n            this._parent.updateValueAndValidity(opts);\n            if (!opts.skipPristineCheck) {\n                this._parent._updatePristine({}, sourceControl);\n            }\n            this._parent._updateTouched({}, sourceControl);\n        }\n    }\n    /**\n     * Sets the parent of the control\n     *\n     * @param parent The new parent.\n     */\n    setParent(parent) {\n        this._parent = parent;\n    }\n    /**\n     * The raw value of this control. For most control implementations, the raw value will include\n     * disabled children.\n     */\n    getRawValue() {\n        return this.value;\n    }\n    updateValueAndValidity(opts = {}) {\n        this._setInitialStatus();\n        this._updateValue();\n        if (this.enabled) {\n            const shouldHaveEmitted = this._cancelExistingSubscription();\n            this.errors = this._runValidator();\n            this.status = this._calculateStatus();\n            if (this.status === VALID || this.status === PENDING) {\n                // If the canceled subscription should have emitted\n                // we make sure the async validator emits the status change on completion\n                this._runAsyncValidator(shouldHaveEmitted, opts.emitEvent);\n            }\n        }\n        const sourceControl = opts.sourceControl ?? this;\n        if (opts.emitEvent !== false) {\n            this._events.next(new ValueChangeEvent(this.value, sourceControl));\n            this._events.next(new StatusChangeEvent(this.status, sourceControl));\n            this.valueChanges.emit(this.value);\n            this.statusChanges.emit(this.status);\n        }\n        if (this._parent && !opts.onlySelf) {\n            this._parent.updateValueAndValidity({ ...opts, sourceControl });\n        }\n    }\n    /** @internal */\n    _updateTreeValidity(opts = { emitEvent: true }) {\n        this._forEachChild((ctrl) => ctrl._updateTreeValidity(opts));\n        this.updateValueAndValidity({ onlySelf: true, emitEvent: opts.emitEvent });\n    }\n    _setInitialStatus() {\n        this.status = this._allControlsDisabled() ? DISABLED : VALID;\n    }\n    _runValidator() {\n        return this.validator ? this.validator(this) : null;\n    }\n    _runAsyncValidator(shouldHaveEmitted, emitEvent) {\n        if (this.asyncValidator) {\n            this.status = PENDING;\n            this._hasOwnPendingAsyncValidator = {\n                emitEvent: emitEvent !== false,\n                shouldHaveEmitted: shouldHaveEmitted !== false,\n            };\n            const obs = toObservable(this.asyncValidator(this));\n            this._asyncValidationSubscription = obs.subscribe((errors) => {\n                this._hasOwnPendingAsyncValidator = null;\n                // This will trigger the recalculation of the validation status, which depends on\n                // the state of the asynchronous validation (whether it is in progress or not). So, it is\n                // necessary that we have updated the `_hasOwnPendingAsyncValidator` boolean flag first.\n                this.setErrors(errors, { emitEvent, shouldHaveEmitted });\n            });\n        }\n    }\n    _cancelExistingSubscription() {\n        if (this._asyncValidationSubscription) {\n            this._asyncValidationSubscription.unsubscribe();\n            // we're cancelling the validator subscribtion, we keep if it should have emitted\n            // because we want to emit eventually if it was required at least once.\n            const shouldHaveEmitted = (this._hasOwnPendingAsyncValidator?.emitEvent ||\n                this._hasOwnPendingAsyncValidator?.shouldHaveEmitted) ??\n                false;\n            this._hasOwnPendingAsyncValidator = null;\n            return shouldHaveEmitted;\n        }\n        return false;\n    }\n    setErrors(errors, opts = {}) {\n        this.errors = errors;\n        this._updateControlsErrors(opts.emitEvent !== false, this, opts.shouldHaveEmitted);\n    }\n    /**\n     * Retrieves a child control given the control's name or path.\n     *\n     * @param path A dot-delimited string or array of string/number values that define the path to the\n     * control. If a string is provided, passing it as a string literal will result in improved type\n     * information. Likewise, if an array is provided, passing it `as const` will cause improved type\n     * information to be available.\n     *\n     * @usageNotes\n     * ### Retrieve a nested control\n     *\n     * For example, to get a `name` control nested within a `person` sub-group:\n     *\n     * * `this.form.get('person.name');`\n     *\n     * -OR-\n     *\n     * * `this.form.get(['person', 'name'] as const);` // `as const` gives improved typings\n     *\n     * ### Retrieve a control in a FormArray\n     *\n     * When accessing an element inside a FormArray, you can use an element index.\n     * For example, to get a `price` control from the first element in an `items` array you can use:\n     *\n     * * `this.form.get('items.0.price');`\n     *\n     * -OR-\n     *\n     * * `this.form.get(['items', 0, 'price']);`\n     */\n    get(path) {\n        let currPath = path;\n        if (currPath == null)\n            return null;\n        if (!Array.isArray(currPath))\n            currPath = currPath.split('.');\n        if (currPath.length === 0)\n            return null;\n        return currPath.reduce((control, name) => control && control._find(name), this);\n    }\n    /**\n     * @description\n     * Reports error data for the control with the given path.\n     *\n     * @param errorCode The code of the error to check\n     * @param path A list of control names that designates how to move from the current control\n     * to the control that should be queried for errors.\n     *\n     * @usageNotes\n     * For example, for the following `FormGroup`:\n     *\n     * ```ts\n     * form = new FormGroup({\n     *   address: new FormGroup({ street: new FormControl() })\n     * });\n     * ```\n     *\n     * The path to the 'street' control from the root form would be 'address' -> 'street'.\n     *\n     * It can be provided to this method in one of two formats:\n     *\n     * 1. An array of string control names, e.g. `['address', 'street']`\n     * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n     *\n     * @returns error data for that particular error. If the control or error is not present,\n     * null is returned.\n     */\n    getError(errorCode, path) {\n        const control = path ? this.get(path) : this;\n        return control && control.errors ? control.errors[errorCode] : null;\n    }\n    /**\n     * @description\n     * Reports whether the control with the given path has the error specified.\n     *\n     * @param errorCode The code of the error to check\n     * @param path A list of control names that designates how to move from the current control\n     * to the control that should be queried for errors.\n     *\n     * @usageNotes\n     * For example, for the following `FormGroup`:\n     *\n     * ```ts\n     * form = new FormGroup({\n     *   address: new FormGroup({ street: new FormControl() })\n     * });\n     * ```\n     *\n     * The path to the 'street' control from the root form would be 'address' -> 'street'.\n     *\n     * It can be provided to this method in one of two formats:\n     *\n     * 1. An array of string control names, e.g. `['address', 'street']`\n     * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n     *\n     * If no path is given, this method checks for the error on the current control.\n     *\n     * @returns whether the given error is present in the control at the given path.\n     *\n     * If the control is not present, false is returned.\n     */\n    hasError(errorCode, path) {\n        return !!this.getError(errorCode, path);\n    }\n    /**\n     * Retrieves the top-level ancestor of this control.\n     */\n    get root() {\n        let x = this;\n        while (x._parent) {\n            x = x._parent;\n        }\n        return x;\n    }\n    /** @internal */\n    _updateControlsErrors(emitEvent, changedControl, shouldHaveEmitted) {\n        this.status = this._calculateStatus();\n        if (emitEvent) {\n            this.statusChanges.emit(this.status);\n        }\n        // The Events Observable expose a slight different bevahior than the statusChanges obs\n        // An async validator will still emit a StatusChangeEvent is a previously cancelled\n        // async validator has emitEvent set to true\n        if (emitEvent || shouldHaveEmitted) {\n            this._events.next(new StatusChangeEvent(this.status, changedControl));\n        }\n        if (this._parent) {\n            this._parent._updateControlsErrors(emitEvent, changedControl, shouldHaveEmitted);\n        }\n    }\n    /** @internal */\n    _initObservables() {\n        // TODO: this should be piped from events() but is breaking in G3\n        this.valueChanges = new EventEmitter();\n        this.statusChanges = new EventEmitter();\n    }\n    _calculateStatus() {\n        if (this._allControlsDisabled())\n            return DISABLED;\n        if (this.errors)\n            return INVALID;\n        if (this._hasOwnPendingAsyncValidator || this._anyControlsHaveStatus(PENDING))\n            return PENDING;\n        if (this._anyControlsHaveStatus(INVALID))\n            return INVALID;\n        return VALID;\n    }\n    /** @internal */\n    _anyControlsHaveStatus(status) {\n        return this._anyControls((control) => control.status === status);\n    }\n    /** @internal */\n    _anyControlsDirty() {\n        return this._anyControls((control) => control.dirty);\n    }\n    /** @internal */\n    _anyControlsTouched() {\n        return this._anyControls((control) => control.touched);\n    }\n    /** @internal */\n    _updatePristine(opts, changedControl) {\n        const newPristine = !this._anyControlsDirty();\n        const changed = this.pristine !== newPristine;\n        this.pristine = newPristine;\n        if (this._parent && !opts.onlySelf) {\n            this._parent._updatePristine(opts, changedControl);\n        }\n        if (changed) {\n            this._events.next(new PristineChangeEvent(this.pristine, changedControl));\n        }\n    }\n    /** @internal */\n    _updateTouched(opts = {}, changedControl) {\n        this.touched = this._anyControlsTouched();\n        this._events.next(new TouchedChangeEvent(this.touched, changedControl));\n        if (this._parent && !opts.onlySelf) {\n            this._parent._updateTouched(opts, changedControl);\n        }\n    }\n    /** @internal */\n    _onDisabledChange = [];\n    /** @internal */\n    _registerOnCollectionChange(fn) {\n        this._onCollectionChange = fn;\n    }\n    /** @internal */\n    _setUpdateStrategy(opts) {\n        if (isOptionsObj(opts) && opts.updateOn != null) {\n            this._updateOn = opts.updateOn;\n        }\n    }\n    /**\n     * Check to see if parent has been marked artificially dirty.\n     *\n     * @internal\n     */\n    _parentMarkedDirty(onlySelf) {\n        const parentDirty = this._parent && this._parent.dirty;\n        return !onlySelf && !!parentDirty && !this._parent._anyControlsDirty();\n    }\n    /** @internal */\n    _find(name) {\n        return null;\n    }\n    /**\n     * Internal implementation of the `setValidators` method. Needs to be separated out into a\n     * different method, because it is called in the constructor and it can break cases where\n     * a control is extended.\n     */\n    _assignValidators(validators) {\n        this._rawValidators = Array.isArray(validators) ? validators.slice() : validators;\n        this._composedValidatorFn = coerceToValidator(this._rawValidators);\n    }\n    /**\n     * Internal implementation of the `setAsyncValidators` method. Needs to be separated out into a\n     * different method, because it is called in the constructor and it can break cases where\n     * a control is extended.\n     */\n    _assignAsyncValidators(validators) {\n        this._rawAsyncValidators = Array.isArray(validators) ? validators.slice() : validators;\n        this._composedAsyncValidatorFn = coerceToAsyncValidator(this._rawAsyncValidators);\n    }\n}\n\n/**\n * Tracks the value and validity state of a group of `FormControl` instances.\n *\n * A `FormGroup` aggregates the values of each child `FormControl` into one object,\n * with each control name as the key.  It calculates its status by reducing the status values\n * of its children. For example, if one of the controls in a group is invalid, the entire\n * group becomes invalid.\n *\n * `FormGroup` is one of the four fundamental building blocks used to define forms in Angular,\n * along with `FormControl`, `FormArray`, and `FormRecord`.\n *\n * When instantiating a `FormGroup`, pass in a collection of child controls as the first\n * argument. The key for each child registers the name for the control.\n *\n * `FormGroup` is intended for use cases where the keys are known ahead of time.\n * If you need to dynamically add and remove controls, use {@link FormRecord} instead.\n *\n * `FormGroup` accepts an optional type parameter `TControl`, which is an object type with inner\n * control types as values.\n *\n * @usageNotes\n *\n * ### Create a form group with 2 controls\n *\n * ```ts\n * const form = new FormGroup({\n *   first: new FormControl('Nancy', Validators.minLength(2)),\n *   last: new FormControl('Drew'),\n * });\n *\n * console.log(form.value);   // {first: 'Nancy', last; 'Drew'}\n * console.log(form.status);  // 'VALID'\n * ```\n *\n * ### The type argument, and optional controls\n *\n * `FormGroup` accepts one generic argument, which is an object containing its inner controls.\n * This type will usually be inferred automatically, but you can always specify it explicitly if you\n * wish.\n *\n * If you have controls that are optional (i.e. they can be removed, you can use the `?` in the\n * type):\n *\n * ```ts\n * const form = new FormGroup<{\n *   first: FormControl<string|null>,\n *   middle?: FormControl<string|null>, // Middle name is optional.\n *   last: FormControl<string|null>,\n * }>({\n *   first: new FormControl('Nancy'),\n *   last: new FormControl('Drew'),\n * });\n * ```\n *\n * ### Create a form group with a group-level validator\n *\n * You include group-level validators as the second arg, or group-level async\n * validators as the third arg. These come in handy when you want to perform validation\n * that considers the value of more than one child control.\n *\n * ```ts\n * const form = new FormGroup({\n *   password: new FormControl('', Validators.minLength(2)),\n *   passwordConfirm: new FormControl('', Validators.minLength(2)),\n * }, passwordMatchValidator);\n *\n *\n * function passwordMatchValidator(g: FormGroup) {\n *    return g.get('password').value === g.get('passwordConfirm').value\n *       ? null : {'mismatch': true};\n * }\n * ```\n *\n * Like `FormControl` instances, you choose to pass in\n * validators and async validators as part of an options object.\n *\n * ```ts\n * const form = new FormGroup({\n *   password: new FormControl('')\n *   passwordConfirm: new FormControl('')\n * }, { validators: passwordMatchValidator, asyncValidators: otherValidator });\n * ```\n *\n * ### Set the updateOn property for all controls in a form group\n *\n * The options object is used to set a default value for each child\n * control's `updateOn` property. If you set `updateOn` to `'blur'` at the\n * group level, all child controls default to 'blur', unless the child\n * has explicitly specified a different `updateOn` value.\n *\n * ```ts\n * const c = new FormGroup({\n *   one: new FormControl()\n * }, { updateOn: 'blur' });\n * ```\n *\n * ### Using a FormGroup with optional controls\n *\n * It is possible to have optional controls in a FormGroup. An optional control can be removed later\n * using `removeControl`, and can be omitted when calling `reset`. Optional controls must be\n * declared optional in the group's type.\n *\n * ```ts\n * const c = new FormGroup<{one?: FormControl<string>}>({\n *   one: new FormControl('')\n * });\n * ```\n *\n * Notice that `c.value.one` has type `string|null|undefined`. This is because calling `c.reset({})`\n * without providing the optional key `one` will cause it to become `null`.\n *\n * @publicApi\n */\nclass FormGroup extends AbstractControl {\n    /**\n     * Creates a new `FormGroup` instance.\n     *\n     * @param controls A collection of child controls. The key for each child is the name\n     * under which it is registered.\n     *\n     * @param validatorOrOpts A synchronous validator function, or an array of\n     * such functions, or an `AbstractControlOptions` object that contains validation functions\n     * and a validation trigger.\n     *\n     * @param asyncValidator A single async validator or array of async validator functions\n     *\n     */\n    constructor(controls, validatorOrOpts, asyncValidator) {\n        super(pickValidators(validatorOrOpts), pickAsyncValidators(asyncValidator, validatorOrOpts));\n        (typeof ngDevMode === 'undefined' || ngDevMode) && validateFormGroupControls(controls);\n        this.controls = controls;\n        this._initObservables();\n        this._setUpdateStrategy(validatorOrOpts);\n        this._setUpControls();\n        this.updateValueAndValidity({\n            onlySelf: true,\n            // If `asyncValidator` is present, it will trigger control status change from `PENDING` to\n            // `VALID` or `INVALID`. The status should be broadcasted via the `statusChanges` observable,\n            // so we set `emitEvent` to `true` to allow that during the control creation process.\n            emitEvent: !!this.asyncValidator,\n        });\n    }\n    controls;\n    registerControl(name, control) {\n        if (this.controls[name])\n            return this.controls[name];\n        this.controls[name] = control;\n        control.setParent(this);\n        control._registerOnCollectionChange(this._onCollectionChange);\n        return control;\n    }\n    addControl(name, control, options = {}) {\n        this.registerControl(name, control);\n        this.updateValueAndValidity({ emitEvent: options.emitEvent });\n        this._onCollectionChange();\n    }\n    /**\n     * Remove a control from this group. In a strongly-typed group, required controls cannot be\n     * removed.\n     *\n     * This method also updates the value and validity of the control.\n     *\n     * @param name The control name to remove from the collection\n     * @param options Specifies whether this FormGroup instance should emit events after a\n     *     control is removed.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges` observables emit events with the latest status and value when the control is\n     * removed. When false, no events are emitted.\n     */\n    removeControl(name, options = {}) {\n        if (this.controls[name])\n            this.controls[name]._registerOnCollectionChange(() => { });\n        delete this.controls[name];\n        this.updateValueAndValidity({ emitEvent: options.emitEvent });\n        this._onCollectionChange();\n    }\n    setControl(name, control, options = {}) {\n        if (this.controls[name])\n            this.controls[name]._registerOnCollectionChange(() => { });\n        delete this.controls[name];\n        if (control)\n            this.registerControl(name, control);\n        this.updateValueAndValidity({ emitEvent: options.emitEvent });\n        this._onCollectionChange();\n    }\n    contains(controlName) {\n        return this.controls.hasOwnProperty(controlName) && this.controls[controlName].enabled;\n    }\n    /**\n     * Sets the value of the `FormGroup`. It accepts an object that matches\n     * the structure of the group, with control names as keys.\n     *\n     * @usageNotes\n     * ### Set the complete value for the form group\n     *\n     * ```ts\n     * const form = new FormGroup({\n     *   first: new FormControl(),\n     *   last: new FormControl()\n     * });\n     *\n     * console.log(form.value);   // {first: null, last: null}\n     *\n     * form.setValue({first: 'Nancy', last: 'Drew'});\n     * console.log(form.value);   // {first: 'Nancy', last: 'Drew'}\n     * ```\n     *\n     * @throws When strict checks fail, such as setting the value of a control\n     * that doesn't exist or if you exclude a value of a control that does exist.\n     *\n     * @param value The new value for the control that matches the structure of the group.\n     * @param options Configuration options that determine how the control propagates changes\n     * and emits events after the value changes.\n     * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n     * updateValueAndValidity} method.\n     *\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default is\n     * false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control value is updated.\n     * When false, no events are emitted.\n     */\n    setValue(value, options = {}) {\n        assertAllValuesPresent(this, true, value);\n        Object.keys(value).forEach((name) => {\n            assertControlPresent(this, true, name);\n            this.controls[name].setValue(value[name], {\n                onlySelf: true,\n                emitEvent: options.emitEvent,\n            });\n        });\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * Patches the value of the `FormGroup`. It accepts an object with control\n     * names as keys, and does its best to match the values to the correct controls\n     * in the group.\n     *\n     * It accepts both super-sets and sub-sets of the group without throwing an error.\n     *\n     * @usageNotes\n     * ### Patch the value for a form group\n     *\n     * ```ts\n     * const form = new FormGroup({\n     *    first: new FormControl(),\n     *    last: new FormControl()\n     * });\n     * console.log(form.value);   // {first: null, last: null}\n     *\n     * form.patchValue({first: 'Nancy'});\n     * console.log(form.value);   // {first: 'Nancy', last: null}\n     * ```\n     *\n     * @param value The object that matches the structure of the group.\n     * @param options Configuration options that determine how the control propagates changes and\n     * emits events after the value is patched.\n     * * `onlySelf`: When true, each change only affects this control and not its parent. Default is\n     * true.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges` observables emit events with the latest status and value when the control value\n     * is updated. When false, no events are emitted. The configuration options are passed to\n     * the {@link AbstractControl#updateValueAndValidity updateValueAndValidity} method.\n     */\n    patchValue(value, options = {}) {\n        // Even though the `value` argument type doesn't allow `null` and `undefined` values, the\n        // `patchValue` can be called recursively and inner data structures might have these values, so\n        // we just ignore such cases when a field containing FormGroup instance receives `null` or\n        // `undefined` as a value.\n        if (value == null /* both `null` and `undefined` */)\n            return;\n        Object.keys(value).forEach((name) => {\n            // The compiler cannot see through the uninstantiated conditional type of `this.controls`, so\n            // `as any` is required.\n            const control = this.controls[name];\n            if (control) {\n                control.patchValue(\n                /* Guaranteed to be present, due to the outer forEach. */ value[name], { onlySelf: true, emitEvent: options.emitEvent });\n            }\n        });\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * Resets the `FormGroup`, marks all descendants `pristine` and `untouched` and sets\n     * the value of all descendants to their default values, or null if no defaults were provided.\n     *\n     * You reset to a specific form state by passing in a map of states\n     * that matches the structure of your form, with control names as keys. The state\n     * is a standalone value or a form state object with both a value and a disabled\n     * status.\n     *\n     * @param value Resets the control with an initial value,\n     * or an object that defines the initial value and disabled state.\n     *\n     * @param options Configuration options that determine how the control propagates changes\n     * and emits events when the group is reset.\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default is\n     * false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control is reset.\n     * When false, no events are emitted.\n     * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n     * updateValueAndValidity} method.\n     *\n     * @usageNotes\n     *\n     * ### Reset the form group values\n     *\n     * ```ts\n     * const form = new FormGroup({\n     *   first: new FormControl('first name'),\n     *   last: new FormControl('last name')\n     * });\n     *\n     * console.log(form.value);  // {first: 'first name', last: 'last name'}\n     *\n     * form.reset({ first: 'name', last: 'last name' });\n     *\n     * console.log(form.value);  // {first: 'name', last: 'last name'}\n     * ```\n     *\n     * ### Reset the form group values and disabled status\n     *\n     * ```ts\n     * const form = new FormGroup({\n     *   first: new FormControl('first name'),\n     *   last: new FormControl('last name')\n     * });\n     *\n     * form.reset({\n     *   first: {value: 'name', disabled: true},\n     *   last: 'last'\n     * });\n     *\n     * console.log(form.value);  // {last: 'last'}\n     * console.log(form.get('first').status);  // 'DISABLED'\n     * ```\n     */\n    reset(value = {}, options = {}) {\n        this._forEachChild((control, name) => {\n            control.reset(value ? value[name] : null, {\n                onlySelf: true,\n                emitEvent: options.emitEvent,\n            });\n        });\n        this._updatePristine(options, this);\n        this._updateTouched(options, this);\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * The aggregate value of the `FormGroup`, including any disabled controls.\n     *\n     * Retrieves all values regardless of disabled status.\n     */\n    getRawValue() {\n        return this._reduceChildren({}, (acc, control, name) => {\n            acc[name] = control.getRawValue();\n            return acc;\n        });\n    }\n    /** @internal */\n    _syncPendingControls() {\n        let subtreeUpdated = this._reduceChildren(false, (updated, child) => {\n            return child._syncPendingControls() ? true : updated;\n        });\n        if (subtreeUpdated)\n            this.updateValueAndValidity({ onlySelf: true });\n        return subtreeUpdated;\n    }\n    /** @internal */\n    _forEachChild(cb) {\n        Object.keys(this.controls).forEach((key) => {\n            // The list of controls can change (for ex. controls might be removed) while the loop\n            // is running (as a result of invoking Forms API in `valueChanges` subscription), so we\n            // have to null check before invoking the callback.\n            const control = this.controls[key];\n            control && cb(control, key);\n        });\n    }\n    /** @internal */\n    _setUpControls() {\n        this._forEachChild((control) => {\n            control.setParent(this);\n            control._registerOnCollectionChange(this._onCollectionChange);\n        });\n    }\n    /** @internal */\n    _updateValue() {\n        this.value = this._reduceValue();\n    }\n    /** @internal */\n    _anyControls(condition) {\n        for (const [controlName, control] of Object.entries(this.controls)) {\n            if (this.contains(controlName) && condition(control)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /** @internal */\n    _reduceValue() {\n        let acc = {};\n        return this._reduceChildren(acc, (acc, control, name) => {\n            if (control.enabled || this.disabled) {\n                acc[name] = control.value;\n            }\n            return acc;\n        });\n    }\n    /** @internal */\n    _reduceChildren(initValue, fn) {\n        let res = initValue;\n        this._forEachChild((control, name) => {\n            res = fn(res, control, name);\n        });\n        return res;\n    }\n    /** @internal */\n    _allControlsDisabled() {\n        for (const controlName of Object.keys(this.controls)) {\n            if (this.controls[controlName].enabled) {\n                return false;\n            }\n        }\n        return Object.keys(this.controls).length > 0 || this.disabled;\n    }\n    /** @internal */\n    _find(name) {\n        return this.controls.hasOwnProperty(name)\n            ? this.controls[name]\n            : null;\n    }\n}\n/**\n * Will validate that none of the controls has a key with a dot\n * Throws other wise\n */\nfunction validateFormGroupControls(controls) {\n    const invalidKeys = Object.keys(controls).filter((key) => key.includes('.'));\n    if (invalidKeys.length > 0) {\n        // TODO: make this an error once there are no more uses in G3\n        console.warn(`FormGroup keys cannot include \\`.\\`, please replace the keys for: ${invalidKeys.join(',')}.`);\n    }\n}\nconst UntypedFormGroup = FormGroup;\n/**\n * @description\n * Asserts that the given control is an instance of `FormGroup`\n *\n * @publicApi\n */\nconst isFormGroup = (control) => control instanceof FormGroup;\n/**\n * Tracks the value and validity state of a collection of `FormControl` instances, each of which has\n * the same value type.\n *\n * `FormRecord` is very similar to {@link FormGroup}, except it can be used with a dynamic keys,\n * with controls added and removed as needed.\n *\n * `FormRecord` accepts one generic argument, which describes the type of the controls it contains.\n *\n * @usageNotes\n *\n * ```ts\n * let numbers = new FormRecord({bill: new FormControl('415-123-456')});\n * numbers.addControl('bob', new FormControl('415-234-567'));\n * numbers.removeControl('bill');\n * ```\n *\n * @publicApi\n */\nclass FormRecord extends FormGroup {\n}\n/**\n * @description\n * Asserts that the given control is an instance of `FormRecord`\n *\n * @publicApi\n */\nconst isFormRecord = (control) => control instanceof FormRecord;\n\n/**\n * Token to provide to allow SetDisabledState to always be called when a CVA is added, regardless of\n * whether the control is disabled or enabled.\n *\n * @see {@link FormsModule#withconfig}\n */\nconst CALL_SET_DISABLED_STATE = new InjectionToken(typeof ngDevMode === 'undefined' || ngDevMode ? 'CallSetDisabledState' : '', {\n    providedIn: 'root',\n    factory: () => setDisabledStateDefault,\n});\n/**\n * Whether to use the fixed setDisabledState behavior by default.\n */\nconst setDisabledStateDefault = 'always';\nfunction controlPath(name, parent) {\n    return [...parent.path, name];\n}\n/**\n * Links a Form control and a Form directive by setting up callbacks (such as `onChange`) on both\n * instances. This function is typically invoked when form directive is being initialized.\n *\n * @param control Form control instance that should be linked.\n * @param dir Directive that should be linked with a given control.\n */\nfunction setUpControl(control, dir, callSetDisabledState = setDisabledStateDefault) {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        if (!control)\n            _throwError(dir, 'Cannot find control with');\n        if (!dir.valueAccessor)\n            _throwMissingValueAccessorError(dir);\n    }\n    setUpValidators(control, dir);\n    dir.valueAccessor.writeValue(control.value);\n    // The legacy behavior only calls the CVA's `setDisabledState` if the control is disabled.\n    // If the `callSetDisabledState` option is set to `always`, then this bug is fixed and\n    // the method is always called.\n    if (control.disabled || callSetDisabledState === 'always') {\n        dir.valueAccessor.setDisabledState?.(control.disabled);\n    }\n    setUpViewChangePipeline(control, dir);\n    setUpModelChangePipeline(control, dir);\n    setUpBlurPipeline(control, dir);\n    setUpDisabledChangeHandler(control, dir);\n}\n/**\n * Reverts configuration performed by the `setUpControl` control function.\n * Effectively disconnects form control with a given form directive.\n * This function is typically invoked when corresponding form directive is being destroyed.\n *\n * @param control Form control which should be cleaned up.\n * @param dir Directive that should be disconnected from a given control.\n * @param validateControlPresenceOnChange Flag that indicates whether onChange handler should\n *     contain asserts to verify that it's not called once directive is destroyed. We need this flag\n *     to avoid potentially breaking changes caused by better control cleanup introduced in #39235.\n */\nfunction cleanUpControl(control, dir, validateControlPresenceOnChange = true) {\n    const noop = () => {\n        if (validateControlPresenceOnChange && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            _noControlError(dir);\n        }\n    };\n    // The `valueAccessor` field is typically defined on FromControl and FormControlName directive\n    // instances and there is a logic in `selectValueAccessor` function that throws if it's not the\n    // case. We still check the presence of `valueAccessor` before invoking its methods to make sure\n    // that cleanup works correctly if app code or tests are setup to ignore the error thrown from\n    // `selectValueAccessor`. See https://github.com/angular/angular/issues/40521.\n    if (dir.valueAccessor) {\n        dir.valueAccessor.registerOnChange(noop);\n        dir.valueAccessor.registerOnTouched(noop);\n    }\n    cleanUpValidators(control, dir);\n    if (control) {\n        dir._invokeOnDestroyCallbacks();\n        control._registerOnCollectionChange(() => { });\n    }\n}\nfunction registerOnValidatorChange(validators, onChange) {\n    validators.forEach((validator) => {\n        if (validator.registerOnValidatorChange)\n            validator.registerOnValidatorChange(onChange);\n    });\n}\n/**\n * Sets up disabled change handler function on a given form control if ControlValueAccessor\n * associated with a given directive instance supports the `setDisabledState` call.\n *\n * @param control Form control where disabled change handler should be setup.\n * @param dir Corresponding directive instance associated with this control.\n */\nfunction setUpDisabledChangeHandler(control, dir) {\n    if (dir.valueAccessor.setDisabledState) {\n        const onDisabledChange = (isDisabled) => {\n            dir.valueAccessor.setDisabledState(isDisabled);\n        };\n        control.registerOnDisabledChange(onDisabledChange);\n        // Register a callback function to cleanup disabled change handler\n        // from a control instance when a directive is destroyed.\n        dir._registerOnDestroy(() => {\n            control._unregisterOnDisabledChange(onDisabledChange);\n        });\n    }\n}\n/**\n * Sets up sync and async directive validators on provided form control.\n * This function merges validators from the directive into the validators of the control.\n *\n * @param control Form control where directive validators should be setup.\n * @param dir Directive instance that contains validators to be setup.\n */\nfunction setUpValidators(control, dir) {\n    const validators = getControlValidators(control);\n    if (dir.validator !== null) {\n        control.setValidators(mergeValidators(validators, dir.validator));\n    }\n    else if (typeof validators === 'function') {\n        // If sync validators are represented by a single validator function, we force the\n        // `Validators.compose` call to happen by executing the `setValidators` function with\n        // an array that contains that function. We need this to avoid possible discrepancies in\n        // validators behavior, so sync validators are always processed by the `Validators.compose`.\n        // Note: we should consider moving this logic inside the `setValidators` function itself, so we\n        // have consistent behavior on AbstractControl API level. The same applies to the async\n        // validators logic below.\n        control.setValidators([validators]);\n    }\n    const asyncValidators = getControlAsyncValidators(control);\n    if (dir.asyncValidator !== null) {\n        control.setAsyncValidators(mergeValidators(asyncValidators, dir.asyncValidator));\n    }\n    else if (typeof asyncValidators === 'function') {\n        control.setAsyncValidators([asyncValidators]);\n    }\n    // Re-run validation when validator binding changes, e.g. minlength=3 -> minlength=4\n    const onValidatorChange = () => control.updateValueAndValidity();\n    registerOnValidatorChange(dir._rawValidators, onValidatorChange);\n    registerOnValidatorChange(dir._rawAsyncValidators, onValidatorChange);\n}\n/**\n * Cleans up sync and async directive validators on provided form control.\n * This function reverts the setup performed by the `setUpValidators` function, i.e.\n * removes directive-specific validators from a given control instance.\n *\n * @param control Form control from where directive validators should be removed.\n * @param dir Directive instance that contains validators to be removed.\n * @returns true if a control was updated as a result of this action.\n */\nfunction cleanUpValidators(control, dir) {\n    let isControlUpdated = false;\n    if (control !== null) {\n        if (dir.validator !== null) {\n            const validators = getControlValidators(control);\n            if (Array.isArray(validators) && validators.length > 0) {\n                // Filter out directive validator function.\n                const updatedValidators = validators.filter((validator) => validator !== dir.validator);\n                if (updatedValidators.length !== validators.length) {\n                    isControlUpdated = true;\n                    control.setValidators(updatedValidators);\n                }\n            }\n        }\n        if (dir.asyncValidator !== null) {\n            const asyncValidators = getControlAsyncValidators(control);\n            if (Array.isArray(asyncValidators) && asyncValidators.length > 0) {\n                // Filter out directive async validator function.\n                const updatedAsyncValidators = asyncValidators.filter((asyncValidator) => asyncValidator !== dir.asyncValidator);\n                if (updatedAsyncValidators.length !== asyncValidators.length) {\n                    isControlUpdated = true;\n                    control.setAsyncValidators(updatedAsyncValidators);\n                }\n            }\n        }\n    }\n    // Clear onValidatorChange callbacks by providing a noop function.\n    const noop = () => { };\n    registerOnValidatorChange(dir._rawValidators, noop);\n    registerOnValidatorChange(dir._rawAsyncValidators, noop);\n    return isControlUpdated;\n}\nfunction setUpViewChangePipeline(control, dir) {\n    dir.valueAccessor.registerOnChange((newValue) => {\n        control._pendingValue = newValue;\n        control._pendingChange = true;\n        control._pendingDirty = true;\n        if (control.updateOn === 'change')\n            updateControl(control, dir);\n    });\n}\nfunction setUpBlurPipeline(control, dir) {\n    dir.valueAccessor.registerOnTouched(() => {\n        control._pendingTouched = true;\n        if (control.updateOn === 'blur' && control._pendingChange)\n            updateControl(control, dir);\n        if (control.updateOn !== 'submit')\n            control.markAsTouched();\n    });\n}\nfunction updateControl(control, dir) {\n    if (control._pendingDirty)\n        control.markAsDirty();\n    control.setValue(control._pendingValue, { emitModelToViewChange: false });\n    dir.viewToModelUpdate(control._pendingValue);\n    control._pendingChange = false;\n}\nfunction setUpModelChangePipeline(control, dir) {\n    const onChange = (newValue, emitModelEvent) => {\n        // control -> view\n        dir.valueAccessor.writeValue(newValue);\n        // control -> ngModel\n        if (emitModelEvent)\n            dir.viewToModelUpdate(newValue);\n    };\n    control.registerOnChange(onChange);\n    // Register a callback function to cleanup onChange handler\n    // from a control instance when a directive is destroyed.\n    dir._registerOnDestroy(() => {\n        control._unregisterOnChange(onChange);\n    });\n}\n/**\n * Links a FormGroup or FormArray instance and corresponding Form directive by setting up validators\n * present in the view.\n *\n * @param control FormGroup or FormArray instance that should be linked.\n * @param dir Directive that provides view validators.\n */\nfunction setUpFormContainer(control, dir) {\n    if (control == null && (typeof ngDevMode === 'undefined' || ngDevMode))\n        _throwError(dir, 'Cannot find control with');\n    setUpValidators(control, dir);\n}\n/**\n * Reverts the setup performed by the `setUpFormContainer` function.\n *\n * @param control FormGroup or FormArray instance that should be cleaned up.\n * @param dir Directive that provided view validators.\n * @returns true if a control was updated as a result of this action.\n */\nfunction cleanUpFormContainer(control, dir) {\n    return cleanUpValidators(control, dir);\n}\nfunction _noControlError(dir) {\n    return _throwError(dir, 'There is no FormControl instance attached to form control element with');\n}\nfunction _throwError(dir, message) {\n    const messageEnd = _describeControlLocation(dir);\n    throw new Error(`${message} ${messageEnd}`);\n}\nfunction _describeControlLocation(dir) {\n    const path = dir.path;\n    if (path && path.length > 1)\n        return `path: '${path.join(' -> ')}'`;\n    if (path?.[0])\n        return `name: '${path}'`;\n    return 'unspecified name attribute';\n}\nfunction _throwMissingValueAccessorError(dir) {\n    const loc = _describeControlLocation(dir);\n    throw new _RuntimeError(-1203 /* RuntimeErrorCode.NG_MISSING_VALUE_ACCESSOR */, `No value accessor for form control ${loc}.`);\n}\nfunction _throwInvalidValueAccessorError(dir) {\n    const loc = _describeControlLocation(dir);\n    throw new _RuntimeError(1200 /* RuntimeErrorCode.NG_VALUE_ACCESSOR_NOT_PROVIDED */, `Value accessor was not provided as an array for form control with ${loc}. ` +\n        `Check that the \\`NG_VALUE_ACCESSOR\\` token is configured as a \\`multi: true\\` provider.`);\n}\nfunction isPropertyUpdated(changes, viewModel) {\n    if (!changes.hasOwnProperty('model'))\n        return false;\n    const change = changes['model'];\n    if (change.isFirstChange())\n        return true;\n    return !Object.is(viewModel, change.currentValue);\n}\nfunction isBuiltInAccessor(valueAccessor) {\n    // Check if a given value accessor is an instance of a class that directly extends\n    // `BuiltInControlValueAccessor` one.\n    return Object.getPrototypeOf(valueAccessor.constructor) === BuiltInControlValueAccessor;\n}\nfunction syncPendingControls(form, directives) {\n    form._syncPendingControls();\n    directives.forEach((dir) => {\n        const control = dir.control;\n        if (control.updateOn === 'submit' && control._pendingChange) {\n            dir.viewToModelUpdate(control._pendingValue);\n            control._pendingChange = false;\n        }\n    });\n}\n// TODO: vsavkin remove it once https://github.com/angular/angular/issues/3011 is implemented\nfunction selectValueAccessor(dir, valueAccessors) {\n    if (!valueAccessors)\n        return null;\n    if (!Array.isArray(valueAccessors) && (typeof ngDevMode === 'undefined' || ngDevMode))\n        _throwInvalidValueAccessorError(dir);\n    let defaultAccessor = undefined;\n    let builtinAccessor = undefined;\n    let customAccessor = undefined;\n    valueAccessors.forEach((v) => {\n        if (v.constructor === DefaultValueAccessor) {\n            defaultAccessor = v;\n        }\n        else if (isBuiltInAccessor(v)) {\n            if (builtinAccessor && (typeof ngDevMode === 'undefined' || ngDevMode))\n                _throwError(dir, 'More than one built-in value accessor matches form control with');\n            builtinAccessor = v;\n        }\n        else {\n            if (customAccessor && (typeof ngDevMode === 'undefined' || ngDevMode))\n                _throwError(dir, 'More than one custom value accessor matches form control with');\n            customAccessor = v;\n        }\n    });\n    if (customAccessor)\n        return customAccessor;\n    if (builtinAccessor)\n        return builtinAccessor;\n    if (defaultAccessor)\n        return defaultAccessor;\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        _throwError(dir, 'No valid value accessor for form control with');\n    }\n    return null;\n}\nfunction removeListItem$1(list, el) {\n    const index = list.indexOf(el);\n    if (index > -1)\n        list.splice(index, 1);\n}\n// TODO(kara): remove after deprecation period\nfunction _ngModelWarning(name, type, instance, warningConfig) {\n    if (warningConfig === 'never')\n        return;\n    if (((warningConfig === null || warningConfig === 'once') && !type._ngModelWarningSentOnce) ||\n        (warningConfig === 'always' && !instance._ngModelWarningSent)) {\n        console.warn(ngModelWarning(name));\n        type._ngModelWarningSentOnce = true;\n        instance._ngModelWarningSent = true;\n    }\n}\n\nconst formDirectiveProvider$1 = {\n    provide: ControlContainer,\n    useExisting: forwardRef(() => NgForm),\n};\nconst resolvedPromise$1 = (() => Promise.resolve())();\n/**\n * @description\n * Creates a top-level `FormGroup` instance and binds it to a form\n * to track aggregate form value and validation status.\n *\n * As soon as you import the `FormsModule`, this directive becomes active by default on\n * all `<form>` tags.  You don't need to add a special selector.\n *\n * You optionally export the directive into a local template variable using `ngForm` as the key\n * (ex: `#myForm=\"ngForm\"`). This is optional, but useful.  Many properties from the underlying\n * `FormGroup` instance are duplicated on the directive itself, so a reference to it\n * gives you access to the aggregate value and validity status of the form, as well as\n * user interaction properties like `dirty` and `touched`.\n *\n * To register child controls with the form, use `NgModel` with a `name`\n * attribute. You may use `NgModelGroup` to create sub-groups within the form.\n *\n * If necessary, listen to the directive's `ngSubmit` event to be notified when the user has\n * triggered a form submission. The `ngSubmit` event emits the original form\n * submission event.\n *\n * In template driven forms, all `<form>` tags are automatically tagged as `NgForm`.\n * To import the `FormsModule` but skip its usage in some forms,\n * for example, to use native HTML5 validation, add the `ngNoForm` and the `<form>`\n * tags won't create an `NgForm` directive. In reactive forms, using `ngNoForm` is\n * unnecessary because the `<form>` tags are inert. In that case, you would\n * refrain from using the `formGroup` directive.\n *\n * @usageNotes\n *\n * ### Listening for form submission\n *\n * The following example shows how to capture the form values from the \"ngSubmit\" event.\n *\n * {@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n *\n * ### Setting the update options\n *\n * The following example shows you how to change the \"updateOn\" option from its default using\n * ngFormOptions.\n *\n * ```html\n * <form [ngFormOptions]=\"{updateOn: 'blur'}\">\n *    <input name=\"one\" ngModel>  <!-- this ngModel will update on blur -->\n * </form>\n * ```\n *\n * ### Native DOM validation UI\n *\n * In order to prevent the native DOM form validation UI from interfering with Angular's form\n * validation, Angular automatically adds the `novalidate` attribute on any `<form>` whenever\n * `FormModule` or `ReactiveFormModule` are imported into the application.\n * If you want to explicitly enable native DOM validation UI with Angular forms, you can add the\n * `ngNativeValidate` attribute to the `<form>` element:\n *\n * ```html\n * <form ngNativeValidate>\n *   ...\n * </form>\n * ```\n *\n * @ngModule FormsModule\n * @publicApi\n */\nclass NgForm extends ControlContainer {\n    callSetDisabledState;\n    /**\n     * @description\n     * Returns whether the form submission has been triggered.\n     */\n    get submitted() {\n        return untracked(this.submittedReactive);\n    }\n    /** @internal */\n    _submitted = computed(() => this.submittedReactive(), ...(ngDevMode ? [{ debugName: \"_submitted\" }] : []));\n    submittedReactive = signal(false, ...(ngDevMode ? [{ debugName: \"submittedReactive\" }] : []));\n    _directives = new Set();\n    /**\n     * @description\n     * The `FormGroup` instance created for this form.\n     */\n    form;\n    /**\n     * @description\n     * Event emitter for the \"ngSubmit\" event\n     */\n    ngSubmit = new EventEmitter();\n    /**\n     * @description\n     * Tracks options for the `NgForm` instance.\n     *\n     * **updateOn**: Sets the default `updateOn` value for all child `NgModels` below it\n     * unless explicitly set by a child `NgModel` using `ngModelOptions`). Defaults to 'change'.\n     * Possible values: `'change'` | `'blur'` | `'submit'`.\n     *\n     */\n    options;\n    constructor(validators, asyncValidators, callSetDisabledState) {\n        super();\n        this.callSetDisabledState = callSetDisabledState;\n        this.form = new FormGroup({}, composeValidators(validators), composeAsyncValidators(asyncValidators));\n    }\n    /** @docs-private */\n    ngAfterViewInit() {\n        this._setUpdateStrategy();\n    }\n    /**\n     * @description\n     * The directive instance.\n     */\n    get formDirective() {\n        return this;\n    }\n    /**\n     * @description\n     * The internal `FormGroup` instance.\n     */\n    get control() {\n        return this.form;\n    }\n    /**\n     * @description\n     * Returns an array representing the path to this group. Because this directive\n     * always lives at the top level of a form, it is always an empty array.\n     */\n    get path() {\n        return [];\n    }\n    /**\n     * @description\n     * Returns a map of the controls in this group.\n     */\n    get controls() {\n        return this.form.controls;\n    }\n    /**\n     * @description\n     * Method that sets up the control directive in this group, re-calculates its value\n     * and validity, and adds the instance to the internal list of directives.\n     *\n     * @param dir The `NgModel` directive instance.\n     */\n    addControl(dir) {\n        resolvedPromise$1.then(() => {\n            const container = this._findContainer(dir.path);\n            dir.control = (container.registerControl(dir.name, dir.control));\n            setUpControl(dir.control, dir, this.callSetDisabledState);\n            dir.control.updateValueAndValidity({ emitEvent: false });\n            this._directives.add(dir);\n        });\n    }\n    /**\n     * @description\n     * Retrieves the `FormControl` instance from the provided `NgModel` directive.\n     *\n     * @param dir The `NgModel` directive instance.\n     */\n    getControl(dir) {\n        return this.form.get(dir.path);\n    }\n    /**\n     * @description\n     * Removes the `NgModel` instance from the internal list of directives\n     *\n     * @param dir The `NgModel` directive instance.\n     */\n    removeControl(dir) {\n        resolvedPromise$1.then(() => {\n            const container = this._findContainer(dir.path);\n            if (container) {\n                container.removeControl(dir.name);\n            }\n            this._directives.delete(dir);\n        });\n    }\n    /**\n     * @description\n     * Adds a new `NgModelGroup` directive instance to the form.\n     *\n     * @param dir The `NgModelGroup` directive instance.\n     */\n    addFormGroup(dir) {\n        resolvedPromise$1.then(() => {\n            const container = this._findContainer(dir.path);\n            const group = new FormGroup({});\n            setUpFormContainer(group, dir);\n            container.registerControl(dir.name, group);\n            group.updateValueAndValidity({ emitEvent: false });\n        });\n    }\n    /**\n     * @description\n     * Removes the `NgModelGroup` directive instance from the form.\n     *\n     * @param dir The `NgModelGroup` directive instance.\n     */\n    removeFormGroup(dir) {\n        resolvedPromise$1.then(() => {\n            const container = this._findContainer(dir.path);\n            if (container) {\n                container.removeControl(dir.name);\n            }\n        });\n    }\n    /**\n     * @description\n     * Retrieves the `FormGroup` for a provided `NgModelGroup` directive instance\n     *\n     * @param dir The `NgModelGroup` directive instance.\n     */\n    getFormGroup(dir) {\n        return this.form.get(dir.path);\n    }\n    /**\n     * Sets the new value for the provided `NgControl` directive.\n     *\n     * @param dir The `NgControl` directive instance.\n     * @param value The new value for the directive's control.\n     */\n    updateModel(dir, value) {\n        resolvedPromise$1.then(() => {\n            const ctrl = this.form.get(dir.path);\n            ctrl.setValue(value);\n        });\n    }\n    /**\n     * @description\n     * Sets the value for this `FormGroup`.\n     *\n     * @param value The new value\n     */\n    setValue(value) {\n        this.control.setValue(value);\n    }\n    /**\n     * @description\n     * Method called when the \"submit\" event is triggered on the form.\n     * Triggers the `ngSubmit` emitter to emit the \"submit\" event as its payload.\n     *\n     * @param $event The \"submit\" event object\n     */\n    onSubmit($event) {\n        this.submittedReactive.set(true);\n        syncPendingControls(this.form, this._directives);\n        this.ngSubmit.emit($event);\n        this.form._events.next(new FormSubmittedEvent(this.control));\n        // Forms with `method=\"dialog\"` have some special behavior\n        // that won't reload the page and that shouldn't be prevented.\n        return $event?.target?.method === 'dialog';\n    }\n    /**\n     * @description\n     * Method called when the \"reset\" event is triggered on the form.\n     */\n    onReset() {\n        this.resetForm();\n    }\n    /**\n     * @description\n     * Resets the form to an initial value and resets its submitted status.\n     *\n     * @param value The new value for the form.\n     */\n    resetForm(value = undefined) {\n        this.form.reset(value);\n        this.submittedReactive.set(false);\n        this.form._events.next(new FormResetEvent(this.form));\n    }\n    _setUpdateStrategy() {\n        if (this.options && this.options.updateOn != null) {\n            this.form._updateOn = this.options.updateOn;\n        }\n    }\n    _findContainer(path) {\n        path.pop();\n        return path.length ? this.form.get(path) : this.form;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: NgForm, deps: [{ token: NG_VALIDATORS, optional: true, self: true }, { token: NG_ASYNC_VALIDATORS, optional: true, self: true }, { token: CALL_SET_DISABLED_STATE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.1.7\", type: NgForm, isStandalone: false, selector: \"form:not([ngNoForm]):not([formGroup]),ng-form,[ngForm]\", inputs: { options: [\"ngFormOptions\", \"options\"] }, outputs: { ngSubmit: \"ngSubmit\" }, host: { listeners: { \"submit\": \"onSubmit($event)\", \"reset\": \"onReset()\" } }, providers: [formDirectiveProvider$1], exportAs: [\"ngForm\"], usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: NgForm, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'form:not([ngNoForm]):not([formGroup]),ng-form,[ngForm]',\n                    providers: [formDirectiveProvider$1],\n                    host: { '(submit)': 'onSubmit($event)', '(reset)': 'onReset()' },\n                    outputs: ['ngSubmit'],\n                    exportAs: 'ngForm',\n                    standalone: false,\n                }]\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NG_VALIDATORS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NG_ASYNC_VALIDATORS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [CALL_SET_DISABLED_STATE]\n                }] }], propDecorators: { options: [{\n                type: Input,\n                args: ['ngFormOptions']\n            }] } });\n\nfunction removeListItem(list, el) {\n    const index = list.indexOf(el);\n    if (index > -1)\n        list.splice(index, 1);\n}\n\nfunction isFormControlState(formState) {\n    return (typeof formState === 'object' &&\n        formState !== null &&\n        Object.keys(formState).length === 2 &&\n        'value' in formState &&\n        'disabled' in formState);\n}\nconst FormControl = class FormControl extends AbstractControl {\n    /** @publicApi */\n    defaultValue = null;\n    /** @internal */\n    _onChange = [];\n    /** @internal */\n    _pendingValue;\n    /** @internal */\n    _pendingChange = false;\n    constructor(\n    // formState and defaultValue will only be null if T is nullable\n    formState = null, validatorOrOpts, asyncValidator) {\n        super(pickValidators(validatorOrOpts), pickAsyncValidators(asyncValidator, validatorOrOpts));\n        this._applyFormState(formState);\n        this._setUpdateStrategy(validatorOrOpts);\n        this._initObservables();\n        this.updateValueAndValidity({\n            onlySelf: true,\n            // If `asyncValidator` is present, it will trigger control status change from `PENDING` to\n            // `VALID` or `INVALID`.\n            // The status should be broadcasted via the `statusChanges` observable, so we set\n            // `emitEvent` to `true` to allow that during the control creation process.\n            emitEvent: !!this.asyncValidator,\n        });\n        if (isOptionsObj(validatorOrOpts) &&\n            (validatorOrOpts.nonNullable || validatorOrOpts.initialValueIsDefault)) {\n            if (isFormControlState(formState)) {\n                this.defaultValue = formState.value;\n            }\n            else {\n                this.defaultValue = formState;\n            }\n        }\n    }\n    setValue(value, options = {}) {\n        this.value = this._pendingValue = value;\n        if (this._onChange.length && options.emitModelToViewChange !== false) {\n            this._onChange.forEach((changeFn) => changeFn(this.value, options.emitViewToModelChange !== false));\n        }\n        this.updateValueAndValidity(options);\n    }\n    patchValue(value, options = {}) {\n        this.setValue(value, options);\n    }\n    reset(formState = this.defaultValue, options = {}) {\n        this._applyFormState(formState);\n        this.markAsPristine(options);\n        this.markAsUntouched(options);\n        this.setValue(this.value, options);\n        this._pendingChange = false;\n    }\n    /**  @internal */\n    _updateValue() { }\n    /**  @internal */\n    _anyControls(condition) {\n        return false;\n    }\n    /**  @internal */\n    _allControlsDisabled() {\n        return this.disabled;\n    }\n    registerOnChange(fn) {\n        this._onChange.push(fn);\n    }\n    /** @internal */\n    _unregisterOnChange(fn) {\n        removeListItem(this._onChange, fn);\n    }\n    registerOnDisabledChange(fn) {\n        this._onDisabledChange.push(fn);\n    }\n    /** @internal */\n    _unregisterOnDisabledChange(fn) {\n        removeListItem(this._onDisabledChange, fn);\n    }\n    /** @internal */\n    _forEachChild(cb) { }\n    /** @internal */\n    _syncPendingControls() {\n        if (this.updateOn === 'submit') {\n            if (this._pendingDirty)\n                this.markAsDirty();\n            if (this._pendingTouched)\n                this.markAsTouched();\n            if (this._pendingChange) {\n                this.setValue(this._pendingValue, { onlySelf: true, emitModelToViewChange: false });\n                return true;\n            }\n        }\n        return false;\n    }\n    _applyFormState(formState) {\n        if (isFormControlState(formState)) {\n            this.value = this._pendingValue = formState.value;\n            formState.disabled\n                ? this.disable({ onlySelf: true, emitEvent: false })\n                : this.enable({ onlySelf: true, emitEvent: false });\n        }\n        else {\n            this.value = this._pendingValue = formState;\n        }\n    }\n};\nconst UntypedFormControl = FormControl;\n/**\n * @description\n * Asserts that the given control is an instance of `FormControl`\n *\n * @publicApi\n */\nconst isFormControl = (control) => control instanceof FormControl;\n\n/**\n * @description\n * A base class for code shared between the `NgModelGroup` and `FormGroupName` directives.\n *\n * @publicApi\n */\nclass AbstractFormGroupDirective extends ControlContainer {\n    /**\n     * @description\n     * The parent control for the group\n     *\n     * @internal\n     */\n    _parent;\n    /** @docs-private */\n    ngOnInit() {\n        this._checkParentType();\n        // Register the group with its parent group.\n        this.formDirective.addFormGroup(this);\n    }\n    /** @docs-private */\n    ngOnDestroy() {\n        if (this.formDirective) {\n            // Remove the group from its parent group.\n            this.formDirective.removeFormGroup(this);\n        }\n    }\n    /**\n     * @description\n     * The `FormGroup` bound to this directive.\n     */\n    get control() {\n        return this.formDirective.getFormGroup(this);\n    }\n    /**\n     * @description\n     * The path to this group from the top-level directive.\n     */\n    get path() {\n        return controlPath(this.name == null ? this.name : this.name.toString(), this._parent);\n    }\n    /**\n     * @description\n     * The top-level directive for this group if present, otherwise null.\n     */\n    get formDirective() {\n        return this._parent ? this._parent.formDirective : null;\n    }\n    /** @internal */\n    _checkParentType() { }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: AbstractFormGroupDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.1.7\", type: AbstractFormGroupDirective, isStandalone: false, usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: AbstractFormGroupDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    standalone: false,\n                }]\n        }] });\n\nfunction modelParentException() {\n    return new _RuntimeError(1350 /* RuntimeErrorCode.NGMODEL_IN_FORM_GROUP */, `\n    ngModel cannot be used to register form controls with a parent formGroup directive.  Try using\n    formGroup's partner directive \"formControlName\" instead.  Example:\n\n    ${formControlNameExample}\n\n    Or, if you'd like to avoid registering this form control, indicate that it's standalone in ngModelOptions:\n\n    Example:\n\n    ${ngModelWithFormGroupExample}`);\n}\nfunction formGroupNameException() {\n    return new _RuntimeError(1351 /* RuntimeErrorCode.NGMODEL_IN_FORM_GROUP_NAME */, `\n    ngModel cannot be used to register form controls with a parent formGroupName or formArrayName directive.\n\n    Option 1: Use formControlName instead of ngModel (reactive strategy):\n\n    ${formGroupNameExample}\n\n    Option 2:  Update ngModel's parent be ngModelGroup (template-driven strategy):\n\n    ${ngModelGroupExample}`);\n}\nfunction missingNameException() {\n    return new _RuntimeError(1352 /* RuntimeErrorCode.NGMODEL_WITHOUT_NAME */, `If ngModel is used within a form tag, either the name attribute must be set or the form\n    control must be defined as 'standalone' in ngModelOptions.\n\n    Example 1: <input [(ngModel)]=\"person.firstName\" name=\"first\">\n    Example 2: <input [(ngModel)]=\"person.firstName\" [ngModelOptions]=\"{standalone: true}\">`);\n}\nfunction modelGroupParentException() {\n    return new _RuntimeError(1353 /* RuntimeErrorCode.NGMODELGROUP_IN_FORM_GROUP */, `\n    ngModelGroup cannot be used with a parent formGroup directive.\n\n    Option 1: Use formGroupName instead of ngModelGroup (reactive strategy):\n\n    ${formGroupNameExample}\n\n    Option 2:  Use a regular form tag instead of the formGroup directive (template-driven strategy):\n\n    ${ngModelGroupExample}`);\n}\n\nconst modelGroupProvider = {\n    provide: ControlContainer,\n    useExisting: forwardRef(() => NgModelGroup),\n};\n/**\n * @description\n * Creates and binds a `FormGroup` instance to a DOM element.\n *\n * This directive can only be used as a child of `NgForm` (within `<form>` tags).\n *\n * Use this directive to validate a sub-group of your form separately from the\n * rest of your form, or if some values in your domain model make more sense\n * to consume together in a nested object.\n *\n * Provide a name for the sub-group and it will become the key\n * for the sub-group in the form's full value. If you need direct access, export the directive into\n * a local template variable using `ngModelGroup` (ex: `#myGroup=\"ngModelGroup\"`).\n *\n * @usageNotes\n *\n * ### Consuming controls in a grouping\n *\n * The following example shows you how to combine controls together in a sub-group\n * of the form.\n *\n * {@example forms/ts/ngModelGroup/ng_model_group_example.ts region='Component'}\n *\n * @ngModule FormsModule\n * @publicApi\n */\nclass NgModelGroup extends AbstractFormGroupDirective {\n    /**\n     * @description\n     * Tracks the name of the `NgModelGroup` bound to the directive. The name corresponds\n     * to a key in the parent `NgForm`.\n     */\n    name = '';\n    constructor(parent, validators, asyncValidators) {\n        super();\n        this._parent = parent;\n        this._setValidators(validators);\n        this._setAsyncValidators(asyncValidators);\n    }\n    /** @internal */\n    _checkParentType() {\n        if (!(this._parent instanceof NgModelGroup) &&\n            !(this._parent instanceof NgForm) &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw modelGroupParentException();\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: NgModelGroup, deps: [{ token: ControlContainer, host: true, skipSelf: true }, { token: NG_VALIDATORS, optional: true, self: true }, { token: NG_ASYNC_VALIDATORS, optional: true, self: true }], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.1.7\", type: NgModelGroup, isStandalone: false, selector: \"[ngModelGroup]\", inputs: { name: [\"ngModelGroup\", \"name\"] }, providers: [modelGroupProvider], exportAs: [\"ngModelGroup\"], usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: NgModelGroup, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ngModelGroup]',\n                    providers: [modelGroupProvider],\n                    exportAs: 'ngModelGroup',\n                    standalone: false,\n                }]\n        }], ctorParameters: () => [{ type: ControlContainer, decorators: [{\n                    type: Host\n                }, {\n                    type: SkipSelf\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NG_VALIDATORS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NG_ASYNC_VALIDATORS]\n                }] }], propDecorators: { name: [{\n                type: Input,\n                args: ['ngModelGroup']\n            }] } });\n\nconst formControlBinding$1 = {\n    provide: NgControl,\n    useExisting: forwardRef(() => NgModel),\n};\n/**\n * `ngModel` forces an additional change detection run when its inputs change:\n * E.g.:\n * ```html\n * <div>{{myModel.valid}}</div>\n * <input [(ngModel)]=\"myValue\" #myModel=\"ngModel\">\n * ```\n * I.e. `ngModel` can export itself on the element and then be used in the template.\n * Normally, this would result in expressions before the `input` that use the exported directive\n * to have an old value as they have been\n * dirty checked before. As this is a very common case for `ngModel`, we added this second change\n * detection run.\n *\n * Notes:\n * - this is just one extra run no matter how many `ngModel`s have been changed.\n * - this is a general problem when using `exportAs` for directives!\n */\nconst resolvedPromise = (() => Promise.resolve())();\n/**\n * @description\n * Creates a `FormControl` instance from a [domain\n * model](https://en.wikipedia.org/wiki/Domain_model) and binds it to a form control element.\n *\n * The `FormControl` instance tracks the value, user interaction, and\n * validation status of the control and keeps the view synced with the model. If used\n * within a parent form, the directive also registers itself with the form as a child\n * control.\n *\n * This directive is used by itself or as part of a larger form. Use the\n * `ngModel` selector to activate it.\n *\n * It accepts a domain model as an optional `Input`. If you have a one-way binding\n * to `ngModel` with `[]` syntax, changing the domain model's value in the component\n * class sets the value in the view. If you have a two-way binding with `[()]` syntax\n * (also known as 'banana-in-a-box syntax'), the value in the UI always syncs back to\n * the domain model in your class.\n *\n * To inspect the properties of the associated `FormControl` (like the validity state),\n * export the directive into a local template variable using `ngModel` as the key (ex:\n * `#myVar=\"ngModel\"`). You can then access the control using the directive's `control` property.\n * However, the most commonly used properties (like `valid` and `dirty`) also exist on the control\n * for direct access. See a full list of properties directly available in\n * `AbstractControlDirective`.\n *\n * @see {@link RadioControlValueAccessor}\n * @see {@link SelectControlValueAccessor}\n *\n * @usageNotes\n *\n * ### Using ngModel on a standalone control\n *\n * The following examples show a simple standalone control using `ngModel`:\n *\n * {@example forms/ts/simpleNgModel/simple_ng_model_example.ts region='Component'}\n *\n * When using the `ngModel` within `<form>` tags, you'll also need to supply a `name` attribute\n * so that the control can be registered with the parent form under that name.\n *\n * In the context of a parent form, it's often unnecessary to include one-way or two-way binding,\n * as the parent form syncs the value for you. You access its properties by exporting it into a\n * local template variable using `ngForm` such as (`#f=\"ngForm\"`). Use the variable where\n * needed on form submission.\n *\n * If you do need to populate initial values into your form, using a one-way binding for\n * `ngModel` tends to be sufficient as long as you use the exported form's value rather\n * than the domain model's value on submit.\n *\n * ### Using ngModel within a form\n *\n * The following example shows controls using `ngModel` within a form:\n *\n * {@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n *\n * ### Using a standalone ngModel within a group\n *\n * The following example shows you how to use a standalone ngModel control\n * within a form. This controls the display of the form, but doesn't contain form data.\n *\n * ```html\n * <form>\n *   <input name=\"login\" ngModel placeholder=\"Login\">\n *   <input type=\"checkbox\" ngModel [ngModelOptions]=\"{standalone: true}\"> Show more options?\n * </form>\n * <!-- form value: {login: ''} -->\n * ```\n *\n * ### Setting the ngModel `name` attribute through options\n *\n * The following example shows you an alternate way to set the name attribute. Here,\n * an attribute identified as name is used within a custom form control component. To still be able\n * to specify the NgModel's name, you must specify it using the `ngModelOptions` input instead.\n *\n * ```html\n * <form>\n *   <my-custom-form-control name=\"Nancy\" ngModel [ngModelOptions]=\"{name: 'user'}\">\n *   </my-custom-form-control>\n * </form>\n * <!-- form value: {user: ''} -->\n * ```\n *\n * @ngModule FormsModule\n * @publicApi\n */\nclass NgModel extends NgControl {\n    _changeDetectorRef;\n    callSetDisabledState;\n    control = new FormControl();\n    // At runtime we coerce arbitrary values assigned to the \"disabled\" input to a \"boolean\".\n    // This is not reflected in the type of the property because outside of templates, consumers\n    // should only deal with booleans. In templates, a string is allowed for convenience and to\n    // match the native \"disabled attribute\" semantics which can be observed on input elements.\n    // This static member tells the compiler that values of type \"string\" can also be assigned\n    // to the input in a template.\n    /** @docs-private */\n    static ngAcceptInputType_isDisabled;\n    /** @internal */\n    _registered = false;\n    /**\n     * Internal reference to the view model value.\n     * @docs-private\n     */\n    viewModel;\n    /**\n     * @description\n     * Tracks the name bound to the directive. If a parent form exists, it\n     * uses this name as a key to retrieve this control's value.\n     */\n    name = '';\n    /**\n     * @description\n     * Tracks whether the control is disabled.\n     */\n    isDisabled;\n    /**\n     * @description\n     * Tracks the value bound to this directive.\n     */\n    model;\n    /**\n     * @description\n     * Tracks the configuration options for this `ngModel` instance.\n     *\n     * **name**: An alternative to setting the name attribute on the form control element. See\n     * the [example](api/forms/NgModel#using-ngmodel-on-a-standalone-control) for using `NgModel`\n     * as a standalone control.\n     *\n     * **standalone**: When set to true, the `ngModel` will not register itself with its parent form,\n     * and acts as if it's not in the form. Defaults to false. If no parent form exists, this option\n     * has no effect.\n     *\n     * **updateOn**: Defines the event upon which the form control value and validity update.\n     * Defaults to 'change'. Possible values: `'change'` | `'blur'` | `'submit'`.\n     *\n     */\n    options;\n    /**\n     * @description\n     * Event emitter for producing the `ngModelChange` event after\n     * the view model updates.\n     */\n    update = new EventEmitter();\n    constructor(parent, validators, asyncValidators, valueAccessors, _changeDetectorRef, callSetDisabledState) {\n        super();\n        this._changeDetectorRef = _changeDetectorRef;\n        this.callSetDisabledState = callSetDisabledState;\n        this._parent = parent;\n        this._setValidators(validators);\n        this._setAsyncValidators(asyncValidators);\n        this.valueAccessor = selectValueAccessor(this, valueAccessors);\n    }\n    /** @docs-private */\n    ngOnChanges(changes) {\n        this._checkForErrors();\n        if (!this._registered || 'name' in changes) {\n            if (this._registered) {\n                this._checkName();\n                if (this.formDirective) {\n                    // We can't call `formDirective.removeControl(this)`, because the `name` has already been\n                    // changed. We also can't reset the name temporarily since the logic in `removeControl`\n                    // is inside a promise and it won't run immediately. We work around it by giving it an\n                    // object with the same shape instead.\n                    const oldName = changes['name'].previousValue;\n                    this.formDirective.removeControl({ name: oldName, path: this._getPath(oldName) });\n                }\n            }\n            this._setUpControl();\n        }\n        if ('isDisabled' in changes) {\n            this._updateDisabled(changes);\n        }\n        if (isPropertyUpdated(changes, this.viewModel)) {\n            this._updateValue(this.model);\n            this.viewModel = this.model;\n        }\n    }\n    /** @docs-private */\n    ngOnDestroy() {\n        this.formDirective && this.formDirective.removeControl(this);\n    }\n    /**\n     * @description\n     * Returns an array that represents the path from the top-level form to this control.\n     * Each index is the string name of the control on that level.\n     */\n    get path() {\n        return this._getPath(this.name);\n    }\n    /**\n     * @description\n     * The top-level directive for this control if present, otherwise null.\n     */\n    get formDirective() {\n        return this._parent ? this._parent.formDirective : null;\n    }\n    /**\n     * @description\n     * Sets the new value for the view model and emits an `ngModelChange` event.\n     *\n     * @param newValue The new value emitted by `ngModelChange`.\n     */\n    viewToModelUpdate(newValue) {\n        this.viewModel = newValue;\n        this.update.emit(newValue);\n    }\n    _setUpControl() {\n        this._setUpdateStrategy();\n        this._isStandalone() ? this._setUpStandalone() : this.formDirective.addControl(this);\n        this._registered = true;\n    }\n    _setUpdateStrategy() {\n        if (this.options && this.options.updateOn != null) {\n            this.control._updateOn = this.options.updateOn;\n        }\n    }\n    _isStandalone() {\n        return !this._parent || !!(this.options && this.options.standalone);\n    }\n    _setUpStandalone() {\n        setUpControl(this.control, this, this.callSetDisabledState);\n        this.control.updateValueAndValidity({ emitEvent: false });\n    }\n    _checkForErrors() {\n        if ((typeof ngDevMode === 'undefined' || ngDevMode) && !this._isStandalone()) {\n            checkParentType$1(this._parent);\n        }\n        this._checkName();\n    }\n    _checkName() {\n        if (this.options && this.options.name)\n            this.name = this.options.name;\n        if (!this._isStandalone() && !this.name && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw missingNameException();\n        }\n    }\n    _updateValue(value) {\n        resolvedPromise.then(() => {\n            this.control.setValue(value, { emitViewToModelChange: false });\n            this._changeDetectorRef?.markForCheck();\n        });\n    }\n    _updateDisabled(changes) {\n        const disabledValue = changes['isDisabled'].currentValue;\n        // checking for 0 to avoid breaking change\n        const isDisabled = disabledValue !== 0 && booleanAttribute(disabledValue);\n        resolvedPromise.then(() => {\n            if (isDisabled && !this.control.disabled) {\n                this.control.disable();\n            }\n            else if (!isDisabled && this.control.disabled) {\n                this.control.enable();\n            }\n            this._changeDetectorRef?.markForCheck();\n        });\n    }\n    _getPath(controlName) {\n        return this._parent ? controlPath(controlName, this._parent) : [controlName];\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: NgModel, deps: [{ token: ControlContainer, host: true, optional: true }, { token: NG_VALIDATORS, optional: true, self: true }, { token: NG_ASYNC_VALIDATORS, optional: true, self: true }, { token: NG_VALUE_ACCESSOR, optional: true, self: true }, { token: ChangeDetectorRef, optional: true }, { token: CALL_SET_DISABLED_STATE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.1.7\", type: NgModel, isStandalone: false, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: { name: \"name\", isDisabled: [\"disabled\", \"isDisabled\"], model: [\"ngModel\", \"model\"], options: [\"ngModelOptions\", \"options\"] }, outputs: { update: \"ngModelChange\" }, providers: [formControlBinding$1], exportAs: [\"ngModel\"], usesInheritance: true, usesOnChanges: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: NgModel, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ngModel]:not([formControlName]):not([formControl])',\n                    providers: [formControlBinding$1],\n                    exportAs: 'ngModel',\n                    standalone: false,\n                }]\n        }], ctorParameters: () => [{ type: ControlContainer, decorators: [{\n                    type: Optional\n                }, {\n                    type: Host\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NG_VALIDATORS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NG_ASYNC_VALIDATORS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NG_VALUE_ACCESSOR]\n                }] }, { type: i0.ChangeDetectorRef, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ChangeDetectorRef]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [CALL_SET_DISABLED_STATE]\n                }] }], propDecorators: { name: [{\n                type: Input\n            }], isDisabled: [{\n                type: Input,\n                args: ['disabled']\n            }], model: [{\n                type: Input,\n                args: ['ngModel']\n            }], options: [{\n                type: Input,\n                args: ['ngModelOptions']\n            }], update: [{\n                type: Output,\n                args: ['ngModelChange']\n            }] } });\nfunction checkParentType$1(parent) {\n    if (!(parent instanceof NgModelGroup) && parent instanceof AbstractFormGroupDirective) {\n        throw formGroupNameException();\n    }\n    else if (!(parent instanceof NgModelGroup) && !(parent instanceof NgForm)) {\n        throw modelParentException();\n    }\n}\n\n/**\n * @description\n *\n * Adds `novalidate` attribute to all forms by default.\n *\n * `novalidate` is used to disable browser's native form validation.\n *\n * If you want to use native validation with Angular forms, just add `ngNativeValidate` attribute:\n *\n * ```html\n * <form ngNativeValidate></form>\n * ```\n *\n * @publicApi\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n */\nclass ɵNgNoValidate {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: ɵNgNoValidate, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.1.7\", type: ɵNgNoValidate, isStandalone: false, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\", host: { attributes: { \"novalidate\": \"\" } }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: ɵNgNoValidate, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'form:not([ngNoForm]):not([ngNativeValidate])',\n                    host: { 'novalidate': '' },\n                    standalone: false,\n                }]\n        }] });\n\nconst NUMBER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => NumberValueAccessor),\n    multi: true,\n};\n/**\n * @description\n * The `ControlValueAccessor` for writing a number value and listening to number input changes.\n * The value accessor is used by the `FormControlDirective`, `FormControlName`, and `NgModel`\n * directives.\n *\n * @usageNotes\n *\n * ### Using a number input with a reactive form.\n *\n * The following example shows how to use a number input with a reactive form.\n *\n * ```ts\n * const totalCountControl = new FormControl();\n * ```\n *\n * ```html\n * <input type=\"number\" [formControl]=\"totalCountControl\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass NumberValueAccessor extends BuiltInControlValueAccessor {\n    /**\n     * Sets the \"value\" property on the input element.\n     * @docs-private\n     */\n    writeValue(value) {\n        // The value needs to be normalized for IE9, otherwise it is set to 'null' when null\n        const normalizedValue = value == null ? '' : value;\n        this.setProperty('value', normalizedValue);\n    }\n    /**\n     * Registers a function called when the control value changes.\n     * @docs-private\n     */\n    registerOnChange(fn) {\n        this.onChange = (value) => {\n            fn(value == '' ? null : parseFloat(value));\n        };\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: NumberValueAccessor, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.1.7\", type: NumberValueAccessor, isStandalone: false, selector: \"input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]\", host: { listeners: { \"input\": \"onChange($any($event.target).value)\", \"blur\": \"onTouched()\" } }, providers: [NUMBER_VALUE_ACCESSOR], usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: NumberValueAccessor, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]',\n                    host: { '(input)': 'onChange($any($event.target).value)', '(blur)': 'onTouched()' },\n                    providers: [NUMBER_VALUE_ACCESSOR],\n                    standalone: false,\n                }]\n        }] });\n\nconst RADIO_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => RadioControlValueAccessor),\n    multi: true,\n};\nfunction throwNameError() {\n    throw new _RuntimeError(1202 /* RuntimeErrorCode.NAME_AND_FORM_CONTROL_NAME_MUST_MATCH */, `\n      If you define both a name and a formControlName attribute on your radio button, their values\n      must match. Ex: <input type=\"radio\" formControlName=\"food\" name=\"food\">\n    `);\n}\n/**\n * @description\n * Class used by Angular to track radio buttons. For internal use only.\n */\nclass RadioControlRegistry {\n    _accessors = [];\n    /**\n     * @description\n     * Adds a control to the internal registry. For internal use only.\n     */\n    add(control, accessor) {\n        this._accessors.push([control, accessor]);\n    }\n    /**\n     * @description\n     * Removes a control from the internal registry. For internal use only.\n     */\n    remove(accessor) {\n        for (let i = this._accessors.length - 1; i >= 0; --i) {\n            if (this._accessors[i][1] === accessor) {\n                this._accessors.splice(i, 1);\n                return;\n            }\n        }\n    }\n    /**\n     * @description\n     * Selects a radio button. For internal use only.\n     */\n    select(accessor) {\n        this._accessors.forEach((c) => {\n            if (this._isSameGroup(c, accessor) && c[1] !== accessor) {\n                c[1].fireUncheck(accessor.value);\n            }\n        });\n    }\n    _isSameGroup(controlPair, accessor) {\n        if (!controlPair[0].control)\n            return false;\n        return (controlPair[0]._parent === accessor._control._parent && controlPair[1].name === accessor.name);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: RadioControlRegistry, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: RadioControlRegistry, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: RadioControlRegistry, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n/**\n * @description\n * The `ControlValueAccessor` for writing radio control values and listening to radio control\n * changes. The value accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n * @usageNotes\n *\n * ### Using radio buttons with reactive form directives\n *\n * The follow example shows how to use radio buttons in a reactive form. When using radio buttons in\n * a reactive form, radio buttons in the same group should have the same `formControlName`.\n * Providing a `name` attribute is optional.\n *\n * {@example forms/ts/reactiveRadioButtons/reactive_radio_button_example.ts region='Reactive'}\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass RadioControlValueAccessor extends BuiltInControlValueAccessor {\n    _registry;\n    _injector;\n    /** @internal */\n    _state;\n    /** @internal */\n    _control;\n    /** @internal */\n    _fn;\n    setDisabledStateFired = false;\n    /**\n     * The registered callback function called when a change event occurs on the input element.\n     * Note: we declare `onChange` here (also used as host listener) as a function with no arguments\n     * to override the `onChange` function (which expects 1 argument) in the parent\n     * `BaseControlValueAccessor` class.\n     * @docs-private\n     */\n    onChange = () => { };\n    /**\n     * @description\n     * Tracks the name of the radio input element.\n     */\n    name;\n    /**\n     * @description\n     * Tracks the name of the `FormControl` bound to the directive. The name corresponds\n     * to a key in the parent `FormGroup` or `FormArray`.\n     */\n    formControlName;\n    /**\n     * @description\n     * Tracks the value of the radio input element\n     */\n    value;\n    callSetDisabledState = inject(CALL_SET_DISABLED_STATE, { optional: true }) ?? setDisabledStateDefault;\n    constructor(renderer, elementRef, _registry, _injector) {\n        super(renderer, elementRef);\n        this._registry = _registry;\n        this._injector = _injector;\n    }\n    /** @docs-private */\n    ngOnInit() {\n        this._control = this._injector.get(NgControl);\n        this._checkName();\n        this._registry.add(this._control, this);\n    }\n    /** @docs-private */\n    ngOnDestroy() {\n        this._registry.remove(this);\n    }\n    /**\n     * Sets the \"checked\" property value on the radio input element.\n     * @docs-private\n     */\n    writeValue(value) {\n        this._state = value === this.value;\n        this.setProperty('checked', this._state);\n    }\n    /**\n     * Registers a function called when the control value changes.\n     * @docs-private\n     */\n    registerOnChange(fn) {\n        this._fn = fn;\n        this.onChange = () => {\n            fn(this.value);\n            this._registry.select(this);\n        };\n    }\n    /** @docs-private */\n    setDisabledState(isDisabled) {\n        /**\n         * `setDisabledState` is supposed to be called whenever the disabled state of a control changes,\n         * including upon control creation. However, a longstanding bug caused the method to not fire\n         * when an *enabled* control was attached. This bug was fixed in v15 in #47576.\n         *\n         * This had a side effect: previously, it was possible to instantiate a reactive form control\n         * with `[attr.disabled]=true`, even though the corresponding control was enabled in the\n         * model. This resulted in a mismatch between the model and the DOM. Now, because\n         * `setDisabledState` is always called, the value in the DOM will be immediately overwritten\n         * with the \"correct\" enabled value.\n         *\n         * However, the fix also created an exceptional case: radio buttons. Because Reactive Forms\n         * models the entire group of radio buttons as a single `FormControl`, there is no way to\n         * control the disabled state for individual radios, so they can no longer be configured as\n         * disabled. Thus, we keep the old behavior for radio buttons, so that `[attr.disabled]`\n         * continues to work. Specifically, we drop the first call to `setDisabledState` if `disabled`\n         * is `false`, and we are not in legacy mode.\n         */\n        if (this.setDisabledStateFired ||\n            isDisabled ||\n            this.callSetDisabledState === 'whenDisabledForLegacyCode') {\n            this.setProperty('disabled', isDisabled);\n        }\n        this.setDisabledStateFired = true;\n    }\n    /**\n     * Sets the \"value\" on the radio input element and unchecks it.\n     *\n     * @param value\n     */\n    fireUncheck(value) {\n        this.writeValue(value);\n    }\n    _checkName() {\n        if (this.name &&\n            this.formControlName &&\n            this.name !== this.formControlName &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwNameError();\n        }\n        if (!this.name && this.formControlName)\n            this.name = this.formControlName;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: RadioControlValueAccessor, deps: [{ token: i0.Renderer2 }, { token: i0.ElementRef }, { token: RadioControlRegistry }, { token: i0.Injector }], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.1.7\", type: RadioControlValueAccessor, isStandalone: false, selector: \"input[type=radio][formControlName],input[type=radio][formControl],input[type=radio][ngModel]\", inputs: { name: \"name\", formControlName: \"formControlName\", value: \"value\" }, host: { listeners: { \"change\": \"onChange()\", \"blur\": \"onTouched()\" } }, providers: [RADIO_VALUE_ACCESSOR], usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: RadioControlValueAccessor, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input[type=radio][formControlName],input[type=radio][formControl],input[type=radio][ngModel]',\n                    host: { '(change)': 'onChange()', '(blur)': 'onTouched()' },\n                    providers: [RADIO_VALUE_ACCESSOR],\n                    standalone: false,\n                }]\n        }], ctorParameters: () => [{ type: i0.Renderer2 }, { type: i0.ElementRef }, { type: RadioControlRegistry }, { type: i0.Injector }], propDecorators: { name: [{\n                type: Input\n            }], formControlName: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }] } });\n\nconst RANGE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => RangeValueAccessor),\n    multi: true,\n};\n/**\n * @description\n * The `ControlValueAccessor` for writing a range value and listening to range input changes.\n * The value accessor is used by the `FormControlDirective`, `FormControlName`, and  `NgModel`\n * directives.\n *\n * @usageNotes\n *\n * ### Using a range input with a reactive form\n *\n * The following example shows how to use a range input with a reactive form.\n *\n * ```ts\n * const ageControl = new FormControl();\n * ```\n *\n * ```html\n * <input type=\"range\" [formControl]=\"ageControl\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass RangeValueAccessor extends BuiltInControlValueAccessor {\n    /**\n     * Sets the \"value\" property on the input element.\n     * @docs-private\n     */\n    writeValue(value) {\n        this.setProperty('value', parseFloat(value));\n    }\n    /**\n     * Registers a function called when the control value changes.\n     * @docs-private\n     */\n    registerOnChange(fn) {\n        this.onChange = (value) => {\n            fn(value == '' ? null : parseFloat(value));\n        };\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: RangeValueAccessor, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.1.7\", type: RangeValueAccessor, isStandalone: false, selector: \"input[type=range][formControlName],input[type=range][formControl],input[type=range][ngModel]\", host: { listeners: { \"change\": \"onChange($any($event.target).value)\", \"input\": \"onChange($any($event.target).value)\", \"blur\": \"onTouched()\" } }, providers: [RANGE_VALUE_ACCESSOR], usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: RangeValueAccessor, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input[type=range][formControlName],input[type=range][formControl],input[type=range][ngModel]',\n                    host: {\n                        '(change)': 'onChange($any($event.target).value)',\n                        '(input)': 'onChange($any($event.target).value)',\n                        '(blur)': 'onTouched()',\n                    },\n                    providers: [RANGE_VALUE_ACCESSOR],\n                    standalone: false,\n                }]\n        }] });\n\n/**\n * Token to provide to turn off the ngModel warning on formControl and formControlName.\n */\nconst NG_MODEL_WITH_FORM_CONTROL_WARNING = new InjectionToken(ngDevMode ? 'NgModelWithFormControlWarning' : '');\nconst formControlBinding = {\n    provide: NgControl,\n    useExisting: forwardRef(() => FormControlDirective),\n};\n/**\n * @description\n * Synchronizes a standalone `FormControl` instance to a form control element.\n *\n * Note that support for using the `ngModel` input property and `ngModelChange` event with reactive\n * form directives was deprecated in Angular v6 and is scheduled for removal in\n * a future version of Angular.\n *\n * @see [Reactive Forms Guide](guide/forms/reactive-forms)\n * @see {@link FormControl}\n * @see {@link AbstractControl}\n *\n * @usageNotes\n *\n * The following example shows how to register a standalone control and set its value.\n *\n * {@example forms/ts/simpleFormControl/simple_form_control_example.ts region='Component'}\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nclass FormControlDirective extends NgControl {\n    _ngModelWarningConfig;\n    callSetDisabledState;\n    /**\n     * Internal reference to the view model value.\n     * @docs-private\n     */\n    viewModel;\n    /**\n     * @description\n     * Tracks the `FormControl` instance bound to the directive.\n     */\n    form;\n    /**\n     * @description\n     * Triggers a warning in dev mode that this input should not be used with reactive forms.\n     */\n    set isDisabled(isDisabled) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            console.warn(disabledAttrWarning);\n        }\n    }\n    // TODO(kara): remove next 4 properties once deprecation period is over\n    /** @deprecated as of v6 */\n    model;\n    /** @deprecated as of v6 */\n    update = new EventEmitter();\n    /**\n     * @description\n     * Static property used to track whether any ngModel warnings have been sent across\n     * all instances of FormControlDirective. Used to support warning config of \"once\".\n     *\n     * @internal\n     */\n    static _ngModelWarningSentOnce = false;\n    /**\n     * @description\n     * Instance property used to track whether an ngModel warning has been sent out for this\n     * particular `FormControlDirective` instance. Used to support warning config of \"always\".\n     *\n     * @internal\n     */\n    _ngModelWarningSent = false;\n    constructor(validators, asyncValidators, valueAccessors, _ngModelWarningConfig, callSetDisabledState) {\n        super();\n        this._ngModelWarningConfig = _ngModelWarningConfig;\n        this.callSetDisabledState = callSetDisabledState;\n        this._setValidators(validators);\n        this._setAsyncValidators(asyncValidators);\n        this.valueAccessor = selectValueAccessor(this, valueAccessors);\n    }\n    /** @docs-private */\n    ngOnChanges(changes) {\n        if (this._isControlChanged(changes)) {\n            const previousForm = changes['form'].previousValue;\n            if (previousForm) {\n                cleanUpControl(previousForm, this, /* validateControlPresenceOnChange */ false);\n            }\n            setUpControl(this.form, this, this.callSetDisabledState);\n            this.form.updateValueAndValidity({ emitEvent: false });\n        }\n        if (isPropertyUpdated(changes, this.viewModel)) {\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                _ngModelWarning('formControl', FormControlDirective, this, this._ngModelWarningConfig);\n            }\n            this.form.setValue(this.model);\n            this.viewModel = this.model;\n        }\n    }\n    /** @docs-private */\n    ngOnDestroy() {\n        if (this.form) {\n            cleanUpControl(this.form, this, /* validateControlPresenceOnChange */ false);\n        }\n    }\n    /**\n     * @description\n     * Returns an array that represents the path from the top-level form to this control.\n     * Each index is the string name of the control on that level.\n     */\n    get path() {\n        return [];\n    }\n    /**\n     * @description\n     * The `FormControl` bound to this directive.\n     */\n    get control() {\n        return this.form;\n    }\n    /**\n     * @description\n     * Sets the new value for the view model and emits an `ngModelChange` event.\n     *\n     * @param newValue The new value for the view model.\n     */\n    viewToModelUpdate(newValue) {\n        this.viewModel = newValue;\n        this.update.emit(newValue);\n    }\n    _isControlChanged(changes) {\n        return changes.hasOwnProperty('form');\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: FormControlDirective, deps: [{ token: NG_VALIDATORS, optional: true, self: true }, { token: NG_ASYNC_VALIDATORS, optional: true, self: true }, { token: NG_VALUE_ACCESSOR, optional: true, self: true }, { token: NG_MODEL_WITH_FORM_CONTROL_WARNING, optional: true }, { token: CALL_SET_DISABLED_STATE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.1.7\", type: FormControlDirective, isStandalone: false, selector: \"[formControl]\", inputs: { form: [\"formControl\", \"form\"], isDisabled: [\"disabled\", \"isDisabled\"], model: [\"ngModel\", \"model\"] }, outputs: { update: \"ngModelChange\" }, providers: [formControlBinding], exportAs: [\"ngForm\"], usesInheritance: true, usesOnChanges: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: FormControlDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[formControl]',\n                    providers: [formControlBinding],\n                    exportAs: 'ngForm',\n                    standalone: false,\n                }]\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NG_VALIDATORS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NG_ASYNC_VALIDATORS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NG_VALUE_ACCESSOR]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [NG_MODEL_WITH_FORM_CONTROL_WARNING]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [CALL_SET_DISABLED_STATE]\n                }] }], propDecorators: { form: [{\n                type: Input,\n                args: ['formControl']\n            }], isDisabled: [{\n                type: Input,\n                args: ['disabled']\n            }], model: [{\n                type: Input,\n                args: ['ngModel']\n            }], update: [{\n                type: Output,\n                args: ['ngModelChange']\n            }] } });\n\nconst formDirectiveProvider = {\n    provide: ControlContainer,\n    useExisting: forwardRef(() => FormGroupDirective),\n};\n/**\n * @description\n *\n * Binds an existing `FormGroup` or `FormRecord` to a DOM element.\n *\n * This directive accepts an existing `FormGroup` instance. It will then use this\n * `FormGroup` instance to match any child `FormControl`, `FormGroup`/`FormRecord`,\n * and `FormArray` instances to child `FormControlName`, `FormGroupName`,\n * and `FormArrayName` directives.\n *\n * @see [Reactive Forms Guide](guide/forms/reactive-forms)\n * @see {@link AbstractControl}\n *\n * @usageNotes\n * ### Register Form Group\n *\n * The following example registers a `FormGroup` with first name and last name controls,\n * and listens for the *ngSubmit* event when the button is clicked.\n *\n * {@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nclass FormGroupDirective extends ControlContainer {\n    callSetDisabledState;\n    /**\n     * @description\n     * Reports whether the form submission has been triggered.\n     */\n    get submitted() {\n        return untracked(this._submittedReactive);\n    }\n    // TODO(atscott): Remove once invalid API usage is cleaned up internally\n    set submitted(value) {\n        this._submittedReactive.set(value);\n    }\n    /** @internal */\n    _submitted = computed(() => this._submittedReactive(), ...(ngDevMode ? [{ debugName: \"_submitted\" }] : []));\n    _submittedReactive = signal(false, ...(ngDevMode ? [{ debugName: \"_submittedReactive\" }] : []));\n    /**\n     * Reference to an old form group input value, which is needed to cleanup\n     * old instance in case it was replaced with a new one.\n     */\n    _oldForm;\n    /**\n     * Callback that should be invoked when controls in FormGroup or FormArray collection change\n     * (added or removed). This callback triggers corresponding DOM updates.\n     */\n    _onCollectionChange = () => this._updateDomValue();\n    /**\n     * @description\n     * Tracks the list of added `FormControlName` instances\n     */\n    directives = [];\n    /**\n     * @description\n     * Tracks the `FormGroup` bound to this directive.\n     */\n    form = null;\n    /**\n     * @description\n     * Emits an event when the form submission has been triggered.\n     */\n    ngSubmit = new EventEmitter();\n    constructor(validators, asyncValidators, callSetDisabledState) {\n        super();\n        this.callSetDisabledState = callSetDisabledState;\n        this._setValidators(validators);\n        this._setAsyncValidators(asyncValidators);\n    }\n    /** @docs-private */\n    ngOnChanges(changes) {\n        if ((typeof ngDevMode === 'undefined' || ngDevMode) && !this.form) {\n            throw missingFormException();\n        }\n        if (changes.hasOwnProperty('form')) {\n            this._updateValidators();\n            this._updateDomValue();\n            this._updateRegistrations();\n            this._oldForm = this.form;\n        }\n    }\n    /** @docs-private */\n    ngOnDestroy() {\n        if (this.form) {\n            cleanUpValidators(this.form, this);\n            // Currently the `onCollectionChange` callback is rewritten each time the\n            // `_registerOnCollectionChange` function is invoked. The implication is that cleanup should\n            // happen *only* when the `onCollectionChange` callback was set by this directive instance.\n            // Otherwise it might cause overriding a callback of some other directive instances. We should\n            // consider updating this logic later to make it similar to how `onChange` callbacks are\n            // handled, see https://github.com/angular/angular/issues/39732 for additional info.\n            if (this.form._onCollectionChange === this._onCollectionChange) {\n                this.form._registerOnCollectionChange(() => { });\n            }\n        }\n    }\n    /**\n     * @description\n     * Returns this directive's instance.\n     */\n    get formDirective() {\n        return this;\n    }\n    /**\n     * @description\n     * Returns the `FormGroup` bound to this directive.\n     */\n    get control() {\n        return this.form;\n    }\n    /**\n     * @description\n     * Returns an array representing the path to this group. Because this directive\n     * always lives at the top level of a form, it always an empty array.\n     */\n    get path() {\n        return [];\n    }\n    /**\n     * @description\n     * Method that sets up the control directive in this group, re-calculates its value\n     * and validity, and adds the instance to the internal list of directives.\n     *\n     * @param dir The `FormControlName` directive instance.\n     */\n    addControl(dir) {\n        const ctrl = this.form.get(dir.path);\n        setUpControl(ctrl, dir, this.callSetDisabledState);\n        ctrl.updateValueAndValidity({ emitEvent: false });\n        this.directives.push(dir);\n        return ctrl;\n    }\n    /**\n     * @description\n     * Retrieves the `FormControl` instance from the provided `FormControlName` directive\n     *\n     * @param dir The `FormControlName` directive instance.\n     */\n    getControl(dir) {\n        return this.form.get(dir.path);\n    }\n    /**\n     * @description\n     * Removes the `FormControlName` instance from the internal list of directives\n     *\n     * @param dir The `FormControlName` directive instance.\n     */\n    removeControl(dir) {\n        cleanUpControl(dir.control || null, dir, /* validateControlPresenceOnChange */ false);\n        removeListItem$1(this.directives, dir);\n    }\n    /**\n     * Adds a new `FormGroupName` directive instance to the form.\n     *\n     * @param dir The `FormGroupName` directive instance.\n     */\n    addFormGroup(dir) {\n        this._setUpFormContainer(dir);\n    }\n    /**\n     * Performs the necessary cleanup when a `FormGroupName` directive instance is removed from the\n     * view.\n     *\n     * @param dir The `FormGroupName` directive instance.\n     */\n    removeFormGroup(dir) {\n        this._cleanUpFormContainer(dir);\n    }\n    /**\n     * @description\n     * Retrieves the `FormGroup` for a provided `FormGroupName` directive instance\n     *\n     * @param dir The `FormGroupName` directive instance.\n     */\n    getFormGroup(dir) {\n        return this.form.get(dir.path);\n    }\n    /**\n     * Performs the necessary setup when a `FormArrayName` directive instance is added to the view.\n     *\n     * @param dir The `FormArrayName` directive instance.\n     */\n    addFormArray(dir) {\n        this._setUpFormContainer(dir);\n    }\n    /**\n     * Performs the necessary cleanup when a `FormArrayName` directive instance is removed from the\n     * view.\n     *\n     * @param dir The `FormArrayName` directive instance.\n     */\n    removeFormArray(dir) {\n        this._cleanUpFormContainer(dir);\n    }\n    /**\n     * @description\n     * Retrieves the `FormArray` for a provided `FormArrayName` directive instance.\n     *\n     * @param dir The `FormArrayName` directive instance.\n     */\n    getFormArray(dir) {\n        return this.form.get(dir.path);\n    }\n    /**\n     * Sets the new value for the provided `FormControlName` directive.\n     *\n     * @param dir The `FormControlName` directive instance.\n     * @param value The new value for the directive's control.\n     */\n    updateModel(dir, value) {\n        const ctrl = this.form.get(dir.path);\n        ctrl.setValue(value);\n    }\n    /**\n     * @description\n     * Method called with the \"submit\" event is triggered on the form.\n     * Triggers the `ngSubmit` emitter to emit the \"submit\" event as its payload.\n     *\n     * @param $event The \"submit\" event object\n     */\n    onSubmit($event) {\n        this._submittedReactive.set(true);\n        syncPendingControls(this.form, this.directives);\n        this.ngSubmit.emit($event);\n        this.form._events.next(new FormSubmittedEvent(this.control));\n        // Forms with `method=\"dialog\"` have some special behavior that won't reload the page and that\n        // shouldn't be prevented. Note that we need to null check the `event` and the `target`, because\n        // some internal apps call this method directly with the wrong arguments.\n        return $event?.target?.method === 'dialog';\n    }\n    /**\n     * @description\n     * Method called when the \"reset\" event is triggered on the form.\n     */\n    onReset() {\n        this.resetForm();\n    }\n    /**\n     * @description\n     * Resets the form to an initial value and resets its submitted status.\n     *\n     * @param value The new value for the form, `undefined` by default\n     */\n    resetForm(value = undefined, options = {}) {\n        this.form.reset(value, options);\n        this._submittedReactive.set(false);\n        if (options?.emitEvent !== false) {\n            this.form._events.next(new FormResetEvent(this.form));\n        }\n    }\n    /** @internal */\n    _updateDomValue() {\n        this.directives.forEach((dir) => {\n            const oldCtrl = dir.control;\n            const newCtrl = this.form.get(dir.path);\n            if (oldCtrl !== newCtrl) {\n                // Note: the value of the `dir.control` may not be defined, for example when it's a first\n                // `FormControl` that is added to a `FormGroup` instance (via `addControl` call).\n                cleanUpControl(oldCtrl || null, dir);\n                // Check whether new control at the same location inside the corresponding `FormGroup` is an\n                // instance of `FormControl` and perform control setup only if that's the case.\n                // Note: we don't need to clear the list of directives (`this.directives`) here, it would be\n                // taken care of in the `removeControl` method invoked when corresponding `formControlName`\n                // directive instance is being removed (invoked from `FormControlName.ngOnDestroy`).\n                if (isFormControl(newCtrl)) {\n                    setUpControl(newCtrl, dir, this.callSetDisabledState);\n                    dir.control = newCtrl;\n                }\n            }\n        });\n        this.form._updateTreeValidity({ emitEvent: false });\n    }\n    _setUpFormContainer(dir) {\n        const ctrl = this.form.get(dir.path);\n        setUpFormContainer(ctrl, dir);\n        // NOTE: this operation looks unnecessary in case no new validators were added in\n        // `setUpFormContainer` call. Consider updating this code to match the logic in\n        // `_cleanUpFormContainer` function.\n        ctrl.updateValueAndValidity({ emitEvent: false });\n    }\n    _cleanUpFormContainer(dir) {\n        if (this.form) {\n            const ctrl = this.form.get(dir.path);\n            if (ctrl) {\n                const isControlUpdated = cleanUpFormContainer(ctrl, dir);\n                if (isControlUpdated) {\n                    // Run validity check only in case a control was updated (i.e. view validators were\n                    // removed) as removing view validators might cause validity to change.\n                    ctrl.updateValueAndValidity({ emitEvent: false });\n                }\n            }\n        }\n    }\n    _updateRegistrations() {\n        this.form._registerOnCollectionChange(this._onCollectionChange);\n        if (this._oldForm) {\n            this._oldForm._registerOnCollectionChange(() => { });\n        }\n    }\n    _updateValidators() {\n        setUpValidators(this.form, this);\n        if (this._oldForm) {\n            cleanUpValidators(this._oldForm, this);\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: FormGroupDirective, deps: [{ token: NG_VALIDATORS, optional: true, self: true }, { token: NG_ASYNC_VALIDATORS, optional: true, self: true }, { token: CALL_SET_DISABLED_STATE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.1.7\", type: FormGroupDirective, isStandalone: false, selector: \"[formGroup]\", inputs: { form: [\"formGroup\", \"form\"] }, outputs: { ngSubmit: \"ngSubmit\" }, host: { listeners: { \"submit\": \"onSubmit($event)\", \"reset\": \"onReset()\" } }, providers: [formDirectiveProvider], exportAs: [\"ngForm\"], usesInheritance: true, usesOnChanges: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: FormGroupDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[formGroup]',\n                    providers: [formDirectiveProvider],\n                    host: { '(submit)': 'onSubmit($event)', '(reset)': 'onReset()' },\n                    exportAs: 'ngForm',\n                    standalone: false,\n                }]\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NG_VALIDATORS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NG_ASYNC_VALIDATORS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [CALL_SET_DISABLED_STATE]\n                }] }], propDecorators: { form: [{\n                type: Input,\n                args: ['formGroup']\n            }], ngSubmit: [{\n                type: Output\n            }] } });\n\nconst formGroupNameProvider = {\n    provide: ControlContainer,\n    useExisting: forwardRef(() => FormGroupName),\n};\n/**\n * @description\n *\n * Syncs a nested `FormGroup` or `FormRecord` to a DOM element.\n *\n * This directive can only be used with a parent `FormGroupDirective`.\n *\n * It accepts the string name of the nested `FormGroup` or `FormRecord` to link, and\n * looks for a `FormGroup` or `FormRecord` registered with that name in the parent\n * `FormGroup` instance you passed into `FormGroupDirective`.\n *\n * Use nested form groups to validate a sub-group of a\n * form separately from the rest or to group the values of certain\n * controls into their own nested object.\n *\n * @see [Reactive Forms Guide](guide/forms/reactive-forms)\n *\n * @usageNotes\n *\n * ### Access the group by name\n *\n * The following example uses the `AbstractControl.get` method to access the\n * associated `FormGroup`\n *\n * ```ts\n *   this.form.get('name');\n * ```\n *\n * ### Access individual controls in the group\n *\n * The following example uses the `AbstractControl.get` method to access\n * individual controls within the group using dot syntax.\n *\n * ```ts\n *   this.form.get('name.first');\n * ```\n *\n * ### Register a nested `FormGroup`.\n *\n * The following example registers a nested *name* `FormGroup` within an existing `FormGroup`,\n * and provides methods to retrieve the nested `FormGroup` and individual controls.\n *\n * {@example forms/ts/nestedFormGroup/nested_form_group_example.ts region='Component'}\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nclass FormGroupName extends AbstractFormGroupDirective {\n    /**\n     * @description\n     * Tracks the name of the `FormGroup` bound to the directive. The name corresponds\n     * to a key in the parent `FormGroup` or `FormArray`.\n     * Accepts a name as a string or a number.\n     * The name in the form of a string is useful for individual forms,\n     * while the numerical form allows for form groups to be bound\n     * to indices when iterating over groups in a `FormArray`.\n     */\n    name = null;\n    constructor(parent, validators, asyncValidators) {\n        super();\n        this._parent = parent;\n        this._setValidators(validators);\n        this._setAsyncValidators(asyncValidators);\n    }\n    /** @internal */\n    _checkParentType() {\n        if (hasInvalidParent(this._parent) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw groupParentException();\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: FormGroupName, deps: [{ token: ControlContainer, host: true, optional: true, skipSelf: true }, { token: NG_VALIDATORS, optional: true, self: true }, { token: NG_ASYNC_VALIDATORS, optional: true, self: true }], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.1.7\", type: FormGroupName, isStandalone: false, selector: \"[formGroupName]\", inputs: { name: [\"formGroupName\", \"name\"] }, providers: [formGroupNameProvider], usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: FormGroupName, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[formGroupName]',\n                    providers: [formGroupNameProvider],\n                    standalone: false,\n                }]\n        }], ctorParameters: () => [{ type: ControlContainer, decorators: [{\n                    type: Optional\n                }, {\n                    type: Host\n                }, {\n                    type: SkipSelf\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NG_VALIDATORS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NG_ASYNC_VALIDATORS]\n                }] }], propDecorators: { name: [{\n                type: Input,\n                args: ['formGroupName']\n            }] } });\nconst formArrayNameProvider = {\n    provide: ControlContainer,\n    useExisting: forwardRef(() => FormArrayName),\n};\n/**\n * @description\n *\n * Syncs a nested `FormArray` to a DOM element.\n *\n * This directive is designed to be used with a parent `FormGroupDirective` (selector:\n * `[formGroup]`).\n *\n * It accepts the string name of the nested `FormArray` you want to link, and\n * will look for a `FormArray` registered with that name in the parent\n * `FormGroup` instance you passed into `FormGroupDirective`.\n *\n * @see [Reactive Forms Guide](guide/forms/reactive-forms)\n * @see {@link AbstractControl}\n *\n * @usageNotes\n *\n * ### Example\n *\n * {@example forms/ts/nestedFormArray/nested_form_array_example.ts region='Component'}\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nclass FormArrayName extends ControlContainer {\n    /** @internal */\n    _parent;\n    /**\n     * @description\n     * Tracks the name of the `FormArray` bound to the directive. The name corresponds\n     * to a key in the parent `FormGroup` or `FormArray`.\n     * Accepts a name as a string or a number.\n     * The name in the form of a string is useful for individual forms,\n     * while the numerical form allows for form arrays to be bound\n     * to indices when iterating over arrays in a `FormArray`.\n     */\n    name = null;\n    constructor(parent, validators, asyncValidators) {\n        super();\n        this._parent = parent;\n        this._setValidators(validators);\n        this._setAsyncValidators(asyncValidators);\n    }\n    /**\n     * A lifecycle method called when the directive's inputs are initialized. For internal use only.\n     * @throws If the directive does not have a valid parent.\n     * @docs-private\n     */\n    ngOnInit() {\n        if (hasInvalidParent(this._parent) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw arrayParentException();\n        }\n        this.formDirective.addFormArray(this);\n    }\n    /**\n     * A lifecycle method called before the directive's instance is destroyed. For internal use only.\n     * @docs-private\n     */\n    ngOnDestroy() {\n        this.formDirective?.removeFormArray(this);\n    }\n    /**\n     * @description\n     * The `FormArray` bound to this directive.\n     */\n    get control() {\n        return this.formDirective.getFormArray(this);\n    }\n    /**\n     * @description\n     * The top-level directive for this group if present, otherwise null.\n     */\n    get formDirective() {\n        return this._parent ? this._parent.formDirective : null;\n    }\n    /**\n     * @description\n     * Returns an array that represents the path from the top-level form to this control.\n     * Each index is the string name of the control on that level.\n     */\n    get path() {\n        return controlPath(this.name == null ? this.name : this.name.toString(), this._parent);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: FormArrayName, deps: [{ token: ControlContainer, host: true, optional: true, skipSelf: true }, { token: NG_VALIDATORS, optional: true, self: true }, { token: NG_ASYNC_VALIDATORS, optional: true, self: true }], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.1.7\", type: FormArrayName, isStandalone: false, selector: \"[formArrayName]\", inputs: { name: [\"formArrayName\", \"name\"] }, providers: [formArrayNameProvider], usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: FormArrayName, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[formArrayName]',\n                    providers: [formArrayNameProvider],\n                    standalone: false,\n                }]\n        }], ctorParameters: () => [{ type: ControlContainer, decorators: [{\n                    type: Optional\n                }, {\n                    type: Host\n                }, {\n                    type: SkipSelf\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NG_VALIDATORS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NG_ASYNC_VALIDATORS]\n                }] }], propDecorators: { name: [{\n                type: Input,\n                args: ['formArrayName']\n            }] } });\nfunction hasInvalidParent(parent) {\n    return (!(parent instanceof FormGroupName) &&\n        !(parent instanceof FormGroupDirective) &&\n        !(parent instanceof FormArrayName));\n}\n\nconst controlNameBinding = {\n    provide: NgControl,\n    useExisting: forwardRef(() => FormControlName),\n};\n/**\n * @description\n * Syncs a `FormControl` in an existing `FormGroup` to a form control\n * element by name.\n *\n * @see [Reactive Forms Guide](guide/forms/reactive-forms)\n * @see {@link FormControl}\n * @see {@link AbstractControl}\n *\n * @usageNotes\n *\n * ### Register `FormControl` within a group\n *\n * The following example shows how to register multiple form controls within a form group\n * and set their value.\n *\n * {@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n *\n * To see `formControlName` examples with different form control types, see:\n *\n * * Radio buttons: `RadioControlValueAccessor`\n * * Selects: `SelectControlValueAccessor`\n *\n * ### Use with ngModel is deprecated\n *\n * Support for using the `ngModel` input property and `ngModelChange` event with reactive\n * form directives has been deprecated in Angular v6 and is scheduled for removal in\n * a future version of Angular.\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nclass FormControlName extends NgControl {\n    _ngModelWarningConfig;\n    _added = false;\n    /**\n     * Internal reference to the view model value.\n     * @internal\n     */\n    viewModel;\n    /**\n     * @description\n     * Tracks the `FormControl` instance bound to the directive.\n     */\n    control;\n    /**\n     * @description\n     * Tracks the name of the `FormControl` bound to the directive. The name corresponds\n     * to a key in the parent `FormGroup` or `FormArray`.\n     * Accepts a name as a string or a number.\n     * The name in the form of a string is useful for individual forms,\n     * while the numerical form allows for form controls to be bound\n     * to indices when iterating over controls in a `FormArray`.\n     */\n    name = null;\n    /**\n     * @description\n     * Triggers a warning in dev mode that this input should not be used with reactive forms.\n     */\n    set isDisabled(isDisabled) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            console.warn(disabledAttrWarning);\n        }\n    }\n    // TODO(kara): remove next 4 properties once deprecation period is over\n    /** @deprecated as of v6 */\n    model;\n    /** @deprecated as of v6 */\n    update = new EventEmitter();\n    /**\n     * @description\n     * Static property used to track whether any ngModel warnings have been sent across\n     * all instances of FormControlName. Used to support warning config of \"once\".\n     *\n     * @internal\n     */\n    static _ngModelWarningSentOnce = false;\n    /**\n     * @description\n     * Instance property used to track whether an ngModel warning has been sent out for this\n     * particular FormControlName instance. Used to support warning config of \"always\".\n     *\n     * @internal\n     */\n    _ngModelWarningSent = false;\n    constructor(parent, validators, asyncValidators, valueAccessors, _ngModelWarningConfig) {\n        super();\n        this._ngModelWarningConfig = _ngModelWarningConfig;\n        this._parent = parent;\n        this._setValidators(validators);\n        this._setAsyncValidators(asyncValidators);\n        this.valueAccessor = selectValueAccessor(this, valueAccessors);\n    }\n    /** @docs-private */\n    ngOnChanges(changes) {\n        if (!this._added)\n            this._setUpControl();\n        if (isPropertyUpdated(changes, this.viewModel)) {\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                _ngModelWarning('formControlName', FormControlName, this, this._ngModelWarningConfig);\n            }\n            this.viewModel = this.model;\n            this.formDirective.updateModel(this, this.model);\n        }\n    }\n    /** @docs-private */\n    ngOnDestroy() {\n        if (this.formDirective) {\n            this.formDirective.removeControl(this);\n        }\n    }\n    /**\n     * @description\n     * Sets the new value for the view model and emits an `ngModelChange` event.\n     *\n     * @param newValue The new value for the view model.\n     */\n    viewToModelUpdate(newValue) {\n        this.viewModel = newValue;\n        this.update.emit(newValue);\n    }\n    /**\n     * @description\n     * Returns an array that represents the path from the top-level form to this control.\n     * Each index is the string name of the control on that level.\n     */\n    get path() {\n        return controlPath(this.name == null ? this.name : this.name.toString(), this._parent);\n    }\n    /**\n     * @description\n     * The top-level directive for this group if present, otherwise null.\n     */\n    get formDirective() {\n        return this._parent ? this._parent.formDirective : null;\n    }\n    _setUpControl() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            checkParentType(this._parent, this.name);\n        }\n        this.control = this.formDirective.addControl(this);\n        this._added = true;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: FormControlName, deps: [{ token: ControlContainer, host: true, optional: true, skipSelf: true }, { token: NG_VALIDATORS, optional: true, self: true }, { token: NG_ASYNC_VALIDATORS, optional: true, self: true }, { token: NG_VALUE_ACCESSOR, optional: true, self: true }, { token: NG_MODEL_WITH_FORM_CONTROL_WARNING, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.1.7\", type: FormControlName, isStandalone: false, selector: \"[formControlName]\", inputs: { name: [\"formControlName\", \"name\"], isDisabled: [\"disabled\", \"isDisabled\"], model: [\"ngModel\", \"model\"] }, outputs: { update: \"ngModelChange\" }, providers: [controlNameBinding], usesInheritance: true, usesOnChanges: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: FormControlName, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[formControlName]',\n                    providers: [controlNameBinding],\n                    standalone: false,\n                }]\n        }], ctorParameters: () => [{ type: ControlContainer, decorators: [{\n                    type: Optional\n                }, {\n                    type: Host\n                }, {\n                    type: SkipSelf\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NG_VALIDATORS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NG_ASYNC_VALIDATORS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NG_VALUE_ACCESSOR]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [NG_MODEL_WITH_FORM_CONTROL_WARNING]\n                }] }], propDecorators: { name: [{\n                type: Input,\n                args: ['formControlName']\n            }], isDisabled: [{\n                type: Input,\n                args: ['disabled']\n            }], model: [{\n                type: Input,\n                args: ['ngModel']\n            }], update: [{\n                type: Output,\n                args: ['ngModelChange']\n            }] } });\nfunction checkParentType(parent, name) {\n    if (!(parent instanceof FormGroupName) && parent instanceof AbstractFormGroupDirective) {\n        throw ngModelGroupException();\n    }\n    else if (!(parent instanceof FormGroupName) &&\n        !(parent instanceof FormGroupDirective) &&\n        !(parent instanceof FormArrayName)) {\n        throw controlParentException(name);\n    }\n}\n\nconst SELECT_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => SelectControlValueAccessor),\n    multi: true,\n};\nfunction _buildValueString$1(id, value) {\n    if (id == null)\n        return `${value}`;\n    if (value && typeof value === 'object')\n        value = 'Object';\n    return `${id}: ${value}`.slice(0, 50);\n}\nfunction _extractId$1(valueString) {\n    return valueString.split(':')[0];\n}\n/**\n * @description\n * The `ControlValueAccessor` for writing select control values and listening to select control\n * changes. The value accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n * @usageNotes\n *\n * ### Using select controls in a reactive form\n *\n * The following examples show how to use a select control in a reactive form.\n *\n * {@example forms/ts/reactiveSelectControl/reactive_select_control_example.ts region='Component'}\n *\n * ### Using select controls in a template-driven form\n *\n * To use a select in a template-driven form, simply add an `ngModel` and a `name`\n * attribute to the main `<select>` tag.\n *\n * {@example forms/ts/selectControl/select_control_example.ts region='Component'}\n *\n * ### Customizing option selection\n *\n * Angular uses object identity to select option. It's possible for the identities of items\n * to change while the data does not. This can happen, for example, if the items are produced\n * from an RPC to the server, and that RPC is re-run. Even if the data hasn't changed, the\n * second response will produce objects with different identities.\n *\n * To customize the default option comparison algorithm, `<select>` supports `compareWith` input.\n * `compareWith` takes a **function** which has two arguments: `option1` and `option2`.\n * If `compareWith` is given, Angular selects option by the return value of the function.\n *\n * ```ts\n * const selectedCountriesControl = new FormControl();\n * ```\n *\n * ```html\n * <select [compareWith]=\"compareFn\"  [formControl]=\"selectedCountriesControl\">\n *    @for(country of countries; track $index) {\n *        <option[ngValue]=\"country\">{{country.name}}</option>\n *    }\n * </select>\n *\n * compareFn(c1: Country, c2: Country): boolean {\n *     return c1 && c2 ? c1.id === c2.id : c1 === c2;\n * }\n * ```\n *\n * **Note:** We listen to the 'change' event because 'input' events aren't fired\n * for selects in IE, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/input_event#browser_compatibility\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass SelectControlValueAccessor extends BuiltInControlValueAccessor {\n    /** @docs-private */\n    value;\n    /** @internal */\n    _optionMap = new Map();\n    /** @internal */\n    _idCounter = 0;\n    /**\n     * @description\n     * Tracks the option comparison algorithm for tracking identities when\n     * checking for changes.\n     */\n    set compareWith(fn) {\n        if (typeof fn !== 'function' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw new _RuntimeError(1201 /* RuntimeErrorCode.COMPAREWITH_NOT_A_FN */, `compareWith must be a function, but received ${JSON.stringify(fn)}`);\n        }\n        this._compareWith = fn;\n    }\n    _compareWith = Object.is;\n    // We need this because we might be in the process of destroying the root\n    // injector, which is marked as destroyed before running destroy hooks.\n    // Attempting to use afterNextRender with the node injector would evntually\n    // run into that already destroyed injector.\n    appRefInjector = inject(ApplicationRef).injector;\n    destroyRef = inject(DestroyRef);\n    cdr = inject(ChangeDetectorRef);\n    _queuedWrite = false;\n    /**\n     * This is needed to efficiently set the select value when adding/removing options. If\n     * writeValue is instead called for every added/removed option, this results in exponentially\n     * more _compareValue calls than the number of option elements (issue #41330).\n     *\n     * Secondly, calling writeValue when rendering individual option elements instead of after they\n     * are all rendered caused an issue in Safari and IE 11 where the first option element failed\n     * to be deselected when no option matched the select ngModel. This was because Angular would\n     * set the select element's value property before appending the option's child text node to the\n     * DOM (issue #14505).\n     *\n     * Finally, this approach is necessary to avoid an issue with delayed element removal when\n     * using the animations module (in all browsers). Otherwise when a selected option is removed\n     * (so no option matches the ngModel anymore), Angular would change the select element value\n     * before actually removing the option from the DOM. Then when the option is finally removed\n     * from the DOM, the browser would change the select value to that of the first option, even\n     * though it doesn't match the ngModel (issue #18430).\n     *\n     * @internal\n     */\n    _writeValueAfterRender() {\n        if (this._queuedWrite || this.appRefInjector.destroyed) {\n            return;\n        }\n        this._queuedWrite = true;\n        afterNextRender({\n            write: () => {\n                if (this.destroyRef.destroyed) {\n                    return;\n                }\n                this._queuedWrite = false;\n                this.writeValue(this.value);\n            },\n        }, { injector: this.appRefInjector });\n    }\n    /**\n     * Sets the \"value\" property on the select element.\n     * @docs-private\n     */\n    writeValue(value) {\n        // TODO(atscott): This could likely be optimized more by only marking for check if the value is changed\n        // note that this needs to include both the internal value and the value in the DOM.\n        this.cdr.markForCheck();\n        this.value = value;\n        const id = this._getOptionId(value);\n        const valueString = _buildValueString$1(id, value);\n        this.setProperty('value', valueString);\n    }\n    /**\n     * Registers a function called when the control value changes.\n     * @docs-private\n     */\n    registerOnChange(fn) {\n        this.onChange = (valueString) => {\n            this.value = this._getOptionValue(valueString);\n            fn(this.value);\n        };\n    }\n    /** @internal */\n    _registerOption() {\n        return (this._idCounter++).toString();\n    }\n    /** @internal */\n    _getOptionId(value) {\n        for (const id of this._optionMap.keys()) {\n            if (this._compareWith(this._optionMap.get(id), value))\n                return id;\n        }\n        return null;\n    }\n    /** @internal */\n    _getOptionValue(valueString) {\n        const id = _extractId$1(valueString);\n        return this._optionMap.has(id) ? this._optionMap.get(id) : valueString;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: SelectControlValueAccessor, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.1.7\", type: SelectControlValueAccessor, isStandalone: false, selector: \"select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]\", inputs: { compareWith: \"compareWith\" }, host: { listeners: { \"change\": \"onChange($any($event.target).value)\", \"blur\": \"onTouched()\" } }, providers: [SELECT_VALUE_ACCESSOR], usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: SelectControlValueAccessor, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]',\n                    host: { '(change)': 'onChange($any($event.target).value)', '(blur)': 'onTouched()' },\n                    providers: [SELECT_VALUE_ACCESSOR],\n                    standalone: false,\n                }]\n        }], propDecorators: { compareWith: [{\n                type: Input\n            }] } });\n/**\n * @description\n * Marks `<option>` as dynamic, so Angular can be notified when options change.\n *\n * @see {@link SelectControlValueAccessor}\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass NgSelectOption {\n    _element;\n    _renderer;\n    _select;\n    /**\n     * @description\n     * ID of the option element\n     */\n    id;\n    constructor(_element, _renderer, _select) {\n        this._element = _element;\n        this._renderer = _renderer;\n        this._select = _select;\n        if (this._select)\n            this.id = this._select._registerOption();\n    }\n    /**\n     * @description\n     * Tracks the value bound to the option element. Unlike the value binding,\n     * ngValue supports binding to objects.\n     */\n    set ngValue(value) {\n        if (this._select == null)\n            return;\n        this._select._optionMap.set(this.id, value);\n        this._setElementValue(_buildValueString$1(this.id, value));\n        this._select._writeValueAfterRender();\n    }\n    /**\n     * @description\n     * Tracks simple string values bound to the option element.\n     * For objects, use the `ngValue` input binding.\n     */\n    set value(value) {\n        this._setElementValue(value);\n        if (this._select)\n            this._select._writeValueAfterRender();\n    }\n    /** @internal */\n    _setElementValue(value) {\n        this._renderer.setProperty(this._element.nativeElement, 'value', value);\n    }\n    /** @docs-private */\n    ngOnDestroy() {\n        if (this._select) {\n            this._select._optionMap.delete(this.id);\n            this._select._writeValueAfterRender();\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: NgSelectOption, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }, { token: SelectControlValueAccessor, host: true, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.1.7\", type: NgSelectOption, isStandalone: false, selector: \"option\", inputs: { ngValue: \"ngValue\", value: \"value\" }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: NgSelectOption, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'option',\n                    standalone: false,\n                }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: i0.Renderer2 }, { type: SelectControlValueAccessor, decorators: [{\n                    type: Optional\n                }, {\n                    type: Host\n                }] }], propDecorators: { ngValue: [{\n                type: Input,\n                args: ['ngValue']\n            }], value: [{\n                type: Input,\n                args: ['value']\n            }] } });\n\nconst SELECT_MULTIPLE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => SelectMultipleControlValueAccessor),\n    multi: true,\n};\nfunction _buildValueString(id, value) {\n    if (id == null)\n        return `${value}`;\n    if (typeof value === 'string')\n        value = `'${value}'`;\n    if (value && typeof value === 'object')\n        value = 'Object';\n    return `${id}: ${value}`.slice(0, 50);\n}\nfunction _extractId(valueString) {\n    return valueString.split(':')[0];\n}\n/**\n * @description\n * The `ControlValueAccessor` for writing multi-select control values and listening to multi-select\n * control changes. The value accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n * @see {@link SelectControlValueAccessor}\n *\n * @usageNotes\n *\n * ### Using a multi-select control\n *\n * The follow example shows you how to use a multi-select control with a reactive form.\n *\n * ```ts\n * const countryControl = new FormControl();\n * ```\n *\n * ```html\n * <select multiple name=\"countries\" [formControl]=\"countryControl\">\n *   @for(country of countries; track $index) {\n *      <option [ngValue]=\"country\">{{ country.name }}</option>\n *   }\n * </select>\n * ```\n *\n * ### Customizing option selection\n *\n * To customize the default option comparison algorithm, `<select>` supports `compareWith` input.\n * See the `SelectControlValueAccessor` for usage.\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass SelectMultipleControlValueAccessor extends BuiltInControlValueAccessor {\n    /**\n     * The current value.\n     * @docs-private\n     */\n    value;\n    /** @internal */\n    _optionMap = new Map();\n    /** @internal */\n    _idCounter = 0;\n    /**\n     * @description\n     * Tracks the option comparison algorithm for tracking identities when\n     * checking for changes.\n     */\n    set compareWith(fn) {\n        if (typeof fn !== 'function' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw new _RuntimeError(1201 /* RuntimeErrorCode.COMPAREWITH_NOT_A_FN */, `compareWith must be a function, but received ${JSON.stringify(fn)}`);\n        }\n        this._compareWith = fn;\n    }\n    _compareWith = Object.is;\n    /**\n     * Sets the \"value\" property on one or of more of the select's options.\n     * @docs-private\n     */\n    writeValue(value) {\n        this.value = value;\n        let optionSelectedStateSetter;\n        if (Array.isArray(value)) {\n            // convert values to ids\n            const ids = value.map((v) => this._getOptionId(v));\n            optionSelectedStateSetter = (opt, o) => {\n                opt._setSelected(ids.indexOf(o.toString()) > -1);\n            };\n        }\n        else {\n            optionSelectedStateSetter = (opt, o) => {\n                opt._setSelected(false);\n            };\n        }\n        this._optionMap.forEach(optionSelectedStateSetter);\n    }\n    /**\n     * Registers a function called when the control value changes\n     * and writes an array of the selected options.\n     * @docs-private\n     */\n    registerOnChange(fn) {\n        this.onChange = (element) => {\n            const selected = [];\n            const selectedOptions = element.selectedOptions;\n            if (selectedOptions !== undefined) {\n                const options = selectedOptions;\n                for (let i = 0; i < options.length; i++) {\n                    const opt = options[i];\n                    const val = this._getOptionValue(opt.value);\n                    selected.push(val);\n                }\n            }\n            // Degrade to use `options` when `selectedOptions` property is not available.\n            // Note: the `selectedOptions` is available in all supported browsers, but the Domino lib\n            // doesn't have it currently, see https://github.com/fgnass/domino/issues/177.\n            else {\n                const options = element.options;\n                for (let i = 0; i < options.length; i++) {\n                    const opt = options[i];\n                    if (opt.selected) {\n                        const val = this._getOptionValue(opt.value);\n                        selected.push(val);\n                    }\n                }\n            }\n            this.value = selected;\n            fn(selected);\n        };\n    }\n    /** @internal */\n    _registerOption(value) {\n        const id = (this._idCounter++).toString();\n        this._optionMap.set(id, value);\n        return id;\n    }\n    /** @internal */\n    _getOptionId(value) {\n        for (const id of this._optionMap.keys()) {\n            if (this._compareWith(this._optionMap.get(id)._value, value))\n                return id;\n        }\n        return null;\n    }\n    /** @internal */\n    _getOptionValue(valueString) {\n        const id = _extractId(valueString);\n        return this._optionMap.has(id) ? this._optionMap.get(id)._value : valueString;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: SelectMultipleControlValueAccessor, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.1.7\", type: SelectMultipleControlValueAccessor, isStandalone: false, selector: \"select[multiple][formControlName],select[multiple][formControl],select[multiple][ngModel]\", inputs: { compareWith: \"compareWith\" }, host: { listeners: { \"change\": \"onChange($event.target)\", \"blur\": \"onTouched()\" } }, providers: [SELECT_MULTIPLE_VALUE_ACCESSOR], usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: SelectMultipleControlValueAccessor, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'select[multiple][formControlName],select[multiple][formControl],select[multiple][ngModel]',\n                    host: { '(change)': 'onChange($event.target)', '(blur)': 'onTouched()' },\n                    providers: [SELECT_MULTIPLE_VALUE_ACCESSOR],\n                    standalone: false,\n                }]\n        }], propDecorators: { compareWith: [{\n                type: Input\n            }] } });\n/**\n * @description\n * Marks `<option>` as dynamic, so Angular can be notified when options change.\n *\n * @see {@link SelectMultipleControlValueAccessor}\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass ɵNgSelectMultipleOption {\n    _element;\n    _renderer;\n    _select;\n    id;\n    /** @internal */\n    _value;\n    constructor(_element, _renderer, _select) {\n        this._element = _element;\n        this._renderer = _renderer;\n        this._select = _select;\n        if (this._select) {\n            this.id = this._select._registerOption(this);\n        }\n    }\n    /**\n     * @description\n     * Tracks the value bound to the option element. Unlike the value binding,\n     * ngValue supports binding to objects.\n     */\n    set ngValue(value) {\n        if (this._select == null)\n            return;\n        this._value = value;\n        this._setElementValue(_buildValueString(this.id, value));\n        this._select.writeValue(this._select.value);\n    }\n    /**\n     * @description\n     * Tracks simple string values bound to the option element.\n     * For objects, use the `ngValue` input binding.\n     */\n    set value(value) {\n        if (this._select) {\n            this._value = value;\n            this._setElementValue(_buildValueString(this.id, value));\n            this._select.writeValue(this._select.value);\n        }\n        else {\n            this._setElementValue(value);\n        }\n    }\n    /** @internal */\n    _setElementValue(value) {\n        this._renderer.setProperty(this._element.nativeElement, 'value', value);\n    }\n    /** @internal */\n    _setSelected(selected) {\n        this._renderer.setProperty(this._element.nativeElement, 'selected', selected);\n    }\n    /** @docs-private */\n    ngOnDestroy() {\n        if (this._select) {\n            this._select._optionMap.delete(this.id);\n            this._select.writeValue(this._select.value);\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: ɵNgSelectMultipleOption, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }, { token: SelectMultipleControlValueAccessor, host: true, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.1.7\", type: ɵNgSelectMultipleOption, isStandalone: false, selector: \"option\", inputs: { ngValue: \"ngValue\", value: \"value\" }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: ɵNgSelectMultipleOption, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'option',\n                    standalone: false,\n                }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: i0.Renderer2 }, { type: SelectMultipleControlValueAccessor, decorators: [{\n                    type: Optional\n                }, {\n                    type: Host\n                }] }], propDecorators: { ngValue: [{\n                type: Input,\n                args: ['ngValue']\n            }], value: [{\n                type: Input,\n                args: ['value']\n            }] } });\n\n/**\n * Method that updates string to integer if not already a number\n *\n * @param value The value to convert to integer.\n * @returns value of parameter converted to number or integer.\n */\nfunction toInteger(value) {\n    return typeof value === 'number' ? value : parseInt(value, 10);\n}\n/**\n * Method that ensures that provided value is a float (and converts it to float if needed).\n *\n * @param value The value to convert to float.\n * @returns value of parameter converted to number or float.\n */\nfunction toFloat(value) {\n    return typeof value === 'number' ? value : parseFloat(value);\n}\n/**\n * A base class for Validator-based Directives. The class contains common logic shared across such\n * Directives.\n *\n * For internal use only, this class is not intended for use outside of the Forms package.\n */\nclass AbstractValidatorDirective {\n    _validator = nullValidator;\n    _onChange;\n    /**\n     * A flag that tracks whether this validator is enabled.\n     *\n     * Marking it `internal` (vs `protected`), so that this flag can be used in host bindings of\n     * directive classes that extend this base class.\n     * @internal\n     */\n    _enabled;\n    /** @docs-private */\n    ngOnChanges(changes) {\n        if (this.inputName in changes) {\n            const input = this.normalizeInput(changes[this.inputName].currentValue);\n            this._enabled = this.enabled(input);\n            this._validator = this._enabled ? this.createValidator(input) : nullValidator;\n            if (this._onChange) {\n                this._onChange();\n            }\n        }\n    }\n    /** @docs-private */\n    validate(control) {\n        return this._validator(control);\n    }\n    /** @docs-private */\n    registerOnValidatorChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * @description\n     * Determines whether this validator should be active or not based on an input.\n     * Base class implementation checks whether an input is defined (if the value is different from\n     * `null` and `undefined`). Validator classes that extend this base class can override this\n     * function with the logic specific to a particular validator directive.\n     */\n    enabled(input) {\n        return input != null /* both `null` and `undefined` */;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: AbstractValidatorDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.1.7\", type: AbstractValidatorDirective, isStandalone: true, usesOnChanges: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: AbstractValidatorDirective, decorators: [{\n            type: Directive\n        }] });\n/**\n * @description\n * Provider which adds `MaxValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst MAX_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MaxValidator),\n    multi: true,\n};\n/**\n * A directive which installs the {@link MaxValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `max` attribute.\n *\n * @see [Form Validation](guide/forms/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a max validator\n *\n * The following example shows how to add a max validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input type=\"number\" ngModel max=\"4\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass MaxValidator extends AbstractValidatorDirective {\n    /**\n     * @description\n     * Tracks changes to the max bound to this directive.\n     */\n    max;\n    /** @internal */\n    inputName = 'max';\n    /** @internal */\n    normalizeInput = (input) => toFloat(input);\n    /** @internal */\n    createValidator = (max) => maxValidator(max);\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: MaxValidator, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.1.7\", type: MaxValidator, isStandalone: false, selector: \"input[type=number][max][formControlName],input[type=number][max][formControl],input[type=number][max][ngModel]\", inputs: { max: \"max\" }, host: { properties: { \"attr.max\": \"_enabled ? max : null\" } }, providers: [MAX_VALIDATOR], usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: MaxValidator, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input[type=number][max][formControlName],input[type=number][max][formControl],input[type=number][max][ngModel]',\n                    providers: [MAX_VALIDATOR],\n                    host: { '[attr.max]': '_enabled ? max : null' },\n                    standalone: false,\n                }]\n        }], propDecorators: { max: [{\n                type: Input\n            }] } });\n/**\n * @description\n * Provider which adds `MinValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst MIN_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MinValidator),\n    multi: true,\n};\n/**\n * A directive which installs the {@link MinValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `min` attribute.\n *\n * @see [Form Validation](guide/forms/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a min validator\n *\n * The following example shows how to add a min validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input type=\"number\" ngModel min=\"4\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass MinValidator extends AbstractValidatorDirective {\n    /**\n     * @description\n     * Tracks changes to the min bound to this directive.\n     */\n    min;\n    /** @internal */\n    inputName = 'min';\n    /** @internal */\n    normalizeInput = (input) => toFloat(input);\n    /** @internal */\n    createValidator = (min) => minValidator(min);\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: MinValidator, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.1.7\", type: MinValidator, isStandalone: false, selector: \"input[type=number][min][formControlName],input[type=number][min][formControl],input[type=number][min][ngModel]\", inputs: { min: \"min\" }, host: { properties: { \"attr.min\": \"_enabled ? min : null\" } }, providers: [MIN_VALIDATOR], usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: MinValidator, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input[type=number][min][formControlName],input[type=number][min][formControl],input[type=number][min][ngModel]',\n                    providers: [MIN_VALIDATOR],\n                    host: { '[attr.min]': '_enabled ? min : null' },\n                    standalone: false,\n                }]\n        }], propDecorators: { min: [{\n                type: Input\n            }] } });\n/**\n * @description\n * Provider which adds `RequiredValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => RequiredValidator),\n    multi: true,\n};\n/**\n * @description\n * Provider which adds `CheckboxRequiredValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst CHECKBOX_REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => CheckboxRequiredValidator),\n    multi: true,\n};\n/**\n * @description\n * A directive that adds the `required` validator to any controls marked with the\n * `required` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/forms/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a required validator using template-driven forms\n *\n * ```html\n * <input name=\"fullName\" ngModel required>\n * ```\n *\n * @ngModule FormsModule\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nclass RequiredValidator extends AbstractValidatorDirective {\n    /**\n     * @description\n     * Tracks changes to the required attribute bound to this directive.\n     */\n    required;\n    /** @internal */\n    inputName = 'required';\n    /** @internal */\n    normalizeInput = booleanAttribute;\n    /** @internal */\n    createValidator = (input) => requiredValidator;\n    /** @docs-private */\n    enabled(input) {\n        return input;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: RequiredValidator, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.1.7\", type: RequiredValidator, isStandalone: false, selector: \":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]\", inputs: { required: \"required\" }, host: { properties: { \"attr.required\": \"_enabled ? \\\"\\\" : null\" } }, providers: [REQUIRED_VALIDATOR], usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: RequiredValidator, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: ':not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]',\n                    providers: [REQUIRED_VALIDATOR],\n                    host: { '[attr.required]': '_enabled ? \"\" : null' },\n                    standalone: false,\n                }]\n        }], propDecorators: { required: [{\n                type: Input\n            }] } });\n/**\n * A Directive that adds the `required` validator to checkbox controls marked with the\n * `required` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/forms/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a required checkbox validator using template-driven forms\n *\n * The following example shows how to add a checkbox required validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input type=\"checkbox\" name=\"active\" ngModel required>\n * ```\n *\n * @publicApi\n * @ngModule FormsModule\n * @ngModule ReactiveFormsModule\n */\nclass CheckboxRequiredValidator extends RequiredValidator {\n    /** @internal */\n    createValidator = (input) => requiredTrueValidator;\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: CheckboxRequiredValidator, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.1.7\", type: CheckboxRequiredValidator, isStandalone: false, selector: \"input[type=checkbox][required][formControlName],input[type=checkbox][required][formControl],input[type=checkbox][required][ngModel]\", host: { properties: { \"attr.required\": \"_enabled ? \\\"\\\" : null\" } }, providers: [CHECKBOX_REQUIRED_VALIDATOR], usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: CheckboxRequiredValidator, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input[type=checkbox][required][formControlName],input[type=checkbox][required][formControl],input[type=checkbox][required][ngModel]',\n                    providers: [CHECKBOX_REQUIRED_VALIDATOR],\n                    host: { '[attr.required]': '_enabled ? \"\" : null' },\n                    standalone: false,\n                }]\n        }] });\n/**\n * @description\n * Provider which adds `EmailValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst EMAIL_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => EmailValidator),\n    multi: true,\n};\n/**\n * A directive that adds the `email` validator to controls marked with the\n * `email` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * The email validation is based on the WHATWG HTML specification with some enhancements to\n * incorporate more RFC rules. More information can be found on the [Validators.email\n * page](api/forms/Validators#email).\n *\n * @see [Form Validation](guide/forms/form-validation)\n *\n * @usageNotes\n *\n * ### Adding an email validator\n *\n * The following example shows how to add an email validator to an input attached to an ngModel\n * binding.\n *\n * ```html\n * <input type=\"email\" name=\"email\" ngModel email>\n * <input type=\"email\" name=\"email\" ngModel email=\"true\">\n * <input type=\"email\" name=\"email\" ngModel [email]=\"true\">\n * ```\n *\n * @publicApi\n * @ngModule FormsModule\n * @ngModule ReactiveFormsModule\n */\nclass EmailValidator extends AbstractValidatorDirective {\n    /**\n     * @description\n     * Tracks changes to the email attribute bound to this directive.\n     */\n    email;\n    /** @internal */\n    inputName = 'email';\n    /** @internal */\n    normalizeInput = booleanAttribute;\n    /** @internal */\n    createValidator = (input) => emailValidator;\n    /** @docs-private */\n    enabled(input) {\n        return input;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: EmailValidator, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.1.7\", type: EmailValidator, isStandalone: false, selector: \"[email][formControlName],[email][formControl],[email][ngModel]\", inputs: { email: \"email\" }, providers: [EMAIL_VALIDATOR], usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: EmailValidator, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[email][formControlName],[email][formControl],[email][ngModel]',\n                    providers: [EMAIL_VALIDATOR],\n                    standalone: false,\n                }]\n        }], propDecorators: { email: [{\n                type: Input\n            }] } });\n/**\n * @description\n * Provider which adds `MinLengthValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst MIN_LENGTH_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MinLengthValidator),\n    multi: true,\n};\n/**\n * A directive that adds minimum length validation to controls marked with the\n * `minlength` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/forms/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a minimum length validator\n *\n * The following example shows how to add a minimum length validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input name=\"firstName\" ngModel minlength=\"4\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass MinLengthValidator extends AbstractValidatorDirective {\n    /**\n     * @description\n     * Tracks changes to the minimum length bound to this directive.\n     */\n    minlength;\n    /** @internal */\n    inputName = 'minlength';\n    /** @internal */\n    normalizeInput = (input) => toInteger(input);\n    /** @internal */\n    createValidator = (minlength) => minLengthValidator(minlength);\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: MinLengthValidator, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.1.7\", type: MinLengthValidator, isStandalone: false, selector: \"[minlength][formControlName],[minlength][formControl],[minlength][ngModel]\", inputs: { minlength: \"minlength\" }, host: { properties: { \"attr.minlength\": \"_enabled ? minlength : null\" } }, providers: [MIN_LENGTH_VALIDATOR], usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: MinLengthValidator, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[minlength][formControlName],[minlength][formControl],[minlength][ngModel]',\n                    providers: [MIN_LENGTH_VALIDATOR],\n                    host: { '[attr.minlength]': '_enabled ? minlength : null' },\n                    standalone: false,\n                }]\n        }], propDecorators: { minlength: [{\n                type: Input\n            }] } });\n/**\n * @description\n * Provider which adds `MaxLengthValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst MAX_LENGTH_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MaxLengthValidator),\n    multi: true,\n};\n/**\n * A directive that adds maximum length validation to controls marked with the\n * `maxlength` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/forms/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a maximum length validator\n *\n * The following example shows how to add a maximum length validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input name=\"firstName\" ngModel maxlength=\"25\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass MaxLengthValidator extends AbstractValidatorDirective {\n    /**\n     * @description\n     * Tracks changes to the maximum length bound to this directive.\n     */\n    maxlength;\n    /** @internal */\n    inputName = 'maxlength';\n    /** @internal */\n    normalizeInput = (input) => toInteger(input);\n    /** @internal */\n    createValidator = (maxlength) => maxLengthValidator(maxlength);\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: MaxLengthValidator, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.1.7\", type: MaxLengthValidator, isStandalone: false, selector: \"[maxlength][formControlName],[maxlength][formControl],[maxlength][ngModel]\", inputs: { maxlength: \"maxlength\" }, host: { properties: { \"attr.maxlength\": \"_enabled ? maxlength : null\" } }, providers: [MAX_LENGTH_VALIDATOR], usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: MaxLengthValidator, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[maxlength][formControlName],[maxlength][formControl],[maxlength][ngModel]',\n                    providers: [MAX_LENGTH_VALIDATOR],\n                    host: { '[attr.maxlength]': '_enabled ? maxlength : null' },\n                    standalone: false,\n                }]\n        }], propDecorators: { maxlength: [{\n                type: Input\n            }] } });\n/**\n * @description\n * Provider which adds `PatternValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst PATTERN_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => PatternValidator),\n    multi: true,\n};\n/**\n * @description\n * A directive that adds regex pattern validation to controls marked with the\n * `pattern` attribute. The regex must match the entire control value.\n * The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/forms/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a pattern validator\n *\n * The following example shows how to add a pattern validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input name=\"firstName\" ngModel pattern=\"[a-zA-Z ]*\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass PatternValidator extends AbstractValidatorDirective {\n    /**\n     * @description\n     * Tracks changes to the pattern bound to this directive.\n     */\n    pattern; // This input is always defined, since the name matches selector.\n    /** @internal */\n    inputName = 'pattern';\n    /** @internal */\n    normalizeInput = (input) => input;\n    /** @internal */\n    createValidator = (input) => patternValidator(input);\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: PatternValidator, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.1.7\", type: PatternValidator, isStandalone: false, selector: \"[pattern][formControlName],[pattern][formControl],[pattern][ngModel]\", inputs: { pattern: \"pattern\" }, host: { properties: { \"attr.pattern\": \"_enabled ? pattern : null\" } }, providers: [PATTERN_VALIDATOR], usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: PatternValidator, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[pattern][formControlName],[pattern][formControl],[pattern][ngModel]',\n                    providers: [PATTERN_VALIDATOR],\n                    host: { '[attr.pattern]': '_enabled ? pattern : null' },\n                    standalone: false,\n                }]\n        }], propDecorators: { pattern: [{\n                type: Input\n            }] } });\n\nconst SHARED_FORM_DIRECTIVES = [\n    ɵNgNoValidate,\n    NgSelectOption,\n    ɵNgSelectMultipleOption,\n    DefaultValueAccessor,\n    NumberValueAccessor,\n    RangeValueAccessor,\n    CheckboxControlValueAccessor,\n    SelectControlValueAccessor,\n    SelectMultipleControlValueAccessor,\n    RadioControlValueAccessor,\n    NgControlStatus,\n    NgControlStatusGroup,\n    RequiredValidator,\n    MinLengthValidator,\n    MaxLengthValidator,\n    PatternValidator,\n    CheckboxRequiredValidator,\n    EmailValidator,\n    MinValidator,\n    MaxValidator,\n];\nconst TEMPLATE_DRIVEN_DIRECTIVES = [NgModel, NgModelGroup, NgForm];\nconst REACTIVE_DRIVEN_DIRECTIVES = [\n    FormControlDirective,\n    FormGroupDirective,\n    FormControlName,\n    FormGroupName,\n    FormArrayName,\n];\n/**\n * Internal module used for sharing directives between FormsModule and ReactiveFormsModule\n */\nclass ɵInternalFormsSharedModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: ɵInternalFormsSharedModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.1.7\", ngImport: i0, type: ɵInternalFormsSharedModule, declarations: [ɵNgNoValidate,\n            NgSelectOption,\n            ɵNgSelectMultipleOption,\n            DefaultValueAccessor,\n            NumberValueAccessor,\n            RangeValueAccessor,\n            CheckboxControlValueAccessor,\n            SelectControlValueAccessor,\n            SelectMultipleControlValueAccessor,\n            RadioControlValueAccessor,\n            NgControlStatus,\n            NgControlStatusGroup,\n            RequiredValidator,\n            MinLengthValidator,\n            MaxLengthValidator,\n            PatternValidator,\n            CheckboxRequiredValidator,\n            EmailValidator,\n            MinValidator,\n            MaxValidator], exports: [ɵNgNoValidate,\n            NgSelectOption,\n            ɵNgSelectMultipleOption,\n            DefaultValueAccessor,\n            NumberValueAccessor,\n            RangeValueAccessor,\n            CheckboxControlValueAccessor,\n            SelectControlValueAccessor,\n            SelectMultipleControlValueAccessor,\n            RadioControlValueAccessor,\n            NgControlStatus,\n            NgControlStatusGroup,\n            RequiredValidator,\n            MinLengthValidator,\n            MaxLengthValidator,\n            PatternValidator,\n            CheckboxRequiredValidator,\n            EmailValidator,\n            MinValidator,\n            MaxValidator] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: ɵInternalFormsSharedModule });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: ɵInternalFormsSharedModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: SHARED_FORM_DIRECTIVES,\n                    exports: SHARED_FORM_DIRECTIVES,\n                }]\n        }] });\n\n/**\n * Tracks the value and validity state of an array of `FormControl`,\n * `FormGroup` or `FormArray` instances.\n *\n * A `FormArray` aggregates the values of each child `FormControl` into an array.\n * It calculates its status by reducing the status values of its children. For example, if one of\n * the controls in a `FormArray` is invalid, the entire array becomes invalid.\n *\n * `FormArray` accepts one generic argument, which is the type of the controls inside.\n * If you need a heterogenous array, use {@link UntypedFormArray}.\n *\n * `FormArray` is one of the four fundamental building blocks used to define forms in Angular,\n * along with `FormControl`, `FormGroup`, and `FormRecord`.\n *\n * @usageNotes\n *\n * ### Create an array of form controls\n *\n * ```ts\n * const arr = new FormArray([\n *   new FormControl('Nancy', Validators.minLength(2)),\n *   new FormControl('Drew'),\n * ]);\n *\n * console.log(arr.value);   // ['Nancy', 'Drew']\n * console.log(arr.status);  // 'VALID'\n * ```\n *\n * ### Create a form array with array-level validators\n *\n * You include array-level validators and async validators. These come in handy\n * when you want to perform validation that considers the value of more than one child\n * control.\n *\n * The two types of validators are passed in separately as the second and third arg\n * respectively, or together as part of an options object.\n *\n * ```ts\n * const arr = new FormArray([\n *   new FormControl('Nancy'),\n *   new FormControl('Drew')\n * ], {validators: myValidator, asyncValidators: myAsyncValidator});\n * ```\n *\n * ### Set the updateOn property for all controls in a form array\n *\n * The options object is used to set a default value for each child\n * control's `updateOn` property. If you set `updateOn` to `'blur'` at the\n * array level, all child controls default to 'blur', unless the child\n * has explicitly specified a different `updateOn` value.\n *\n * ```ts\n * const arr = new FormArray([\n *    new FormControl()\n * ], {updateOn: 'blur'});\n * ```\n *\n * ### Adding or removing controls from a form array\n *\n * To change the controls in the array, use the `push`, `insert`, `removeAt` or `clear` methods\n * in `FormArray` itself. These methods ensure the controls are properly tracked in the\n * form's hierarchy. Do not modify the array of `AbstractControl`s used to instantiate\n * the `FormArray` directly, as that result in strange and unexpected behavior such\n * as broken change detection.\n *\n * @publicApi\n */\nclass FormArray extends AbstractControl {\n    /**\n     * Creates a new `FormArray` instance.\n     *\n     * @param controls An array of child controls. Each child control is given an index\n     * where it is registered.\n     *\n     * @param validatorOrOpts A synchronous validator function, or an array of\n     * such functions, or an `AbstractControlOptions` object that contains validation functions\n     * and a validation trigger.\n     *\n     * @param asyncValidator A single async validator or array of async validator functions\n     *\n     */\n    constructor(controls, validatorOrOpts, asyncValidator) {\n        super(pickValidators(validatorOrOpts), pickAsyncValidators(asyncValidator, validatorOrOpts));\n        this.controls = controls;\n        this._initObservables();\n        this._setUpdateStrategy(validatorOrOpts);\n        this._setUpControls();\n        this.updateValueAndValidity({\n            onlySelf: true,\n            // If `asyncValidator` is present, it will trigger control status change from `PENDING` to\n            // `VALID` or `INVALID`.\n            // The status should be broadcasted via the `statusChanges` observable, so we set `emitEvent`\n            // to `true` to allow that during the control creation process.\n            emitEvent: !!this.asyncValidator,\n        });\n    }\n    controls;\n    /**\n     * Get the `AbstractControl` at the given `index` in the array.\n     *\n     * @param index Index in the array to retrieve the control. If `index` is negative, it will wrap\n     *     around from the back, and if index is greatly negative (less than `-length`), the result is\n     * undefined. This behavior is the same as `Array.at(index)`.\n     */\n    at(index) {\n        return this.controls[this._adjustIndex(index)];\n    }\n    /**\n     * Insert a new `AbstractControl` at the end of the array.\n     *\n     * @param control Form control to be inserted\n     * @param options Specifies whether this FormArray instance should emit events after a new\n     *     control is added.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges` observables emit events with the latest status and value when the control is\n     * inserted. When false, no events are emitted.\n     */\n    push(control, options = {}) {\n        this.controls.push(control);\n        this._registerControl(control);\n        this.updateValueAndValidity({ emitEvent: options.emitEvent });\n        this._onCollectionChange();\n    }\n    /**\n     * Insert a new `AbstractControl` at the given `index` in the array.\n     *\n     * @param index Index in the array to insert the control. If `index` is negative, wraps around\n     *     from the back. If `index` is greatly negative (less than `-length`), prepends to the array.\n     * This behavior is the same as `Array.splice(index, 0, control)`.\n     * @param control Form control to be inserted\n     * @param options Specifies whether this FormArray instance should emit events after a new\n     *     control is inserted.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges` observables emit events with the latest status and value when the control is\n     * inserted. When false, no events are emitted.\n     */\n    insert(index, control, options = {}) {\n        this.controls.splice(index, 0, control);\n        this._registerControl(control);\n        this.updateValueAndValidity({ emitEvent: options.emitEvent });\n    }\n    /**\n     * Remove the control at the given `index` in the array.\n     *\n     * @param index Index in the array to remove the control.  If `index` is negative, wraps around\n     *     from the back. If `index` is greatly negative (less than `-length`), removes the first\n     *     element. This behavior is the same as `Array.splice(index, 1)`.\n     * @param options Specifies whether this FormArray instance should emit events after a\n     *     control is removed.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges` observables emit events with the latest status and value when the control is\n     * removed. When false, no events are emitted.\n     */\n    removeAt(index, options = {}) {\n        // Adjust the index, then clamp it at no less than 0 to prevent undesired underflows.\n        let adjustedIndex = this._adjustIndex(index);\n        if (adjustedIndex < 0)\n            adjustedIndex = 0;\n        if (this.controls[adjustedIndex])\n            this.controls[adjustedIndex]._registerOnCollectionChange(() => { });\n        this.controls.splice(adjustedIndex, 1);\n        this.updateValueAndValidity({ emitEvent: options.emitEvent });\n    }\n    /**\n     * Replace an existing control.\n     *\n     * @param index Index in the array to replace the control. If `index` is negative, wraps around\n     *     from the back. If `index` is greatly negative (less than `-length`), replaces the first\n     *     element. This behavior is the same as `Array.splice(index, 1, control)`.\n     * @param control The `AbstractControl` control to replace the existing control\n     * @param options Specifies whether this FormArray instance should emit events after an\n     *     existing control is replaced with a new one.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges` observables emit events with the latest status and value when the control is\n     * replaced with a new one. When false, no events are emitted.\n     */\n    setControl(index, control, options = {}) {\n        // Adjust the index, then clamp it at no less than 0 to prevent undesired underflows.\n        let adjustedIndex = this._adjustIndex(index);\n        if (adjustedIndex < 0)\n            adjustedIndex = 0;\n        if (this.controls[adjustedIndex])\n            this.controls[adjustedIndex]._registerOnCollectionChange(() => { });\n        this.controls.splice(adjustedIndex, 1);\n        if (control) {\n            this.controls.splice(adjustedIndex, 0, control);\n            this._registerControl(control);\n        }\n        this.updateValueAndValidity({ emitEvent: options.emitEvent });\n        this._onCollectionChange();\n    }\n    /**\n     * Length of the control array.\n     */\n    get length() {\n        return this.controls.length;\n    }\n    /**\n     * Sets the value of the `FormArray`. It accepts an array that matches\n     * the structure of the control.\n     *\n     * This method performs strict checks, and throws an error if you try\n     * to set the value of a control that doesn't exist or if you exclude the\n     * value of a control.\n     *\n     * @usageNotes\n     * ### Set the values for the controls in the form array\n     *\n     * ```ts\n     * const arr = new FormArray([\n     *   new FormControl(),\n     *   new FormControl()\n     * ]);\n     * console.log(arr.value);   // [null, null]\n     *\n     * arr.setValue(['Nancy', 'Drew']);\n     * console.log(arr.value);   // ['Nancy', 'Drew']\n     * ```\n     *\n     * @param value Array of values for the controls\n     * @param options Configure options that determine how the control propagates changes and\n     * emits events after the value changes\n     *\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default\n     * is false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control value is updated.\n     * When false, no events are emitted.\n     * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n     * updateValueAndValidity} method.\n     */\n    setValue(value, options = {}) {\n        assertAllValuesPresent(this, false, value);\n        value.forEach((newValue, index) => {\n            assertControlPresent(this, false, index);\n            this.at(index).setValue(newValue, { onlySelf: true, emitEvent: options.emitEvent });\n        });\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * Patches the value of the `FormArray`. It accepts an array that matches the\n     * structure of the control, and does its best to match the values to the correct\n     * controls in the group.\n     *\n     * It accepts both super-sets and sub-sets of the array without throwing an error.\n     *\n     * @usageNotes\n     * ### Patch the values for controls in a form array\n     *\n     * ```ts\n     * const arr = new FormArray([\n     *    new FormControl(),\n     *    new FormControl()\n     * ]);\n     * console.log(arr.value);   // [null, null]\n     *\n     * arr.patchValue(['Nancy']);\n     * console.log(arr.value);   // ['Nancy', null]\n     * ```\n     *\n     * @param value Array of latest values for the controls\n     * @param options Configure options that determine how the control propagates changes and\n     * emits events after the value changes\n     *\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default\n     * is false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges` observables emit events with the latest status and value when the control\n     * value is updated. When false, no events are emitted. The configuration options are passed to\n     * the {@link AbstractControl#updateValueAndValidity updateValueAndValidity} method.\n     */\n    patchValue(value, options = {}) {\n        // Even though the `value` argument type doesn't allow `null` and `undefined` values, the\n        // `patchValue` can be called recursively and inner data structures might have these values,\n        // so we just ignore such cases when a field containing FormArray instance receives `null` or\n        // `undefined` as a value.\n        if (value == null /* both `null` and `undefined` */)\n            return;\n        value.forEach((newValue, index) => {\n            if (this.at(index)) {\n                this.at(index).patchValue(newValue, { onlySelf: true, emitEvent: options.emitEvent });\n            }\n        });\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * Resets the `FormArray` and all descendants are marked `pristine` and `untouched`, and the\n     * value of all descendants to null or null maps.\n     *\n     * You reset to a specific form state by passing in an array of states\n     * that matches the structure of the control. The state is a standalone value\n     * or a form state object with both a value and a disabled status.\n     *\n     * @usageNotes\n     * ### Reset the values in a form array\n     *\n     * ```ts\n     * const arr = new FormArray([\n     *    new FormControl(),\n     *    new FormControl()\n     * ]);\n     * arr.reset(['name', 'last name']);\n     *\n     * console.log(arr.value);  // ['name', 'last name']\n     * ```\n     *\n     * ### Reset the values in a form array and the disabled status for the first control\n     *\n     * ```ts\n     * arr.reset([\n     *   {value: 'name', disabled: true},\n     *   'last'\n     * ]);\n     *\n     * console.log(arr.value);  // ['last']\n     * console.log(arr.at(0).status);  // 'DISABLED'\n     * ```\n     *\n     * @param value Array of values for the controls\n     * @param options Configure options that determine how the control propagates changes and\n     * emits events after the value changes\n     *\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default\n     * is false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control is reset.\n     * When false, no events are emitted.\n     * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n     * updateValueAndValidity} method.\n     */\n    reset(value = [], options = {}) {\n        this._forEachChild((control, index) => {\n            control.reset(value[index], { onlySelf: true, emitEvent: options.emitEvent });\n        });\n        this._updatePristine(options, this);\n        this._updateTouched(options, this);\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * The aggregate value of the array, including any disabled controls.\n     *\n     * Reports all values regardless of disabled status.\n     */\n    getRawValue() {\n        return this.controls.map((control) => control.getRawValue());\n    }\n    /**\n     * Remove all controls in the `FormArray`.\n     *\n     * @param options Specifies whether this FormArray instance should emit events after all\n     *     controls are removed.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges` observables emit events with the latest status and value when all controls\n     * in this FormArray instance are removed. When false, no events are emitted.\n     *\n     * @usageNotes\n     * ### Remove all elements from a FormArray\n     *\n     * ```ts\n     * const arr = new FormArray([\n     *    new FormControl(),\n     *    new FormControl()\n     * ]);\n     * console.log(arr.length);  // 2\n     *\n     * arr.clear();\n     * console.log(arr.length);  // 0\n     * ```\n     *\n     * It's a simpler and more efficient alternative to removing all elements one by one:\n     *\n     * ```ts\n     * const arr = new FormArray([\n     *    new FormControl(),\n     *    new FormControl()\n     * ]);\n     *\n     * while (arr.length) {\n     *    arr.removeAt(0);\n     * }\n     * ```\n     */\n    clear(options = {}) {\n        if (this.controls.length < 1)\n            return;\n        this._forEachChild((control) => control._registerOnCollectionChange(() => { }));\n        this.controls.splice(0);\n        this.updateValueAndValidity({ emitEvent: options.emitEvent });\n    }\n    /**\n     * Adjusts a negative index by summing it with the length of the array. For very negative\n     * indices, the result may remain negative.\n     * @internal\n     */\n    _adjustIndex(index) {\n        return index < 0 ? index + this.length : index;\n    }\n    /** @internal */\n    _syncPendingControls() {\n        let subtreeUpdated = this.controls.reduce((updated, child) => {\n            return child._syncPendingControls() ? true : updated;\n        }, false);\n        if (subtreeUpdated)\n            this.updateValueAndValidity({ onlySelf: true });\n        return subtreeUpdated;\n    }\n    /** @internal */\n    _forEachChild(cb) {\n        this.controls.forEach((control, index) => {\n            cb(control, index);\n        });\n    }\n    /** @internal */\n    _updateValue() {\n        this.value = this.controls\n            .filter((control) => control.enabled || this.disabled)\n            .map((control) => control.value);\n    }\n    /** @internal */\n    _anyControls(condition) {\n        return this.controls.some((control) => control.enabled && condition(control));\n    }\n    /** @internal */\n    _setUpControls() {\n        this._forEachChild((control) => this._registerControl(control));\n    }\n    /** @internal */\n    _allControlsDisabled() {\n        for (const control of this.controls) {\n            if (control.enabled)\n                return false;\n        }\n        return this.controls.length > 0 || this.disabled;\n    }\n    _registerControl(control) {\n        control.setParent(this);\n        control._registerOnCollectionChange(this._onCollectionChange);\n    }\n    /** @internal */\n    _find(name) {\n        return this.at(name) ?? null;\n    }\n}\nconst UntypedFormArray = FormArray;\n/**\n * @description\n * Asserts that the given control is an instance of `FormArray`\n *\n * @publicApi\n */\nconst isFormArray = (control) => control instanceof FormArray;\n\nfunction isAbstractControlOptions(options) {\n    return (!!options &&\n        (options.asyncValidators !== undefined ||\n            options.validators !== undefined ||\n            options.updateOn !== undefined));\n}\n/**\n * @description\n * Creates an `AbstractControl` from a user-specified configuration.\n *\n * The `FormBuilder` provides syntactic sugar that shortens creating instances of a\n * `FormControl`, `FormGroup`, or `FormArray`. It reduces the amount of boilerplate needed to\n * build complex forms.\n *\n * @see [Reactive Forms Guide](guide/forms/reactive-forms)\n *\n * @publicApi\n */\nclass FormBuilder {\n    useNonNullable = false;\n    /**\n     * @description\n     * Returns a FormBuilder in which automatically constructed `FormControl` elements\n     * have `{nonNullable: true}` and are non-nullable.\n     *\n     * **Constructing non-nullable controls**\n     *\n     * When constructing a control, it will be non-nullable, and will reset to its initial value.\n     *\n     * ```ts\n     * let nnfb = new FormBuilder().nonNullable;\n     * let name = nnfb.control('Alex'); // FormControl<string>\n     * name.reset();\n     * console.log(name); // 'Alex'\n     * ```\n     *\n     * **Constructing non-nullable groups or arrays**\n     *\n     * When constructing a group or array, all automatically created inner controls will be\n     * non-nullable, and will reset to their initial values.\n     *\n     * ```ts\n     * let nnfb = new FormBuilder().nonNullable;\n     * let name = nnfb.group({who: 'Alex'}); // FormGroup<{who: FormControl<string>}>\n     * name.reset();\n     * console.log(name); // {who: 'Alex'}\n     * ```\n     * **Constructing *nullable* fields on groups or arrays**\n     *\n     * It is still possible to have a nullable field. In particular, any `FormControl` which is\n     * *already* constructed will not be altered. For example:\n     *\n     * ```ts\n     * let nnfb = new FormBuilder().nonNullable;\n     * // FormGroup<{who: FormControl<string|null>}>\n     * let name = nnfb.group({who: new FormControl('Alex')});\n     * name.reset(); console.log(name); // {who: null}\n     * ```\n     *\n     * Because the inner control is constructed explicitly by the caller, the builder has\n     * no control over how it is created, and cannot exclude the `null`.\n     */\n    get nonNullable() {\n        const nnfb = new FormBuilder();\n        nnfb.useNonNullable = true;\n        return nnfb;\n    }\n    group(controls, options = null) {\n        const reducedControls = this._reduceControls(controls);\n        let newOptions = {};\n        if (isAbstractControlOptions(options)) {\n            // `options` are `AbstractControlOptions`\n            newOptions = options;\n        }\n        else if (options !== null) {\n            // `options` are legacy form group options\n            newOptions.validators = options.validator;\n            newOptions.asyncValidators = options.asyncValidator;\n        }\n        return new FormGroup(reducedControls, newOptions);\n    }\n    /**\n     * @description\n     * Constructs a new `FormRecord` instance. Accepts a single generic argument, which is an object\n     * containing all the keys and corresponding inner control types.\n     *\n     * @param controls A collection of child controls. The key for each child is the name\n     * under which it is registered.\n     *\n     * @param options Configuration options object for the `FormRecord`. The object should have the\n     * `AbstractControlOptions` type and might contain the following fields:\n     * * `validators`: A synchronous validator function, or an array of validator functions.\n     * * `asyncValidators`: A single async validator or array of async validator functions.\n     * * `updateOn`: The event upon which the control should be updated (options: 'change' | 'blur'\n     * | submit').\n     */\n    record(controls, options = null) {\n        const reducedControls = this._reduceControls(controls);\n        // Cast to `any` because the inferred types are not as specific as Element.\n        return new FormRecord(reducedControls, options);\n    }\n    /**\n     * @description\n     * Constructs a new `FormControl` with the given state, validators and options. Sets\n     * `{nonNullable: true}` in the options to get a non-nullable control. Otherwise, the\n     * control will be nullable. Accepts a single generic argument, which is the type  of the\n     * control's value.\n     *\n     * @param formState Initializes the control with an initial state value, or\n     * with an object that contains both a value and a disabled status.\n     *\n     * @param validatorOrOpts A synchronous validator function, or an array of\n     * such functions, or a `FormControlOptions` object that contains\n     * validation functions and a validation trigger.\n     *\n     * @param asyncValidator A single async validator or array of async validator\n     * functions.\n     *\n     * @usageNotes\n     *\n     * ### Initialize a control as disabled\n     *\n     * The following example returns a control with an initial value in a disabled state.\n     *\n     * {@example forms/ts/formBuilder/form_builder_example.ts region='disabled-control'}\n     */\n    control(formState, validatorOrOpts, asyncValidator) {\n        let newOptions = {};\n        if (!this.useNonNullable) {\n            return new FormControl(formState, validatorOrOpts, asyncValidator);\n        }\n        if (isAbstractControlOptions(validatorOrOpts)) {\n            // If the second argument is options, then they are copied.\n            newOptions = validatorOrOpts;\n        }\n        else {\n            // If the other arguments are validators, they are copied into an options object.\n            newOptions.validators = validatorOrOpts;\n            newOptions.asyncValidators = asyncValidator;\n        }\n        return new FormControl(formState, { ...newOptions, nonNullable: true });\n    }\n    /**\n     * Constructs a new `FormArray` from the given array of configurations,\n     * validators and options. Accepts a single generic argument, which is the type of each control\n     * inside the array.\n     *\n     * @param controls An array of child controls or control configs. Each child control is given an\n     *     index when it is registered.\n     *\n     * @param validatorOrOpts A synchronous validator function, or an array of such functions, or an\n     *     `AbstractControlOptions` object that contains\n     * validation functions and a validation trigger.\n     *\n     * @param asyncValidator A single async validator or array of async validator functions.\n     */\n    array(controls, validatorOrOpts, asyncValidator) {\n        const createdControls = controls.map((c) => this._createControl(c));\n        // Cast to `any` because the inferred types are not as specific as Element.\n        return new FormArray(createdControls, validatorOrOpts, asyncValidator);\n    }\n    /** @internal */\n    _reduceControls(controls) {\n        const createdControls = {};\n        Object.keys(controls).forEach((controlName) => {\n            createdControls[controlName] = this._createControl(controls[controlName]);\n        });\n        return createdControls;\n    }\n    /** @internal */\n    _createControl(controls) {\n        if (controls instanceof FormControl) {\n            return controls;\n        }\n        else if (controls instanceof AbstractControl) {\n            // A control; just return it\n            return controls;\n        }\n        else if (Array.isArray(controls)) {\n            // ControlConfig Tuple\n            const value = controls[0];\n            const validator = controls.length > 1 ? controls[1] : null;\n            const asyncValidator = controls.length > 2 ? controls[2] : null;\n            return this.control(value, validator, asyncValidator);\n        }\n        else {\n            // T or FormControlState<T>\n            return this.control(controls);\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: FormBuilder, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: FormBuilder, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: FormBuilder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n/**\n * @description\n * `NonNullableFormBuilder` is similar to {@link FormBuilder}, but automatically constructed\n * {@link FormControl} elements have `{nonNullable: true}` and are non-nullable.\n *\n * @publicApi\n */\nclass NonNullableFormBuilder {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: NonNullableFormBuilder, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: NonNullableFormBuilder, providedIn: 'root', useFactory: () => inject(FormBuilder).nonNullable });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: NonNullableFormBuilder, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                    useFactory: () => inject(FormBuilder).nonNullable,\n                }]\n        }] });\n/**\n * UntypedFormBuilder is the same as `FormBuilder`, but it provides untyped controls.\n */\nclass UntypedFormBuilder extends FormBuilder {\n    group(controlsConfig, options = null) {\n        return super.group(controlsConfig, options);\n    }\n    /**\n     * Like `FormBuilder#control`, except the resulting control is untyped.\n     */\n    control(formState, validatorOrOpts, asyncValidator) {\n        return super.control(formState, validatorOrOpts, asyncValidator);\n    }\n    /**\n     * Like `FormBuilder#array`, except the resulting array is untyped.\n     */\n    array(controlsConfig, validatorOrOpts, asyncValidator) {\n        return super.array(controlsConfig, validatorOrOpts, asyncValidator);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: UntypedFormBuilder, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: UntypedFormBuilder, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: UntypedFormBuilder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the forms package.\n */\n/**\n * @publicApi\n */\nconst VERSION = new Version('20.1.7');\n\n/**\n * Exports the required providers and directives for template-driven forms,\n * making them available for import by NgModules that import this module.\n *\n * @see [Forms Overview](guide/forms)\n * @see [Template-driven Forms Guide](guide/forms)\n *\n * @publicApi\n */\nclass FormsModule {\n    /**\n     * @description\n     * Provides options for configuring the forms module.\n     *\n     * @param opts An object of configuration options\n     * * `callSetDisabledState` Configures whether to `always` call `setDisabledState`, which is more\n     * correct, or to only call it `whenDisabled`, which is the legacy behavior.\n     */\n    static withConfig(opts) {\n        return {\n            ngModule: FormsModule,\n            providers: [\n                {\n                    provide: CALL_SET_DISABLED_STATE,\n                    useValue: opts.callSetDisabledState ?? setDisabledStateDefault,\n                },\n            ],\n        };\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: FormsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.1.7\", ngImport: i0, type: FormsModule, declarations: [NgModel, NgModelGroup, NgForm], exports: [ɵInternalFormsSharedModule, NgModel, NgModelGroup, NgForm] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: FormsModule, imports: [ɵInternalFormsSharedModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: FormsModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: TEMPLATE_DRIVEN_DIRECTIVES,\n                    exports: [ɵInternalFormsSharedModule, TEMPLATE_DRIVEN_DIRECTIVES],\n                }]\n        }] });\n/**\n * Exports the required infrastructure and directives for reactive forms,\n * making them available for import by NgModules that import this module.\n *\n * @see [Forms Overview](guide/forms)\n * @see [Reactive Forms Guide](guide/forms/reactive-forms)\n *\n * @publicApi\n */\nclass ReactiveFormsModule {\n    /**\n     * @description\n     * Provides options for configuring the reactive forms module.\n     *\n     * @param opts An object of configuration options\n     * * `warnOnNgModelWithFormControl` Configures when to emit a warning when an `ngModel`\n     * binding is used with reactive form directives.\n     * * `callSetDisabledState` Configures whether to `always` call `setDisabledState`, which is more\n     * correct, or to only call it `whenDisabled`, which is the legacy behavior.\n     */\n    static withConfig(opts) {\n        return {\n            ngModule: ReactiveFormsModule,\n            providers: [\n                {\n                    provide: NG_MODEL_WITH_FORM_CONTROL_WARNING,\n                    useValue: opts.warnOnNgModelWithFormControl ?? 'always',\n                },\n                {\n                    provide: CALL_SET_DISABLED_STATE,\n                    useValue: opts.callSetDisabledState ?? setDisabledStateDefault,\n                },\n            ],\n        };\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: ReactiveFormsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.1.7\", ngImport: i0, type: ReactiveFormsModule, declarations: [FormControlDirective, FormGroupDirective, FormControlName, FormGroupName, FormArrayName], exports: [ɵInternalFormsSharedModule, FormControlDirective, FormGroupDirective, FormControlName, FormGroupName, FormArrayName] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: ReactiveFormsModule, imports: [ɵInternalFormsSharedModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: ReactiveFormsModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [REACTIVE_DRIVEN_DIRECTIVES],\n                    exports: [ɵInternalFormsSharedModule, REACTIVE_DRIVEN_DIRECTIVES],\n                }]\n        }] });\n\nexport { AbstractControl, AbstractControlDirective, AbstractFormGroupDirective, COMPOSITION_BUFFER_MODE, CheckboxControlValueAccessor, CheckboxRequiredValidator, ControlContainer, ControlEvent, DefaultValueAccessor, EmailValidator, FormArray, FormArrayName, FormBuilder, FormControl, FormControlDirective, FormControlName, FormGroup, FormGroupDirective, FormGroupName, FormRecord, FormResetEvent, FormSubmittedEvent, FormsModule, MaxLengthValidator, MaxValidator, MinLengthValidator, MinValidator, NG_ASYNC_VALIDATORS, NG_VALIDATORS, NG_VALUE_ACCESSOR, NgControl, NgControlStatus, NgControlStatusGroup, NgForm, NgModel, NgModelGroup, NgSelectOption, NonNullableFormBuilder, NumberValueAccessor, PatternValidator, PristineChangeEvent, RadioControlValueAccessor, RangeValueAccessor, ReactiveFormsModule, RequiredValidator, SelectControlValueAccessor, SelectMultipleControlValueAccessor, StatusChangeEvent, TouchedChangeEvent, UntypedFormArray, UntypedFormBuilder, UntypedFormControl, UntypedFormGroup, VERSION, Validators, ValueChangeEvent, isFormArray, isFormControl, isFormGroup, isFormRecord, ɵInternalFormsSharedModule, ɵNgNoValidate, ɵNgSelectMultipleOption };\n\n","/** Gets whether an event could be a faked `mousedown` event dispatched by a screen reader. */\nfunction isFakeMousedownFromScreenReader(event) {\n    // Some screen readers will dispatch a fake `mousedown` event when pressing enter or space on\n    // a clickable element. We can distinguish these events when `event.buttons` is zero, or\n    // `event.detail` is zero depending on the browser:\n    // - `event.buttons` works on Firefox, but fails on Chrome.\n    // - `detail` works on Chrome, but fails on Firefox.\n    return event.buttons === 0 || event.detail === 0;\n}\n/** Gets whether an event could be a faked `touchstart` event dispatched by a screen reader. */\nfunction isFakeTouchstartFromScreenReader(event) {\n    const touch = (event.touches && event.touches[0]) || (event.changedTouches && event.changedTouches[0]);\n    // A fake `touchstart` can be distinguished from a real one by looking at the `identifier`\n    // which is typically >= 0 on a real device versus -1 from a screen reader. Just to be safe,\n    // we can also look at `radiusX` and `radiusY`. This behavior was observed against a Windows 10\n    // device with a touch screen running NVDA v2020.4 and Firefox 85 or Chrome 88.\n    return (!!touch &&\n        touch.identifier === -1 &&\n        (touch.radiusX == null || touch.radiusX === 1) &&\n        (touch.radiusY == null || touch.radiusY === 1));\n}\n\nexport { isFakeTouchstartFromScreenReader as a, isFakeMousedownFromScreenReader as i };\n\n","const MAC_ENTER = 3;\nconst BACKSPACE = 8;\nconst TAB = 9;\nconst NUM_CENTER = 12;\nconst ENTER = 13;\nconst SHIFT = 16;\nconst CONTROL = 17;\nconst ALT = 18;\nconst PAUSE = 19;\nconst CAPS_LOCK = 20;\nconst ESCAPE = 27;\nconst SPACE = 32;\nconst PAGE_UP = 33;\nconst PAGE_DOWN = 34;\nconst END = 35;\nconst HOME = 36;\nconst LEFT_ARROW = 37;\nconst UP_ARROW = 38;\nconst RIGHT_ARROW = 39;\nconst DOWN_ARROW = 40;\nconst PLUS_SIGN = 43;\nconst PRINT_SCREEN = 44;\nconst INSERT = 45;\nconst DELETE = 46;\nconst ZERO = 48;\nconst ONE = 49;\nconst TWO = 50;\nconst THREE = 51;\nconst FOUR = 52;\nconst FIVE = 53;\nconst SIX = 54;\nconst SEVEN = 55;\nconst EIGHT = 56;\nconst NINE = 57;\nconst FF_SEMICOLON = 59; // Firefox (Gecko) fires this for semicolon instead of 186\nconst FF_EQUALS = 61; // Firefox (Gecko) fires this for equals instead of 187\nconst QUESTION_MARK = 63;\nconst AT_SIGN = 64;\nconst A = 65;\nconst B = 66;\nconst C = 67;\nconst D = 68;\nconst E = 69;\nconst F = 70;\nconst G = 71;\nconst H = 72;\nconst I = 73;\nconst J = 74;\nconst K = 75;\nconst L = 76;\nconst M = 77;\nconst N = 78;\nconst O = 79;\nconst P = 80;\nconst Q = 81;\nconst R = 82;\nconst S = 83;\nconst T = 84;\nconst U = 85;\nconst V = 86;\nconst W = 87;\nconst X = 88;\nconst Y = 89;\nconst Z = 90;\nconst META = 91; // WIN_KEY_LEFT\nconst MAC_WK_CMD_LEFT = 91;\nconst MAC_WK_CMD_RIGHT = 93;\nconst CONTEXT_MENU = 93;\nconst NUMPAD_ZERO = 96;\nconst NUMPAD_ONE = 97;\nconst NUMPAD_TWO = 98;\nconst NUMPAD_THREE = 99;\nconst NUMPAD_FOUR = 100;\nconst NUMPAD_FIVE = 101;\nconst NUMPAD_SIX = 102;\nconst NUMPAD_SEVEN = 103;\nconst NUMPAD_EIGHT = 104;\nconst NUMPAD_NINE = 105;\nconst NUMPAD_MULTIPLY = 106;\nconst NUMPAD_PLUS = 107;\nconst NUMPAD_MINUS = 109;\nconst NUMPAD_PERIOD = 110;\nconst NUMPAD_DIVIDE = 111;\nconst F1 = 112;\nconst F2 = 113;\nconst F3 = 114;\nconst F4 = 115;\nconst F5 = 116;\nconst F6 = 117;\nconst F7 = 118;\nconst F8 = 119;\nconst F9 = 120;\nconst F10 = 121;\nconst F11 = 122;\nconst F12 = 123;\nconst NUM_LOCK = 144;\nconst SCROLL_LOCK = 145;\nconst FIRST_MEDIA = 166;\nconst FF_MINUS = 173;\nconst MUTE = 173; // Firefox (Gecko) fires 181 for MUTE\nconst VOLUME_DOWN = 174; // Firefox (Gecko) fires 182 for VOLUME_DOWN\nconst VOLUME_UP = 175; // Firefox (Gecko) fires 183 for VOLUME_UP\nconst FF_MUTE = 181;\nconst FF_VOLUME_DOWN = 182;\nconst LAST_MEDIA = 183;\nconst FF_VOLUME_UP = 183;\nconst SEMICOLON = 186; // Firefox (Gecko) fires 59 for SEMICOLON\nconst EQUALS = 187; // Firefox (Gecko) fires 61 for EQUALS\nconst COMMA = 188;\nconst DASH = 189; // Firefox (Gecko) fires 173 for DASH/MINUS\nconst PERIOD = 190;\nconst SLASH = 191;\nconst APOSTROPHE = 192;\nconst TILDE = 192;\nconst OPEN_SQUARE_BRACKET = 219;\nconst BACKSLASH = 220;\nconst CLOSE_SQUARE_BRACKET = 221;\nconst SINGLE_QUOTE = 222;\nconst MAC_META = 224;\n\nexport { FF_EQUALS as $, A, BACKSPACE as B, CONTROL as C, DOWN_ARROW as D, END as E, F1 as F, PRINT_SCREEN as G, HOME as H, INSERT as I, TWO as J, THREE as K, LEFT_ARROW as L, MAC_META as M, NINE as N, ONE as O, PAGE_DOWN as P, FOUR as Q, RIGHT_ARROW as R, SPACE as S, TAB as T, UP_ARROW as U, FIVE as V, SIX as W, SEVEN as X, EIGHT as Y, Z, FF_SEMICOLON as _, PAGE_UP as a, CLOSE_SQUARE_BRACKET as a$, QUESTION_MARK as a0, AT_SIGN as a1, B as a2, C as a3, D as a4, E as a5, F as a6, G as a7, H as a8, I as a9, NUMPAD_SEVEN as aA, NUMPAD_EIGHT as aB, NUMPAD_NINE as aC, NUMPAD_MULTIPLY as aD, NUMPAD_PLUS as aE, NUMPAD_MINUS as aF, NUMPAD_PERIOD as aG, NUMPAD_DIVIDE as aH, NUM_LOCK as aI, SCROLL_LOCK as aJ, FIRST_MEDIA as aK, FF_MINUS as aL, MUTE as aM, VOLUME_DOWN as aN, VOLUME_UP as aO, FF_MUTE as aP, FF_VOLUME_DOWN as aQ, LAST_MEDIA as aR, FF_VOLUME_UP as aS, SEMICOLON as aT, EQUALS as aU, DASH as aV, SLASH as aW, APOSTROPHE as aX, TILDE as aY, OPEN_SQUARE_BRACKET as aZ, BACKSLASH as a_, J as aa, K as ab, L as ac, M as ad, N as ae, O as af, P as ag, Q as ah, R as ai, S as aj, T as ak, U as al, V as am, W as an, X as ao, Y as ap, MAC_WK_CMD_LEFT as aq, MAC_WK_CMD_RIGHT as ar, CONTEXT_MENU as as, NUMPAD_ZERO as at, NUMPAD_ONE as au, NUMPAD_TWO as av, NUMPAD_THREE as aw, NUMPAD_FOUR as ax, NUMPAD_FIVE as ay, NUMPAD_SIX as az, ZERO as b, SINGLE_QUOTE as b0, ENTER as c, ALT as d, META as e, SHIFT as f, ESCAPE as g, PERIOD as h, DELETE as i, F2 as j, F3 as k, F4 as l, F5 as m, F6 as n, F7 as o, F8 as p, F9 as q, F10 as r, F11 as s, F12 as t, COMMA as u, MAC_ENTER as v, NUM_CENTER as w, PAUSE as x, CAPS_LOCK as y, PLUS_SIGN as z };\n\n","let shadowDomIsSupported;\n/** Checks whether the user's browser support Shadow DOM. */\nfunction _supportsShadowDom() {\n    if (shadowDomIsSupported == null) {\n        const head = typeof document !== 'undefined' ? document.head : null;\n        shadowDomIsSupported = !!(head && (head.createShadowRoot || head.attachShadow));\n    }\n    return shadowDomIsSupported;\n}\n/** Gets the shadow root of an element, if supported and the element is inside the Shadow DOM. */\nfunction _getShadowRoot(element) {\n    if (_supportsShadowDom()) {\n        const rootNode = element.getRootNode ? element.getRootNode() : null;\n        // Note that this should be caught by `_supportsShadowDom`, but some\n        // teams have been able to hit this code path on unsupported browsers.\n        if (typeof ShadowRoot !== 'undefined' && ShadowRoot && rootNode instanceof ShadowRoot) {\n            return rootNode;\n        }\n    }\n    return null;\n}\n/**\n * Gets the currently-focused element on the page while\n * also piercing through Shadow DOM boundaries.\n */\nfunction _getFocusedElementPierceShadowDom() {\n    let activeElement = typeof document !== 'undefined' && document\n        ? document.activeElement\n        : null;\n    while (activeElement && activeElement.shadowRoot) {\n        const newActiveElement = activeElement.shadowRoot.activeElement;\n        if (newActiveElement === activeElement) {\n            break;\n        }\n        else {\n            activeElement = newActiveElement;\n        }\n    }\n    return activeElement;\n}\n/** Gets the target of an event while accounting for Shadow DOM. */\nfunction _getEventTarget(event) {\n    // If an event is bound outside the Shadow DOM, the `event.target` will\n    // point to the shadow root so we have to use `composedPath` instead.\n    return (event.composedPath ? event.composedPath()[0] : event.target);\n}\n\nexport { _getEventTarget as _, _getShadowRoot as a, _supportsShadowDom as b, _getFocusedElementPierceShadowDom as c };\n\n","import * as i0 from '@angular/core';\nimport { inject, PLATFORM_ID, Injectable } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n// Whether the current platform supports the V8 Break Iterator. The V8 check\n// is necessary to detect all Blink based browsers.\nlet hasV8BreakIterator;\n// We need a try/catch around the reference to `Intl`, because accessing it in some cases can\n// cause IE to throw. These cases are tied to particular versions of Windows and can happen if\n// the consumer is providing a polyfilled `Map`. See:\n// https://github.com/Microsoft/ChakraCore/issues/3189\n// https://github.com/angular/components/issues/15687\ntry {\n    hasV8BreakIterator = typeof Intl !== 'undefined' && Intl.v8BreakIterator;\n}\ncatch {\n    hasV8BreakIterator = false;\n}\n/**\n * Service to detect the current platform by comparing the userAgent strings and\n * checking browser-specific global properties.\n */\nclass Platform {\n    _platformId = inject(PLATFORM_ID);\n    // We want to use the Angular platform check because if the Document is shimmed\n    // without the navigator, the following checks will fail. This is preferred because\n    // sometimes the Document may be shimmed without the user's knowledge or intention\n    /** Whether the Angular application is being rendered in the browser. */\n    isBrowser = this._platformId\n        ? isPlatformBrowser(this._platformId)\n        : typeof document === 'object' && !!document;\n    /** Whether the current browser is Microsoft Edge. */\n    EDGE = this.isBrowser && /(edge)/i.test(navigator.userAgent);\n    /** Whether the current rendering engine is Microsoft Trident. */\n    TRIDENT = this.isBrowser && /(msie|trident)/i.test(navigator.userAgent);\n    // EdgeHTML and Trident mock Blink specific things and need to be excluded from this check.\n    /** Whether the current rendering engine is Blink. */\n    BLINK = this.isBrowser &&\n        !!(window.chrome || hasV8BreakIterator) &&\n        typeof CSS !== 'undefined' &&\n        !this.EDGE &&\n        !this.TRIDENT;\n    // Webkit is part of the userAgent in EdgeHTML, Blink and Trident. Therefore we need to\n    // ensure that Webkit runs standalone and is not used as another engine's base.\n    /** Whether the current rendering engine is WebKit. */\n    WEBKIT = this.isBrowser &&\n        /AppleWebKit/i.test(navigator.userAgent) &&\n        !this.BLINK &&\n        !this.EDGE &&\n        !this.TRIDENT;\n    /** Whether the current platform is Apple iOS. */\n    IOS = this.isBrowser && /iPad|iPhone|iPod/.test(navigator.userAgent) && !('MSStream' in window);\n    // It's difficult to detect the plain Gecko engine, because most of the browsers identify\n    // them self as Gecko-like browsers and modify the userAgent's according to that.\n    // Since we only cover one explicit Firefox case, we can simply check for Firefox\n    // instead of having an unstable check for Gecko.\n    /** Whether the current browser is Firefox. */\n    FIREFOX = this.isBrowser && /(firefox|minefield)/i.test(navigator.userAgent);\n    /** Whether the current platform is Android. */\n    // Trident on mobile adds the android platform to the userAgent to trick detections.\n    ANDROID = this.isBrowser && /android/i.test(navigator.userAgent) && !this.TRIDENT;\n    // Safari browsers will include the Safari keyword in their userAgent. Some browsers may fake\n    // this and just place the Safari keyword in the userAgent. To be more safe about Safari every\n    // Safari browser should also use Webkit as its layout engine.\n    /** Whether the current browser is Safari. */\n    SAFARI = this.isBrowser && /safari/i.test(navigator.userAgent) && this.WEBKIT;\n    constructor() { }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: Platform, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: Platform, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: Platform, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [] });\n\nexport { Platform as P };\n\n","/** Cached result of whether the user's browser supports passive event listeners. */\nlet supportsPassiveEvents;\n/**\n * Checks whether the user's browser supports passive event listeners.\n * See: https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n */\nfunction supportsPassiveEventListeners() {\n    if (supportsPassiveEvents == null && typeof window !== 'undefined') {\n        try {\n            window.addEventListener('test', null, Object.defineProperty({}, 'passive', {\n                get: () => (supportsPassiveEvents = true),\n            }));\n        }\n        finally {\n            supportsPassiveEvents = supportsPassiveEvents || false;\n        }\n    }\n    return supportsPassiveEvents;\n}\n/**\n * Normalizes an `AddEventListener` object to something that can be passed\n * to `addEventListener` on any browser, no matter whether it supports the\n * `options` parameter.\n * @param options Object to be normalized.\n */\nfunction normalizePassiveListenerOptions(options) {\n    return supportsPassiveEventListeners() ? options : !!options.capture;\n}\n\nexport { normalizePassiveListenerOptions as n, supportsPassiveEventListeners as s };\n\n","import { ElementRef } from '@angular/core';\n\nfunction coerceNumberProperty(value, fallbackValue = 0) {\n    if (_isNumberValue(value)) {\n        return Number(value);\n    }\n    return arguments.length === 2 ? fallbackValue : 0;\n}\n/**\n * Whether the provided value is considered a number.\n * @docs-private\n */\nfunction _isNumberValue(value) {\n    // parseFloat(value) handles most of the cases we're interested in (it treats null, empty string,\n    // and other non-number values as NaN, where Number just uses 0) but it considers the string\n    // '123hello' to be a valid number. Therefore we also check if Number(value) is NaN.\n    return !isNaN(parseFloat(value)) && !isNaN(Number(value));\n}\n\n/**\n * Coerces an ElementRef or an Element into an element.\n * Useful for APIs that can accept either a ref or the native element itself.\n */\nfunction coerceElement(elementOrRef) {\n    return elementOrRef instanceof ElementRef ? elementOrRef.nativeElement : elementOrRef;\n}\n\nexport { _isNumberValue as _, coerceElement as a, coerceNumberProperty as c };\n\n","import * as i0 from '@angular/core';\nimport { InjectionToken, inject, NgZone, DOCUMENT, RendererFactory2, Injectable, ElementRef, EventEmitter, Directive, Output } from '@angular/core';\nimport { BehaviorSubject, Subject, of } from 'rxjs';\nimport { skip, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { i as isFakeMousedownFromScreenReader, a as isFakeTouchstartFromScreenReader } from './fake-event-detection-DWOdFTFz.mjs';\nimport { d as ALT, C as CONTROL, M as MAC_META, e as META, f as SHIFT } from './keycodes-CpHkExLC.mjs';\nimport { _ as _getEventTarget, a as _getShadowRoot } from './shadow-dom-B0oHn41l.mjs';\nimport { P as Platform } from './platform-DNDzkVcI.mjs';\nimport { n as normalizePassiveListenerOptions } from './passive-listeners-esHZRgIN.mjs';\nimport { a as coerceElement } from './element-x4z00URv.mjs';\n\n/**\n * Injectable options for the InputModalityDetector. These are shallowly merged with the default\n * options.\n */\nconst INPUT_MODALITY_DETECTOR_OPTIONS = new InjectionToken('cdk-input-modality-detector-options');\n/**\n * Default options for the InputModalityDetector.\n *\n * Modifier keys are ignored by default (i.e. when pressed won't cause the service to detect\n * keyboard input modality) for two reasons:\n *\n * 1. Modifier keys are commonly used with mouse to perform actions such as 'right click' or 'open\n *    in new tab', and are thus less representative of actual keyboard interaction.\n * 2. VoiceOver triggers some keyboard events when linearly navigating with Control + Option (but\n *    confusingly not with Caps Lock). Thus, to have parity with other screen readers, we ignore\n *    these keys so as to not update the input modality.\n *\n * Note that we do not by default ignore the right Meta key on Safari because it has the same key\n * code as the ContextMenu key on other browsers. When we switch to using event.key, we can\n * distinguish between the two.\n */\nconst INPUT_MODALITY_DETECTOR_DEFAULT_OPTIONS = {\n    ignoreKeys: [ALT, CONTROL, MAC_META, META, SHIFT],\n};\n/**\n * The amount of time needed to pass after a touchstart event in order for a subsequent mousedown\n * event to be attributed as mouse and not touch.\n *\n * This is the value used by AngularJS Material. Through trial and error (on iPhone 6S) they found\n * that a value of around 650ms seems appropriate.\n */\nconst TOUCH_BUFFER_MS = 650;\n/**\n * Event listener options that enable capturing and also mark the listener as passive if the browser\n * supports it.\n */\nconst modalityEventListenerOptions = {\n    passive: true,\n    capture: true,\n};\n/**\n * Service that detects the user's input modality.\n *\n * This service does not update the input modality when a user navigates with a screen reader\n * (e.g. linear navigation with VoiceOver, object navigation / browse mode with NVDA, virtual PC\n * cursor mode with JAWS). This is in part due to technical limitations (i.e. keyboard events do not\n * fire as expected in these modes) but is also arguably the correct behavior. Navigating with a\n * screen reader is akin to visually scanning a page, and should not be interpreted as actual user\n * input interaction.\n *\n * When a user is not navigating but *interacting* with a screen reader, this service attempts to\n * update the input modality to keyboard, but in general this service's behavior is largely\n * undefined.\n */\nclass InputModalityDetector {\n    _platform = inject(Platform);\n    _listenerCleanups;\n    /** Emits whenever an input modality is detected. */\n    modalityDetected;\n    /** Emits when the input modality changes. */\n    modalityChanged;\n    /** The most recently detected input modality. */\n    get mostRecentModality() {\n        return this._modality.value;\n    }\n    /**\n     * The most recently detected input modality event target. Is null if no input modality has been\n     * detected or if the associated event target is null for some unknown reason.\n     */\n    _mostRecentTarget = null;\n    /** The underlying BehaviorSubject that emits whenever an input modality is detected. */\n    _modality = new BehaviorSubject(null);\n    /** Options for this InputModalityDetector. */\n    _options;\n    /**\n     * The timestamp of the last touch input modality. Used to determine whether mousedown events\n     * should be attributed to mouse or touch.\n     */\n    _lastTouchMs = 0;\n    /**\n     * Handles keydown events. Must be an arrow function in order to preserve the context when it gets\n     * bound.\n     */\n    _onKeydown = (event) => {\n        // If this is one of the keys we should ignore, then ignore it and don't update the input\n        // modality to keyboard.\n        if (this._options?.ignoreKeys?.some(keyCode => keyCode === event.keyCode)) {\n            return;\n        }\n        this._modality.next('keyboard');\n        this._mostRecentTarget = _getEventTarget(event);\n    };\n    /**\n     * Handles mousedown events. Must be an arrow function in order to preserve the context when it\n     * gets bound.\n     */\n    _onMousedown = (event) => {\n        // Touches trigger both touch and mouse events, so we need to distinguish between mouse events\n        // that were triggered via mouse vs touch. To do so, check if the mouse event occurs closely\n        // after the previous touch event.\n        if (Date.now() - this._lastTouchMs < TOUCH_BUFFER_MS) {\n            return;\n        }\n        // Fake mousedown events are fired by some screen readers when controls are activated by the\n        // screen reader. Attribute them to keyboard input modality.\n        this._modality.next(isFakeMousedownFromScreenReader(event) ? 'keyboard' : 'mouse');\n        this._mostRecentTarget = _getEventTarget(event);\n    };\n    /**\n     * Handles touchstart events. Must be an arrow function in order to preserve the context when it\n     * gets bound.\n     */\n    _onTouchstart = (event) => {\n        // Same scenario as mentioned in _onMousedown, but on touch screen devices, fake touchstart\n        // events are fired. Again, attribute to keyboard input modality.\n        if (isFakeTouchstartFromScreenReader(event)) {\n            this._modality.next('keyboard');\n            return;\n        }\n        // Store the timestamp of this touch event, as it's used to distinguish between mouse events\n        // triggered via mouse vs touch.\n        this._lastTouchMs = Date.now();\n        this._modality.next('touch');\n        this._mostRecentTarget = _getEventTarget(event);\n    };\n    constructor() {\n        const ngZone = inject(NgZone);\n        const document = inject(DOCUMENT);\n        const options = inject(INPUT_MODALITY_DETECTOR_OPTIONS, { optional: true });\n        this._options = {\n            ...INPUT_MODALITY_DETECTOR_DEFAULT_OPTIONS,\n            ...options,\n        };\n        // Skip the first emission as it's null.\n        this.modalityDetected = this._modality.pipe(skip(1));\n        this.modalityChanged = this.modalityDetected.pipe(distinctUntilChanged());\n        // If we're not in a browser, this service should do nothing, as there's no relevant input\n        // modality to detect.\n        if (this._platform.isBrowser) {\n            const renderer = inject(RendererFactory2).createRenderer(null, null);\n            this._listenerCleanups = ngZone.runOutsideAngular(() => {\n                return [\n                    renderer.listen(document, 'keydown', this._onKeydown, modalityEventListenerOptions),\n                    renderer.listen(document, 'mousedown', this._onMousedown, modalityEventListenerOptions),\n                    renderer.listen(document, 'touchstart', this._onTouchstart, modalityEventListenerOptions),\n                ];\n            });\n        }\n    }\n    ngOnDestroy() {\n        this._modality.complete();\n        this._listenerCleanups?.forEach(cleanup => cleanup());\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: InputModalityDetector, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: InputModalityDetector, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: InputModalityDetector, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [] });\n\n/** Detection mode used for attributing the origin of a focus event. */\nvar FocusMonitorDetectionMode;\n(function (FocusMonitorDetectionMode) {\n    /**\n     * Any mousedown, keydown, or touchstart event that happened in the previous\n     * tick or the current tick will be used to assign a focus event's origin (to\n     * either mouse, keyboard, or touch). This is the default option.\n     */\n    FocusMonitorDetectionMode[FocusMonitorDetectionMode[\"IMMEDIATE\"] = 0] = \"IMMEDIATE\";\n    /**\n     * A focus event's origin is always attributed to the last corresponding\n     * mousedown, keydown, or touchstart event, no matter how long ago it occurred.\n     */\n    FocusMonitorDetectionMode[FocusMonitorDetectionMode[\"EVENTUAL\"] = 1] = \"EVENTUAL\";\n})(FocusMonitorDetectionMode || (FocusMonitorDetectionMode = {}));\n/** InjectionToken for FocusMonitorOptions. */\nconst FOCUS_MONITOR_DEFAULT_OPTIONS = new InjectionToken('cdk-focus-monitor-default-options');\n/**\n * Event listener options that enable capturing and also\n * mark the listener as passive if the browser supports it.\n */\nconst captureEventListenerOptions = normalizePassiveListenerOptions({\n    passive: true,\n    capture: true,\n});\n/** Monitors mouse and keyboard events to determine the cause of focus events. */\nclass FocusMonitor {\n    _ngZone = inject(NgZone);\n    _platform = inject(Platform);\n    _inputModalityDetector = inject(InputModalityDetector);\n    /** The focus origin that the next focus event is a result of. */\n    _origin = null;\n    /** The FocusOrigin of the last focus event tracked by the FocusMonitor. */\n    _lastFocusOrigin;\n    /** Whether the window has just been focused. */\n    _windowFocused = false;\n    /** The timeout id of the window focus timeout. */\n    _windowFocusTimeoutId;\n    /** The timeout id of the origin clearing timeout. */\n    _originTimeoutId;\n    /**\n     * Whether the origin was determined via a touch interaction. Necessary as properly attributing\n     * focus events to touch interactions requires special logic.\n     */\n    _originFromTouchInteraction = false;\n    /** Map of elements being monitored to their info. */\n    _elementInfo = new Map();\n    /** The number of elements currently being monitored. */\n    _monitoredElementCount = 0;\n    /**\n     * Keeps track of the root nodes to which we've currently bound a focus/blur handler,\n     * as well as the number of monitored elements that they contain. We have to treat focus/blur\n     * handlers differently from the rest of the events, because the browser won't emit events\n     * to the document when focus moves inside of a shadow root.\n     */\n    _rootNodeFocusListenerCount = new Map();\n    /**\n     * The specified detection mode, used for attributing the origin of a focus\n     * event.\n     */\n    _detectionMode;\n    /**\n     * Event listener for `focus` events on the window.\n     * Needs to be an arrow function in order to preserve the context when it gets bound.\n     */\n    _windowFocusListener = () => {\n        // Make a note of when the window regains focus, so we can\n        // restore the origin info for the focused element.\n        this._windowFocused = true;\n        this._windowFocusTimeoutId = setTimeout(() => (this._windowFocused = false));\n    };\n    /** Used to reference correct document/window */\n    _document = inject(DOCUMENT);\n    /** Subject for stopping our InputModalityDetector subscription. */\n    _stopInputModalityDetector = new Subject();\n    constructor() {\n        const options = inject(FOCUS_MONITOR_DEFAULT_OPTIONS, {\n            optional: true,\n        });\n        this._detectionMode = options?.detectionMode || FocusMonitorDetectionMode.IMMEDIATE;\n    }\n    /**\n     * Event listener for `focus` and 'blur' events on the document.\n     * Needs to be an arrow function in order to preserve the context when it gets bound.\n     */\n    _rootNodeFocusAndBlurListener = (event) => {\n        const target = _getEventTarget(event);\n        // We need to walk up the ancestor chain in order to support `checkChildren`.\n        for (let element = target; element; element = element.parentElement) {\n            if (event.type === 'focus') {\n                this._onFocus(event, element);\n            }\n            else {\n                this._onBlur(event, element);\n            }\n        }\n    };\n    monitor(element, checkChildren = false) {\n        const nativeElement = coerceElement(element);\n        // Do nothing if we're not on the browser platform or the passed in node isn't an element.\n        if (!this._platform.isBrowser || nativeElement.nodeType !== 1) {\n            // Note: we don't want the observable to emit at all so we don't pass any parameters.\n            return of();\n        }\n        // If the element is inside the shadow DOM, we need to bind our focus/blur listeners to\n        // the shadow root, rather than the `document`, because the browser won't emit focus events\n        // to the `document`, if focus is moving within the same shadow root.\n        const rootNode = _getShadowRoot(nativeElement) || this._document;\n        const cachedInfo = this._elementInfo.get(nativeElement);\n        // Check if we're already monitoring this element.\n        if (cachedInfo) {\n            if (checkChildren) {\n                // TODO(COMP-318): this can be problematic, because it'll turn all non-checkChildren\n                // observers into ones that behave as if `checkChildren` was turned on. We need a more\n                // robust solution.\n                cachedInfo.checkChildren = true;\n            }\n            return cachedInfo.subject;\n        }\n        // Create monitored element info.\n        const info = {\n            checkChildren: checkChildren,\n            subject: new Subject(),\n            rootNode,\n        };\n        this._elementInfo.set(nativeElement, info);\n        this._registerGlobalListeners(info);\n        return info.subject;\n    }\n    stopMonitoring(element) {\n        const nativeElement = coerceElement(element);\n        const elementInfo = this._elementInfo.get(nativeElement);\n        if (elementInfo) {\n            elementInfo.subject.complete();\n            this._setClasses(nativeElement);\n            this._elementInfo.delete(nativeElement);\n            this._removeGlobalListeners(elementInfo);\n        }\n    }\n    focusVia(element, origin, options) {\n        const nativeElement = coerceElement(element);\n        const focusedElement = this._document.activeElement;\n        // If the element is focused already, calling `focus` again won't trigger the event listener\n        // which means that the focus classes won't be updated. If that's the case, update the classes\n        // directly without waiting for an event.\n        if (nativeElement === focusedElement) {\n            this._getClosestElementsInfo(nativeElement).forEach(([currentElement, info]) => this._originChanged(currentElement, origin, info));\n        }\n        else {\n            this._setOrigin(origin);\n            // `focus` isn't available on the server\n            if (typeof nativeElement.focus === 'function') {\n                nativeElement.focus(options);\n            }\n        }\n    }\n    ngOnDestroy() {\n        this._elementInfo.forEach((_info, element) => this.stopMonitoring(element));\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        return this._document.defaultView || window;\n    }\n    _getFocusOrigin(focusEventTarget) {\n        if (this._origin) {\n            // If the origin was realized via a touch interaction, we need to perform additional checks\n            // to determine whether the focus origin should be attributed to touch or program.\n            if (this._originFromTouchInteraction) {\n                return this._shouldBeAttributedToTouch(focusEventTarget) ? 'touch' : 'program';\n            }\n            else {\n                return this._origin;\n            }\n        }\n        // If the window has just regained focus, we can restore the most recent origin from before the\n        // window blurred. Otherwise, we've reached the point where we can't identify the source of the\n        // focus. This typically means one of two things happened:\n        //\n        // 1) The element was programmatically focused, or\n        // 2) The element was focused via screen reader navigation (which generally doesn't fire\n        //    events).\n        //\n        // Because we can't distinguish between these two cases, we default to setting `program`.\n        if (this._windowFocused && this._lastFocusOrigin) {\n            return this._lastFocusOrigin;\n        }\n        // If the interaction is coming from an input label, we consider it a mouse interactions.\n        // This is a special case where focus moves on `click`, rather than `mousedown` which breaks\n        // our detection, because all our assumptions are for `mousedown`. We need to handle this\n        // special case, because it's very common for checkboxes and radio buttons.\n        if (focusEventTarget && this._isLastInteractionFromInputLabel(focusEventTarget)) {\n            return 'mouse';\n        }\n        return 'program';\n    }\n    /**\n     * Returns whether the focus event should be attributed to touch. Recall that in IMMEDIATE mode, a\n     * touch origin isn't immediately reset at the next tick (see _setOrigin). This means that when we\n     * handle a focus event following a touch interaction, we need to determine whether (1) the focus\n     * event was directly caused by the touch interaction or (2) the focus event was caused by a\n     * subsequent programmatic focus call triggered by the touch interaction.\n     * @param focusEventTarget The target of the focus event under examination.\n     */\n    _shouldBeAttributedToTouch(focusEventTarget) {\n        // Please note that this check is not perfect. Consider the following edge case:\n        //\n        // <div #parent tabindex=\"0\">\n        //   <div #child tabindex=\"0\" (click)=\"#parent.focus()\"></div>\n        // </div>\n        //\n        // Suppose there is a FocusMonitor in IMMEDIATE mode attached to #parent. When the user touches\n        // #child, #parent is programmatically focused. This code will attribute the focus to touch\n        // instead of program. This is a relatively minor edge-case that can be worked around by using\n        // focusVia(parent, 'program') to focus #parent.\n        return (this._detectionMode === FocusMonitorDetectionMode.EVENTUAL ||\n            !!focusEventTarget?.contains(this._inputModalityDetector._mostRecentTarget));\n    }\n    /**\n     * Sets the focus classes on the element based on the given focus origin.\n     * @param element The element to update the classes on.\n     * @param origin The focus origin.\n     */\n    _setClasses(element, origin) {\n        element.classList.toggle('cdk-focused', !!origin);\n        element.classList.toggle('cdk-touch-focused', origin === 'touch');\n        element.classList.toggle('cdk-keyboard-focused', origin === 'keyboard');\n        element.classList.toggle('cdk-mouse-focused', origin === 'mouse');\n        element.classList.toggle('cdk-program-focused', origin === 'program');\n    }\n    /**\n     * Updates the focus origin. If we're using immediate detection mode, we schedule an async\n     * function to clear the origin at the end of a timeout. The duration of the timeout depends on\n     * the origin being set.\n     * @param origin The origin to set.\n     * @param isFromInteraction Whether we are setting the origin from an interaction event.\n     */\n    _setOrigin(origin, isFromInteraction = false) {\n        this._ngZone.runOutsideAngular(() => {\n            this._origin = origin;\n            this._originFromTouchInteraction = origin === 'touch' && isFromInteraction;\n            // If we're in IMMEDIATE mode, reset the origin at the next tick (or in `TOUCH_BUFFER_MS` ms\n            // for a touch event). We reset the origin at the next tick because Firefox focuses one tick\n            // after the interaction event. We wait `TOUCH_BUFFER_MS` ms before resetting the origin for\n            // a touch event because when a touch event is fired, the associated focus event isn't yet in\n            // the event queue. Before doing so, clear any pending timeouts.\n            if (this._detectionMode === FocusMonitorDetectionMode.IMMEDIATE) {\n                clearTimeout(this._originTimeoutId);\n                const ms = this._originFromTouchInteraction ? TOUCH_BUFFER_MS : 1;\n                this._originTimeoutId = setTimeout(() => (this._origin = null), ms);\n            }\n        });\n    }\n    /**\n     * Handles focus events on a registered element.\n     * @param event The focus event.\n     * @param element The monitored element.\n     */\n    _onFocus(event, element) {\n        // NOTE(mmalerba): We currently set the classes based on the focus origin of the most recent\n        // focus event affecting the monitored element. If we want to use the origin of the first event\n        // instead we should check for the cdk-focused class here and return if the element already has\n        // it. (This only matters for elements that have includesChildren = true).\n        // If we are not counting child-element-focus as focused, make sure that the event target is the\n        // monitored element itself.\n        const elementInfo = this._elementInfo.get(element);\n        const focusEventTarget = _getEventTarget(event);\n        if (!elementInfo || (!elementInfo.checkChildren && element !== focusEventTarget)) {\n            return;\n        }\n        this._originChanged(element, this._getFocusOrigin(focusEventTarget), elementInfo);\n    }\n    /**\n     * Handles blur events on a registered element.\n     * @param event The blur event.\n     * @param element The monitored element.\n     */\n    _onBlur(event, element) {\n        // If we are counting child-element-focus as focused, make sure that we aren't just blurring in\n        // order to focus another child of the monitored element.\n        const elementInfo = this._elementInfo.get(element);\n        if (!elementInfo ||\n            (elementInfo.checkChildren &&\n                event.relatedTarget instanceof Node &&\n                element.contains(event.relatedTarget))) {\n            return;\n        }\n        this._setClasses(element);\n        this._emitOrigin(elementInfo, null);\n    }\n    _emitOrigin(info, origin) {\n        if (info.subject.observers.length) {\n            this._ngZone.run(() => info.subject.next(origin));\n        }\n    }\n    _registerGlobalListeners(elementInfo) {\n        if (!this._platform.isBrowser) {\n            return;\n        }\n        const rootNode = elementInfo.rootNode;\n        const rootNodeFocusListeners = this._rootNodeFocusListenerCount.get(rootNode) || 0;\n        if (!rootNodeFocusListeners) {\n            this._ngZone.runOutsideAngular(() => {\n                rootNode.addEventListener('focus', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n                rootNode.addEventListener('blur', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n            });\n        }\n        this._rootNodeFocusListenerCount.set(rootNode, rootNodeFocusListeners + 1);\n        // Register global listeners when first element is monitored.\n        if (++this._monitoredElementCount === 1) {\n            // Note: we listen to events in the capture phase so we\n            // can detect them even if the user stops propagation.\n            this._ngZone.runOutsideAngular(() => {\n                const window = this._getWindow();\n                window.addEventListener('focus', this._windowFocusListener);\n            });\n            // The InputModalityDetector is also just a collection of global listeners.\n            this._inputModalityDetector.modalityDetected\n                .pipe(takeUntil(this._stopInputModalityDetector))\n                .subscribe(modality => {\n                this._setOrigin(modality, true /* isFromInteraction */);\n            });\n        }\n    }\n    _removeGlobalListeners(elementInfo) {\n        const rootNode = elementInfo.rootNode;\n        if (this._rootNodeFocusListenerCount.has(rootNode)) {\n            const rootNodeFocusListeners = this._rootNodeFocusListenerCount.get(rootNode);\n            if (rootNodeFocusListeners > 1) {\n                this._rootNodeFocusListenerCount.set(rootNode, rootNodeFocusListeners - 1);\n            }\n            else {\n                rootNode.removeEventListener('focus', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n                rootNode.removeEventListener('blur', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n                this._rootNodeFocusListenerCount.delete(rootNode);\n            }\n        }\n        // Unregister global listeners when last element is unmonitored.\n        if (!--this._monitoredElementCount) {\n            const window = this._getWindow();\n            window.removeEventListener('focus', this._windowFocusListener);\n            // Equivalently, stop our InputModalityDetector subscription.\n            this._stopInputModalityDetector.next();\n            // Clear timeouts for all potentially pending timeouts to prevent the leaks.\n            clearTimeout(this._windowFocusTimeoutId);\n            clearTimeout(this._originTimeoutId);\n        }\n    }\n    /** Updates all the state on an element once its focus origin has changed. */\n    _originChanged(element, origin, elementInfo) {\n        this._setClasses(element, origin);\n        this._emitOrigin(elementInfo, origin);\n        this._lastFocusOrigin = origin;\n    }\n    /**\n     * Collects the `MonitoredElementInfo` of a particular element and\n     * all of its ancestors that have enabled `checkChildren`.\n     * @param element Element from which to start the search.\n     */\n    _getClosestElementsInfo(element) {\n        const results = [];\n        this._elementInfo.forEach((info, currentElement) => {\n            if (currentElement === element || (info.checkChildren && currentElement.contains(element))) {\n                results.push([currentElement, info]);\n            }\n        });\n        return results;\n    }\n    /**\n     * Returns whether an interaction is likely to have come from the user clicking the `label` of\n     * an `input` or `textarea` in order to focus it.\n     * @param focusEventTarget Target currently receiving focus.\n     */\n    _isLastInteractionFromInputLabel(focusEventTarget) {\n        const { _mostRecentTarget: mostRecentTarget, mostRecentModality } = this._inputModalityDetector;\n        // If the last interaction used the mouse on an element contained by one of the labels\n        // of an `input`/`textarea` that is currently focused, it is very likely that the\n        // user redirected focus using the label.\n        if (mostRecentModality !== 'mouse' ||\n            !mostRecentTarget ||\n            mostRecentTarget === focusEventTarget ||\n            (focusEventTarget.nodeName !== 'INPUT' && focusEventTarget.nodeName !== 'TEXTAREA') ||\n            focusEventTarget.disabled) {\n            return false;\n        }\n        const labels = focusEventTarget.labels;\n        if (labels) {\n            for (let i = 0; i < labels.length; i++) {\n                if (labels[i].contains(mostRecentTarget)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: FocusMonitor, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: FocusMonitor, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: FocusMonitor, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [] });\n/**\n * Directive that determines how a particular element was focused (via keyboard, mouse, touch, or\n * programmatically) and adds corresponding classes to the element.\n *\n * There are two variants of this directive:\n * 1) cdkMonitorElementFocus: does not consider an element to be focused if one of its children is\n *    focused.\n * 2) cdkMonitorSubtreeFocus: considers an element focused if it or any of its children are focused.\n */\nclass CdkMonitorFocus {\n    _elementRef = inject(ElementRef);\n    _focusMonitor = inject(FocusMonitor);\n    _monitorSubscription;\n    _focusOrigin = null;\n    cdkFocusChange = new EventEmitter();\n    constructor() { }\n    get focusOrigin() {\n        return this._focusOrigin;\n    }\n    ngAfterViewInit() {\n        const element = this._elementRef.nativeElement;\n        this._monitorSubscription = this._focusMonitor\n            .monitor(element, element.nodeType === 1 && element.hasAttribute('cdkMonitorSubtreeFocus'))\n            .subscribe(origin => {\n            this._focusOrigin = origin;\n            this.cdkFocusChange.emit(origin);\n        });\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        if (this._monitorSubscription) {\n            this._monitorSubscription.unsubscribe();\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkMonitorFocus, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: CdkMonitorFocus, isStandalone: true, selector: \"[cdkMonitorElementFocus], [cdkMonitorSubtreeFocus]\", outputs: { cdkFocusChange: \"cdkFocusChange\" }, exportAs: [\"cdkMonitorFocus\"], ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkMonitorFocus, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkMonitorElementFocus], [cdkMonitorSubtreeFocus]',\n                    exportAs: 'cdkMonitorFocus',\n                }]\n        }], ctorParameters: () => [], propDecorators: { cdkFocusChange: [{\n                type: Output\n            }] } });\n\nexport { CdkMonitorFocus as C, FocusMonitor as F, InputModalityDetector as I, INPUT_MODALITY_DETECTOR_DEFAULT_OPTIONS as a, INPUT_MODALITY_DETECTOR_OPTIONS as b, FocusMonitorDetectionMode as c, FOCUS_MONITOR_DEFAULT_OPTIONS as d };\n\n","import * as i0 from '@angular/core';\nimport { inject, Injector, EnvironmentInjector, ApplicationRef, createComponent, Injectable } from '@angular/core';\n\n/** Apps in which we've loaded styles. */\nconst appsWithLoaders = new WeakMap();\n/**\n * Service that loads structural styles dynamically\n * and ensures that they're only loaded once per app.\n */\nclass _CdkPrivateStyleLoader {\n    _appRef;\n    _injector = inject(Injector);\n    _environmentInjector = inject(EnvironmentInjector);\n    /**\n     * Loads a set of styles.\n     * @param loader Component which will be instantiated to load the styles.\n     */\n    load(loader) {\n        // Resolve the app ref lazily to avoid circular dependency errors if this is called too early.\n        const appRef = (this._appRef = this._appRef || this._injector.get(ApplicationRef));\n        let data = appsWithLoaders.get(appRef);\n        // If we haven't loaded for this app before, we have to initialize it.\n        if (!data) {\n            data = { loaders: new Set(), refs: [] };\n            appsWithLoaders.set(appRef, data);\n            // When the app is destroyed, we need to clean up all the related loaders.\n            appRef.onDestroy(() => {\n                appsWithLoaders.get(appRef)?.refs.forEach(ref => ref.destroy());\n                appsWithLoaders.delete(appRef);\n            });\n        }\n        // If the loader hasn't been loaded before, we need to instatiate it.\n        if (!data.loaders.has(loader)) {\n            data.loaders.add(loader);\n            data.refs.push(createComponent(loader, { environmentInjector: this._environmentInjector }));\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: _CdkPrivateStyleLoader, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: _CdkPrivateStyleLoader, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: _CdkPrivateStyleLoader, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\nexport { _CdkPrivateStyleLoader as _ };\n\n","export { _ as _CdkPrivateStyleLoader } from './style-loader-B2sGQXxD.mjs';\nimport * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy } from '@angular/core';\n\n/**\n * Component used to load the .cdk-visually-hidden styles.\n * @docs-private\n */\nclass _VisuallyHiddenLoader {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: _VisuallyHiddenLoader, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"20.0.0\", type: _VisuallyHiddenLoader, isStandalone: true, selector: \"ng-component\", exportAs: [\"cdkVisuallyHidden\"], ngImport: i0, template: '', isInline: true, styles: [\".cdk-visually-hidden{border:0;clip:rect(0 0 0 0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px;white-space:nowrap;outline:0;-webkit-appearance:none;-moz-appearance:none;left:0}[dir=rtl] .cdk-visually-hidden{left:auto;right:0}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: _VisuallyHiddenLoader, decorators: [{\n            type: Component,\n            args: [{ exportAs: 'cdkVisuallyHidden', encapsulation: ViewEncapsulation.None, template: '', changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".cdk-visually-hidden{border:0;clip:rect(0 0 0 0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px;white-space:nowrap;outline:0;-webkit-appearance:none;-moz-appearance:none;left:0}[dir=rtl] .cdk-visually-hidden{left:auto;right:0}\\n\"] }]\n        }] });\n\nexport { _VisuallyHiddenLoader };\n\n","function coerceArray(value) {\n    return Array.isArray(value) ? value : [value];\n}\n\nexport { coerceArray as c };\n\n","import * as i0 from '@angular/core';\nimport { inject, CSP_NONCE, Injectable, NgZone } from '@angular/core';\nimport { Subject, combineLatest, concat, Observable } from 'rxjs';\nimport { take, skip, debounceTime, map, startWith, takeUntil } from 'rxjs/operators';\nimport { P as Platform } from './platform-DNDzkVcI.mjs';\nimport { c as coerceArray } from './array-I1yfCXUO.mjs';\n\n/** Global registry for all dynamically-created, injected media queries. */\nconst mediaQueriesForWebkitCompatibility = new Set();\n/** Style tag that holds all of the dynamically-created media queries. */\nlet mediaQueryStyleNode;\n/** A utility for calling matchMedia queries. */\nclass MediaMatcher {\n    _platform = inject(Platform);\n    _nonce = inject(CSP_NONCE, { optional: true });\n    /** The internal matchMedia method to return back a MediaQueryList like object. */\n    _matchMedia;\n    constructor() {\n        this._matchMedia =\n            this._platform.isBrowser && window.matchMedia\n                ? // matchMedia is bound to the window scope intentionally as it is an illegal invocation to\n                    // call it from a different scope.\n                    window.matchMedia.bind(window)\n                : noopMatchMedia;\n    }\n    /**\n     * Evaluates the given media query and returns the native MediaQueryList from which results\n     * can be retrieved.\n     * Confirms the layout engine will trigger for the selector query provided and returns the\n     * MediaQueryList for the query provided.\n     */\n    matchMedia(query) {\n        if (this._platform.WEBKIT || this._platform.BLINK) {\n            createEmptyStyleRule(query, this._nonce);\n        }\n        return this._matchMedia(query);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MediaMatcher, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MediaMatcher, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MediaMatcher, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [] });\n/**\n * Creates an empty stylesheet that is used to work around browser inconsistencies related to\n * `matchMedia`. At the time of writing, it handles the following cases:\n * 1. On WebKit browsers, a media query has to have at least one rule in order for `matchMedia`\n * to fire. We work around it by declaring a dummy stylesheet with a `@media` declaration.\n * 2. In some cases Blink browsers will stop firing the `matchMedia` listener if none of the rules\n * inside the `@media` match existing elements on the page. We work around it by having one rule\n * targeting the `body`. See https://github.com/angular/components/issues/23546.\n */\nfunction createEmptyStyleRule(query, nonce) {\n    if (mediaQueriesForWebkitCompatibility.has(query)) {\n        return;\n    }\n    try {\n        if (!mediaQueryStyleNode) {\n            mediaQueryStyleNode = document.createElement('style');\n            if (nonce) {\n                mediaQueryStyleNode.setAttribute('nonce', nonce);\n            }\n            mediaQueryStyleNode.setAttribute('type', 'text/css');\n            document.head.appendChild(mediaQueryStyleNode);\n        }\n        if (mediaQueryStyleNode.sheet) {\n            mediaQueryStyleNode.sheet.insertRule(`@media ${query} {body{ }}`, 0);\n            mediaQueriesForWebkitCompatibility.add(query);\n        }\n    }\n    catch (e) {\n        console.error(e);\n    }\n}\n/** No-op matchMedia replacement for non-browser platforms. */\nfunction noopMatchMedia(query) {\n    // Use `as any` here to avoid adding additional necessary properties for\n    // the noop matcher.\n    return {\n        matches: query === 'all' || query === '',\n        media: query,\n        addListener: () => { },\n        removeListener: () => { },\n    };\n}\n\n/** Utility for checking the matching state of `@media` queries. */\nclass BreakpointObserver {\n    _mediaMatcher = inject(MediaMatcher);\n    _zone = inject(NgZone);\n    /**  A map of all media queries currently being listened for. */\n    _queries = new Map();\n    /** A subject for all other observables to takeUntil based on. */\n    _destroySubject = new Subject();\n    constructor() { }\n    /** Completes the active subject, signalling to all other observables to complete. */\n    ngOnDestroy() {\n        this._destroySubject.next();\n        this._destroySubject.complete();\n    }\n    /**\n     * Whether one or more media queries match the current viewport size.\n     * @param value One or more media queries to check.\n     * @returns Whether any of the media queries match.\n     */\n    isMatched(value) {\n        const queries = splitQueries(coerceArray(value));\n        return queries.some(mediaQuery => this._registerQuery(mediaQuery).mql.matches);\n    }\n    /**\n     * Gets an observable of results for the given queries that will emit new results for any changes\n     * in matching of the given queries.\n     * @param value One or more media queries to check.\n     * @returns A stream of matches for the given queries.\n     */\n    observe(value) {\n        const queries = splitQueries(coerceArray(value));\n        const observables = queries.map(query => this._registerQuery(query).observable);\n        let stateObservable = combineLatest(observables);\n        // Emit the first state immediately, and then debounce the subsequent emissions.\n        stateObservable = concat(stateObservable.pipe(take(1)), stateObservable.pipe(skip(1), debounceTime(0)));\n        return stateObservable.pipe(map(breakpointStates => {\n            const response = {\n                matches: false,\n                breakpoints: {},\n            };\n            breakpointStates.forEach(({ matches, query }) => {\n                response.matches = response.matches || matches;\n                response.breakpoints[query] = matches;\n            });\n            return response;\n        }));\n    }\n    /** Registers a specific query to be listened for. */\n    _registerQuery(query) {\n        // Only set up a new MediaQueryList if it is not already being listened for.\n        if (this._queries.has(query)) {\n            return this._queries.get(query);\n        }\n        const mql = this._mediaMatcher.matchMedia(query);\n        // Create callback for match changes and add it is as a listener.\n        const queryObservable = new Observable((observer) => {\n            // Listener callback methods are wrapped to be placed back in ngZone. Callbacks must be placed\n            // back into the zone because matchMedia is only included in Zone.js by loading the\n            // webapis-media-query.js file alongside the zone.js file.  Additionally, some browsers do not\n            // have MediaQueryList inherit from EventTarget, which causes inconsistencies in how Zone.js\n            // patches it.\n            const handler = (e) => this._zone.run(() => observer.next(e));\n            mql.addListener(handler);\n            return () => {\n                mql.removeListener(handler);\n            };\n        }).pipe(startWith(mql), map(({ matches }) => ({ query, matches })), takeUntil(this._destroySubject));\n        // Add the MediaQueryList to the set of queries.\n        const output = { observable: queryObservable, mql };\n        this._queries.set(query, output);\n        return output;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: BreakpointObserver, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: BreakpointObserver, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: BreakpointObserver, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [] });\n/**\n * Split each query string into separate query strings if two queries are provided as comma\n * separated.\n */\nfunction splitQueries(queries) {\n    return queries\n        .map(query => query.split(','))\n        .reduce((a1, a2) => a1.concat(a2))\n        .map(query => query.trim());\n}\n\nexport { BreakpointObserver as B, MediaMatcher as M };\n\n","import * as i0 from '@angular/core';\nimport { Injectable, inject, NgZone, ElementRef, EventEmitter, booleanAttribute, Directive, Output, Input, NgModule } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { map, filter, debounceTime } from 'rxjs/operators';\nimport { c as coerceNumberProperty, a as coerceElement } from './element-x4z00URv.mjs';\n\n// Angular may add, remove, or edit comment nodes during change detection. We don't care about\n// these changes because they don't affect the user-preceived content, and worse it can cause\n// infinite change detection cycles where the change detection updates a comment, triggering the\n// MutationObserver, triggering another change detection and kicking the cycle off again.\nfunction shouldIgnoreRecord(record) {\n    // Ignore changes to comment text.\n    if (record.type === 'characterData' && record.target instanceof Comment) {\n        return true;\n    }\n    // Ignore addition / removal of comments.\n    if (record.type === 'childList') {\n        for (let i = 0; i < record.addedNodes.length; i++) {\n            if (!(record.addedNodes[i] instanceof Comment)) {\n                return false;\n            }\n        }\n        for (let i = 0; i < record.removedNodes.length; i++) {\n            if (!(record.removedNodes[i] instanceof Comment)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    // Observe everything else.\n    return false;\n}\n/**\n * Factory that creates a new MutationObserver and allows us to stub it out in unit tests.\n * @docs-private\n */\nclass MutationObserverFactory {\n    create(callback) {\n        return typeof MutationObserver === 'undefined' ? null : new MutationObserver(callback);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MutationObserverFactory, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MutationObserverFactory, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MutationObserverFactory, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n/** An injectable service that allows watching elements for changes to their content. */\nclass ContentObserver {\n    _mutationObserverFactory = inject(MutationObserverFactory);\n    /** Keeps track of the existing MutationObservers so they can be reused. */\n    _observedElements = new Map();\n    _ngZone = inject(NgZone);\n    constructor() { }\n    ngOnDestroy() {\n        this._observedElements.forEach((_, element) => this._cleanupObserver(element));\n    }\n    observe(elementOrRef) {\n        const element = coerceElement(elementOrRef);\n        return new Observable((observer) => {\n            const stream = this._observeElement(element);\n            const subscription = stream\n                .pipe(map(records => records.filter(record => !shouldIgnoreRecord(record))), filter(records => !!records.length))\n                .subscribe(records => {\n                this._ngZone.run(() => {\n                    observer.next(records);\n                });\n            });\n            return () => {\n                subscription.unsubscribe();\n                this._unobserveElement(element);\n            };\n        });\n    }\n    /**\n     * Observes the given element by using the existing MutationObserver if available, or creating a\n     * new one if not.\n     */\n    _observeElement(element) {\n        return this._ngZone.runOutsideAngular(() => {\n            if (!this._observedElements.has(element)) {\n                const stream = new Subject();\n                const observer = this._mutationObserverFactory.create(mutations => stream.next(mutations));\n                if (observer) {\n                    observer.observe(element, {\n                        characterData: true,\n                        childList: true,\n                        subtree: true,\n                    });\n                }\n                this._observedElements.set(element, { observer, stream, count: 1 });\n            }\n            else {\n                this._observedElements.get(element).count++;\n            }\n            return this._observedElements.get(element).stream;\n        });\n    }\n    /**\n     * Un-observes the given element and cleans up the underlying MutationObserver if nobody else is\n     * observing this element.\n     */\n    _unobserveElement(element) {\n        if (this._observedElements.has(element)) {\n            this._observedElements.get(element).count--;\n            if (!this._observedElements.get(element).count) {\n                this._cleanupObserver(element);\n            }\n        }\n    }\n    /** Clean up the underlying MutationObserver for the specified element. */\n    _cleanupObserver(element) {\n        if (this._observedElements.has(element)) {\n            const { observer, stream } = this._observedElements.get(element);\n            if (observer) {\n                observer.disconnect();\n            }\n            stream.complete();\n            this._observedElements.delete(element);\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: ContentObserver, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: ContentObserver, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: ContentObserver, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [] });\n/**\n * Directive that triggers a callback whenever the content of\n * its associated element has changed.\n */\nclass CdkObserveContent {\n    _contentObserver = inject(ContentObserver);\n    _elementRef = inject(ElementRef);\n    /** Event emitted for each change in the element's content. */\n    event = new EventEmitter();\n    /**\n     * Whether observing content is disabled. This option can be used\n     * to disconnect the underlying MutationObserver until it is needed.\n     */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = value;\n        this._disabled ? this._unsubscribe() : this._subscribe();\n    }\n    _disabled = false;\n    /** Debounce interval for emitting the changes. */\n    get debounce() {\n        return this._debounce;\n    }\n    set debounce(value) {\n        this._debounce = coerceNumberProperty(value);\n        this._subscribe();\n    }\n    _debounce;\n    _currentSubscription = null;\n    constructor() { }\n    ngAfterContentInit() {\n        if (!this._currentSubscription && !this.disabled) {\n            this._subscribe();\n        }\n    }\n    ngOnDestroy() {\n        this._unsubscribe();\n    }\n    _subscribe() {\n        this._unsubscribe();\n        const stream = this._contentObserver.observe(this._elementRef);\n        this._currentSubscription = (this.debounce ? stream.pipe(debounceTime(this.debounce)) : stream).subscribe(this.event);\n    }\n    _unsubscribe() {\n        this._currentSubscription?.unsubscribe();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkObserveContent, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"20.0.0\", type: CdkObserveContent, isStandalone: true, selector: \"[cdkObserveContent]\", inputs: { disabled: [\"cdkObserveContentDisabled\", \"disabled\", booleanAttribute], debounce: \"debounce\" }, outputs: { event: \"cdkObserveContent\" }, exportAs: [\"cdkObserveContent\"], ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkObserveContent, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkObserveContent]',\n                    exportAs: 'cdkObserveContent',\n                }]\n        }], ctorParameters: () => [], propDecorators: { event: [{\n                type: Output,\n                args: ['cdkObserveContent']\n            }], disabled: [{\n                type: Input,\n                args: [{ alias: 'cdkObserveContentDisabled', transform: booleanAttribute }]\n            }], debounce: [{\n                type: Input\n            }] } });\nclass ObserversModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: ObserversModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.0\", ngImport: i0, type: ObserversModule, imports: [CdkObserveContent], exports: [CdkObserveContent] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: ObserversModule, providers: [MutationObserverFactory] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: ObserversModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CdkObserveContent],\n                    exports: [CdkObserveContent],\n                    providers: [MutationObserverFactory],\n                }]\n        }] });\n\nexport { CdkObserveContent, ContentObserver, MutationObserverFactory, ObserversModule };\n\n","import * as i0 from '@angular/core';\nimport { inject, Injectable, afterNextRender, NgZone, DOCUMENT, Injector, ElementRef, booleanAttribute, Directive, Input, InjectionToken, NgModule } from '@angular/core';\nimport { C as CdkMonitorFocus } from './focus-monitor-DUe99AIS.mjs';\nimport { P as Platform } from './platform-DNDzkVcI.mjs';\nimport { c as _getFocusedElementPierceShadowDom } from './shadow-dom-B0oHn41l.mjs';\nimport { _ as _CdkPrivateStyleLoader } from './style-loader-B2sGQXxD.mjs';\nimport { _VisuallyHiddenLoader } from './private.mjs';\nimport { B as BreakpointObserver } from './breakpoints-observer-QutrMj4x.mjs';\nimport { ContentObserver, ObserversModule } from './observers.mjs';\n\n/**\n * Configuration for the isFocusable method.\n */\nclass IsFocusableConfig {\n    /**\n     * Whether to count an element as focusable even if it is not currently visible.\n     */\n    ignoreVisibility = false;\n}\n// The InteractivityChecker leans heavily on the ally.js accessibility utilities.\n// Methods like `isTabbable` are only covering specific edge-cases for the browsers which are\n// supported.\n/**\n * Utility for checking the interactivity of an element, such as whether it is focusable or\n * tabbable.\n */\nclass InteractivityChecker {\n    _platform = inject(Platform);\n    constructor() { }\n    /**\n     * Gets whether an element is disabled.\n     *\n     * @param element Element to be checked.\n     * @returns Whether the element is disabled.\n     */\n    isDisabled(element) {\n        // This does not capture some cases, such as a non-form control with a disabled attribute or\n        // a form control inside of a disabled form, but should capture the most common cases.\n        return element.hasAttribute('disabled');\n    }\n    /**\n     * Gets whether an element is visible for the purposes of interactivity.\n     *\n     * This will capture states like `display: none` and `visibility: hidden`, but not things like\n     * being clipped by an `overflow: hidden` parent or being outside the viewport.\n     *\n     * @returns Whether the element is visible.\n     */\n    isVisible(element) {\n        return hasGeometry(element) && getComputedStyle(element).visibility === 'visible';\n    }\n    /**\n     * Gets whether an element can be reached via Tab key.\n     * Assumes that the element has already been checked with isFocusable.\n     *\n     * @param element Element to be checked.\n     * @returns Whether the element is tabbable.\n     */\n    isTabbable(element) {\n        // Nothing is tabbable on the server 😎\n        if (!this._platform.isBrowser) {\n            return false;\n        }\n        const frameElement = getFrameElement(getWindow(element));\n        if (frameElement) {\n            // Frame elements inherit their tabindex onto all child elements.\n            if (getTabIndexValue(frameElement) === -1) {\n                return false;\n            }\n            // Browsers disable tabbing to an element inside of an invisible frame.\n            if (!this.isVisible(frameElement)) {\n                return false;\n            }\n        }\n        let nodeName = element.nodeName.toLowerCase();\n        let tabIndexValue = getTabIndexValue(element);\n        if (element.hasAttribute('contenteditable')) {\n            return tabIndexValue !== -1;\n        }\n        if (nodeName === 'iframe' || nodeName === 'object') {\n            // The frame or object's content may be tabbable depending on the content, but it's\n            // not possibly to reliably detect the content of the frames. We always consider such\n            // elements as non-tabbable.\n            return false;\n        }\n        // In iOS, the browser only considers some specific elements as tabbable.\n        if (this._platform.WEBKIT && this._platform.IOS && !isPotentiallyTabbableIOS(element)) {\n            return false;\n        }\n        if (nodeName === 'audio') {\n            // Audio elements without controls enabled are never tabbable, regardless\n            // of the tabindex attribute explicitly being set.\n            if (!element.hasAttribute('controls')) {\n                return false;\n            }\n            // Audio elements with controls are by default tabbable unless the\n            // tabindex attribute is set to `-1` explicitly.\n            return tabIndexValue !== -1;\n        }\n        if (nodeName === 'video') {\n            // For all video elements, if the tabindex attribute is set to `-1`, the video\n            // is not tabbable. Note: We cannot rely on the default `HTMLElement.tabIndex`\n            // property as that one is set to `-1` in Chrome, Edge and Safari v13.1. The\n            // tabindex attribute is the source of truth here.\n            if (tabIndexValue === -1) {\n                return false;\n            }\n            // If the tabindex is explicitly set, and not `-1` (as per check before), the\n            // video element is always tabbable (regardless of whether it has controls or not).\n            if (tabIndexValue !== null) {\n                return true;\n            }\n            // Otherwise (when no explicit tabindex is set), a video is only tabbable if it\n            // has controls enabled. Firefox is special as videos are always tabbable regardless\n            // of whether there are controls or not.\n            return this._platform.FIREFOX || element.hasAttribute('controls');\n        }\n        return element.tabIndex >= 0;\n    }\n    /**\n     * Gets whether an element can be focused by the user.\n     *\n     * @param element Element to be checked.\n     * @param config The config object with options to customize this method's behavior\n     * @returns Whether the element is focusable.\n     */\n    isFocusable(element, config) {\n        // Perform checks in order of left to most expensive.\n        // Again, naive approach that does not capture many edge cases and browser quirks.\n        return (isPotentiallyFocusable(element) &&\n            !this.isDisabled(element) &&\n            (config?.ignoreVisibility || this.isVisible(element)));\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: InteractivityChecker, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: InteractivityChecker, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: InteractivityChecker, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [] });\n/**\n * Returns the frame element from a window object. Since browsers like MS Edge throw errors if\n * the frameElement property is being accessed from a different host address, this property\n * should be accessed carefully.\n */\nfunction getFrameElement(window) {\n    try {\n        return window.frameElement;\n    }\n    catch {\n        return null;\n    }\n}\n/** Checks whether the specified element has any geometry / rectangles. */\nfunction hasGeometry(element) {\n    // Use logic from jQuery to check for an invisible element.\n    // See https://github.com/jquery/jquery/blob/master/src/css/hiddenVisibleSelectors.js#L12\n    return !!(element.offsetWidth ||\n        element.offsetHeight ||\n        (typeof element.getClientRects === 'function' && element.getClientRects().length));\n}\n/** Gets whether an element's  */\nfunction isNativeFormElement(element) {\n    let nodeName = element.nodeName.toLowerCase();\n    return (nodeName === 'input' ||\n        nodeName === 'select' ||\n        nodeName === 'button' ||\n        nodeName === 'textarea');\n}\n/** Gets whether an element is an `<input type=\"hidden\">`. */\nfunction isHiddenInput(element) {\n    return isInputElement(element) && element.type == 'hidden';\n}\n/** Gets whether an element is an anchor that has an href attribute. */\nfunction isAnchorWithHref(element) {\n    return isAnchorElement(element) && element.hasAttribute('href');\n}\n/** Gets whether an element is an input element. */\nfunction isInputElement(element) {\n    return element.nodeName.toLowerCase() == 'input';\n}\n/** Gets whether an element is an anchor element. */\nfunction isAnchorElement(element) {\n    return element.nodeName.toLowerCase() == 'a';\n}\n/** Gets whether an element has a valid tabindex. */\nfunction hasValidTabIndex(element) {\n    if (!element.hasAttribute('tabindex') || element.tabIndex === undefined) {\n        return false;\n    }\n    let tabIndex = element.getAttribute('tabindex');\n    return !!(tabIndex && !isNaN(parseInt(tabIndex, 10)));\n}\n/**\n * Returns the parsed tabindex from the element attributes instead of returning the\n * evaluated tabindex from the browsers defaults.\n */\nfunction getTabIndexValue(element) {\n    if (!hasValidTabIndex(element)) {\n        return null;\n    }\n    // See browser issue in Gecko https://bugzilla.mozilla.org/show_bug.cgi?id=1128054\n    const tabIndex = parseInt(element.getAttribute('tabindex') || '', 10);\n    return isNaN(tabIndex) ? -1 : tabIndex;\n}\n/** Checks whether the specified element is potentially tabbable on iOS */\nfunction isPotentiallyTabbableIOS(element) {\n    let nodeName = element.nodeName.toLowerCase();\n    let inputType = nodeName === 'input' && element.type;\n    return (inputType === 'text' ||\n        inputType === 'password' ||\n        nodeName === 'select' ||\n        nodeName === 'textarea');\n}\n/**\n * Gets whether an element is potentially focusable without taking current visible/disabled state\n * into account.\n */\nfunction isPotentiallyFocusable(element) {\n    // Inputs are potentially focusable *unless* they're type=\"hidden\".\n    if (isHiddenInput(element)) {\n        return false;\n    }\n    return (isNativeFormElement(element) ||\n        isAnchorWithHref(element) ||\n        element.hasAttribute('contenteditable') ||\n        hasValidTabIndex(element));\n}\n/** Gets the parent window of a DOM node with regards of being inside of an iframe. */\nfunction getWindow(node) {\n    // ownerDocument is null if `node` itself *is* a document.\n    return (node.ownerDocument && node.ownerDocument.defaultView) || window;\n}\n\n/**\n * Class that allows for trapping focus within a DOM element.\n *\n * This class currently uses a relatively simple approach to focus trapping.\n * It assumes that the tab order is the same as DOM order, which is not necessarily true.\n * Things like `tabIndex > 0`, flex `order`, and shadow roots can cause the two to be misaligned.\n */\nclass FocusTrap {\n    _element;\n    _checker;\n    _ngZone;\n    _document;\n    _injector;\n    _startAnchor;\n    _endAnchor;\n    _hasAttached = false;\n    // Event listeners for the anchors. Need to be regular functions so that we can unbind them later.\n    startAnchorListener = () => this.focusLastTabbableElement();\n    endAnchorListener = () => this.focusFirstTabbableElement();\n    /** Whether the focus trap is active. */\n    get enabled() {\n        return this._enabled;\n    }\n    set enabled(value) {\n        this._enabled = value;\n        if (this._startAnchor && this._endAnchor) {\n            this._toggleAnchorTabIndex(value, this._startAnchor);\n            this._toggleAnchorTabIndex(value, this._endAnchor);\n        }\n    }\n    _enabled = true;\n    constructor(_element, _checker, _ngZone, _document, deferAnchors = false, \n    /** @breaking-change 20.0.0 param to become required */\n    _injector) {\n        this._element = _element;\n        this._checker = _checker;\n        this._ngZone = _ngZone;\n        this._document = _document;\n        this._injector = _injector;\n        if (!deferAnchors) {\n            this.attachAnchors();\n        }\n    }\n    /** Destroys the focus trap by cleaning up the anchors. */\n    destroy() {\n        const startAnchor = this._startAnchor;\n        const endAnchor = this._endAnchor;\n        if (startAnchor) {\n            startAnchor.removeEventListener('focus', this.startAnchorListener);\n            startAnchor.remove();\n        }\n        if (endAnchor) {\n            endAnchor.removeEventListener('focus', this.endAnchorListener);\n            endAnchor.remove();\n        }\n        this._startAnchor = this._endAnchor = null;\n        this._hasAttached = false;\n    }\n    /**\n     * Inserts the anchors into the DOM. This is usually done automatically\n     * in the constructor, but can be deferred for cases like directives with `*ngIf`.\n     * @returns Whether the focus trap managed to attach successfully. This may not be the case\n     * if the target element isn't currently in the DOM.\n     */\n    attachAnchors() {\n        // If we're not on the browser, there can be no focus to trap.\n        if (this._hasAttached) {\n            return true;\n        }\n        this._ngZone.runOutsideAngular(() => {\n            if (!this._startAnchor) {\n                this._startAnchor = this._createAnchor();\n                this._startAnchor.addEventListener('focus', this.startAnchorListener);\n            }\n            if (!this._endAnchor) {\n                this._endAnchor = this._createAnchor();\n                this._endAnchor.addEventListener('focus', this.endAnchorListener);\n            }\n        });\n        if (this._element.parentNode) {\n            this._element.parentNode.insertBefore(this._startAnchor, this._element);\n            this._element.parentNode.insertBefore(this._endAnchor, this._element.nextSibling);\n            this._hasAttached = true;\n        }\n        return this._hasAttached;\n    }\n    /**\n     * Waits for the zone to stabilize, then focuses the first tabbable element.\n     * @returns Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfully.\n     */\n    focusInitialElementWhenReady(options) {\n        return new Promise(resolve => {\n            this._executeOnStable(() => resolve(this.focusInitialElement(options)));\n        });\n    }\n    /**\n     * Waits for the zone to stabilize, then focuses\n     * the first tabbable element within the focus trap region.\n     * @returns Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfully.\n     */\n    focusFirstTabbableElementWhenReady(options) {\n        return new Promise(resolve => {\n            this._executeOnStable(() => resolve(this.focusFirstTabbableElement(options)));\n        });\n    }\n    /**\n     * Waits for the zone to stabilize, then focuses\n     * the last tabbable element within the focus trap region.\n     * @returns Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfully.\n     */\n    focusLastTabbableElementWhenReady(options) {\n        return new Promise(resolve => {\n            this._executeOnStable(() => resolve(this.focusLastTabbableElement(options)));\n        });\n    }\n    /**\n     * Get the specified boundary element of the trapped region.\n     * @param bound The boundary to get (start or end of trapped region).\n     * @returns The boundary element.\n     */\n    _getRegionBoundary(bound) {\n        // Contains the deprecated version of selector, for temporary backwards comparability.\n        const markers = this._element.querySelectorAll(`[cdk-focus-region-${bound}], ` + `[cdkFocusRegion${bound}], ` + `[cdk-focus-${bound}]`);\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            for (let i = 0; i < markers.length; i++) {\n                // @breaking-change 8.0.0\n                if (markers[i].hasAttribute(`cdk-focus-${bound}`)) {\n                    console.warn(`Found use of deprecated attribute 'cdk-focus-${bound}', ` +\n                        `use 'cdkFocusRegion${bound}' instead. The deprecated ` +\n                        `attribute will be removed in 8.0.0.`, markers[i]);\n                }\n                else if (markers[i].hasAttribute(`cdk-focus-region-${bound}`)) {\n                    console.warn(`Found use of deprecated attribute 'cdk-focus-region-${bound}', ` +\n                        `use 'cdkFocusRegion${bound}' instead. The deprecated attribute ` +\n                        `will be removed in 8.0.0.`, markers[i]);\n                }\n            }\n        }\n        if (bound == 'start') {\n            return markers.length ? markers[0] : this._getFirstTabbableElement(this._element);\n        }\n        return markers.length\n            ? markers[markers.length - 1]\n            : this._getLastTabbableElement(this._element);\n    }\n    /**\n     * Focuses the element that should be focused when the focus trap is initialized.\n     * @returns Whether focus was moved successfully.\n     */\n    focusInitialElement(options) {\n        // Contains the deprecated version of selector, for temporary backwards comparability.\n        const redirectToElement = this._element.querySelector(`[cdk-focus-initial], ` + `[cdkFocusInitial]`);\n        if (redirectToElement) {\n            // @breaking-change 8.0.0\n            if ((typeof ngDevMode === 'undefined' || ngDevMode) &&\n                redirectToElement.hasAttribute(`cdk-focus-initial`)) {\n                console.warn(`Found use of deprecated attribute 'cdk-focus-initial', ` +\n                    `use 'cdkFocusInitial' instead. The deprecated attribute ` +\n                    `will be removed in 8.0.0`, redirectToElement);\n            }\n            // Warn the consumer if the element they've pointed to\n            // isn't focusable, when not in production mode.\n            if ((typeof ngDevMode === 'undefined' || ngDevMode) &&\n                !this._checker.isFocusable(redirectToElement)) {\n                console.warn(`Element matching '[cdkFocusInitial]' is not focusable.`, redirectToElement);\n            }\n            if (!this._checker.isFocusable(redirectToElement)) {\n                const focusableChild = this._getFirstTabbableElement(redirectToElement);\n                focusableChild?.focus(options);\n                return !!focusableChild;\n            }\n            redirectToElement.focus(options);\n            return true;\n        }\n        return this.focusFirstTabbableElement(options);\n    }\n    /**\n     * Focuses the first tabbable element within the focus trap region.\n     * @returns Whether focus was moved successfully.\n     */\n    focusFirstTabbableElement(options) {\n        const redirectToElement = this._getRegionBoundary('start');\n        if (redirectToElement) {\n            redirectToElement.focus(options);\n        }\n        return !!redirectToElement;\n    }\n    /**\n     * Focuses the last tabbable element within the focus trap region.\n     * @returns Whether focus was moved successfully.\n     */\n    focusLastTabbableElement(options) {\n        const redirectToElement = this._getRegionBoundary('end');\n        if (redirectToElement) {\n            redirectToElement.focus(options);\n        }\n        return !!redirectToElement;\n    }\n    /**\n     * Checks whether the focus trap has successfully been attached.\n     */\n    hasAttached() {\n        return this._hasAttached;\n    }\n    /** Get the first tabbable element from a DOM subtree (inclusive). */\n    _getFirstTabbableElement(root) {\n        if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\n            return root;\n        }\n        const children = root.children;\n        for (let i = 0; i < children.length; i++) {\n            const tabbableChild = children[i].nodeType === this._document.ELEMENT_NODE\n                ? this._getFirstTabbableElement(children[i])\n                : null;\n            if (tabbableChild) {\n                return tabbableChild;\n            }\n        }\n        return null;\n    }\n    /** Get the last tabbable element from a DOM subtree (inclusive). */\n    _getLastTabbableElement(root) {\n        if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\n            return root;\n        }\n        // Iterate in reverse DOM order.\n        const children = root.children;\n        for (let i = children.length - 1; i >= 0; i--) {\n            const tabbableChild = children[i].nodeType === this._document.ELEMENT_NODE\n                ? this._getLastTabbableElement(children[i])\n                : null;\n            if (tabbableChild) {\n                return tabbableChild;\n            }\n        }\n        return null;\n    }\n    /** Creates an anchor element. */\n    _createAnchor() {\n        const anchor = this._document.createElement('div');\n        this._toggleAnchorTabIndex(this._enabled, anchor);\n        anchor.classList.add('cdk-visually-hidden');\n        anchor.classList.add('cdk-focus-trap-anchor');\n        anchor.setAttribute('aria-hidden', 'true');\n        return anchor;\n    }\n    /**\n     * Toggles the `tabindex` of an anchor, based on the enabled state of the focus trap.\n     * @param isEnabled Whether the focus trap is enabled.\n     * @param anchor Anchor on which to toggle the tabindex.\n     */\n    _toggleAnchorTabIndex(isEnabled, anchor) {\n        // Remove the tabindex completely, rather than setting it to -1, because if the\n        // element has a tabindex, the user might still hit it when navigating with the arrow keys.\n        isEnabled ? anchor.setAttribute('tabindex', '0') : anchor.removeAttribute('tabindex');\n    }\n    /**\n     * Toggles the`tabindex` of both anchors to either trap Tab focus or allow it to escape.\n     * @param enabled: Whether the anchors should trap Tab.\n     */\n    toggleAnchors(enabled) {\n        if (this._startAnchor && this._endAnchor) {\n            this._toggleAnchorTabIndex(enabled, this._startAnchor);\n            this._toggleAnchorTabIndex(enabled, this._endAnchor);\n        }\n    }\n    /** Executes a function when the zone is stable. */\n    _executeOnStable(fn) {\n        // TODO: remove this conditional when injector is required in the constructor.\n        if (this._injector) {\n            afterNextRender(fn, { injector: this._injector });\n        }\n        else {\n            setTimeout(fn);\n        }\n    }\n}\n/**\n * Factory that allows easy instantiation of focus traps.\n */\nclass FocusTrapFactory {\n    _checker = inject(InteractivityChecker);\n    _ngZone = inject(NgZone);\n    _document = inject(DOCUMENT);\n    _injector = inject(Injector);\n    constructor() {\n        inject(_CdkPrivateStyleLoader).load(_VisuallyHiddenLoader);\n    }\n    /**\n     * Creates a focus-trapped region around the given element.\n     * @param element The element around which focus will be trapped.\n     * @param deferCaptureElements Defers the creation of focus-capturing elements to be done\n     *     manually by the user.\n     * @returns The created focus trap instance.\n     */\n    create(element, deferCaptureElements = false) {\n        return new FocusTrap(element, this._checker, this._ngZone, this._document, deferCaptureElements, this._injector);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: FocusTrapFactory, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: FocusTrapFactory, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: FocusTrapFactory, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [] });\n/** Directive for trapping focus within a region. */\nclass CdkTrapFocus {\n    _elementRef = inject(ElementRef);\n    _focusTrapFactory = inject(FocusTrapFactory);\n    /** Underlying FocusTrap instance. */\n    focusTrap;\n    /** Previously focused element to restore focus to upon destroy when using autoCapture. */\n    _previouslyFocusedElement = null;\n    /** Whether the focus trap is active. */\n    get enabled() {\n        return this.focusTrap?.enabled || false;\n    }\n    set enabled(value) {\n        if (this.focusTrap) {\n            this.focusTrap.enabled = value;\n        }\n    }\n    /**\n     * Whether the directive should automatically move focus into the trapped region upon\n     * initialization and return focus to the previous activeElement upon destruction.\n     */\n    autoCapture;\n    constructor() {\n        const platform = inject(Platform);\n        if (platform.isBrowser) {\n            this.focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement, true);\n        }\n    }\n    ngOnDestroy() {\n        this.focusTrap?.destroy();\n        // If we stored a previously focused element when using autoCapture, return focus to that\n        // element now that the trapped region is being destroyed.\n        if (this._previouslyFocusedElement) {\n            this._previouslyFocusedElement.focus();\n            this._previouslyFocusedElement = null;\n        }\n    }\n    ngAfterContentInit() {\n        this.focusTrap?.attachAnchors();\n        if (this.autoCapture) {\n            this._captureFocus();\n        }\n    }\n    ngDoCheck() {\n        if (this.focusTrap && !this.focusTrap.hasAttached()) {\n            this.focusTrap.attachAnchors();\n        }\n    }\n    ngOnChanges(changes) {\n        const autoCaptureChange = changes['autoCapture'];\n        if (autoCaptureChange &&\n            !autoCaptureChange.firstChange &&\n            this.autoCapture &&\n            this.focusTrap?.hasAttached()) {\n            this._captureFocus();\n        }\n    }\n    _captureFocus() {\n        this._previouslyFocusedElement = _getFocusedElementPierceShadowDom();\n        this.focusTrap?.focusInitialElementWhenReady();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkTrapFocus, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"20.0.0\", type: CdkTrapFocus, isStandalone: true, selector: \"[cdkTrapFocus]\", inputs: { enabled: [\"cdkTrapFocus\", \"enabled\", booleanAttribute], autoCapture: [\"cdkTrapFocusAutoCapture\", \"autoCapture\", booleanAttribute] }, exportAs: [\"cdkTrapFocus\"], usesOnChanges: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkTrapFocus, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkTrapFocus]',\n                    exportAs: 'cdkTrapFocus',\n                }]\n        }], ctorParameters: () => [], propDecorators: { enabled: [{\n                type: Input,\n                args: [{ alias: 'cdkTrapFocus', transform: booleanAttribute }]\n            }], autoCapture: [{\n                type: Input,\n                args: [{ alias: 'cdkTrapFocusAutoCapture', transform: booleanAttribute }]\n            }] } });\n\nconst LIVE_ANNOUNCER_ELEMENT_TOKEN = new InjectionToken('liveAnnouncerElement', {\n    providedIn: 'root',\n    factory: LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY,\n});\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nfunction LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY() {\n    return null;\n}\n/** Injection token that can be used to configure the default options for the LiveAnnouncer. */\nconst LIVE_ANNOUNCER_DEFAULT_OPTIONS = new InjectionToken('LIVE_ANNOUNCER_DEFAULT_OPTIONS');\n\nlet uniqueIds = 0;\nclass LiveAnnouncer {\n    _ngZone = inject(NgZone);\n    _defaultOptions = inject(LIVE_ANNOUNCER_DEFAULT_OPTIONS, {\n        optional: true,\n    });\n    _liveElement;\n    _document = inject(DOCUMENT);\n    _previousTimeout;\n    _currentPromise;\n    _currentResolve;\n    constructor() {\n        const elementToken = inject(LIVE_ANNOUNCER_ELEMENT_TOKEN, { optional: true });\n        this._liveElement = elementToken || this._createLiveElement();\n    }\n    announce(message, ...args) {\n        const defaultOptions = this._defaultOptions;\n        let politeness;\n        let duration;\n        if (args.length === 1 && typeof args[0] === 'number') {\n            duration = args[0];\n        }\n        else {\n            [politeness, duration] = args;\n        }\n        this.clear();\n        clearTimeout(this._previousTimeout);\n        if (!politeness) {\n            politeness =\n                defaultOptions && defaultOptions.politeness ? defaultOptions.politeness : 'polite';\n        }\n        if (duration == null && defaultOptions) {\n            duration = defaultOptions.duration;\n        }\n        // TODO: ensure changing the politeness works on all environments we support.\n        this._liveElement.setAttribute('aria-live', politeness);\n        if (this._liveElement.id) {\n            this._exposeAnnouncerToModals(this._liveElement.id);\n        }\n        // This 100ms timeout is necessary for some browser + screen-reader combinations:\n        // - Both JAWS and NVDA over IE11 will not announce anything without a non-zero timeout.\n        // - With Chrome and IE11 with NVDA or JAWS, a repeated (identical) message won't be read a\n        //   second time without clearing and then using a non-zero delay.\n        // (using JAWS 17 at time of this writing).\n        return this._ngZone.runOutsideAngular(() => {\n            if (!this._currentPromise) {\n                this._currentPromise = new Promise(resolve => (this._currentResolve = resolve));\n            }\n            clearTimeout(this._previousTimeout);\n            this._previousTimeout = setTimeout(() => {\n                this._liveElement.textContent = message;\n                if (typeof duration === 'number') {\n                    this._previousTimeout = setTimeout(() => this.clear(), duration);\n                }\n                // For some reason in tests this can be undefined\n                // Probably related to ZoneJS and every other thing that patches browser APIs in tests\n                this._currentResolve?.();\n                this._currentPromise = this._currentResolve = undefined;\n            }, 100);\n            return this._currentPromise;\n        });\n    }\n    /**\n     * Clears the current text from the announcer element. Can be used to prevent\n     * screen readers from reading the text out again while the user is going\n     * through the page landmarks.\n     */\n    clear() {\n        if (this._liveElement) {\n            this._liveElement.textContent = '';\n        }\n    }\n    ngOnDestroy() {\n        clearTimeout(this._previousTimeout);\n        this._liveElement?.remove();\n        this._liveElement = null;\n        this._currentResolve?.();\n        this._currentPromise = this._currentResolve = undefined;\n    }\n    _createLiveElement() {\n        const elementClass = 'cdk-live-announcer-element';\n        const previousElements = this._document.getElementsByClassName(elementClass);\n        const liveEl = this._document.createElement('div');\n        // Remove any old containers. This can happen when coming in from a server-side-rendered page.\n        for (let i = 0; i < previousElements.length; i++) {\n            previousElements[i].remove();\n        }\n        liveEl.classList.add(elementClass);\n        liveEl.classList.add('cdk-visually-hidden');\n        liveEl.setAttribute('aria-atomic', 'true');\n        liveEl.setAttribute('aria-live', 'polite');\n        liveEl.id = `cdk-live-announcer-${uniqueIds++}`;\n        this._document.body.appendChild(liveEl);\n        return liveEl;\n    }\n    /**\n     * Some browsers won't expose the accessibility node of the live announcer element if there is an\n     * `aria-modal` and the live announcer is outside of it. This method works around the issue by\n     * pointing the `aria-owns` of all modals to the live announcer element.\n     */\n    _exposeAnnouncerToModals(id) {\n        // TODO(http://github.com/angular/components/issues/26853): consider de-duplicating this with\n        // the `SnakBarContainer` and other usages.\n        //\n        // Note that the selector here is limited to CDK overlays at the moment in order to reduce the\n        // section of the DOM we need to look through. This should cover all the cases we support, but\n        // the selector can be expanded if it turns out to be too narrow.\n        const modals = this._document.querySelectorAll('body > .cdk-overlay-container [aria-modal=\"true\"]');\n        for (let i = 0; i < modals.length; i++) {\n            const modal = modals[i];\n            const ariaOwns = modal.getAttribute('aria-owns');\n            if (!ariaOwns) {\n                modal.setAttribute('aria-owns', id);\n            }\n            else if (ariaOwns.indexOf(id) === -1) {\n                modal.setAttribute('aria-owns', ariaOwns + ' ' + id);\n            }\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: LiveAnnouncer, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: LiveAnnouncer, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: LiveAnnouncer, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [] });\n/**\n * A directive that works similarly to aria-live, but uses the LiveAnnouncer to ensure compatibility\n * with a wider range of browsers and screen readers.\n */\nclass CdkAriaLive {\n    _elementRef = inject(ElementRef);\n    _liveAnnouncer = inject(LiveAnnouncer);\n    _contentObserver = inject(ContentObserver);\n    _ngZone = inject(NgZone);\n    /** The aria-live politeness level to use when announcing messages. */\n    get politeness() {\n        return this._politeness;\n    }\n    set politeness(value) {\n        this._politeness = value === 'off' || value === 'assertive' ? value : 'polite';\n        if (this._politeness === 'off') {\n            if (this._subscription) {\n                this._subscription.unsubscribe();\n                this._subscription = null;\n            }\n        }\n        else if (!this._subscription) {\n            this._subscription = this._ngZone.runOutsideAngular(() => {\n                return this._contentObserver.observe(this._elementRef).subscribe(() => {\n                    // Note that we use textContent here, rather than innerText, in order to avoid a reflow.\n                    const elementText = this._elementRef.nativeElement.textContent;\n                    // The `MutationObserver` fires also for attribute\n                    // changes which we don't want to announce.\n                    if (elementText !== this._previousAnnouncedText) {\n                        this._liveAnnouncer.announce(elementText, this._politeness, this.duration);\n                        this._previousAnnouncedText = elementText;\n                    }\n                });\n            });\n        }\n    }\n    _politeness = 'polite';\n    /** Time in milliseconds after which to clear out the announcer element. */\n    duration;\n    _previousAnnouncedText;\n    _subscription;\n    constructor() {\n        inject(_CdkPrivateStyleLoader).load(_VisuallyHiddenLoader);\n    }\n    ngOnDestroy() {\n        if (this._subscription) {\n            this._subscription.unsubscribe();\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkAriaLive, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: CdkAriaLive, isStandalone: true, selector: \"[cdkAriaLive]\", inputs: { politeness: [\"cdkAriaLive\", \"politeness\"], duration: [\"cdkAriaLiveDuration\", \"duration\"] }, exportAs: [\"cdkAriaLive\"], ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkAriaLive, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkAriaLive]',\n                    exportAs: 'cdkAriaLive',\n                }]\n        }], ctorParameters: () => [], propDecorators: { politeness: [{\n                type: Input,\n                args: ['cdkAriaLive']\n            }], duration: [{\n                type: Input,\n                args: ['cdkAriaLiveDuration']\n            }] } });\n\n/** Set of possible high-contrast mode backgrounds. */\nvar HighContrastMode;\n(function (HighContrastMode) {\n    HighContrastMode[HighContrastMode[\"NONE\"] = 0] = \"NONE\";\n    HighContrastMode[HighContrastMode[\"BLACK_ON_WHITE\"] = 1] = \"BLACK_ON_WHITE\";\n    HighContrastMode[HighContrastMode[\"WHITE_ON_BLACK\"] = 2] = \"WHITE_ON_BLACK\";\n})(HighContrastMode || (HighContrastMode = {}));\n/** CSS class applied to the document body when in black-on-white high-contrast mode. */\nconst BLACK_ON_WHITE_CSS_CLASS = 'cdk-high-contrast-black-on-white';\n/** CSS class applied to the document body when in white-on-black high-contrast mode. */\nconst WHITE_ON_BLACK_CSS_CLASS = 'cdk-high-contrast-white-on-black';\n/** CSS class applied to the document body when in high-contrast mode. */\nconst HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS = 'cdk-high-contrast-active';\n/**\n * Service to determine whether the browser is currently in a high-contrast-mode environment.\n *\n * Microsoft Windows supports an accessibility feature called \"High Contrast Mode\". This mode\n * changes the appearance of all applications, including web applications, to dramatically increase\n * contrast.\n *\n * IE, Edge, and Firefox currently support this mode. Chrome does not support Windows High Contrast\n * Mode. This service does not detect high-contrast mode as added by the Chrome \"High Contrast\"\n * browser extension.\n */\nclass HighContrastModeDetector {\n    _platform = inject(Platform);\n    /**\n     * Figuring out the high contrast mode and adding the body classes can cause\n     * some expensive layouts. This flag is used to ensure that we only do it once.\n     */\n    _hasCheckedHighContrastMode;\n    _document = inject(DOCUMENT);\n    _breakpointSubscription;\n    constructor() {\n        this._breakpointSubscription = inject(BreakpointObserver)\n            .observe('(forced-colors: active)')\n            .subscribe(() => {\n            if (this._hasCheckedHighContrastMode) {\n                this._hasCheckedHighContrastMode = false;\n                this._applyBodyHighContrastModeCssClasses();\n            }\n        });\n    }\n    /** Gets the current high-contrast-mode for the page. */\n    getHighContrastMode() {\n        if (!this._platform.isBrowser) {\n            return HighContrastMode.NONE;\n        }\n        // Create a test element with an arbitrary background-color that is neither black nor\n        // white; high-contrast mode will coerce the color to either black or white. Also ensure that\n        // appending the test element to the DOM does not affect layout by absolutely positioning it\n        const testElement = this._document.createElement('div');\n        testElement.style.backgroundColor = 'rgb(1,2,3)';\n        testElement.style.position = 'absolute';\n        this._document.body.appendChild(testElement);\n        // Get the computed style for the background color, collapsing spaces to normalize between\n        // browsers. Once we get this color, we no longer need the test element. Access the `window`\n        // via the document so we can fake it in tests. Note that we have extra null checks, because\n        // this logic will likely run during app bootstrap and throwing can break the entire app.\n        const documentWindow = this._document.defaultView || window;\n        const computedStyle = documentWindow && documentWindow.getComputedStyle\n            ? documentWindow.getComputedStyle(testElement)\n            : null;\n        const computedColor = ((computedStyle && computedStyle.backgroundColor) || '').replace(/ /g, '');\n        testElement.remove();\n        switch (computedColor) {\n            // Pre Windows 11 dark theme.\n            case 'rgb(0,0,0)':\n            // Windows 11 dark themes.\n            case 'rgb(45,50,54)':\n            case 'rgb(32,32,32)':\n                return HighContrastMode.WHITE_ON_BLACK;\n            // Pre Windows 11 light theme.\n            case 'rgb(255,255,255)':\n            // Windows 11 light theme.\n            case 'rgb(255,250,239)':\n                return HighContrastMode.BLACK_ON_WHITE;\n        }\n        return HighContrastMode.NONE;\n    }\n    ngOnDestroy() {\n        this._breakpointSubscription.unsubscribe();\n    }\n    /** Applies CSS classes indicating high-contrast mode to document body (browser-only). */\n    _applyBodyHighContrastModeCssClasses() {\n        if (!this._hasCheckedHighContrastMode && this._platform.isBrowser && this._document.body) {\n            const bodyClasses = this._document.body.classList;\n            bodyClasses.remove(HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS, BLACK_ON_WHITE_CSS_CLASS, WHITE_ON_BLACK_CSS_CLASS);\n            this._hasCheckedHighContrastMode = true;\n            const mode = this.getHighContrastMode();\n            if (mode === HighContrastMode.BLACK_ON_WHITE) {\n                bodyClasses.add(HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS, BLACK_ON_WHITE_CSS_CLASS);\n            }\n            else if (mode === HighContrastMode.WHITE_ON_BLACK) {\n                bodyClasses.add(HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS, WHITE_ON_BLACK_CSS_CLASS);\n            }\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: HighContrastModeDetector, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: HighContrastModeDetector, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: HighContrastModeDetector, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [] });\n\nclass A11yModule {\n    constructor() {\n        inject(HighContrastModeDetector)._applyBodyHighContrastModeCssClasses();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: A11yModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.0\", ngImport: i0, type: A11yModule, imports: [ObserversModule, CdkAriaLive, CdkTrapFocus, CdkMonitorFocus], exports: [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: A11yModule, imports: [ObserversModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: A11yModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ObserversModule, CdkAriaLive, CdkTrapFocus, CdkMonitorFocus],\n                    exports: [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus],\n                }]\n        }], ctorParameters: () => [] });\n\nexport { A11yModule as A, CdkTrapFocus as C, FocusTrapFactory as F, HighContrastModeDetector as H, InteractivityChecker as I, LiveAnnouncer as L, FocusTrap as a, HighContrastMode as b, IsFocusableConfig as c, CdkAriaLive as d, LIVE_ANNOUNCER_ELEMENT_TOKEN as e, LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY as f, LIVE_ANNOUNCER_DEFAULT_OPTIONS as g };\n\n","import * as i0 from '@angular/core';\nimport { inject, APP_ID, Injectable } from '@angular/core';\n\n/**\n * Keeps track of the ID count per prefix. This helps us make the IDs a bit more deterministic\n * like they were before the service was introduced. Note that ideally we wouldn't have to do\n * this, but there are some internal tests that rely on the IDs.\n */\nconst counters = {};\n/** Service that generates unique IDs for DOM nodes. */\nclass _IdGenerator {\n    _appId = inject(APP_ID);\n    /**\n     * Generates a unique ID with a specific prefix.\n     * @param prefix Prefix to add to the ID.\n     */\n    getId(prefix) {\n        // Omit the app ID if it's the default `ng`. Since the vast majority of pages have one\n        // Angular app on them, we can reduce the amount of breakages by not adding it.\n        if (this._appId !== 'ng') {\n            prefix += this._appId;\n        }\n        if (!counters.hasOwnProperty(prefix)) {\n            counters[prefix] = 0;\n        }\n        return `${prefix}${counters[prefix]++}`;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: _IdGenerator, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: _IdGenerator, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: _IdGenerator, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\nexport { _IdGenerator as _ };\n\n","import { Subject } from 'rxjs';\nimport { tap, debounceTime, filter, map } from 'rxjs/operators';\nimport { A, Z, b as ZERO, N as NINE } from './keycodes-CpHkExLC.mjs';\n\nconst DEFAULT_TYPEAHEAD_DEBOUNCE_INTERVAL_MS = 200;\n/**\n * Selects items based on keyboard inputs. Implements the typeahead functionality of\n * `role=\"listbox\"` or `role=\"tree\"` and other related roles.\n */\nclass Typeahead {\n    _letterKeyStream = new Subject();\n    _items = [];\n    _selectedItemIndex = -1;\n    /** Buffer for the letters that the user has pressed */\n    _pressedLetters = [];\n    _skipPredicateFn;\n    _selectedItem = new Subject();\n    selectedItem = this._selectedItem;\n    constructor(initialItems, config) {\n        const typeAheadInterval = typeof config?.debounceInterval === 'number'\n            ? config.debounceInterval\n            : DEFAULT_TYPEAHEAD_DEBOUNCE_INTERVAL_MS;\n        if (config?.skipPredicate) {\n            this._skipPredicateFn = config.skipPredicate;\n        }\n        if ((typeof ngDevMode === 'undefined' || ngDevMode) &&\n            initialItems.length &&\n            initialItems.some(item => typeof item.getLabel !== 'function')) {\n            throw new Error('KeyManager items in typeahead mode must implement the `getLabel` method.');\n        }\n        this.setItems(initialItems);\n        this._setupKeyHandler(typeAheadInterval);\n    }\n    destroy() {\n        this._pressedLetters = [];\n        this._letterKeyStream.complete();\n        this._selectedItem.complete();\n    }\n    setCurrentSelectedItemIndex(index) {\n        this._selectedItemIndex = index;\n    }\n    setItems(items) {\n        this._items = items;\n    }\n    handleKey(event) {\n        const keyCode = event.keyCode;\n        // Attempt to use the `event.key` which also maps it to the user's keyboard language,\n        // otherwise fall back to resolving alphanumeric characters via the keyCode.\n        if (event.key && event.key.length === 1) {\n            this._letterKeyStream.next(event.key.toLocaleUpperCase());\n        }\n        else if ((keyCode >= A && keyCode <= Z) || (keyCode >= ZERO && keyCode <= NINE)) {\n            this._letterKeyStream.next(String.fromCharCode(keyCode));\n        }\n    }\n    /** Gets whether the user is currently typing into the manager using the typeahead feature. */\n    isTyping() {\n        return this._pressedLetters.length > 0;\n    }\n    /** Resets the currently stored sequence of typed letters. */\n    reset() {\n        this._pressedLetters = [];\n    }\n    _setupKeyHandler(typeAheadInterval) {\n        // Debounce the presses of non-navigational keys, collect the ones that correspond to letters\n        // and convert those letters back into a string. Afterwards find the first item that starts\n        // with that string and select it.\n        this._letterKeyStream\n            .pipe(tap(letter => this._pressedLetters.push(letter)), debounceTime(typeAheadInterval), filter(() => this._pressedLetters.length > 0), map(() => this._pressedLetters.join('').toLocaleUpperCase()))\n            .subscribe(inputString => {\n            // Start at 1 because we want to start searching at the item immediately\n            // following the current active item.\n            for (let i = 1; i < this._items.length + 1; i++) {\n                const index = (this._selectedItemIndex + i) % this._items.length;\n                const item = this._items[index];\n                if (!this._skipPredicateFn?.(item) &&\n                    item.getLabel?.().toLocaleUpperCase().trim().indexOf(inputString) === 0) {\n                    this._selectedItem.next(item);\n                    break;\n                }\n            }\n            this._pressedLetters = [];\n        });\n    }\n}\n\nexport { Typeahead as T };\n\n","export { A, d as ALT, aX as APOSTROPHE, a1 as AT_SIGN, a2 as B, a_ as BACKSLASH, B as BACKSPACE, a3 as C, y as CAPS_LOCK, a$ as CLOSE_SQUARE_BRACKET, u as COMMA, as as CONTEXT_MENU, C as CONTROL, a4 as D, aV as DASH, i as DELETE, D as DOWN_ARROW, a5 as E, Y as EIGHT, E as END, c as ENTER, aU as EQUALS, g as ESCAPE, a6 as F, F as F1, r as F10, s as F11, t as F12, j as F2, k as F3, l as F4, m as F5, n as F6, o as F7, p as F8, q as F9, $ as FF_EQUALS, aL as FF_MINUS, aP as FF_MUTE, _ as FF_SEMICOLON, aQ as FF_VOLUME_DOWN, aS as FF_VOLUME_UP, aK as FIRST_MEDIA, V as FIVE, Q as FOUR, a7 as G, a8 as H, H as HOME, a9 as I, I as INSERT, aa as J, ab as K, ac as L, aR as LAST_MEDIA, L as LEFT_ARROW, ad as M, v as MAC_ENTER, M as MAC_META, aq as MAC_WK_CMD_LEFT, ar as MAC_WK_CMD_RIGHT, e as META, aM as MUTE, ae as N, N as NINE, aH as NUMPAD_DIVIDE, aB as NUMPAD_EIGHT, ay as NUMPAD_FIVE, ax as NUMPAD_FOUR, aF as NUMPAD_MINUS, aD as NUMPAD_MULTIPLY, aC as NUMPAD_NINE, au as NUMPAD_ONE, aG as NUMPAD_PERIOD, aE as NUMPAD_PLUS, aA as NUMPAD_SEVEN, az as NUMPAD_SIX, aw as NUMPAD_THREE, av as NUMPAD_TWO, at as NUMPAD_ZERO, w as NUM_CENTER, aI as NUM_LOCK, af as O, O as ONE, aZ as OPEN_SQUARE_BRACKET, ag as P, P as PAGE_DOWN, a as PAGE_UP, x as PAUSE, h as PERIOD, z as PLUS_SIGN, G as PRINT_SCREEN, ah as Q, a0 as QUESTION_MARK, ai as R, R as RIGHT_ARROW, aj as S, aJ as SCROLL_LOCK, aT as SEMICOLON, X as SEVEN, f as SHIFT, b0 as SINGLE_QUOTE, W as SIX, aW as SLASH, S as SPACE, ak as T, T as TAB, K as THREE, aY as TILDE, J as TWO, al as U, U as UP_ARROW, am as V, aN as VOLUME_DOWN, aO as VOLUME_UP, an as W, ao as X, ap as Y, Z, b as ZERO } from './keycodes-CpHkExLC.mjs';\n\n/**\n * Checks whether a modifier key is pressed.\n * @param event Event to be checked.\n */\nfunction hasModifierKey(event, ...modifiers) {\n    if (modifiers.length) {\n        return modifiers.some(modifier => event[modifier]);\n    }\n    return event.altKey || event.shiftKey || event.ctrlKey || event.metaKey;\n}\n\nexport { hasModifierKey };\n\n","import { signal, QueryList, isSignal, effect } from '@angular/core';\nimport { Subscription, Subject } from 'rxjs';\nimport { T as Typeahead } from './typeahead-9ZW4Dtsf.mjs';\nimport { hasModifierKey } from './keycodes.mjs';\nimport { P as PAGE_DOWN, a as PAGE_UP, E as END, H as HOME, L as LEFT_ARROW, R as RIGHT_ARROW, U as UP_ARROW, D as DOWN_ARROW, T as TAB } from './keycodes-CpHkExLC.mjs';\n\n/**\n * This class manages keyboard events for selectable lists. If you pass it a query list\n * of items, it will set the active item correctly when arrow events occur.\n */\nclass ListKeyManager {\n    _items;\n    _activeItemIndex = signal(-1);\n    _activeItem = signal(null);\n    _wrap = false;\n    _typeaheadSubscription = Subscription.EMPTY;\n    _itemChangesSubscription;\n    _vertical = true;\n    _horizontal;\n    _allowedModifierKeys = [];\n    _homeAndEnd = false;\n    _pageUpAndDown = { enabled: false, delta: 10 };\n    _effectRef;\n    _typeahead;\n    /**\n     * Predicate function that can be used to check whether an item should be skipped\n     * by the key manager. By default, disabled items are skipped.\n     */\n    _skipPredicateFn = (item) => item.disabled;\n    constructor(_items, injector) {\n        this._items = _items;\n        // We allow for the items to be an array because, in some cases, the consumer may\n        // not have access to a QueryList of the items they want to manage (e.g. when the\n        // items aren't being collected via `ViewChildren` or `ContentChildren`).\n        if (_items instanceof QueryList) {\n            this._itemChangesSubscription = _items.changes.subscribe((newItems) => this._itemsChanged(newItems.toArray()));\n        }\n        else if (isSignal(_items)) {\n            if (!injector && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw new Error('ListKeyManager constructed with a signal must receive an injector');\n            }\n            this._effectRef = effect(() => this._itemsChanged(_items()), { injector });\n        }\n    }\n    /**\n     * Stream that emits any time the TAB key is pressed, so components can react\n     * when focus is shifted off of the list.\n     */\n    tabOut = new Subject();\n    /** Stream that emits whenever the active item of the list manager changes. */\n    change = new Subject();\n    /**\n     * Sets the predicate function that determines which items should be skipped by the\n     * list key manager.\n     * @param predicate Function that determines whether the given item should be skipped.\n     */\n    skipPredicate(predicate) {\n        this._skipPredicateFn = predicate;\n        return this;\n    }\n    /**\n     * Configures wrapping mode, which determines whether the active item will wrap to\n     * the other end of list when there are no more items in the given direction.\n     * @param shouldWrap Whether the list should wrap when reaching the end.\n     */\n    withWrap(shouldWrap = true) {\n        this._wrap = shouldWrap;\n        return this;\n    }\n    /**\n     * Configures whether the key manager should be able to move the selection vertically.\n     * @param enabled Whether vertical selection should be enabled.\n     */\n    withVerticalOrientation(enabled = true) {\n        this._vertical = enabled;\n        return this;\n    }\n    /**\n     * Configures the key manager to move the selection horizontally.\n     * Passing in `null` will disable horizontal movement.\n     * @param direction Direction in which the selection can be moved.\n     */\n    withHorizontalOrientation(direction) {\n        this._horizontal = direction;\n        return this;\n    }\n    /**\n     * Modifier keys which are allowed to be held down and whose default actions will be prevented\n     * as the user is pressing the arrow keys. Defaults to not allowing any modifier keys.\n     */\n    withAllowedModifierKeys(keys) {\n        this._allowedModifierKeys = keys;\n        return this;\n    }\n    /**\n     * Turns on typeahead mode which allows users to set the active item by typing.\n     * @param debounceInterval Time to wait after the last keystroke before setting the active item.\n     */\n    withTypeAhead(debounceInterval = 200) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            const items = this._getItemsArray();\n            if (items.length > 0 && items.some(item => typeof item.getLabel !== 'function')) {\n                throw Error('ListKeyManager items in typeahead mode must implement the `getLabel` method.');\n            }\n        }\n        this._typeaheadSubscription.unsubscribe();\n        const items = this._getItemsArray();\n        this._typeahead = new Typeahead(items, {\n            debounceInterval: typeof debounceInterval === 'number' ? debounceInterval : undefined,\n            skipPredicate: item => this._skipPredicateFn(item),\n        });\n        this._typeaheadSubscription = this._typeahead.selectedItem.subscribe(item => {\n            this.setActiveItem(item);\n        });\n        return this;\n    }\n    /** Cancels the current typeahead sequence. */\n    cancelTypeahead() {\n        this._typeahead?.reset();\n        return this;\n    }\n    /**\n     * Configures the key manager to activate the first and last items\n     * respectively when the Home or End key is pressed.\n     * @param enabled Whether pressing the Home or End key activates the first/last item.\n     */\n    withHomeAndEnd(enabled = true) {\n        this._homeAndEnd = enabled;\n        return this;\n    }\n    /**\n     * Configures the key manager to activate every 10th, configured or first/last element in up/down direction\n     * respectively when the Page-Up or Page-Down key is pressed.\n     * @param enabled Whether pressing the Page-Up or Page-Down key activates the first/last item.\n     * @param delta Whether pressing the Home or End key activates the first/last item.\n     */\n    withPageUpDown(enabled = true, delta = 10) {\n        this._pageUpAndDown = { enabled, delta };\n        return this;\n    }\n    setActiveItem(item) {\n        const previousActiveItem = this._activeItem();\n        this.updateActiveItem(item);\n        if (this._activeItem() !== previousActiveItem) {\n            this.change.next(this._activeItemIndex());\n        }\n    }\n    /**\n     * Sets the active item depending on the key event passed in.\n     * @param event Keyboard event to be used for determining which element should be active.\n     */\n    onKeydown(event) {\n        const keyCode = event.keyCode;\n        const modifiers = ['altKey', 'ctrlKey', 'metaKey', 'shiftKey'];\n        const isModifierAllowed = modifiers.every(modifier => {\n            return !event[modifier] || this._allowedModifierKeys.indexOf(modifier) > -1;\n        });\n        switch (keyCode) {\n            case TAB:\n                this.tabOut.next();\n                return;\n            case DOWN_ARROW:\n                if (this._vertical && isModifierAllowed) {\n                    this.setNextItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case UP_ARROW:\n                if (this._vertical && isModifierAllowed) {\n                    this.setPreviousItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case RIGHT_ARROW:\n                if (this._horizontal && isModifierAllowed) {\n                    this._horizontal === 'rtl' ? this.setPreviousItemActive() : this.setNextItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case LEFT_ARROW:\n                if (this._horizontal && isModifierAllowed) {\n                    this._horizontal === 'rtl' ? this.setNextItemActive() : this.setPreviousItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case HOME:\n                if (this._homeAndEnd && isModifierAllowed) {\n                    this.setFirstItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case END:\n                if (this._homeAndEnd && isModifierAllowed) {\n                    this.setLastItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case PAGE_UP:\n                if (this._pageUpAndDown.enabled && isModifierAllowed) {\n                    const targetIndex = this._activeItemIndex() - this._pageUpAndDown.delta;\n                    this._setActiveItemByIndex(targetIndex > 0 ? targetIndex : 0, 1);\n                    break;\n                }\n                else {\n                    return;\n                }\n            case PAGE_DOWN:\n                if (this._pageUpAndDown.enabled && isModifierAllowed) {\n                    const targetIndex = this._activeItemIndex() + this._pageUpAndDown.delta;\n                    const itemsLength = this._getItemsArray().length;\n                    this._setActiveItemByIndex(targetIndex < itemsLength ? targetIndex : itemsLength - 1, -1);\n                    break;\n                }\n                else {\n                    return;\n                }\n            default:\n                if (isModifierAllowed || hasModifierKey(event, 'shiftKey')) {\n                    this._typeahead?.handleKey(event);\n                }\n                // Note that we return here, in order to avoid preventing\n                // the default action of non-navigational keys.\n                return;\n        }\n        this._typeahead?.reset();\n        event.preventDefault();\n    }\n    /** Index of the currently active item. */\n    get activeItemIndex() {\n        return this._activeItemIndex();\n    }\n    /** The active item. */\n    get activeItem() {\n        return this._activeItem();\n    }\n    /** Gets whether the user is currently typing into the manager using the typeahead feature. */\n    isTyping() {\n        return !!this._typeahead && this._typeahead.isTyping();\n    }\n    /** Sets the active item to the first enabled item in the list. */\n    setFirstItemActive() {\n        this._setActiveItemByIndex(0, 1);\n    }\n    /** Sets the active item to the last enabled item in the list. */\n    setLastItemActive() {\n        this._setActiveItemByIndex(this._getItemsArray().length - 1, -1);\n    }\n    /** Sets the active item to the next enabled item in the list. */\n    setNextItemActive() {\n        this._activeItemIndex() < 0 ? this.setFirstItemActive() : this._setActiveItemByDelta(1);\n    }\n    /** Sets the active item to a previous enabled item in the list. */\n    setPreviousItemActive() {\n        this._activeItemIndex() < 0 && this._wrap\n            ? this.setLastItemActive()\n            : this._setActiveItemByDelta(-1);\n    }\n    updateActiveItem(item) {\n        const itemArray = this._getItemsArray();\n        const index = typeof item === 'number' ? item : itemArray.indexOf(item);\n        const activeItem = itemArray[index];\n        // Explicitly check for `null` and `undefined` because other falsy values are valid.\n        this._activeItem.set(activeItem == null ? null : activeItem);\n        this._activeItemIndex.set(index);\n        this._typeahead?.setCurrentSelectedItemIndex(index);\n    }\n    /** Cleans up the key manager. */\n    destroy() {\n        this._typeaheadSubscription.unsubscribe();\n        this._itemChangesSubscription?.unsubscribe();\n        this._effectRef?.destroy();\n        this._typeahead?.destroy();\n        this.tabOut.complete();\n        this.change.complete();\n    }\n    /**\n     * This method sets the active item, given a list of items and the delta between the\n     * currently active item and the new active item. It will calculate differently\n     * depending on whether wrap mode is turned on.\n     */\n    _setActiveItemByDelta(delta) {\n        this._wrap ? this._setActiveInWrapMode(delta) : this._setActiveInDefaultMode(delta);\n    }\n    /**\n     * Sets the active item properly given \"wrap\" mode. In other words, it will continue to move\n     * down the list until it finds an item that is not disabled, and it will wrap if it\n     * encounters either end of the list.\n     */\n    _setActiveInWrapMode(delta) {\n        const items = this._getItemsArray();\n        for (let i = 1; i <= items.length; i++) {\n            const index = (this._activeItemIndex() + delta * i + items.length) % items.length;\n            const item = items[index];\n            if (!this._skipPredicateFn(item)) {\n                this.setActiveItem(index);\n                return;\n            }\n        }\n    }\n    /**\n     * Sets the active item properly given the default mode. In other words, it will\n     * continue to move down the list until it finds an item that is not disabled. If\n     * it encounters either end of the list, it will stop and not wrap.\n     */\n    _setActiveInDefaultMode(delta) {\n        this._setActiveItemByIndex(this._activeItemIndex() + delta, delta);\n    }\n    /**\n     * Sets the active item to the first enabled item starting at the index specified. If the\n     * item is disabled, it will move in the fallbackDelta direction until it either\n     * finds an enabled item or encounters the end of the list.\n     */\n    _setActiveItemByIndex(index, fallbackDelta) {\n        const items = this._getItemsArray();\n        if (!items[index]) {\n            return;\n        }\n        while (this._skipPredicateFn(items[index])) {\n            index += fallbackDelta;\n            if (!items[index]) {\n                return;\n            }\n        }\n        this.setActiveItem(index);\n    }\n    /** Returns the items as an array. */\n    _getItemsArray() {\n        if (isSignal(this._items)) {\n            return this._items();\n        }\n        return this._items instanceof QueryList ? this._items.toArray() : this._items;\n    }\n    /** Callback for when the items have changed. */\n    _itemsChanged(newItems) {\n        this._typeahead?.setItems(newItems);\n        const activeItem = this._activeItem();\n        if (activeItem) {\n            const newIndex = newItems.indexOf(activeItem);\n            if (newIndex > -1 && newIndex !== this._activeItemIndex()) {\n                this._activeItemIndex.set(newIndex);\n                this._typeahead?.setCurrentSelectedItemIndex(newIndex);\n            }\n        }\n    }\n}\n\nexport { ListKeyManager as L };\n\n","import { L as ListKeyManager } from './list-key-manager-C7tp3RbG.mjs';\n\nclass FocusKeyManager extends ListKeyManager {\n    _origin = 'program';\n    /**\n     * Sets the focus origin that will be passed in to the items for any subsequent `focus` calls.\n     * @param origin Focus origin to be used when focusing items.\n     */\n    setFocusOrigin(origin) {\n        this._origin = origin;\n        return this;\n    }\n    setActiveItem(item) {\n        super.setActiveItem(item);\n        if (this.activeItem) {\n            this.activeItem.focus(this._origin);\n        }\n    }\n}\n\nexport { FocusKeyManager as F };\n\n","export { C as CdkMonitorFocus, d as FOCUS_MONITOR_DEFAULT_OPTIONS, F as FocusMonitor, c as FocusMonitorDetectionMode, a as INPUT_MODALITY_DETECTOR_DEFAULT_OPTIONS, b as INPUT_MODALITY_DETECTOR_OPTIONS, I as InputModalityDetector } from './focus-monitor-DUe99AIS.mjs';\nimport { a as FocusTrap, I as InteractivityChecker } from './a11y-module-BPzgKr79.mjs';\nexport { A as A11yModule, d as CdkAriaLive, C as CdkTrapFocus, F as FocusTrapFactory, b as HighContrastMode, H as HighContrastModeDetector, c as IsFocusableConfig, g as LIVE_ANNOUNCER_DEFAULT_OPTIONS, e as LIVE_ANNOUNCER_ELEMENT_TOKEN, f as LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY, L as LiveAnnouncer } from './a11y-module-BPzgKr79.mjs';\nexport { _ as _IdGenerator } from './id-generator-LuoRZSid.mjs';\nimport * as i0 from '@angular/core';\nimport { inject, DOCUMENT, APP_ID, Injectable, InjectionToken, NgZone, Injector } from '@angular/core';\nimport { P as Platform } from './platform-DNDzkVcI.mjs';\nimport { _ as _CdkPrivateStyleLoader } from './style-loader-B2sGQXxD.mjs';\nimport { _VisuallyHiddenLoader } from './private.mjs';\nexport { A as ActiveDescendantKeyManager } from './activedescendant-key-manager-CZAE5aFC.mjs';\nexport { F as FocusKeyManager } from './focus-key-manager-CPmlyB_c.mjs';\nexport { L as ListKeyManager } from './list-key-manager-C7tp3RbG.mjs';\nimport { Subject } from 'rxjs';\nimport { T as TREE_KEY_MANAGER } from './tree-key-manager-KnCoIkIC.mjs';\nexport { b as TREE_KEY_MANAGER_FACTORY, c as TREE_KEY_MANAGER_FACTORY_PROVIDER, a as TreeKeyManager } from './tree-key-manager-KnCoIkIC.mjs';\nexport { i as isFakeMousedownFromScreenReader, a as isFakeTouchstartFromScreenReader } from './fake-event-detection-DWOdFTFz.mjs';\nimport 'rxjs/operators';\nimport './keycodes-CpHkExLC.mjs';\nimport './shadow-dom-B0oHn41l.mjs';\nimport './passive-listeners-esHZRgIN.mjs';\nimport './element-x4z00URv.mjs';\nimport './breakpoints-observer-QutrMj4x.mjs';\nimport './array-I1yfCXUO.mjs';\nimport './observers.mjs';\nimport '@angular/common';\nimport './typeahead-9ZW4Dtsf.mjs';\nimport './keycodes.mjs';\nimport './coercion/private.mjs';\n\n/** IDs are delimited by an empty space, as per the spec. */\nconst ID_DELIMITER = ' ';\n/**\n * Adds the given ID to the specified ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n */\nfunction addAriaReferencedId(el, attr, id) {\n    const ids = getAriaReferenceIds(el, attr);\n    id = id.trim();\n    if (ids.some(existingId => existingId.trim() === id)) {\n        return;\n    }\n    ids.push(id);\n    el.setAttribute(attr, ids.join(ID_DELIMITER));\n}\n/**\n * Removes the given ID from the specified ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n */\nfunction removeAriaReferencedId(el, attr, id) {\n    const ids = getAriaReferenceIds(el, attr);\n    id = id.trim();\n    const filteredIds = ids.filter(val => val !== id);\n    if (filteredIds.length) {\n        el.setAttribute(attr, filteredIds.join(ID_DELIMITER));\n    }\n    else {\n        el.removeAttribute(attr);\n    }\n}\n/**\n * Gets the list of IDs referenced by the given ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n */\nfunction getAriaReferenceIds(el, attr) {\n    // Get string array of all individual ids (whitespace delimited) in the attribute value\n    const attrValue = el.getAttribute(attr);\n    return attrValue?.match(/\\S+/g) ?? [];\n}\n\n/**\n * ID used for the body container where all messages are appended.\n * @deprecated No longer being used. To be removed.\n * @breaking-change 14.0.0\n */\nconst MESSAGES_CONTAINER_ID = 'cdk-describedby-message-container';\n/**\n * ID prefix used for each created message element.\n * @deprecated To be turned into a private variable.\n * @breaking-change 14.0.0\n */\nconst CDK_DESCRIBEDBY_ID_PREFIX = 'cdk-describedby-message';\n/**\n * Attribute given to each host element that is described by a message element.\n * @deprecated To be turned into a private variable.\n * @breaking-change 14.0.0\n */\nconst CDK_DESCRIBEDBY_HOST_ATTRIBUTE = 'cdk-describedby-host';\n/** Global incremental identifier for each registered message element. */\nlet nextId = 0;\n/**\n * Utility that creates visually hidden elements with a message content. Useful for elements that\n * want to use aria-describedby to further describe themselves without adding additional visual\n * content.\n */\nclass AriaDescriber {\n    _platform = inject(Platform);\n    _document = inject(DOCUMENT);\n    /** Map of all registered message elements that have been placed into the document. */\n    _messageRegistry = new Map();\n    /** Container for all registered messages. */\n    _messagesContainer = null;\n    /** Unique ID for the service. */\n    _id = `${nextId++}`;\n    constructor() {\n        inject(_CdkPrivateStyleLoader).load(_VisuallyHiddenLoader);\n        this._id = inject(APP_ID) + '-' + nextId++;\n    }\n    describe(hostElement, message, role) {\n        if (!this._canBeDescribed(hostElement, message)) {\n            return;\n        }\n        const key = getKey(message, role);\n        if (typeof message !== 'string') {\n            // We need to ensure that the element has an ID.\n            setMessageId(message, this._id);\n            this._messageRegistry.set(key, { messageElement: message, referenceCount: 0 });\n        }\n        else if (!this._messageRegistry.has(key)) {\n            this._createMessageElement(message, role);\n        }\n        if (!this._isElementDescribedByMessage(hostElement, key)) {\n            this._addMessageReference(hostElement, key);\n        }\n    }\n    removeDescription(hostElement, message, role) {\n        if (!message || !this._isElementNode(hostElement)) {\n            return;\n        }\n        const key = getKey(message, role);\n        if (this._isElementDescribedByMessage(hostElement, key)) {\n            this._removeMessageReference(hostElement, key);\n        }\n        // If the message is a string, it means that it's one that we created for the\n        // consumer so we can remove it safely, otherwise we should leave it in place.\n        if (typeof message === 'string') {\n            const registeredMessage = this._messageRegistry.get(key);\n            if (registeredMessage && registeredMessage.referenceCount === 0) {\n                this._deleteMessageElement(key);\n            }\n        }\n        if (this._messagesContainer?.childNodes.length === 0) {\n            this._messagesContainer.remove();\n            this._messagesContainer = null;\n        }\n    }\n    /** Unregisters all created message elements and removes the message container. */\n    ngOnDestroy() {\n        const describedElements = this._document.querySelectorAll(`[${CDK_DESCRIBEDBY_HOST_ATTRIBUTE}=\"${this._id}\"]`);\n        for (let i = 0; i < describedElements.length; i++) {\n            this._removeCdkDescribedByReferenceIds(describedElements[i]);\n            describedElements[i].removeAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE);\n        }\n        this._messagesContainer?.remove();\n        this._messagesContainer = null;\n        this._messageRegistry.clear();\n    }\n    /**\n     * Creates a new element in the visually hidden message container element with the message\n     * as its content and adds it to the message registry.\n     */\n    _createMessageElement(message, role) {\n        const messageElement = this._document.createElement('div');\n        setMessageId(messageElement, this._id);\n        messageElement.textContent = message;\n        if (role) {\n            messageElement.setAttribute('role', role);\n        }\n        this._createMessagesContainer();\n        this._messagesContainer.appendChild(messageElement);\n        this._messageRegistry.set(getKey(message, role), { messageElement, referenceCount: 0 });\n    }\n    /** Deletes the message element from the global messages container. */\n    _deleteMessageElement(key) {\n        this._messageRegistry.get(key)?.messageElement?.remove();\n        this._messageRegistry.delete(key);\n    }\n    /** Creates the global container for all aria-describedby messages. */\n    _createMessagesContainer() {\n        if (this._messagesContainer) {\n            return;\n        }\n        const containerClassName = 'cdk-describedby-message-container';\n        const serverContainers = this._document.querySelectorAll(`.${containerClassName}[platform=\"server\"]`);\n        for (let i = 0; i < serverContainers.length; i++) {\n            // When going from the server to the client, we may end up in a situation where there's\n            // already a container on the page, but we don't have a reference to it. Clear the\n            // old container so we don't get duplicates. Doing this, instead of emptying the previous\n            // container, should be slightly faster.\n            serverContainers[i].remove();\n        }\n        const messagesContainer = this._document.createElement('div');\n        // We add `visibility: hidden` in order to prevent text in this container from\n        // being searchable by the browser's Ctrl + F functionality.\n        // Screen-readers will still read the description for elements with aria-describedby even\n        // when the description element is not visible.\n        messagesContainer.style.visibility = 'hidden';\n        // Even though we use `visibility: hidden`, we still apply `cdk-visually-hidden` so that\n        // the description element doesn't impact page layout.\n        messagesContainer.classList.add(containerClassName);\n        messagesContainer.classList.add('cdk-visually-hidden');\n        if (!this._platform.isBrowser) {\n            messagesContainer.setAttribute('platform', 'server');\n        }\n        this._document.body.appendChild(messagesContainer);\n        this._messagesContainer = messagesContainer;\n    }\n    /** Removes all cdk-describedby messages that are hosted through the element. */\n    _removeCdkDescribedByReferenceIds(element) {\n        // Remove all aria-describedby reference IDs that are prefixed by CDK_DESCRIBEDBY_ID_PREFIX\n        const originalReferenceIds = getAriaReferenceIds(element, 'aria-describedby').filter(id => id.indexOf(CDK_DESCRIBEDBY_ID_PREFIX) != 0);\n        element.setAttribute('aria-describedby', originalReferenceIds.join(' '));\n    }\n    /**\n     * Adds a message reference to the element using aria-describedby and increments the registered\n     * message's reference count.\n     */\n    _addMessageReference(element, key) {\n        const registeredMessage = this._messageRegistry.get(key);\n        // Add the aria-describedby reference and set the\n        // describedby_host attribute to mark the element.\n        addAriaReferencedId(element, 'aria-describedby', registeredMessage.messageElement.id);\n        element.setAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE, this._id);\n        registeredMessage.referenceCount++;\n    }\n    /**\n     * Removes a message reference from the element using aria-describedby\n     * and decrements the registered message's reference count.\n     */\n    _removeMessageReference(element, key) {\n        const registeredMessage = this._messageRegistry.get(key);\n        registeredMessage.referenceCount--;\n        removeAriaReferencedId(element, 'aria-describedby', registeredMessage.messageElement.id);\n        element.removeAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE);\n    }\n    /** Returns true if the element has been described by the provided message ID. */\n    _isElementDescribedByMessage(element, key) {\n        const referenceIds = getAriaReferenceIds(element, 'aria-describedby');\n        const registeredMessage = this._messageRegistry.get(key);\n        const messageId = registeredMessage && registeredMessage.messageElement.id;\n        return !!messageId && referenceIds.indexOf(messageId) != -1;\n    }\n    /** Determines whether a message can be described on a particular element. */\n    _canBeDescribed(element, message) {\n        if (!this._isElementNode(element)) {\n            return false;\n        }\n        if (message && typeof message === 'object') {\n            // We'd have to make some assumptions about the description element's text, if the consumer\n            // passed in an element. Assume that if an element is passed in, the consumer has verified\n            // that it can be used as a description.\n            return true;\n        }\n        const trimmedMessage = message == null ? '' : `${message}`.trim();\n        const ariaLabel = element.getAttribute('aria-label');\n        // We shouldn't set descriptions if they're exactly the same as the `aria-label` of the\n        // element, because screen readers will end up reading out the same text twice in a row.\n        return trimmedMessage ? !ariaLabel || ariaLabel.trim() !== trimmedMessage : false;\n    }\n    /** Checks whether a node is an Element node. */\n    _isElementNode(element) {\n        return element.nodeType === this._document.ELEMENT_NODE;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: AriaDescriber, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: AriaDescriber, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: AriaDescriber, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [] });\n/** Gets a key that can be used to look messages up in the registry. */\nfunction getKey(message, role) {\n    return typeof message === 'string' ? `${role || ''}/${message}` : message;\n}\n/** Assigns a unique ID to an element, if it doesn't have one already. */\nfunction setMessageId(element, serviceId) {\n    if (!element.id) {\n        element.id = `${CDK_DESCRIBEDBY_ID_PREFIX}-${serviceId}-${nextId++}`;\n    }\n}\n\n// NoopTreeKeyManager is a \"noop\" implementation of TreeKeyMangerStrategy. Methods are noops. Does\n// not emit to streams.\n//\n// Used for applications built before TreeKeyManager to opt-out of TreeKeyManager and revert to\n// legacy behavior.\n/**\n * @docs-private\n *\n * Opt-out of Tree of key manager behavior.\n *\n * When provided, Tree has same focus management behavior as before TreeKeyManager was introduced.\n *  - Tree does not respond to keyboard interaction\n *  - Tree node allows tabindex to be set by Input binding\n *  - Tree node allows tabindex to be set by attribute binding\n *\n * @deprecated NoopTreeKeyManager deprecated. Use TreeKeyManager or inject a\n * TreeKeyManagerStrategy instead. To be removed in a future version.\n *\n * @breaking-change 21.0.0\n */\nclass NoopTreeKeyManager {\n    _isNoopTreeKeyManager = true;\n    // Provide change as required by TreeKeyManagerStrategy. NoopTreeKeyManager is a \"noop\"\n    // implementation that does not emit to streams.\n    change = new Subject();\n    destroy() {\n        this.change.complete();\n    }\n    onKeydown() {\n        // noop\n    }\n    getActiveItemIndex() {\n        // Always return null. NoopTreeKeyManager is a \"noop\" implementation that does not maintain\n        // the active item.\n        return null;\n    }\n    getActiveItem() {\n        // Always return null. NoopTreeKeyManager is a \"noop\" implementation that does not maintain\n        // the active item.\n        return null;\n    }\n    focusItem() {\n        // noop\n    }\n}\n/**\n * @docs-private\n *\n * Opt-out of Tree of key manager behavior.\n *\n * When provided, Tree has same focus management behavior as before TreeKeyManager was introduced.\n *  - Tree does not respond to keyboard interaction\n *  - Tree node allows tabindex to be set by Input binding\n *  - Tree node allows tabindex to be set by attribute binding\n *\n * @deprecated NoopTreeKeyManager deprecated. Use TreeKeyManager or inject a\n * TreeKeyManagerStrategy instead. To be removed in a future version.\n *\n * @breaking-change 21.0.0\n */\nfunction NOOP_TREE_KEY_MANAGER_FACTORY() {\n    return () => new NoopTreeKeyManager();\n}\n/**\n * @docs-private\n *\n * Opt-out of Tree of key manager behavior.\n *\n * When provided, Tree has same focus management behavior as before TreeKeyManager was introduced.\n *  - Tree does not respond to keyboard interaction\n *  - Tree node allows tabindex to be set by Input binding\n *  - Tree node allows tabindex to be set by attribute binding\n *\n * @deprecated NoopTreeKeyManager deprecated. Use TreeKeyManager or inject a\n * TreeKeyManagerStrategy instead. To be removed in a future version.\n *\n * @breaking-change 21.0.0\n */\nconst NOOP_TREE_KEY_MANAGER_FACTORY_PROVIDER = {\n    provide: TREE_KEY_MANAGER,\n    useFactory: NOOP_TREE_KEY_MANAGER_FACTORY,\n};\n\n/**\n * Class that allows for trapping focus within a DOM element.\n *\n * This class uses a strategy pattern that determines how it traps focus.\n * See FocusTrapInertStrategy.\n */\nclass ConfigurableFocusTrap extends FocusTrap {\n    _focusTrapManager;\n    _inertStrategy;\n    /** Whether the FocusTrap is enabled. */\n    get enabled() {\n        return this._enabled;\n    }\n    set enabled(value) {\n        this._enabled = value;\n        if (this._enabled) {\n            this._focusTrapManager.register(this);\n        }\n        else {\n            this._focusTrapManager.deregister(this);\n        }\n    }\n    constructor(_element, _checker, _ngZone, _document, _focusTrapManager, _inertStrategy, config, injector) {\n        super(_element, _checker, _ngZone, _document, config.defer, injector);\n        this._focusTrapManager = _focusTrapManager;\n        this._inertStrategy = _inertStrategy;\n        this._focusTrapManager.register(this);\n    }\n    /** Notifies the FocusTrapManager that this FocusTrap will be destroyed. */\n    destroy() {\n        this._focusTrapManager.deregister(this);\n        super.destroy();\n    }\n    /** @docs-private Implemented as part of ManagedFocusTrap. */\n    _enable() {\n        this._inertStrategy.preventFocus(this);\n        this.toggleAnchors(true);\n    }\n    /** @docs-private Implemented as part of ManagedFocusTrap. */\n    _disable() {\n        this._inertStrategy.allowFocus(this);\n        this.toggleAnchors(false);\n    }\n}\n\n/**\n * Lightweight FocusTrapInertStrategy that adds a document focus event\n * listener to redirect focus back inside the FocusTrap.\n */\nclass EventListenerFocusTrapInertStrategy {\n    /** Focus event handler. */\n    _listener = null;\n    /** Adds a document event listener that keeps focus inside the FocusTrap. */\n    preventFocus(focusTrap) {\n        // Ensure there's only one listener per document\n        if (this._listener) {\n            focusTrap._document.removeEventListener('focus', this._listener, true);\n        }\n        this._listener = (e) => this._trapFocus(focusTrap, e);\n        focusTrap._ngZone.runOutsideAngular(() => {\n            focusTrap._document.addEventListener('focus', this._listener, true);\n        });\n    }\n    /** Removes the event listener added in preventFocus. */\n    allowFocus(focusTrap) {\n        if (!this._listener) {\n            return;\n        }\n        focusTrap._document.removeEventListener('focus', this._listener, true);\n        this._listener = null;\n    }\n    /**\n     * Refocuses the first element in the FocusTrap if the focus event target was outside\n     * the FocusTrap.\n     *\n     * This is an event listener callback. The event listener is added in runOutsideAngular,\n     * so all this code runs outside Angular as well.\n     */\n    _trapFocus(focusTrap, event) {\n        const target = event.target;\n        const focusTrapRoot = focusTrap._element;\n        // Don't refocus if target was in an overlay, because the overlay might be associated\n        // with an element inside the FocusTrap, ex. mat-select.\n        if (target && !focusTrapRoot.contains(target) && !target.closest?.('div.cdk-overlay-pane')) {\n            // Some legacy FocusTrap usages have logic that focuses some element on the page\n            // just before FocusTrap is destroyed. For backwards compatibility, wait\n            // to be sure FocusTrap is still enabled before refocusing.\n            setTimeout(() => {\n                // Check whether focus wasn't put back into the focus trap while the timeout was pending.\n                if (focusTrap.enabled && !focusTrapRoot.contains(focusTrap._document.activeElement)) {\n                    focusTrap.focusFirstTabbableElement();\n                }\n            });\n        }\n    }\n}\n\n/** The injection token used to specify the inert strategy. */\nconst FOCUS_TRAP_INERT_STRATEGY = new InjectionToken('FOCUS_TRAP_INERT_STRATEGY');\n\n/** Injectable that ensures only the most recently enabled FocusTrap is active. */\nclass FocusTrapManager {\n    // A stack of the FocusTraps on the page. Only the FocusTrap at the\n    // top of the stack is active.\n    _focusTrapStack = [];\n    /**\n     * Disables the FocusTrap at the top of the stack, and then pushes\n     * the new FocusTrap onto the stack.\n     */\n    register(focusTrap) {\n        // Dedupe focusTraps that register multiple times.\n        this._focusTrapStack = this._focusTrapStack.filter(ft => ft !== focusTrap);\n        let stack = this._focusTrapStack;\n        if (stack.length) {\n            stack[stack.length - 1]._disable();\n        }\n        stack.push(focusTrap);\n        focusTrap._enable();\n    }\n    /**\n     * Removes the FocusTrap from the stack, and activates the\n     * FocusTrap that is the new top of the stack.\n     */\n    deregister(focusTrap) {\n        focusTrap._disable();\n        const stack = this._focusTrapStack;\n        const i = stack.indexOf(focusTrap);\n        if (i !== -1) {\n            stack.splice(i, 1);\n            if (stack.length) {\n                stack[stack.length - 1]._enable();\n            }\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: FocusTrapManager, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: FocusTrapManager, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: FocusTrapManager, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\n/** Factory that allows easy instantiation of configurable focus traps. */\nclass ConfigurableFocusTrapFactory {\n    _checker = inject(InteractivityChecker);\n    _ngZone = inject(NgZone);\n    _focusTrapManager = inject(FocusTrapManager);\n    _document = inject(DOCUMENT);\n    _inertStrategy;\n    _injector = inject(Injector);\n    constructor() {\n        const inertStrategy = inject(FOCUS_TRAP_INERT_STRATEGY, { optional: true });\n        // TODO split up the strategies into different modules, similar to DateAdapter.\n        this._inertStrategy = inertStrategy || new EventListenerFocusTrapInertStrategy();\n    }\n    create(element, config = { defer: false }) {\n        let configObject;\n        if (typeof config === 'boolean') {\n            configObject = { defer: config };\n        }\n        else {\n            configObject = config;\n        }\n        return new ConfigurableFocusTrap(element, this._checker, this._ngZone, this._document, this._focusTrapManager, this._inertStrategy, configObject, this._injector);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: ConfigurableFocusTrapFactory, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: ConfigurableFocusTrapFactory, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: ConfigurableFocusTrapFactory, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [] });\n\nexport { AriaDescriber, CDK_DESCRIBEDBY_HOST_ATTRIBUTE, CDK_DESCRIBEDBY_ID_PREFIX, ConfigurableFocusTrap, ConfigurableFocusTrapFactory, EventListenerFocusTrapInertStrategy, FOCUS_TRAP_INERT_STRATEGY, FocusTrap, InteractivityChecker, MESSAGES_CONTAINER_ID, NOOP_TREE_KEY_MANAGER_FACTORY, NOOP_TREE_KEY_MANAGER_FACTORY_PROVIDER, NoopTreeKeyManager, TREE_KEY_MANAGER, addAriaReferencedId, getAriaReferenceIds, removeAriaReferencedId };\n\n","/** The possible ways the browser may handle the horizontal scroll axis in RTL languages. */\nvar RtlScrollAxisType;\n(function (RtlScrollAxisType) {\n    /**\n     * scrollLeft is 0 when scrolled all the way left and (scrollWidth - clientWidth) when scrolled\n     * all the way right.\n     */\n    RtlScrollAxisType[RtlScrollAxisType[\"NORMAL\"] = 0] = \"NORMAL\";\n    /**\n     * scrollLeft is -(scrollWidth - clientWidth) when scrolled all the way left and 0 when scrolled\n     * all the way right.\n     */\n    RtlScrollAxisType[RtlScrollAxisType[\"NEGATED\"] = 1] = \"NEGATED\";\n    /**\n     * scrollLeft is (scrollWidth - clientWidth) when scrolled all the way left and 0 when scrolled\n     * all the way right.\n     */\n    RtlScrollAxisType[RtlScrollAxisType[\"INVERTED\"] = 2] = \"INVERTED\";\n})(RtlScrollAxisType || (RtlScrollAxisType = {}));\n/** Cached result of the way the browser handles the horizontal scroll axis in RTL mode. */\nlet rtlScrollAxisType;\n/** Cached result of the check that indicates whether the browser supports scroll behaviors. */\nlet scrollBehaviorSupported;\n/** Check whether the browser supports scroll behaviors. */\nfunction supportsScrollBehavior() {\n    if (scrollBehaviorSupported == null) {\n        // If we're not in the browser, it can't be supported. Also check for `Element`, because\n        // some projects stub out the global `document` during SSR which can throw us off.\n        if (typeof document !== 'object' || !document || typeof Element !== 'function' || !Element) {\n            scrollBehaviorSupported = false;\n            return scrollBehaviorSupported;\n        }\n        // If the element can have a `scrollBehavior` style, we can be sure that it's supported.\n        if ('scrollBehavior' in document.documentElement.style) {\n            scrollBehaviorSupported = true;\n        }\n        else {\n            // At this point we have 3 possibilities: `scrollTo` isn't supported at all, it's\n            // supported but it doesn't handle scroll behavior, or it has been polyfilled.\n            const scrollToFunction = Element.prototype.scrollTo;\n            if (scrollToFunction) {\n                // We can detect if the function has been polyfilled by calling `toString` on it. Native\n                // functions are obfuscated using `[native code]`, whereas if it was overwritten we'd get\n                // the actual function source. Via https://davidwalsh.name/detect-native-function. Consider\n                // polyfilled functions as supporting scroll behavior.\n                scrollBehaviorSupported = !/\\{\\s*\\[native code\\]\\s*\\}/.test(scrollToFunction.toString());\n            }\n            else {\n                scrollBehaviorSupported = false;\n            }\n        }\n    }\n    return scrollBehaviorSupported;\n}\n/**\n * Checks the type of RTL scroll axis used by this browser. As of time of writing, Chrome is NORMAL,\n * Firefox & Safari are NEGATED, and IE & Edge are INVERTED.\n */\nfunction getRtlScrollAxisType() {\n    // We can't check unless we're on the browser. Just assume 'normal' if we're not.\n    if (typeof document !== 'object' || !document) {\n        return RtlScrollAxisType.NORMAL;\n    }\n    if (rtlScrollAxisType == null) {\n        // Create a 1px wide scrolling container and a 2px wide content element.\n        const scrollContainer = document.createElement('div');\n        const containerStyle = scrollContainer.style;\n        scrollContainer.dir = 'rtl';\n        containerStyle.width = '1px';\n        containerStyle.overflow = 'auto';\n        containerStyle.visibility = 'hidden';\n        containerStyle.pointerEvents = 'none';\n        containerStyle.position = 'absolute';\n        const content = document.createElement('div');\n        const contentStyle = content.style;\n        contentStyle.width = '2px';\n        contentStyle.height = '1px';\n        scrollContainer.appendChild(content);\n        document.body.appendChild(scrollContainer);\n        rtlScrollAxisType = RtlScrollAxisType.NORMAL;\n        // The viewport starts scrolled all the way to the right in RTL mode. If we are in a NORMAL\n        // browser this would mean that the scrollLeft should be 1. If it's zero instead we know we're\n        // dealing with one of the other two types of browsers.\n        if (scrollContainer.scrollLeft === 0) {\n            // In a NEGATED browser the scrollLeft is always somewhere in [-maxScrollAmount, 0]. For an\n            // INVERTED browser it is always somewhere in [0, maxScrollAmount]. We can determine which by\n            // setting to the scrollLeft to 1. This is past the max for a NEGATED browser, so it will\n            // return 0 when we read it again.\n            scrollContainer.scrollLeft = 1;\n            rtlScrollAxisType =\n                scrollContainer.scrollLeft === 0 ? RtlScrollAxisType.NEGATED : RtlScrollAxisType.INVERTED;\n        }\n        scrollContainer.remove();\n    }\n    return rtlScrollAxisType;\n}\n\nexport { RtlScrollAxisType as R, getRtlScrollAxisType as g, supportsScrollBehavior as s };\n\n","/** Gets whether the code is currently running in a test environment. */\nfunction _isTestEnvironment() {\n    // We can't use `declare const` because it causes conflicts inside Google with the real typings\n    // for these symbols and we can't read them off the global object, because they don't appear to\n    // be attached there for some runners like Jest.\n    // (see: https://github.com/angular/components/issues/23365#issuecomment-938146643)\n    return (\n    // @ts-ignore\n    (typeof __karma__ !== 'undefined' && !!__karma__) ||\n        // @ts-ignore\n        (typeof jasmine !== 'undefined' && !!jasmine) ||\n        // @ts-ignore\n        (typeof jest !== 'undefined' && !!jest) ||\n        // @ts-ignore\n        (typeof Mocha !== 'undefined' && !!Mocha));\n}\n\nexport { _isTestEnvironment as _ };\n\n","export { P as Platform } from './platform-DNDzkVcI.mjs';\nimport * as i0 from '@angular/core';\nimport { NgModule } from '@angular/core';\nexport { n as normalizePassiveListenerOptions, s as supportsPassiveEventListeners } from './passive-listeners-esHZRgIN.mjs';\nexport { R as RtlScrollAxisType, g as getRtlScrollAxisType, s as supportsScrollBehavior } from './scrolling-BkvA05C8.mjs';\nexport { _ as _getEventTarget, c as _getFocusedElementPierceShadowDom, a as _getShadowRoot, b as _supportsShadowDom } from './shadow-dom-B0oHn41l.mjs';\nexport { _ as _isTestEnvironment } from './test-environment-CT0XxPyp.mjs';\nimport '@angular/common';\n\nclass PlatformModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: PlatformModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.0\", ngImport: i0, type: PlatformModule });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: PlatformModule });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: PlatformModule, decorators: [{\n            type: NgModule,\n            args: [{}]\n        }] });\n\n/** Cached result Set of input types support by the current browser. */\nlet supportedInputTypes;\n/** Types of `<input>` that *might* be supported. */\nconst candidateInputTypes = [\n    // `color` must come first. Chrome 56 shows a warning if we change the type to `color` after\n    // first changing it to something else:\n    // The specified value \"\" does not conform to the required format.\n    // The format is \"#rrggbb\" where rr, gg, bb are two-digit hexadecimal numbers.\n    'color',\n    'button',\n    'checkbox',\n    'date',\n    'datetime-local',\n    'email',\n    'file',\n    'hidden',\n    'image',\n    'month',\n    'number',\n    'password',\n    'radio',\n    'range',\n    'reset',\n    'search',\n    'submit',\n    'tel',\n    'text',\n    'time',\n    'url',\n    'week',\n];\n/** @returns The input types supported by this browser. */\nfunction getSupportedInputTypes() {\n    // Result is cached.\n    if (supportedInputTypes) {\n        return supportedInputTypes;\n    }\n    // We can't check if an input type is not supported until we're on the browser, so say that\n    // everything is supported when not on the browser. We don't use `Platform` here since it's\n    // just a helper function and can't inject it.\n    if (typeof document !== 'object' || !document) {\n        supportedInputTypes = new Set(candidateInputTypes);\n        return supportedInputTypes;\n    }\n    let featureTestInput = document.createElement('input');\n    supportedInputTypes = new Set(candidateInputTypes.filter(value => {\n        featureTestInput.setAttribute('type', value);\n        return featureTestInput.type === value;\n    }));\n    return supportedInputTypes;\n}\n\nexport { PlatformModule, getSupportedInputTypes };\n\n","import * as i0 from '@angular/core';\nimport { NgModule } from '@angular/core';\nexport { B as BreakpointObserver, M as MediaMatcher } from './breakpoints-observer-QutrMj4x.mjs';\nimport 'rxjs';\nimport 'rxjs/operators';\nimport './platform-DNDzkVcI.mjs';\nimport '@angular/common';\nimport './array-I1yfCXUO.mjs';\n\nclass LayoutModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: LayoutModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.0\", ngImport: i0, type: LayoutModule });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: LayoutModule });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: LayoutModule, decorators: [{\n            type: NgModule,\n            args: [{}]\n        }] });\n\n// PascalCase is being used as Breakpoints is used like an enum.\n// tslint:disable-next-line:variable-name\nconst Breakpoints = {\n    XSmall: '(max-width: 599.98px)',\n    Small: '(min-width: 600px) and (max-width: 959.98px)',\n    Medium: '(min-width: 960px) and (max-width: 1279.98px)',\n    Large: '(min-width: 1280px) and (max-width: 1919.98px)',\n    XLarge: '(min-width: 1920px)',\n    Handset: '(max-width: 599.98px) and (orientation: portrait), ' +\n        '(max-width: 959.98px) and (orientation: landscape)',\n    Tablet: '(min-width: 600px) and (max-width: 839.98px) and (orientation: portrait), ' +\n        '(min-width: 960px) and (max-width: 1279.98px) and (orientation: landscape)',\n    Web: '(min-width: 840px) and (orientation: portrait), ' +\n        '(min-width: 1280px) and (orientation: landscape)',\n    HandsetPortrait: '(max-width: 599.98px) and (orientation: portrait)',\n    TabletPortrait: '(min-width: 600px) and (max-width: 839.98px) and (orientation: portrait)',\n    WebPortrait: '(min-width: 840px) and (orientation: portrait)',\n    HandsetLandscape: '(max-width: 959.98px) and (orientation: landscape)',\n    TabletLandscape: '(min-width: 960px) and (max-width: 1279.98px) and (orientation: landscape)',\n    WebLandscape: '(min-width: 1280px) and (orientation: landscape)',\n};\n\nexport { Breakpoints, LayoutModule };\n\n","import { MediaMatcher } from '@angular/cdk/layout';\nimport { InjectionToken, inject, ANIMATION_MODULE_TYPE } from '@angular/core';\n\n/** Injection token used to configure the animations in Angular Material. */\nconst MATERIAL_ANIMATIONS = new InjectionToken('MATERIAL_ANIMATIONS');\n/**\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n * @docs-private\n */\nclass AnimationCurves {\n    static STANDARD_CURVE = 'cubic-bezier(0.4,0.0,0.2,1)';\n    static DECELERATION_CURVE = 'cubic-bezier(0.0,0.0,0.2,1)';\n    static ACCELERATION_CURVE = 'cubic-bezier(0.4,0.0,1,1)';\n    static SHARP_CURVE = 'cubic-bezier(0.4,0.0,0.6,1)';\n}\n/**\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n * @docs-private\n */\nclass AnimationDurations {\n    static COMPLEX = '375ms';\n    static ENTERING = '225ms';\n    static EXITING = '195ms';\n}\nlet reducedMotion = null;\n/**\n * Gets the the configured animations state.\n * @docs-private\n */\nfunction _getAnimationsState() {\n    if (inject(MATERIAL_ANIMATIONS, { optional: true })?.animationsDisabled ||\n        inject(ANIMATION_MODULE_TYPE, { optional: true }) === 'NoopAnimations') {\n        return 'di-disabled';\n    }\n    reducedMotion ??= inject(MediaMatcher).matchMedia('(prefers-reduced-motion)').matches;\n    return reducedMotion ? 'reduced-motion' : 'enabled';\n}\n/**\n * Returns whether animations have been disabled by DI. Must be called in a DI context.\n * @docs-private\n */\nfunction _animationsDisabled() {\n    return _getAnimationsState() !== 'enabled';\n}\n\nexport { AnimationCurves as A, MATERIAL_ANIMATIONS as M, _animationsDisabled as _, _getAnimationsState as a, AnimationDurations as b };\n\n","/** Coerces a value to a CSS pixel value. */\nfunction coerceCssPixelValue(value) {\n    if (value == null) {\n        return '';\n    }\n    return typeof value === 'string' ? value : `${value}px`;\n}\n\nexport { coerceCssPixelValue as c };\n\n","export { _ as _isNumberValue, a as coerceElement, c as coerceNumberProperty } from './element-x4z00URv.mjs';\nexport { c as coerceArray } from './array-I1yfCXUO.mjs';\nexport { c as coerceCssPixelValue } from './css-pixel-value-C_HEqLhI.mjs';\nimport '@angular/core';\n\n/** Coerces a data-bound value (typically a string) to a boolean. */\nfunction coerceBooleanProperty(value) {\n    return value != null && `${value}` !== 'false';\n}\n\n/**\n * Coerces a value to an array of trimmed non-empty strings.\n * Any input that is not an array, `null` or `undefined` will be turned into a string\n * via `toString()` and subsequently split with the given separator.\n * `null` and `undefined` will result in an empty array.\n * This results in the following outcomes:\n * - `null` -&gt; `[]`\n * - `[null]` -&gt; `[\"null\"]`\n * - `[\"a\", \"b \", \" \"]` -&gt; `[\"a\", \"b\"]`\n * - `[1, [2, 3]]` -&gt; `[\"1\", \"2,3\"]`\n * - `[{ a: 0 }]` -&gt; `[\"[object Object]\"]`\n * - `{ a: 0 }` -&gt; `[\"[object\", \"Object]\"]`\n *\n * Useful for defining CSS classes or table columns.\n * @param value the value to coerce into an array of strings\n * @param separator split-separator if value isn't an array\n */\nfunction coerceStringArray(value, separator = /\\s+/) {\n    const result = [];\n    if (value != null) {\n        const sourceValues = Array.isArray(value) ? value : `${value}`.split(separator);\n        for (const sourceValue of sourceValues) {\n            const trimmedString = `${sourceValue}`.trim();\n            if (trimmedString) {\n                result.push(trimmedString);\n            }\n        }\n    }\n    return result;\n}\n\nexport { coerceBooleanProperty, coerceStringArray };\n\n","import { normalizePassiveListenerOptions, _getEventTarget, Platform } from '@angular/cdk/platform';\nimport * as i0 from '@angular/core';\nimport { Component, ChangeDetectionStrategy, ViewEncapsulation, InjectionToken, inject, ElementRef, NgZone, Injector, Directive, Input } from '@angular/core';\nimport { isFakeMousedownFromScreenReader, isFakeTouchstartFromScreenReader } from '@angular/cdk/a11y';\nimport { coerceElement } from '@angular/cdk/coercion';\nimport { _CdkPrivateStyleLoader } from '@angular/cdk/private';\nimport { _ as _animationsDisabled } from './animation-ChQ1vjiF.mjs';\n\n/** Possible states for a ripple element. */\nvar RippleState;\n(function (RippleState) {\n    RippleState[RippleState[\"FADING_IN\"] = 0] = \"FADING_IN\";\n    RippleState[RippleState[\"VISIBLE\"] = 1] = \"VISIBLE\";\n    RippleState[RippleState[\"FADING_OUT\"] = 2] = \"FADING_OUT\";\n    RippleState[RippleState[\"HIDDEN\"] = 3] = \"HIDDEN\";\n})(RippleState || (RippleState = {}));\n/**\n * Reference to a previously launched ripple element.\n */\nclass RippleRef {\n    _renderer;\n    element;\n    config;\n    _animationForciblyDisabledThroughCss;\n    /** Current state of the ripple. */\n    state = RippleState.HIDDEN;\n    constructor(_renderer, \n    /** Reference to the ripple HTML element. */\n    element, \n    /** Ripple configuration used for the ripple. */\n    config, \n    /* Whether animations are forcibly disabled for ripples through CSS. */\n    _animationForciblyDisabledThroughCss = false) {\n        this._renderer = _renderer;\n        this.element = element;\n        this.config = config;\n        this._animationForciblyDisabledThroughCss = _animationForciblyDisabledThroughCss;\n    }\n    /** Fades out the ripple element. */\n    fadeOut() {\n        this._renderer.fadeOutRipple(this);\n    }\n}\n\n/** Options used to bind a passive capturing event. */\nconst passiveCapturingEventOptions$1 = normalizePassiveListenerOptions({\n    passive: true,\n    capture: true,\n});\n/** Manages events through delegation so that as few event handlers as possible are bound. */\nclass RippleEventManager {\n    _events = new Map();\n    /** Adds an event handler. */\n    addHandler(ngZone, name, element, handler) {\n        const handlersForEvent = this._events.get(name);\n        if (handlersForEvent) {\n            const handlersForElement = handlersForEvent.get(element);\n            if (handlersForElement) {\n                handlersForElement.add(handler);\n            }\n            else {\n                handlersForEvent.set(element, new Set([handler]));\n            }\n        }\n        else {\n            this._events.set(name, new Map([[element, new Set([handler])]]));\n            ngZone.runOutsideAngular(() => {\n                document.addEventListener(name, this._delegateEventHandler, passiveCapturingEventOptions$1);\n            });\n        }\n    }\n    /** Removes an event handler. */\n    removeHandler(name, element, handler) {\n        const handlersForEvent = this._events.get(name);\n        if (!handlersForEvent) {\n            return;\n        }\n        const handlersForElement = handlersForEvent.get(element);\n        if (!handlersForElement) {\n            return;\n        }\n        handlersForElement.delete(handler);\n        if (handlersForElement.size === 0) {\n            handlersForEvent.delete(element);\n        }\n        if (handlersForEvent.size === 0) {\n            this._events.delete(name);\n            document.removeEventListener(name, this._delegateEventHandler, passiveCapturingEventOptions$1);\n        }\n    }\n    /** Event handler that is bound and which dispatches the events to the different targets. */\n    _delegateEventHandler = (event) => {\n        const target = _getEventTarget(event);\n        if (target) {\n            this._events.get(event.type)?.forEach((handlers, element) => {\n                if (element === target || element.contains(target)) {\n                    handlers.forEach(handler => handler.handleEvent(event));\n                }\n            });\n        }\n    };\n}\n\n/**\n * Default ripple animation configuration for ripples without an explicit\n * animation config specified.\n */\nconst defaultRippleAnimationConfig = {\n    enterDuration: 225,\n    exitDuration: 150,\n};\n/**\n * Timeout for ignoring mouse events. Mouse events will be temporary ignored after touch\n * events to avoid synthetic mouse events.\n */\nconst ignoreMouseEventsTimeout = 800;\n/** Options used to bind a passive capturing event. */\nconst passiveCapturingEventOptions = normalizePassiveListenerOptions({\n    passive: true,\n    capture: true,\n});\n/** Events that signal that the pointer is down. */\nconst pointerDownEvents = ['mousedown', 'touchstart'];\n/** Events that signal that the pointer is up. */\nconst pointerUpEvents = ['mouseup', 'mouseleave', 'touchend', 'touchcancel'];\nclass _MatRippleStylesLoader {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: _MatRippleStylesLoader, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"20.0.0\", type: _MatRippleStylesLoader, isStandalone: true, selector: \"ng-component\", host: { attributes: { \"mat-ripple-style-loader\": \"\" } }, ngImport: i0, template: '', isInline: true, styles: [\".mat-ripple{overflow:hidden;position:relative}.mat-ripple:not(:empty){transform:translateZ(0)}.mat-ripple.mat-ripple-unbounded{overflow:visible}.mat-ripple-element{position:absolute;border-radius:50%;pointer-events:none;transition:opacity,transform 0ms cubic-bezier(0, 0, 0.2, 1);transform:scale3d(0, 0, 0);background-color:var(--mat-ripple-color, color-mix(in srgb, var(--mat-sys-on-surface) 10%, transparent))}@media(forced-colors: active){.mat-ripple-element{display:none}}.cdk-drag-preview .mat-ripple-element,.cdk-drag-placeholder .mat-ripple-element{display:none}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: _MatRippleStylesLoader, decorators: [{\n            type: Component,\n            args: [{ template: '', changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, host: { 'mat-ripple-style-loader': '' }, styles: [\".mat-ripple{overflow:hidden;position:relative}.mat-ripple:not(:empty){transform:translateZ(0)}.mat-ripple.mat-ripple-unbounded{overflow:visible}.mat-ripple-element{position:absolute;border-radius:50%;pointer-events:none;transition:opacity,transform 0ms cubic-bezier(0, 0, 0.2, 1);transform:scale3d(0, 0, 0);background-color:var(--mat-ripple-color, color-mix(in srgb, var(--mat-sys-on-surface) 10%, transparent))}@media(forced-colors: active){.mat-ripple-element{display:none}}.cdk-drag-preview .mat-ripple-element,.cdk-drag-placeholder .mat-ripple-element{display:none}\\n\"] }]\n        }] });\n/**\n * Helper service that performs DOM manipulations. Not intended to be used outside this module.\n * The constructor takes a reference to the ripple directive's host element and a map of DOM\n * event handlers to be installed on the element that triggers ripple animations.\n * This will eventually become a custom renderer once Angular support exists.\n * @docs-private\n */\nclass RippleRenderer {\n    _target;\n    _ngZone;\n    _platform;\n    /** Element where the ripples are being added to. */\n    _containerElement;\n    /** Element which triggers the ripple elements on mouse events. */\n    _triggerElement;\n    /** Whether the pointer is currently down or not. */\n    _isPointerDown = false;\n    /**\n     * Map of currently active ripple references.\n     * The ripple reference is mapped to its element event listeners.\n     * The reason why `| null` is used is that event listeners are added only\n     * when the condition is truthy (see the `_startFadeOutTransition` method).\n     */\n    _activeRipples = new Map();\n    /** Latest non-persistent ripple that was triggered. */\n    _mostRecentTransientRipple;\n    /** Time in milliseconds when the last touchstart event happened. */\n    _lastTouchStartEvent;\n    /** Whether pointer-up event listeners have been registered. */\n    _pointerUpEventsRegistered = false;\n    /**\n     * Cached dimensions of the ripple container. Set when the first\n     * ripple is shown and cleared once no more ripples are visible.\n     */\n    _containerRect;\n    static _eventManager = new RippleEventManager();\n    constructor(_target, _ngZone, elementOrElementRef, _platform, injector) {\n        this._target = _target;\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        // Only do anything if we're on the browser.\n        if (_platform.isBrowser) {\n            this._containerElement = coerceElement(elementOrElementRef);\n        }\n        if (injector) {\n            injector.get(_CdkPrivateStyleLoader).load(_MatRippleStylesLoader);\n        }\n    }\n    /**\n     * Fades in a ripple at the given coordinates.\n     * @param x Coordinate within the element, along the X axis at which to start the ripple.\n     * @param y Coordinate within the element, along the Y axis at which to start the ripple.\n     * @param config Extra ripple options.\n     */\n    fadeInRipple(x, y, config = {}) {\n        const containerRect = (this._containerRect =\n            this._containerRect || this._containerElement.getBoundingClientRect());\n        const animationConfig = { ...defaultRippleAnimationConfig, ...config.animation };\n        if (config.centered) {\n            x = containerRect.left + containerRect.width / 2;\n            y = containerRect.top + containerRect.height / 2;\n        }\n        const radius = config.radius || distanceToFurthestCorner(x, y, containerRect);\n        const offsetX = x - containerRect.left;\n        const offsetY = y - containerRect.top;\n        const enterDuration = animationConfig.enterDuration;\n        const ripple = document.createElement('div');\n        ripple.classList.add('mat-ripple-element');\n        ripple.style.left = `${offsetX - radius}px`;\n        ripple.style.top = `${offsetY - radius}px`;\n        ripple.style.height = `${radius * 2}px`;\n        ripple.style.width = `${radius * 2}px`;\n        // If a custom color has been specified, set it as inline style. If no color is\n        // set, the default color will be applied through the ripple theme styles.\n        if (config.color != null) {\n            ripple.style.backgroundColor = config.color;\n        }\n        ripple.style.transitionDuration = `${enterDuration}ms`;\n        this._containerElement.appendChild(ripple);\n        // By default the browser does not recalculate the styles of dynamically created\n        // ripple elements. This is critical to ensure that the `scale` animates properly.\n        // We enforce a style recalculation by calling `getComputedStyle` and *accessing* a property.\n        // See: https://gist.github.com/paulirish/5d52fb081b3570c81e3a\n        const computedStyles = window.getComputedStyle(ripple);\n        const userTransitionProperty = computedStyles.transitionProperty;\n        const userTransitionDuration = computedStyles.transitionDuration;\n        // Note: We detect whether animation is forcibly disabled through CSS (e.g. through\n        // `transition: none` or `display: none`). This is technically unexpected since animations are\n        // controlled through the animation config, but this exists for backwards compatibility. This\n        // logic does not need to be super accurate since it covers some edge cases which can be easily\n        // avoided by users.\n        const animationForciblyDisabledThroughCss = userTransitionProperty === 'none' ||\n            // Note: The canonical unit for serialized CSS `<time>` properties is seconds. Additionally\n            // some browsers expand the duration for every property (in our case `opacity` and `transform`).\n            userTransitionDuration === '0s' ||\n            userTransitionDuration === '0s, 0s' ||\n            // If the container is 0x0, it's likely `display: none`.\n            (containerRect.width === 0 && containerRect.height === 0);\n        // Exposed reference to the ripple that will be returned.\n        const rippleRef = new RippleRef(this, ripple, config, animationForciblyDisabledThroughCss);\n        // Start the enter animation by setting the transform/scale to 100%. The animation will\n        // execute as part of this statement because we forced a style recalculation before.\n        // Note: We use a 3d transform here in order to avoid an issue in Safari where\n        // the ripples aren't clipped when inside the shadow DOM (see #24028).\n        ripple.style.transform = 'scale3d(1, 1, 1)';\n        rippleRef.state = RippleState.FADING_IN;\n        if (!config.persistent) {\n            this._mostRecentTransientRipple = rippleRef;\n        }\n        let eventListeners = null;\n        // Do not register the `transition` event listener if fade-in and fade-out duration\n        // are set to zero. The events won't fire anyway and we can save resources here.\n        if (!animationForciblyDisabledThroughCss && (enterDuration || animationConfig.exitDuration)) {\n            this._ngZone.runOutsideAngular(() => {\n                const onTransitionEnd = () => {\n                    // Clear the fallback timer since the transition fired correctly.\n                    if (eventListeners) {\n                        eventListeners.fallbackTimer = null;\n                    }\n                    clearTimeout(fallbackTimer);\n                    this._finishRippleTransition(rippleRef);\n                };\n                const onTransitionCancel = () => this._destroyRipple(rippleRef);\n                // In some cases where there's a higher load on the browser, it can choose not to dispatch\n                // neither `transitionend` nor `transitioncancel` (see b/227356674). This timer serves as a\n                // fallback for such cases so that the ripple doesn't become stuck. We add a 100ms buffer\n                // because timers aren't precise. Note that another approach can be to transition the ripple\n                // to the `VISIBLE` state immediately above and to `FADING_IN` afterwards inside\n                // `transitionstart`. We go with the timer because it's one less event listener and\n                // it's less likely to break existing tests.\n                const fallbackTimer = setTimeout(onTransitionCancel, enterDuration + 100);\n                ripple.addEventListener('transitionend', onTransitionEnd);\n                // If the transition is cancelled (e.g. due to DOM removal), we destroy the ripple\n                // directly as otherwise we would keep it part of the ripple container forever.\n                // https://www.w3.org/TR/css-transitions-1/#:~:text=no%20longer%20in%20the%20document.\n                ripple.addEventListener('transitioncancel', onTransitionCancel);\n                eventListeners = { onTransitionEnd, onTransitionCancel, fallbackTimer };\n            });\n        }\n        // Add the ripple reference to the list of all active ripples.\n        this._activeRipples.set(rippleRef, eventListeners);\n        // In case there is no fade-in transition duration, we need to manually call the transition\n        // end listener because `transitionend` doesn't fire if there is no transition.\n        if (animationForciblyDisabledThroughCss || !enterDuration) {\n            this._finishRippleTransition(rippleRef);\n        }\n        return rippleRef;\n    }\n    /** Fades out a ripple reference. */\n    fadeOutRipple(rippleRef) {\n        // For ripples already fading out or hidden, this should be a noop.\n        if (rippleRef.state === RippleState.FADING_OUT || rippleRef.state === RippleState.HIDDEN) {\n            return;\n        }\n        const rippleEl = rippleRef.element;\n        const animationConfig = { ...defaultRippleAnimationConfig, ...rippleRef.config.animation };\n        // This starts the fade-out transition and will fire the transition end listener that\n        // removes the ripple element from the DOM.\n        rippleEl.style.transitionDuration = `${animationConfig.exitDuration}ms`;\n        rippleEl.style.opacity = '0';\n        rippleRef.state = RippleState.FADING_OUT;\n        // In case there is no fade-out transition duration, we need to manually call the\n        // transition end listener because `transitionend` doesn't fire if there is no transition.\n        if (rippleRef._animationForciblyDisabledThroughCss || !animationConfig.exitDuration) {\n            this._finishRippleTransition(rippleRef);\n        }\n    }\n    /** Fades out all currently active ripples. */\n    fadeOutAll() {\n        this._getActiveRipples().forEach(ripple => ripple.fadeOut());\n    }\n    /** Fades out all currently active non-persistent ripples. */\n    fadeOutAllNonPersistent() {\n        this._getActiveRipples().forEach(ripple => {\n            if (!ripple.config.persistent) {\n                ripple.fadeOut();\n            }\n        });\n    }\n    /** Sets up the trigger event listeners */\n    setupTriggerEvents(elementOrElementRef) {\n        const element = coerceElement(elementOrElementRef);\n        if (!this._platform.isBrowser || !element || element === this._triggerElement) {\n            return;\n        }\n        // Remove all previously registered event listeners from the trigger element.\n        this._removeTriggerEvents();\n        this._triggerElement = element;\n        // Use event delegation for the trigger events since they're\n        // set up during creation and are performance-sensitive.\n        pointerDownEvents.forEach(type => {\n            RippleRenderer._eventManager.addHandler(this._ngZone, type, element, this);\n        });\n    }\n    /**\n     * Handles all registered events.\n     * @docs-private\n     */\n    handleEvent(event) {\n        if (event.type === 'mousedown') {\n            this._onMousedown(event);\n        }\n        else if (event.type === 'touchstart') {\n            this._onTouchStart(event);\n        }\n        else {\n            this._onPointerUp();\n        }\n        // If pointer-up events haven't been registered yet, do so now.\n        // We do this on-demand in order to reduce the total number of event listeners\n        // registered by the ripples, which speeds up the rendering time for large UIs.\n        if (!this._pointerUpEventsRegistered) {\n            // The events for hiding the ripple are bound directly on the trigger, because:\n            // 1. Some of them occur frequently (e.g. `mouseleave`) and any advantage we get from\n            // delegation will be diminished by having to look through all the data structures often.\n            // 2. They aren't as performance-sensitive, because they're bound only after the user\n            // has interacted with an element.\n            this._ngZone.runOutsideAngular(() => {\n                pointerUpEvents.forEach(type => {\n                    this._triggerElement.addEventListener(type, this, passiveCapturingEventOptions);\n                });\n            });\n            this._pointerUpEventsRegistered = true;\n        }\n    }\n    /** Method that will be called if the fade-in or fade-in transition completed. */\n    _finishRippleTransition(rippleRef) {\n        if (rippleRef.state === RippleState.FADING_IN) {\n            this._startFadeOutTransition(rippleRef);\n        }\n        else if (rippleRef.state === RippleState.FADING_OUT) {\n            this._destroyRipple(rippleRef);\n        }\n    }\n    /**\n     * Starts the fade-out transition of the given ripple if it's not persistent and the pointer\n     * is not held down anymore.\n     */\n    _startFadeOutTransition(rippleRef) {\n        const isMostRecentTransientRipple = rippleRef === this._mostRecentTransientRipple;\n        const { persistent } = rippleRef.config;\n        rippleRef.state = RippleState.VISIBLE;\n        // When the timer runs out while the user has kept their pointer down, we want to\n        // keep only the persistent ripples and the latest transient ripple. We do this,\n        // because we don't want stacked transient ripples to appear after their enter\n        // animation has finished.\n        if (!persistent && (!isMostRecentTransientRipple || !this._isPointerDown)) {\n            rippleRef.fadeOut();\n        }\n    }\n    /** Destroys the given ripple by removing it from the DOM and updating its state. */\n    _destroyRipple(rippleRef) {\n        const eventListeners = this._activeRipples.get(rippleRef) ?? null;\n        this._activeRipples.delete(rippleRef);\n        // Clear out the cached bounding rect if we have no more ripples.\n        if (!this._activeRipples.size) {\n            this._containerRect = null;\n        }\n        // If the current ref is the most recent transient ripple, unset it\n        // avoid memory leaks.\n        if (rippleRef === this._mostRecentTransientRipple) {\n            this._mostRecentTransientRipple = null;\n        }\n        rippleRef.state = RippleState.HIDDEN;\n        if (eventListeners !== null) {\n            rippleRef.element.removeEventListener('transitionend', eventListeners.onTransitionEnd);\n            rippleRef.element.removeEventListener('transitioncancel', eventListeners.onTransitionCancel);\n            if (eventListeners.fallbackTimer !== null) {\n                clearTimeout(eventListeners.fallbackTimer);\n            }\n        }\n        rippleRef.element.remove();\n    }\n    /** Function being called whenever the trigger is being pressed using mouse. */\n    _onMousedown(event) {\n        // Screen readers will fire fake mouse events for space/enter. Skip launching a\n        // ripple in this case for consistency with the non-screen-reader experience.\n        const isFakeMousedown = isFakeMousedownFromScreenReader(event);\n        const isSyntheticEvent = this._lastTouchStartEvent &&\n            Date.now() < this._lastTouchStartEvent + ignoreMouseEventsTimeout;\n        if (!this._target.rippleDisabled && !isFakeMousedown && !isSyntheticEvent) {\n            this._isPointerDown = true;\n            this.fadeInRipple(event.clientX, event.clientY, this._target.rippleConfig);\n        }\n    }\n    /** Function being called whenever the trigger is being pressed using touch. */\n    _onTouchStart(event) {\n        if (!this._target.rippleDisabled && !isFakeTouchstartFromScreenReader(event)) {\n            // Some browsers fire mouse events after a `touchstart` event. Those synthetic mouse\n            // events will launch a second ripple if we don't ignore mouse events for a specific\n            // time after a touchstart event.\n            this._lastTouchStartEvent = Date.now();\n            this._isPointerDown = true;\n            // Use `changedTouches` so we skip any touches where the user put\n            // their finger down, but used another finger to tap the element again.\n            const touches = event.changedTouches;\n            // According to the typings the touches should always be defined, but in some cases\n            // the browser appears to not assign them in tests which leads to flakes.\n            if (touches) {\n                for (let i = 0; i < touches.length; i++) {\n                    this.fadeInRipple(touches[i].clientX, touches[i].clientY, this._target.rippleConfig);\n                }\n            }\n        }\n    }\n    /** Function being called whenever the trigger is being released. */\n    _onPointerUp() {\n        if (!this._isPointerDown) {\n            return;\n        }\n        this._isPointerDown = false;\n        // Fade-out all ripples that are visible and not persistent.\n        this._getActiveRipples().forEach(ripple => {\n            // By default, only ripples that are completely visible will fade out on pointer release.\n            // If the `terminateOnPointerUp` option is set, ripples that still fade in will also fade out.\n            const isVisible = ripple.state === RippleState.VISIBLE ||\n                (ripple.config.terminateOnPointerUp && ripple.state === RippleState.FADING_IN);\n            if (!ripple.config.persistent && isVisible) {\n                ripple.fadeOut();\n            }\n        });\n    }\n    _getActiveRipples() {\n        return Array.from(this._activeRipples.keys());\n    }\n    /** Removes previously registered event listeners from the trigger element. */\n    _removeTriggerEvents() {\n        const trigger = this._triggerElement;\n        if (trigger) {\n            pointerDownEvents.forEach(type => RippleRenderer._eventManager.removeHandler(type, trigger, this));\n            if (this._pointerUpEventsRegistered) {\n                pointerUpEvents.forEach(type => trigger.removeEventListener(type, this, passiveCapturingEventOptions));\n                this._pointerUpEventsRegistered = false;\n            }\n        }\n    }\n}\n/**\n * Returns the distance from the point (x, y) to the furthest corner of a rectangle.\n */\nfunction distanceToFurthestCorner(x, y, rect) {\n    const distX = Math.max(Math.abs(x - rect.left), Math.abs(x - rect.right));\n    const distY = Math.max(Math.abs(y - rect.top), Math.abs(y - rect.bottom));\n    return Math.sqrt(distX * distX + distY * distY);\n}\n\n/** Injection token that can be used to specify the global ripple options. */\nconst MAT_RIPPLE_GLOBAL_OPTIONS = new InjectionToken('mat-ripple-global-options');\nclass MatRipple {\n    _elementRef = inject(ElementRef);\n    _animationsDisabled = _animationsDisabled();\n    /** Custom color for all ripples. */\n    color;\n    /** Whether the ripples should be visible outside the component's bounds. */\n    unbounded;\n    /**\n     * Whether the ripple always originates from the center of the host element's bounds, rather\n     * than originating from the location of the click event.\n     */\n    centered;\n    /**\n     * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\n     * will be the distance from the center of the ripple to the furthest corner of the host element's\n     * bounding rectangle.\n     */\n    radius = 0;\n    /**\n     * Configuration for the ripple animation. Allows modifying the enter and exit animation\n     * duration of the ripples. The animation durations will be overwritten if the\n     * `NoopAnimationsModule` is being used.\n     */\n    animation;\n    /**\n     * Whether click events will not trigger the ripple. Ripples can be still launched manually\n     * by using the `launch()` method.\n     */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        if (value) {\n            this.fadeOutAllNonPersistent();\n        }\n        this._disabled = value;\n        this._setupTriggerEventsIfEnabled();\n    }\n    _disabled = false;\n    /**\n     * The element that triggers the ripple when click events are received.\n     * Defaults to the directive's host element.\n     */\n    get trigger() {\n        return this._trigger || this._elementRef.nativeElement;\n    }\n    set trigger(trigger) {\n        this._trigger = trigger;\n        this._setupTriggerEventsIfEnabled();\n    }\n    _trigger;\n    /** Renderer for the ripple DOM manipulations. */\n    _rippleRenderer;\n    /** Options that are set globally for all ripples. */\n    _globalOptions;\n    /** @docs-private Whether ripple directive is initialized and the input bindings are set. */\n    _isInitialized = false;\n    constructor() {\n        const ngZone = inject(NgZone);\n        const platform = inject(Platform);\n        const globalOptions = inject(MAT_RIPPLE_GLOBAL_OPTIONS, { optional: true });\n        const injector = inject(Injector);\n        // Note: cannot use `inject()` here, because this class\n        // gets instantiated manually in the ripple loader.\n        this._globalOptions = globalOptions || {};\n        this._rippleRenderer = new RippleRenderer(this, ngZone, this._elementRef, platform, injector);\n    }\n    ngOnInit() {\n        this._isInitialized = true;\n        this._setupTriggerEventsIfEnabled();\n    }\n    ngOnDestroy() {\n        this._rippleRenderer._removeTriggerEvents();\n    }\n    /** Fades out all currently showing ripple elements. */\n    fadeOutAll() {\n        this._rippleRenderer.fadeOutAll();\n    }\n    /** Fades out all currently showing non-persistent ripple elements. */\n    fadeOutAllNonPersistent() {\n        this._rippleRenderer.fadeOutAllNonPersistent();\n    }\n    /**\n     * Ripple configuration from the directive's input values.\n     * @docs-private Implemented as part of RippleTarget\n     */\n    get rippleConfig() {\n        return {\n            centered: this.centered,\n            radius: this.radius,\n            color: this.color,\n            animation: {\n                ...this._globalOptions.animation,\n                ...(this._animationsDisabled ? { enterDuration: 0, exitDuration: 0 } : {}),\n                ...this.animation,\n            },\n            terminateOnPointerUp: this._globalOptions.terminateOnPointerUp,\n        };\n    }\n    /**\n     * Whether ripples on pointer-down are disabled or not.\n     * @docs-private Implemented as part of RippleTarget\n     */\n    get rippleDisabled() {\n        return this.disabled || !!this._globalOptions.disabled;\n    }\n    /** Sets up the trigger event listeners if ripples are enabled. */\n    _setupTriggerEventsIfEnabled() {\n        if (!this.disabled && this._isInitialized) {\n            this._rippleRenderer.setupTriggerEvents(this.trigger);\n        }\n    }\n    /** Launches a manual ripple at the specified coordinated or just by the ripple config. */\n    launch(configOrX, y = 0, config) {\n        if (typeof configOrX === 'number') {\n            return this._rippleRenderer.fadeInRipple(configOrX, y, { ...this.rippleConfig, ...config });\n        }\n        else {\n            return this._rippleRenderer.fadeInRipple(0, 0, { ...this.rippleConfig, ...configOrX });\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatRipple, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatRipple, isStandalone: true, selector: \"[mat-ripple], [matRipple]\", inputs: { color: [\"matRippleColor\", \"color\"], unbounded: [\"matRippleUnbounded\", \"unbounded\"], centered: [\"matRippleCentered\", \"centered\"], radius: [\"matRippleRadius\", \"radius\"], animation: [\"matRippleAnimation\", \"animation\"], disabled: [\"matRippleDisabled\", \"disabled\"], trigger: [\"matRippleTrigger\", \"trigger\"] }, host: { properties: { \"class.mat-ripple-unbounded\": \"unbounded\" }, classAttribute: \"mat-ripple\" }, exportAs: [\"matRipple\"], ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatRipple, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-ripple], [matRipple]',\n                    exportAs: 'matRipple',\n                    host: {\n                        'class': 'mat-ripple',\n                        '[class.mat-ripple-unbounded]': 'unbounded',\n                    },\n                }]\n        }], ctorParameters: () => [], propDecorators: { color: [{\n                type: Input,\n                args: ['matRippleColor']\n            }], unbounded: [{\n                type: Input,\n                args: ['matRippleUnbounded']\n            }], centered: [{\n                type: Input,\n                args: ['matRippleCentered']\n            }], radius: [{\n                type: Input,\n                args: ['matRippleRadius']\n            }], animation: [{\n                type: Input,\n                args: ['matRippleAnimation']\n            }], disabled: [{\n                type: Input,\n                args: ['matRippleDisabled']\n            }], trigger: [{\n                type: Input,\n                args: ['matRippleTrigger']\n            }] } });\n\nexport { MatRipple as M, RippleRenderer as R, MAT_RIPPLE_GLOBAL_OPTIONS as a, RippleState as b, RippleRef as c, defaultRippleAnimationConfig as d };\n\n","import * as i0 from '@angular/core';\nimport { inject, DOCUMENT, NgZone, Injector, RendererFactory2, Injectable } from '@angular/core';\nimport { Platform, _getEventTarget } from '@angular/cdk/platform';\nimport { _ as _animationsDisabled } from './animation-ChQ1vjiF.mjs';\nimport { a as MAT_RIPPLE_GLOBAL_OPTIONS, R as RippleRenderer, d as defaultRippleAnimationConfig } from './ripple-BMyyyLz2.mjs';\n\n/** The options for the MatRippleLoader's event listeners. */\nconst eventListenerOptions = { capture: true };\n/**\n * The events that should trigger the initialization of the ripple.\n * Note that we use `mousedown`, rather than `click`, for mouse devices because\n * we can't rely on `mouseenter` in the shadow DOM and `click` happens too late.\n */\nconst rippleInteractionEvents = ['focus', 'mousedown', 'mouseenter', 'touchstart'];\n/** The attribute attached to a component whose ripple has not yet been initialized. */\nconst matRippleUninitialized = 'mat-ripple-loader-uninitialized';\n/** Additional classes that should be added to the ripple when it is rendered. */\nconst matRippleClassName = 'mat-ripple-loader-class-name';\n/** Whether the ripple should be centered. */\nconst matRippleCentered = 'mat-ripple-loader-centered';\n/** Whether the ripple should be disabled. */\nconst matRippleDisabled = 'mat-ripple-loader-disabled';\n/**\n * Handles attaching ripples on demand.\n *\n * This service allows us to avoid eagerly creating & attaching MatRipples.\n * It works by creating & attaching a ripple only when a component is first interacted with.\n *\n * @docs-private\n */\nclass MatRippleLoader {\n    _document = inject(DOCUMENT);\n    _animationsDisabled = _animationsDisabled();\n    _globalRippleOptions = inject(MAT_RIPPLE_GLOBAL_OPTIONS, { optional: true });\n    _platform = inject(Platform);\n    _ngZone = inject(NgZone);\n    _injector = inject(Injector);\n    _eventCleanups;\n    _hosts = new Map();\n    constructor() {\n        const renderer = inject(RendererFactory2).createRenderer(null, null);\n        this._eventCleanups = this._ngZone.runOutsideAngular(() => rippleInteractionEvents.map(name => renderer.listen(this._document, name, this._onInteraction, eventListenerOptions)));\n    }\n    ngOnDestroy() {\n        const hosts = this._hosts.keys();\n        for (const host of hosts) {\n            this.destroyRipple(host);\n        }\n        this._eventCleanups.forEach(cleanup => cleanup());\n    }\n    /**\n     * Configures the ripple that will be rendered by the ripple loader.\n     *\n     * Stores the given information about how the ripple should be configured on the host\n     * element so that it can later be retrived & used when the ripple is actually created.\n     */\n    configureRipple(host, config) {\n        // Indicates that the ripple has not yet been rendered for this component.\n        host.setAttribute(matRippleUninitialized, this._globalRippleOptions?.namespace ?? '');\n        // Store the additional class name(s) that should be added to the ripple element.\n        if (config.className || !host.hasAttribute(matRippleClassName)) {\n            host.setAttribute(matRippleClassName, config.className || '');\n        }\n        // Store whether the ripple should be centered.\n        if (config.centered) {\n            host.setAttribute(matRippleCentered, '');\n        }\n        if (config.disabled) {\n            host.setAttribute(matRippleDisabled, '');\n        }\n    }\n    /** Sets the disabled state on the ripple instance corresponding to the given host element. */\n    setDisabled(host, disabled) {\n        const ripple = this._hosts.get(host);\n        // If the ripple has already been instantiated, just disable it.\n        if (ripple) {\n            ripple.target.rippleDisabled = disabled;\n            if (!disabled && !ripple.hasSetUpEvents) {\n                ripple.hasSetUpEvents = true;\n                ripple.renderer.setupTriggerEvents(host);\n            }\n        }\n        else if (disabled) {\n            // Otherwise, set an attribute so we know what the\n            // disabled state should be when the ripple is initialized.\n            host.setAttribute(matRippleDisabled, '');\n        }\n        else {\n            host.removeAttribute(matRippleDisabled);\n        }\n    }\n    /**\n     * Handles creating and attaching component internals\n     * when a component is initially interacted with.\n     */\n    _onInteraction = (event) => {\n        const eventTarget = _getEventTarget(event);\n        if (eventTarget instanceof HTMLElement) {\n            // TODO(wagnermaciel): Consider batching these events to improve runtime performance.\n            const element = eventTarget.closest(`[${matRippleUninitialized}=\"${this._globalRippleOptions?.namespace ?? ''}\"]`);\n            if (element) {\n                this._createRipple(element);\n            }\n        }\n    };\n    /** Creates a MatRipple and appends it to the given element. */\n    _createRipple(host) {\n        if (!this._document || this._hosts.has(host)) {\n            return;\n        }\n        // Create the ripple element.\n        host.querySelector('.mat-ripple')?.remove();\n        const rippleEl = this._document.createElement('span');\n        rippleEl.classList.add('mat-ripple', host.getAttribute(matRippleClassName));\n        host.append(rippleEl);\n        const globalOptions = this._globalRippleOptions;\n        const enterDuration = this._animationsDisabled\n            ? 0\n            : (globalOptions?.animation?.enterDuration ?? defaultRippleAnimationConfig.enterDuration);\n        const exitDuration = this._animationsDisabled\n            ? 0\n            : (globalOptions?.animation?.exitDuration ?? defaultRippleAnimationConfig.exitDuration);\n        const target = {\n            rippleDisabled: this._animationsDisabled || globalOptions?.disabled || host.hasAttribute(matRippleDisabled),\n            rippleConfig: {\n                centered: host.hasAttribute(matRippleCentered),\n                terminateOnPointerUp: globalOptions?.terminateOnPointerUp,\n                animation: {\n                    enterDuration,\n                    exitDuration,\n                },\n            },\n        };\n        const renderer = new RippleRenderer(target, this._ngZone, rippleEl, this._platform, this._injector);\n        const hasSetUpEvents = !target.rippleDisabled;\n        if (hasSetUpEvents) {\n            renderer.setupTriggerEvents(host);\n        }\n        this._hosts.set(host, {\n            target,\n            renderer,\n            hasSetUpEvents,\n        });\n        host.removeAttribute(matRippleUninitialized);\n    }\n    destroyRipple(host) {\n        const ripple = this._hosts.get(host);\n        if (ripple) {\n            ripple.renderer._removeTriggerEvents();\n            this._hosts.delete(host);\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatRippleLoader, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatRippleLoader, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatRippleLoader, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [] });\n\nexport { MatRippleLoader as M };\n\n","import * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy } from '@angular/core';\n\n/**\n * Component used to load structural styles for focus indicators.\n * @docs-private\n */\nclass _StructuralStylesLoader {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: _StructuralStylesLoader, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"20.0.0\", type: _StructuralStylesLoader, isStandalone: true, selector: \"structural-styles\", ngImport: i0, template: '', isInline: true, styles: [\".mat-focus-indicator{position:relative}.mat-focus-indicator::before{top:0;left:0;right:0;bottom:0;position:absolute;box-sizing:border-box;pointer-events:none;display:var(--mat-focus-indicator-display, none);border-width:var(--mat-focus-indicator-border-width, 3px);border-style:var(--mat-focus-indicator-border-style, solid);border-color:var(--mat-focus-indicator-border-color, transparent);border-radius:var(--mat-focus-indicator-border-radius, 4px)}.mat-focus-indicator:focus::before{content:\\\"\\\"}@media(forced-colors: active){html{--mat-focus-indicator-display: block}}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: _StructuralStylesLoader, decorators: [{\n            type: Component,\n            args: [{ selector: 'structural-styles', encapsulation: ViewEncapsulation.None, template: '', changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".mat-focus-indicator{position:relative}.mat-focus-indicator::before{top:0;left:0;right:0;bottom:0;position:absolute;box-sizing:border-box;pointer-events:none;display:var(--mat-focus-indicator-display, none);border-width:var(--mat-focus-indicator-border-width, 3px);border-style:var(--mat-focus-indicator-border-style, solid);border-color:var(--mat-focus-indicator-border-color, transparent);border-radius:var(--mat-focus-indicator-border-radius, 4px)}.mat-focus-indicator:focus::before{content:\\\"\\\"}@media(forced-colors: active){html{--mat-focus-indicator-display: block}}\\n\"] }]\n        }] });\n\nexport { _StructuralStylesLoader as _ };\n\n","import * as i0 from '@angular/core';\nimport { InjectionToken, inject, ElementRef, NgZone, Renderer2, booleanAttribute, Directive, Input, numberAttribute, Component, ViewEncapsulation, ChangeDetectionStrategy } from '@angular/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { _CdkPrivateStyleLoader } from '@angular/cdk/private';\nimport { M as MatRippleLoader } from './ripple-loader-wNDzC_j6.mjs';\nimport { _ as _StructuralStylesLoader } from './structural-styles-CObeNzjn.mjs';\nimport { _ as _animationsDisabled } from './animation-ChQ1vjiF.mjs';\n\n/** Injection token that can be used to provide the default options the button component. */\nconst MAT_BUTTON_CONFIG = new InjectionToken('MAT_BUTTON_CONFIG');\nfunction transformTabIndex(value) {\n    return value == null ? undefined : numberAttribute(value);\n}\n/** Base class for all buttons. */\nclass MatButtonBase {\n    _elementRef = inject(ElementRef);\n    _ngZone = inject(NgZone);\n    _animationsDisabled = _animationsDisabled();\n    _config = inject(MAT_BUTTON_CONFIG, { optional: true });\n    _focusMonitor = inject(FocusMonitor);\n    _cleanupClick;\n    _renderer = inject(Renderer2);\n    /**\n     * Handles the lazy creation of the MatButton ripple.\n     * Used to improve initial load time of large applications.\n     */\n    _rippleLoader = inject(MatRippleLoader);\n    /** Whether the button is set on an anchor node. */\n    _isAnchor;\n    /** Whether this button is a FAB. Used to apply the correct class on the ripple. */\n    _isFab = false;\n    /**\n     * Theme color of the button. This API is supported in M2 themes only, it has\n     * no effect in M3 themes. For color customization in M3, see https://material.angular.dev/components/button/styling.\n     *\n     * For information on applying color variants in M3, see\n     * https://material.angular.dev/guide/material-2-theming#optional-add-backwards-compatibility-styles-for-color-variants\n     */\n    color;\n    /** Whether the ripple effect is disabled or not. */\n    get disableRipple() {\n        return this._disableRipple;\n    }\n    set disableRipple(value) {\n        this._disableRipple = value;\n        this._updateRippleDisabled();\n    }\n    _disableRipple = false;\n    /** Whether the button is disabled. */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = value;\n        this._updateRippleDisabled();\n    }\n    _disabled = false;\n    /** `aria-disabled` value of the button. */\n    ariaDisabled;\n    /**\n     * Natively disabled buttons prevent focus and any pointer events from reaching the button.\n     * In some scenarios this might not be desirable, because it can prevent users from finding out\n     * why the button is disabled (e.g. via tooltip). This is also useful for buttons that may\n     * become disabled when activated, which would cause focus to be transferred to the document\n     * body instead of remaining on the button.\n     *\n     * Enabling this input will change the button so that it is styled to be disabled and will be\n     * marked as `aria-disabled`, but it will allow the button to receive events and focus.\n     *\n     * Note that by enabling this, you need to set the `tabindex` yourself if the button isn't\n     * meant to be tabbable and you have to prevent the button action (e.g. form submissions).\n     */\n    disabledInteractive;\n    /** Tab index for the button. */\n    tabIndex;\n    /**\n     * Backwards-compatibility input that handles pre-existing `[tabindex]` bindings.\n     * @docs-private\n     */\n    set _tabindex(value) {\n        this.tabIndex = value;\n    }\n    constructor() {\n        inject(_CdkPrivateStyleLoader).load(_StructuralStylesLoader);\n        const element = this._elementRef.nativeElement;\n        this._isAnchor = element.tagName === 'A';\n        this.disabledInteractive = this._config?.disabledInteractive ?? false;\n        this.color = this._config?.color ?? null;\n        this._rippleLoader?.configureRipple(element, { className: 'mat-mdc-button-ripple' });\n    }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this._elementRef, true);\n        // Some internal tests depend on the timing of this,\n        // otherwise we could bind it in the constructor.\n        if (this._isAnchor) {\n            this._setupAsAnchor();\n        }\n    }\n    ngOnDestroy() {\n        this._cleanupClick?.();\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        this._rippleLoader?.destroyRipple(this._elementRef.nativeElement);\n    }\n    /** Focuses the button. */\n    focus(origin = 'program', options) {\n        if (origin) {\n            this._focusMonitor.focusVia(this._elementRef.nativeElement, origin, options);\n        }\n        else {\n            this._elementRef.nativeElement.focus(options);\n        }\n    }\n    _getAriaDisabled() {\n        if (this.ariaDisabled != null) {\n            return this.ariaDisabled;\n        }\n        if (this._isAnchor) {\n            return this.disabled || null;\n        }\n        return this.disabled && this.disabledInteractive ? true : null;\n    }\n    _getDisabledAttribute() {\n        return this.disabledInteractive || !this.disabled ? null : true;\n    }\n    _updateRippleDisabled() {\n        this._rippleLoader?.setDisabled(this._elementRef.nativeElement, this.disableRipple || this.disabled);\n    }\n    _getTabIndex() {\n        if (this._isAnchor) {\n            return this.disabled && !this.disabledInteractive ? -1 : this.tabIndex;\n        }\n        return this.tabIndex;\n    }\n    _setupAsAnchor() {\n        this._cleanupClick = this._ngZone.runOutsideAngular(() => this._renderer.listen(this._elementRef.nativeElement, 'click', (event) => {\n            if (this.disabled) {\n                event.preventDefault();\n                event.stopImmediatePropagation();\n            }\n        }));\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatButtonBase, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"20.0.0\", type: MatButtonBase, isStandalone: true, inputs: { color: \"color\", disableRipple: [\"disableRipple\", \"disableRipple\", booleanAttribute], disabled: [\"disabled\", \"disabled\", booleanAttribute], ariaDisabled: [\"aria-disabled\", \"ariaDisabled\", booleanAttribute], disabledInteractive: [\"disabledInteractive\", \"disabledInteractive\", booleanAttribute], tabIndex: [\"tabIndex\", \"tabIndex\", transformTabIndex], _tabindex: [\"tabindex\", \"_tabindex\", transformTabIndex] }, host: { properties: { \"class\": \"color ? \\\"mat-\\\" + color : \\\"\\\"\", \"attr.disabled\": \"_getDisabledAttribute()\", \"attr.aria-disabled\": \"_getAriaDisabled()\", \"attr.tabindex\": \"_getTabIndex()\", \"class.mat-mdc-button-disabled\": \"disabled\", \"class.mat-mdc-button-disabled-interactive\": \"disabledInteractive\", \"class.mat-unthemed\": \"!color\", \"class._mat-animation-noopable\": \"_animationsDisabled\" }, classAttribute: \"mat-mdc-button-base\" }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatButtonBase, decorators: [{\n            type: Directive,\n            args: [{\n                    host: {\n                        // Add a class that applies to all buttons. This makes it easier to target if somebody\n                        // wants to target all Material buttons.\n                        'class': 'mat-mdc-button-base',\n                        '[class]': 'color ? \"mat-\" + color : \"\"',\n                        '[attr.disabled]': '_getDisabledAttribute()',\n                        '[attr.aria-disabled]': '_getAriaDisabled()',\n                        '[attr.tabindex]': '_getTabIndex()',\n                        '[class.mat-mdc-button-disabled]': 'disabled',\n                        '[class.mat-mdc-button-disabled-interactive]': 'disabledInteractive',\n                        '[class.mat-unthemed]': '!color',\n                        '[class._mat-animation-noopable]': '_animationsDisabled',\n                    },\n                }]\n        }], ctorParameters: () => [], propDecorators: { color: [{\n                type: Input\n            }], disableRipple: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], disabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], ariaDisabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute, alias: 'aria-disabled' }]\n            }], disabledInteractive: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], tabIndex: [{\n                type: Input,\n                args: [{ transform: transformTabIndex }]\n            }], _tabindex: [{\n                type: Input,\n                args: [{ alias: 'tabindex', transform: transformTabIndex }]\n            }] } });\n\n/**\n * Material Design icon button component. This type of button displays a single interactive icon for\n * users to perform an action.\n * See https://material.io/develop/web/components/buttons/icon-buttons/\n */\nclass MatIconButton extends MatButtonBase {\n    constructor() {\n        super();\n        this._rippleLoader.configureRipple(this._elementRef.nativeElement, { centered: true });\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatIconButton, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatIconButton, isStandalone: true, selector: \"button[mat-icon-button], a[mat-icon-button], button[matIconButton], a[matIconButton]\", host: { classAttribute: \"mdc-icon-button mat-mdc-icon-button\" }, exportAs: [\"matButton\", \"matAnchor\"], usesInheritance: true, ngImport: i0, template: \"<span class=\\\"mat-mdc-button-persistent-ripple mdc-icon-button__ripple\\\"></span>\\n\\n<ng-content></ng-content>\\n\\n<!--\\n  The indicator can't be directly on the button, because MDC uses ::before for high contrast\\n  indication and it can't be on the ripple, because it has a border radius and overflow: hidden.\\n-->\\n<span class=\\\"mat-focus-indicator\\\"></span>\\n\\n<span class=\\\"mat-mdc-button-touch-target\\\"></span>\\n\", styles: [\".mat-mdc-icon-button{-webkit-user-select:none;user-select:none;display:inline-block;position:relative;box-sizing:border-box;border:none;outline:none;background-color:rgba(0,0,0,0);fill:currentColor;text-decoration:none;cursor:pointer;z-index:0;overflow:visible;border-radius:var(--mat-icon-button-container-shape, var(--mat-sys-corner-full, 50%));flex-shrink:0;text-align:center;width:var(--mat-icon-button-state-layer-size, 40px);height:var(--mat-icon-button-state-layer-size, 40px);padding:calc(calc(var(--mat-icon-button-state-layer-size, 40px) - var(--mat-icon-button-icon-size, 24px)) / 2);font-size:var(--mat-icon-button-icon-size, 24px);color:var(--mat-icon-button-icon-color, var(--mat-sys-on-surface-variant));-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-icon-button .mat-mdc-button-ripple,.mat-mdc-icon-button .mat-mdc-button-persistent-ripple,.mat-mdc-icon-button .mat-mdc-button-persistent-ripple::before{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-icon-button .mat-mdc-button-ripple{overflow:hidden}.mat-mdc-icon-button .mat-mdc-button-persistent-ripple::before{content:\\\"\\\";opacity:0}.mat-mdc-icon-button .mdc-button__label,.mat-mdc-icon-button .mat-icon{z-index:1;position:relative}.mat-mdc-icon-button .mat-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:inherit}.mat-mdc-icon-button:focus>.mat-focus-indicator::before{content:\\\"\\\";border-radius:inherit}.mat-mdc-icon-button .mat-ripple-element{background-color:var(--mat-icon-button-ripple-color, color-mix(in srgb, var(--mat-sys-on-surface-variant) calc(var(--mat-sys-pressed-state-layer-opacity) * 100%), transparent))}.mat-mdc-icon-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-icon-button-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-icon-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-icon-button-disabled-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-icon-button:hover>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-icon-button-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-icon-button.cdk-program-focused>.mat-mdc-button-persistent-ripple::before,.mat-mdc-icon-button.cdk-keyboard-focused>.mat-mdc-button-persistent-ripple::before,.mat-mdc-icon-button.mat-mdc-button-disabled-interactive:focus>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-icon-button-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-icon-button:active>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-icon-button-pressed-state-layer-opacity, var(--mat-sys-pressed-state-layer-opacity))}.mat-mdc-icon-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;display:var(--mat-icon-button-touch-target-display, block);left:50%;width:48px;transform:translate(-50%, -50%)}.mat-mdc-icon-button._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mdc-icon-button[disabled],.mat-mdc-icon-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mat-icon-button-disabled-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-mdc-icon-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-icon-button img,.mat-mdc-icon-button svg{width:var(--mat-icon-button-icon-size, 24px);height:var(--mat-icon-button-icon-size, 24px);vertical-align:baseline}.mat-mdc-icon-button .mat-mdc-button-persistent-ripple{border-radius:var(--mat-icon-button-container-shape, var(--mat-sys-corner-full, 50%))}.mat-mdc-icon-button[hidden]{display:none}.mat-mdc-icon-button.mat-unthemed:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-icon-button.mat-primary:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-icon-button.mat-accent:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-icon-button.mat-warn:not(.mdc-ripple-upgraded):focus::before{background:rgba(0,0,0,0);opacity:1}\\n\", \"@media(forced-colors: active){.mat-mdc-button:not(.mdc-button--outlined),.mat-mdc-unelevated-button:not(.mdc-button--outlined),.mat-mdc-raised-button:not(.mdc-button--outlined),.mat-mdc-outlined-button:not(.mdc-button--outlined),.mat-mdc-button-base.mat-tonal-button,.mat-mdc-icon-button.mat-mdc-icon-button,.mat-mdc-outlined-button .mdc-button__ripple{outline:solid 1px}}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatIconButton, decorators: [{\n            type: Component,\n            args: [{ selector: `button[mat-icon-button], a[mat-icon-button], button[matIconButton], a[matIconButton]`, host: {\n                        'class': 'mdc-icon-button mat-mdc-icon-button',\n                    }, exportAs: 'matButton, matAnchor', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<span class=\\\"mat-mdc-button-persistent-ripple mdc-icon-button__ripple\\\"></span>\\n\\n<ng-content></ng-content>\\n\\n<!--\\n  The indicator can't be directly on the button, because MDC uses ::before for high contrast\\n  indication and it can't be on the ripple, because it has a border radius and overflow: hidden.\\n-->\\n<span class=\\\"mat-focus-indicator\\\"></span>\\n\\n<span class=\\\"mat-mdc-button-touch-target\\\"></span>\\n\", styles: [\".mat-mdc-icon-button{-webkit-user-select:none;user-select:none;display:inline-block;position:relative;box-sizing:border-box;border:none;outline:none;background-color:rgba(0,0,0,0);fill:currentColor;text-decoration:none;cursor:pointer;z-index:0;overflow:visible;border-radius:var(--mat-icon-button-container-shape, var(--mat-sys-corner-full, 50%));flex-shrink:0;text-align:center;width:var(--mat-icon-button-state-layer-size, 40px);height:var(--mat-icon-button-state-layer-size, 40px);padding:calc(calc(var(--mat-icon-button-state-layer-size, 40px) - var(--mat-icon-button-icon-size, 24px)) / 2);font-size:var(--mat-icon-button-icon-size, 24px);color:var(--mat-icon-button-icon-color, var(--mat-sys-on-surface-variant));-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-icon-button .mat-mdc-button-ripple,.mat-mdc-icon-button .mat-mdc-button-persistent-ripple,.mat-mdc-icon-button .mat-mdc-button-persistent-ripple::before{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-icon-button .mat-mdc-button-ripple{overflow:hidden}.mat-mdc-icon-button .mat-mdc-button-persistent-ripple::before{content:\\\"\\\";opacity:0}.mat-mdc-icon-button .mdc-button__label,.mat-mdc-icon-button .mat-icon{z-index:1;position:relative}.mat-mdc-icon-button .mat-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:inherit}.mat-mdc-icon-button:focus>.mat-focus-indicator::before{content:\\\"\\\";border-radius:inherit}.mat-mdc-icon-button .mat-ripple-element{background-color:var(--mat-icon-button-ripple-color, color-mix(in srgb, var(--mat-sys-on-surface-variant) calc(var(--mat-sys-pressed-state-layer-opacity) * 100%), transparent))}.mat-mdc-icon-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-icon-button-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-icon-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-icon-button-disabled-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-icon-button:hover>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-icon-button-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-icon-button.cdk-program-focused>.mat-mdc-button-persistent-ripple::before,.mat-mdc-icon-button.cdk-keyboard-focused>.mat-mdc-button-persistent-ripple::before,.mat-mdc-icon-button.mat-mdc-button-disabled-interactive:focus>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-icon-button-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-icon-button:active>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-icon-button-pressed-state-layer-opacity, var(--mat-sys-pressed-state-layer-opacity))}.mat-mdc-icon-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;display:var(--mat-icon-button-touch-target-display, block);left:50%;width:48px;transform:translate(-50%, -50%)}.mat-mdc-icon-button._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mdc-icon-button[disabled],.mat-mdc-icon-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mat-icon-button-disabled-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-mdc-icon-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-icon-button img,.mat-mdc-icon-button svg{width:var(--mat-icon-button-icon-size, 24px);height:var(--mat-icon-button-icon-size, 24px);vertical-align:baseline}.mat-mdc-icon-button .mat-mdc-button-persistent-ripple{border-radius:var(--mat-icon-button-container-shape, var(--mat-sys-corner-full, 50%))}.mat-mdc-icon-button[hidden]{display:none}.mat-mdc-icon-button.mat-unthemed:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-icon-button.mat-primary:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-icon-button.mat-accent:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-icon-button.mat-warn:not(.mdc-ripple-upgraded):focus::before{background:rgba(0,0,0,0);opacity:1}\\n\", \"@media(forced-colors: active){.mat-mdc-button:not(.mdc-button--outlined),.mat-mdc-unelevated-button:not(.mdc-button--outlined),.mat-mdc-raised-button:not(.mdc-button--outlined),.mat-mdc-outlined-button:not(.mdc-button--outlined),.mat-mdc-button-base.mat-tonal-button,.mat-mdc-icon-button.mat-mdc-icon-button,.mat-mdc-outlined-button .mdc-button__ripple{outline:solid 1px}}\\n\"] }]\n        }], ctorParameters: () => [] });\n// tslint:disable:variable-name\n/**\n * Material Design icon button component for anchor elements. This button displays a single\n * interaction icon that allows users to navigate across different routes or pages.\n * See https://material.io/develop/web/components/buttons/icon-buttons/\n */\nconst MatIconAnchor = MatIconButton;\n\nexport { MatIconButton as M, MatButtonBase as a, MAT_BUTTON_CONFIG as b, MatIconAnchor as c };\n\n","import * as i0 from '@angular/core';\nimport { InjectionToken, inject, DOCUMENT, signal, EventEmitter, Injectable } from '@angular/core';\n\n/**\n * Injection token used to inject the document into Directionality.\n * This is used so that the value can be faked in tests.\n *\n * We can't use the real document in tests because changing the real `dir` causes geometry-based\n * tests in Safari to fail.\n *\n * We also can't re-provide the DOCUMENT token from platform-browser because the unit tests\n * themselves use things like `querySelector` in test code.\n *\n * This token is defined in a separate file from Directionality as a workaround for\n * https://github.com/angular/angular/issues/22559\n *\n * @docs-private\n */\nconst DIR_DOCUMENT = new InjectionToken('cdk-dir-doc', {\n    providedIn: 'root',\n    factory: DIR_DOCUMENT_FACTORY,\n});\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nfunction DIR_DOCUMENT_FACTORY() {\n    return inject(DOCUMENT);\n}\n\n/** Regex that matches locales with an RTL script. Taken from `goog.i18n.bidi.isRtlLanguage`. */\nconst RTL_LOCALE_PATTERN = /^(ar|ckb|dv|he|iw|fa|nqo|ps|sd|ug|ur|yi|.*[-_](Adlm|Arab|Hebr|Nkoo|Rohg|Thaa))(?!.*[-_](Latn|Cyrl)($|-|_))($|-|_)/i;\n/** Resolves a string value to a specific direction. */\nfunction _resolveDirectionality(rawValue) {\n    const value = rawValue?.toLowerCase() || '';\n    if (value === 'auto' && typeof navigator !== 'undefined' && navigator?.language) {\n        return RTL_LOCALE_PATTERN.test(navigator.language) ? 'rtl' : 'ltr';\n    }\n    return value === 'rtl' ? 'rtl' : 'ltr';\n}\n/**\n * The directionality (LTR / RTL) context for the application (or a subtree of it).\n * Exposes the current direction and a stream of direction changes.\n */\nclass Directionality {\n    /** The current 'ltr' or 'rtl' value. */\n    get value() {\n        return this.valueSignal();\n    }\n    /**\n     * The current 'ltr' or 'rtl' value.\n     */\n    valueSignal = signal('ltr');\n    /** Stream that emits whenever the 'ltr' / 'rtl' state changes. */\n    change = new EventEmitter();\n    constructor() {\n        const _document = inject(DIR_DOCUMENT, { optional: true });\n        if (_document) {\n            const bodyDir = _document.body ? _document.body.dir : null;\n            const htmlDir = _document.documentElement ? _document.documentElement.dir : null;\n            this.valueSignal.set(_resolveDirectionality(bodyDir || htmlDir || 'ltr'));\n        }\n    }\n    ngOnDestroy() {\n        this.change.complete();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: Directionality, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: Directionality, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: Directionality, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [] });\n\nexport { Directionality as D, _resolveDirectionality as _, DIR_DOCUMENT as a };\n\n","import { _ as _resolveDirectionality, D as Directionality } from './directionality-CChdj3az.mjs';\nexport { a as DIR_DOCUMENT } from './directionality-CChdj3az.mjs';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, signal, Directive, Output, Input, NgModule } from '@angular/core';\n\n/**\n * Directive to listen for changes of direction of part of the DOM.\n *\n * Provides itself as Directionality such that descendant directives only need to ever inject\n * Directionality to get the closest direction.\n */\nclass Dir {\n    /** Whether the `value` has been set to its initial value. */\n    _isInitialized = false;\n    /** Direction as passed in by the consumer. */\n    _rawDir;\n    /** Event emitted when the direction changes. */\n    change = new EventEmitter();\n    /** @docs-private */\n    get dir() {\n        return this.valueSignal();\n    }\n    set dir(value) {\n        const previousValue = this.valueSignal();\n        // Note: `_resolveDirectionality` resolves the language based on the browser's language,\n        // whereas the browser does it based on the content of the element. Since doing so based\n        // on the content can be expensive, for now we're doing the simpler matching.\n        this.valueSignal.set(_resolveDirectionality(value));\n        this._rawDir = value;\n        if (previousValue !== this.valueSignal() && this._isInitialized) {\n            this.change.emit(this.valueSignal());\n        }\n    }\n    /** Current layout direction of the element. */\n    get value() {\n        return this.dir;\n    }\n    valueSignal = signal('ltr');\n    /** Initialize once default value has been set. */\n    ngAfterContentInit() {\n        this._isInitialized = true;\n    }\n    ngOnDestroy() {\n        this.change.complete();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: Dir, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: Dir, isStandalone: true, selector: \"[dir]\", inputs: { dir: \"dir\" }, outputs: { change: \"dirChange\" }, host: { properties: { \"attr.dir\": \"_rawDir\" } }, providers: [{ provide: Directionality, useExisting: Dir }], exportAs: [\"dir\"], ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: Dir, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[dir]',\n                    providers: [{ provide: Directionality, useExisting: Dir }],\n                    host: { '[attr.dir]': '_rawDir' },\n                    exportAs: 'dir',\n                }]\n        }], propDecorators: { change: [{\n                type: Output,\n                args: ['dirChange']\n            }], dir: [{\n                type: Input\n            }] } });\n\nclass BidiModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: BidiModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.0\", ngImport: i0, type: BidiModule, imports: [Dir], exports: [Dir] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: BidiModule });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: BidiModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [Dir],\n                    exports: [Dir],\n                }]\n        }] });\n\nexport { BidiModule, Dir, Directionality };\n\n","import { HighContrastModeDetector } from '@angular/cdk/a11y';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, inject, NgModule } from '@angular/core';\n\n/**\n * Injection token that configures whether the Material sanity checks are enabled.\n * @deprecated No longer used and will be removed.\n * @breaking-change 21.0.0\n */\nconst MATERIAL_SANITY_CHECKS = new InjectionToken('mat-sanity-checks', {\n    providedIn: 'root',\n    factory: () => true,\n});\n/**\n * Module that captures anything that should be loaded and/or run for *all* Angular Material\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., MatTabsModule).\n * @deprecated No longer used and will be removed.\n * @breaking-change 21.0.0\n */\nclass MatCommonModule {\n    constructor() {\n        // While A11yModule also does this, we repeat it here to avoid importing A11yModule\n        // in MatCommonModule.\n        inject(HighContrastModeDetector)._applyBodyHighContrastModeCssClasses();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatCommonModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.0\", ngImport: i0, type: MatCommonModule, imports: [BidiModule], exports: [BidiModule] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatCommonModule, imports: [BidiModule, BidiModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatCommonModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [BidiModule],\n                    exports: [BidiModule],\n                }]\n        }], ctorParameters: () => [] });\n\nexport { MatCommonModule as M, MATERIAL_SANITY_CHECKS as a };\n\n","import * as i0 from '@angular/core';\nimport { NgModule } from '@angular/core';\nimport { M as MatCommonModule } from './common-module-cKSwHniA.mjs';\nimport { M as MatRipple } from './ripple-BMyyyLz2.mjs';\n\nclass MatRippleModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatRippleModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.0\", ngImport: i0, type: MatRippleModule, imports: [MatCommonModule, MatRipple], exports: [MatRipple, MatCommonModule] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatRippleModule, imports: [MatCommonModule, MatCommonModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatRippleModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule, MatRipple],\n                    exports: [MatRipple, MatCommonModule],\n                }]\n        }] });\n\nexport { MatRippleModule as M };\n\n","import { a as MatButtonBase, M as MatIconButton } from './icon-button-Qqf7bl_c.mjs';\nexport { b as MAT_BUTTON_CONFIG, c as MatIconAnchor } from './icon-button-Qqf7bl_c.mjs';\nimport * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, InjectionToken, inject, booleanAttribute, NgModule } from '@angular/core';\nimport { M as MatRippleModule } from './index-BRImSAOu.mjs';\nimport { M as MatCommonModule } from './common-module-cKSwHniA.mjs';\nimport '@angular/cdk/a11y';\nimport '@angular/cdk/private';\nimport './ripple-loader-wNDzC_j6.mjs';\nimport '@angular/cdk/platform';\nimport './animation-ChQ1vjiF.mjs';\nimport '@angular/cdk/layout';\nimport './ripple-BMyyyLz2.mjs';\nimport '@angular/cdk/coercion';\nimport './structural-styles-CObeNzjn.mjs';\nimport '@angular/cdk/bidi';\n\n/**\n * Classes that need to be set for each appearance of the button.\n * Note that we use a `Map` here to avoid issues with property renaming.\n */\nconst APPEARANCE_CLASSES = new Map([\n    ['text', ['mat-mdc-button']],\n    ['filled', ['mdc-button--unelevated', 'mat-mdc-unelevated-button']],\n    ['elevated', ['mdc-button--raised', 'mat-mdc-raised-button']],\n    ['outlined', ['mdc-button--outlined', 'mat-mdc-outlined-button']],\n    ['tonal', ['mat-tonal-button']],\n]);\n/**\n * Material Design button component. Users interact with a button to perform an action.\n * See https://m3.material.io/components/buttons/overview\n */\nclass MatButton extends MatButtonBase {\n    /** Appearance of the button. */\n    get appearance() {\n        return this._appearance;\n    }\n    set appearance(value) {\n        // Allow empty string so users can do `<button matButton></button>`\n        // without having to write out `=\"text\"` every time.\n        this.setAppearance(value || this._config?.defaultAppearance || 'text');\n    }\n    _appearance = null;\n    constructor() {\n        super();\n        const inferredAppearance = _inferAppearance(this._elementRef.nativeElement);\n        // Only set the appearance if we managed to infer it from the static attributes, rather than\n        // doing something like `setAppearance(inferredAppearance || 'text')`, because doing so can\n        // cause the fallback appearance's classes to be set and then immediately replaced when\n        // the input value is assigned.\n        if (inferredAppearance) {\n            this.setAppearance(inferredAppearance);\n        }\n    }\n    /** Programmatically sets the appearance of the button. */\n    setAppearance(appearance) {\n        if (appearance === this._appearance) {\n            return;\n        }\n        const classList = this._elementRef.nativeElement.classList;\n        const previousClasses = this._appearance ? APPEARANCE_CLASSES.get(this._appearance) : null;\n        const newClasses = APPEARANCE_CLASSES.get(appearance);\n        if ((typeof ngDevMode === 'undefined' || ngDevMode) && !newClasses) {\n            throw new Error(`Unsupported MatButton appearance \"${appearance}\"`);\n        }\n        if (previousClasses) {\n            classList.remove(...previousClasses);\n        }\n        classList.add(...newClasses);\n        this._appearance = appearance;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatButton, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatButton, isStandalone: true, selector: \"\\n    button[matButton], a[matButton], button[mat-button], button[mat-raised-button],\\n    button[mat-flat-button], button[mat-stroked-button], a[mat-button], a[mat-raised-button],\\n    a[mat-flat-button], a[mat-stroked-button]\\n  \", inputs: { appearance: [\"matButton\", \"appearance\"] }, host: { classAttribute: \"mdc-button\" }, exportAs: [\"matButton\", \"matAnchor\"], usesInheritance: true, ngImport: i0, template: \"<span\\n    class=\\\"mat-mdc-button-persistent-ripple\\\"\\n    [class.mdc-button__ripple]=\\\"!_isFab\\\"\\n    [class.mdc-fab__ripple]=\\\"_isFab\\\"></span>\\n\\n<ng-content select=\\\".material-icons:not([iconPositionEnd]), mat-icon:not([iconPositionEnd]), [matButtonIcon]:not([iconPositionEnd])\\\">\\n</ng-content>\\n\\n<span class=\\\"mdc-button__label\\\"><ng-content></ng-content></span>\\n\\n<ng-content select=\\\".material-icons[iconPositionEnd], mat-icon[iconPositionEnd], [matButtonIcon][iconPositionEnd]\\\">\\n</ng-content>\\n\\n<!--\\n  The indicator can't be directly on the button, because MDC uses ::before for high contrast\\n  indication and it can't be on the ripple, because it has a border radius and overflow: hidden.\\n-->\\n<span class=\\\"mat-focus-indicator\\\"></span>\\n\\n<span class=\\\"mat-mdc-button-touch-target\\\"></span>\\n\", styles: [\".mat-mdc-button-base{text-decoration:none}.mat-mdc-button-base .mat-icon{min-height:fit-content;flex-shrink:0}.mdc-button{-webkit-user-select:none;user-select:none;position:relative;display:inline-flex;align-items:center;justify-content:center;box-sizing:border-box;min-width:64px;border:none;outline:none;line-height:inherit;-webkit-appearance:none;overflow:visible;vertical-align:middle;background:rgba(0,0,0,0);padding:0 8px}.mdc-button::-moz-focus-inner{padding:0;border:0}.mdc-button:active{outline:none}.mdc-button:hover{cursor:pointer}.mdc-button:disabled{cursor:default;pointer-events:none}.mdc-button[hidden]{display:none}.mdc-button .mdc-button__label{position:relative}.mat-mdc-button{padding:0 var(--mat-button-text-horizontal-padding, 12px);height:var(--mat-button-text-container-height, 40px);font-family:var(--mat-button-text-label-text-font, var(--mat-sys-label-large-font));font-size:var(--mat-button-text-label-text-size, var(--mat-sys-label-large-size));letter-spacing:var(--mat-button-text-label-text-tracking, var(--mat-sys-label-large-tracking));text-transform:var(--mat-button-text-label-text-transform);font-weight:var(--mat-button-text-label-text-weight, var(--mat-sys-label-large-weight))}.mat-mdc-button,.mat-mdc-button .mdc-button__ripple{border-radius:var(--mat-button-text-container-shape, var(--mat-sys-corner-full))}.mat-mdc-button:not(:disabled){color:var(--mat-button-text-label-text-color, var(--mat-sys-primary))}.mat-mdc-button[disabled],.mat-mdc-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mat-button-text-disabled-label-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-mdc-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-button:has(.material-icons,mat-icon,[matButtonIcon]){padding:0 var(--mat-button-text-with-icon-horizontal-padding, 16px)}.mat-mdc-button>.mat-icon{margin-right:var(--mat-button-text-icon-spacing, 8px);margin-left:var(--mat-button-text-icon-offset, -4px)}[dir=rtl] .mat-mdc-button>.mat-icon{margin-right:var(--mat-button-text-icon-offset, -4px);margin-left:var(--mat-button-text-icon-spacing, 8px)}.mat-mdc-button .mdc-button__label+.mat-icon{margin-right:var(--mat-button-text-icon-offset, -4px);margin-left:var(--mat-button-text-icon-spacing, 8px)}[dir=rtl] .mat-mdc-button .mdc-button__label+.mat-icon{margin-right:var(--mat-button-text-icon-spacing, 8px);margin-left:var(--mat-button-text-icon-offset, -4px)}.mat-mdc-button .mat-ripple-element{background-color:var(--mat-button-text-ripple-color, color-mix(in srgb, var(--mat-sys-primary) calc(var(--mat-sys-pressed-state-layer-opacity) * 100%), transparent))}.mat-mdc-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-button-text-state-layer-color, var(--mat-sys-primary))}.mat-mdc-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-button-text-disabled-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-button:hover>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-button-text-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-button.cdk-program-focused>.mat-mdc-button-persistent-ripple::before,.mat-mdc-button.cdk-keyboard-focused>.mat-mdc-button-persistent-ripple::before,.mat-mdc-button.mat-mdc-button-disabled-interactive:focus>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-button-text-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-button:active>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-button-text-pressed-state-layer-opacity, var(--mat-sys-pressed-state-layer-opacity))}.mat-mdc-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;display:var(--mat-button-text-touch-target-display, block);left:0;right:0;transform:translateY(-50%)}.mat-mdc-unelevated-button{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);height:var(--mat-button-filled-container-height, 40px);font-family:var(--mat-button-filled-label-text-font, var(--mat-sys-label-large-font));font-size:var(--mat-button-filled-label-text-size, var(--mat-sys-label-large-size));letter-spacing:var(--mat-button-filled-label-text-tracking, var(--mat-sys-label-large-tracking));text-transform:var(--mat-button-filled-label-text-transform);font-weight:var(--mat-button-filled-label-text-weight, var(--mat-sys-label-large-weight));padding:0 var(--mat-button-filled-horizontal-padding, 24px)}.mat-mdc-unelevated-button>.mat-icon{margin-right:var(--mat-button-filled-icon-spacing, 8px);margin-left:var(--mat-button-filled-icon-offset, -8px)}[dir=rtl] .mat-mdc-unelevated-button>.mat-icon{margin-right:var(--mat-button-filled-icon-offset, -8px);margin-left:var(--mat-button-filled-icon-spacing, 8px)}.mat-mdc-unelevated-button .mdc-button__label+.mat-icon{margin-right:var(--mat-button-filled-icon-offset, -8px);margin-left:var(--mat-button-filled-icon-spacing, 8px)}[dir=rtl] .mat-mdc-unelevated-button .mdc-button__label+.mat-icon{margin-right:var(--mat-button-filled-icon-spacing, 8px);margin-left:var(--mat-button-filled-icon-offset, -8px)}.mat-mdc-unelevated-button .mat-ripple-element{background-color:var(--mat-button-filled-ripple-color, color-mix(in srgb, var(--mat-sys-on-primary) calc(var(--mat-sys-pressed-state-layer-opacity) * 100%), transparent))}.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-button-filled-state-layer-color, var(--mat-sys-on-primary))}.mat-mdc-unelevated-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-button-filled-disabled-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-unelevated-button:hover>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-button-filled-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-unelevated-button.cdk-program-focused>.mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button.cdk-keyboard-focused>.mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button.mat-mdc-button-disabled-interactive:focus>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-button-filled-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-unelevated-button:active>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-button-filled-pressed-state-layer-opacity, var(--mat-sys-pressed-state-layer-opacity))}.mat-mdc-unelevated-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;display:var(--mat-button-filled-touch-target-display, block);left:0;right:0;transform:translateY(-50%)}.mat-mdc-unelevated-button:not(:disabled){color:var(--mat-button-filled-label-text-color, var(--mat-sys-on-primary));background-color:var(--mat-button-filled-container-color, var(--mat-sys-primary))}.mat-mdc-unelevated-button,.mat-mdc-unelevated-button .mdc-button__ripple{border-radius:var(--mat-button-filled-container-shape, var(--mat-sys-corner-full))}.mat-mdc-unelevated-button[disabled],.mat-mdc-unelevated-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mat-button-filled-disabled-label-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent));background-color:var(--mat-button-filled-disabled-container-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mat-mdc-unelevated-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-raised-button{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);box-shadow:var(--mat-button-protected-container-elevation-shadow, var(--mat-sys-level1));height:var(--mat-button-protected-container-height, 40px);font-family:var(--mat-button-protected-label-text-font, var(--mat-sys-label-large-font));font-size:var(--mat-button-protected-label-text-size, var(--mat-sys-label-large-size));letter-spacing:var(--mat-button-protected-label-text-tracking, var(--mat-sys-label-large-tracking));text-transform:var(--mat-button-protected-label-text-transform);font-weight:var(--mat-button-protected-label-text-weight, var(--mat-sys-label-large-weight));padding:0 var(--mat-button-protected-horizontal-padding, 24px)}.mat-mdc-raised-button>.mat-icon{margin-right:var(--mat-button-protected-icon-spacing, 8px);margin-left:var(--mat-button-protected-icon-offset, -8px)}[dir=rtl] .mat-mdc-raised-button>.mat-icon{margin-right:var(--mat-button-protected-icon-offset, -8px);margin-left:var(--mat-button-protected-icon-spacing, 8px)}.mat-mdc-raised-button .mdc-button__label+.mat-icon{margin-right:var(--mat-button-protected-icon-offset, -8px);margin-left:var(--mat-button-protected-icon-spacing, 8px)}[dir=rtl] .mat-mdc-raised-button .mdc-button__label+.mat-icon{margin-right:var(--mat-button-protected-icon-spacing, 8px);margin-left:var(--mat-button-protected-icon-offset, -8px)}.mat-mdc-raised-button .mat-ripple-element{background-color:var(--mat-button-protected-ripple-color, color-mix(in srgb, var(--mat-sys-primary) calc(var(--mat-sys-pressed-state-layer-opacity) * 100%), transparent))}.mat-mdc-raised-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-button-protected-state-layer-color, var(--mat-sys-primary))}.mat-mdc-raised-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-button-protected-disabled-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-raised-button:hover>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-button-protected-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-raised-button.cdk-program-focused>.mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button.cdk-keyboard-focused>.mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button.mat-mdc-button-disabled-interactive:focus>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-button-protected-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-raised-button:active>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-button-protected-pressed-state-layer-opacity, var(--mat-sys-pressed-state-layer-opacity))}.mat-mdc-raised-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;display:var(--mat-button-protected-touch-target-display, block);left:0;right:0;transform:translateY(-50%)}.mat-mdc-raised-button:not(:disabled){color:var(--mat-button-protected-label-text-color, var(--mat-sys-primary));background-color:var(--mat-button-protected-container-color, var(--mat-sys-surface))}.mat-mdc-raised-button,.mat-mdc-raised-button .mdc-button__ripple{border-radius:var(--mat-button-protected-container-shape, var(--mat-sys-corner-full))}.mat-mdc-raised-button:hover{box-shadow:var(--mat-button-protected-hover-container-elevation-shadow, var(--mat-sys-level2))}.mat-mdc-raised-button:focus{box-shadow:var(--mat-button-protected-focus-container-elevation-shadow, var(--mat-sys-level1))}.mat-mdc-raised-button:active,.mat-mdc-raised-button:focus:active{box-shadow:var(--mat-button-protected-pressed-container-elevation-shadow, var(--mat-sys-level1))}.mat-mdc-raised-button[disabled],.mat-mdc-raised-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mat-button-protected-disabled-label-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent));background-color:var(--mat-button-protected-disabled-container-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mat-mdc-raised-button[disabled].mat-mdc-button-disabled,.mat-mdc-raised-button.mat-mdc-button-disabled.mat-mdc-button-disabled{box-shadow:var(--mat-button-protected-disabled-container-elevation-shadow, var(--mat-sys-level0))}.mat-mdc-raised-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-outlined-button{border-style:solid;transition:border 280ms cubic-bezier(0.4, 0, 0.2, 1);height:var(--mat-button-outlined-container-height, 40px);font-family:var(--mat-button-outlined-label-text-font, var(--mat-sys-label-large-font));font-size:var(--mat-button-outlined-label-text-size, var(--mat-sys-label-large-size));letter-spacing:var(--mat-button-outlined-label-text-tracking, var(--mat-sys-label-large-tracking));text-transform:var(--mat-button-outlined-label-text-transform);font-weight:var(--mat-button-outlined-label-text-weight, var(--mat-sys-label-large-weight));border-radius:var(--mat-button-outlined-container-shape, var(--mat-sys-corner-full));border-width:var(--mat-button-outlined-outline-width, 1px);padding:0 var(--mat-button-outlined-horizontal-padding, 24px)}.mat-mdc-outlined-button>.mat-icon{margin-right:var(--mat-button-outlined-icon-spacing, 8px);margin-left:var(--mat-button-outlined-icon-offset, -8px)}[dir=rtl] .mat-mdc-outlined-button>.mat-icon{margin-right:var(--mat-button-outlined-icon-offset, -8px);margin-left:var(--mat-button-outlined-icon-spacing, 8px)}.mat-mdc-outlined-button .mdc-button__label+.mat-icon{margin-right:var(--mat-button-outlined-icon-offset, -8px);margin-left:var(--mat-button-outlined-icon-spacing, 8px)}[dir=rtl] .mat-mdc-outlined-button .mdc-button__label+.mat-icon{margin-right:var(--mat-button-outlined-icon-spacing, 8px);margin-left:var(--mat-button-outlined-icon-offset, -8px)}.mat-mdc-outlined-button .mat-ripple-element{background-color:var(--mat-button-outlined-ripple-color, color-mix(in srgb, var(--mat-sys-primary) calc(var(--mat-sys-pressed-state-layer-opacity) * 100%), transparent))}.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-button-outlined-state-layer-color, var(--mat-sys-primary))}.mat-mdc-outlined-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-button-outlined-disabled-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-outlined-button:hover>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-button-outlined-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-outlined-button.cdk-program-focused>.mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button.cdk-keyboard-focused>.mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button.mat-mdc-button-disabled-interactive:focus>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-button-outlined-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-outlined-button:active>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-button-outlined-pressed-state-layer-opacity, var(--mat-sys-pressed-state-layer-opacity))}.mat-mdc-outlined-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;display:var(--mat-button-outlined-touch-target-display, block);left:0;right:0;transform:translateY(-50%)}.mat-mdc-outlined-button:not(:disabled){color:var(--mat-button-outlined-label-text-color, var(--mat-sys-primary));border-color:var(--mat-button-outlined-outline-color, var(--mat-sys-outline))}.mat-mdc-outlined-button[disabled],.mat-mdc-outlined-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mat-button-outlined-disabled-label-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent));border-color:var(--mat-button-outlined-disabled-outline-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mat-mdc-outlined-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-tonal-button{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);height:var(--mat-button-tonal-container-height, 40px);font-family:var(--mat-button-tonal-label-text-font, var(--mat-sys-label-large-font));font-size:var(--mat-button-tonal-label-text-size, var(--mat-sys-label-large-size));letter-spacing:var(--mat-button-tonal-label-text-tracking, var(--mat-sys-label-large-tracking));text-transform:var(--mat-button-tonal-label-text-transform);font-weight:var(--mat-button-tonal-label-text-weight, var(--mat-sys-label-large-weight));padding:0 var(--mat-button-tonal-horizontal-padding, 24px)}.mat-tonal-button:not(:disabled){color:var(--mat-button-tonal-label-text-color, var(--mat-sys-on-secondary-container));background-color:var(--mat-button-tonal-container-color, var(--mat-sys-secondary-container))}.mat-tonal-button,.mat-tonal-button .mdc-button__ripple{border-radius:var(--mat-button-tonal-container-shape, var(--mat-sys-corner-full))}.mat-tonal-button[disabled],.mat-tonal-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mat-button-tonal-disabled-label-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent));background-color:var(--mat-button-tonal-disabled-container-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mat-tonal-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-tonal-button>.mat-icon{margin-right:var(--mat-button-tonal-icon-spacing, 8px);margin-left:var(--mat-button-tonal-icon-offset, -8px)}[dir=rtl] .mat-tonal-button>.mat-icon{margin-right:var(--mat-button-tonal-icon-offset, -8px);margin-left:var(--mat-button-tonal-icon-spacing, 8px)}.mat-tonal-button .mdc-button__label+.mat-icon{margin-right:var(--mat-button-tonal-icon-offset, -8px);margin-left:var(--mat-button-tonal-icon-spacing, 8px)}[dir=rtl] .mat-tonal-button .mdc-button__label+.mat-icon{margin-right:var(--mat-button-tonal-icon-spacing, 8px);margin-left:var(--mat-button-tonal-icon-offset, -8px)}.mat-tonal-button .mat-ripple-element{background-color:var(--mat-button-tonal-ripple-color, color-mix(in srgb, var(--mat-sys-on-secondary-container) calc(var(--mat-sys-pressed-state-layer-opacity) * 100%), transparent))}.mat-tonal-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-button-tonal-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-tonal-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-button-tonal-disabled-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-tonal-button:hover>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-button-tonal-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-tonal-button.cdk-program-focused>.mat-mdc-button-persistent-ripple::before,.mat-tonal-button.cdk-keyboard-focused>.mat-mdc-button-persistent-ripple::before,.mat-tonal-button.mat-mdc-button-disabled-interactive:focus>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-button-tonal-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-tonal-button:active>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-button-tonal-pressed-state-layer-opacity, var(--mat-sys-pressed-state-layer-opacity))}.mat-tonal-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;display:var(--mat-button-tonal-touch-target-display, block);left:0;right:0;transform:translateY(-50%)}.mat-mdc-button,.mat-mdc-unelevated-button,.mat-mdc-raised-button,.mat-mdc-outlined-button,.mat-tonal-button{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-button .mat-mdc-button-ripple,.mat-mdc-button .mat-mdc-button-persistent-ripple,.mat-mdc-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button .mat-mdc-button-ripple,.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple,.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button .mat-mdc-button-ripple,.mat-mdc-raised-button .mat-mdc-button-persistent-ripple,.mat-mdc-raised-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button .mat-mdc-button-ripple,.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple,.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple::before,.mat-tonal-button .mat-mdc-button-ripple,.mat-tonal-button .mat-mdc-button-persistent-ripple,.mat-tonal-button .mat-mdc-button-persistent-ripple::before{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-button .mat-mdc-button-ripple,.mat-mdc-unelevated-button .mat-mdc-button-ripple,.mat-mdc-raised-button .mat-mdc-button-ripple,.mat-mdc-outlined-button .mat-mdc-button-ripple,.mat-tonal-button .mat-mdc-button-ripple{overflow:hidden}.mat-mdc-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple::before,.mat-tonal-button .mat-mdc-button-persistent-ripple::before{content:\\\"\\\";opacity:0}.mat-mdc-button .mdc-button__label,.mat-mdc-button .mat-icon,.mat-mdc-unelevated-button .mdc-button__label,.mat-mdc-unelevated-button .mat-icon,.mat-mdc-raised-button .mdc-button__label,.mat-mdc-raised-button .mat-icon,.mat-mdc-outlined-button .mdc-button__label,.mat-mdc-outlined-button .mat-icon,.mat-tonal-button .mdc-button__label,.mat-tonal-button .mat-icon{z-index:1;position:relative}.mat-mdc-button .mat-focus-indicator,.mat-mdc-unelevated-button .mat-focus-indicator,.mat-mdc-raised-button .mat-focus-indicator,.mat-mdc-outlined-button .mat-focus-indicator,.mat-tonal-button .mat-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:inherit}.mat-mdc-button:focus>.mat-focus-indicator::before,.mat-mdc-unelevated-button:focus>.mat-focus-indicator::before,.mat-mdc-raised-button:focus>.mat-focus-indicator::before,.mat-mdc-outlined-button:focus>.mat-focus-indicator::before,.mat-tonal-button:focus>.mat-focus-indicator::before{content:\\\"\\\";border-radius:inherit}.mat-mdc-button._mat-animation-noopable,.mat-mdc-unelevated-button._mat-animation-noopable,.mat-mdc-raised-button._mat-animation-noopable,.mat-mdc-outlined-button._mat-animation-noopable,.mat-tonal-button._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mdc-button>.mat-icon,.mat-mdc-unelevated-button>.mat-icon,.mat-mdc-raised-button>.mat-icon,.mat-mdc-outlined-button>.mat-icon,.mat-tonal-button>.mat-icon{display:inline-block;position:relative;vertical-align:top;font-size:1.125rem;height:1.125rem;width:1.125rem}.mat-mdc-outlined-button .mat-mdc-button-ripple,.mat-mdc-outlined-button .mdc-button__ripple{top:-1px;left:-1px;bottom:-1px;right:-1px}.mat-mdc-unelevated-button .mat-focus-indicator::before,.mat-tonal-button .mat-focus-indicator::before,.mat-mdc-raised-button .mat-focus-indicator::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-outlined-button .mat-focus-indicator::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 3px)*-1)}\\n\", \"@media(forced-colors: active){.mat-mdc-button:not(.mdc-button--outlined),.mat-mdc-unelevated-button:not(.mdc-button--outlined),.mat-mdc-raised-button:not(.mdc-button--outlined),.mat-mdc-outlined-button:not(.mdc-button--outlined),.mat-mdc-button-base.mat-tonal-button,.mat-mdc-icon-button.mat-mdc-icon-button,.mat-mdc-outlined-button .mdc-button__ripple{outline:solid 1px}}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatButton, decorators: [{\n            type: Component,\n            args: [{ selector: `\n    button[matButton], a[matButton], button[mat-button], button[mat-raised-button],\n    button[mat-flat-button], button[mat-stroked-button], a[mat-button], a[mat-raised-button],\n    a[mat-flat-button], a[mat-stroked-button]\n  `, host: {\n                        'class': 'mdc-button',\n                    }, exportAs: 'matButton, matAnchor', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<span\\n    class=\\\"mat-mdc-button-persistent-ripple\\\"\\n    [class.mdc-button__ripple]=\\\"!_isFab\\\"\\n    [class.mdc-fab__ripple]=\\\"_isFab\\\"></span>\\n\\n<ng-content select=\\\".material-icons:not([iconPositionEnd]), mat-icon:not([iconPositionEnd]), [matButtonIcon]:not([iconPositionEnd])\\\">\\n</ng-content>\\n\\n<span class=\\\"mdc-button__label\\\"><ng-content></ng-content></span>\\n\\n<ng-content select=\\\".material-icons[iconPositionEnd], mat-icon[iconPositionEnd], [matButtonIcon][iconPositionEnd]\\\">\\n</ng-content>\\n\\n<!--\\n  The indicator can't be directly on the button, because MDC uses ::before for high contrast\\n  indication and it can't be on the ripple, because it has a border radius and overflow: hidden.\\n-->\\n<span class=\\\"mat-focus-indicator\\\"></span>\\n\\n<span class=\\\"mat-mdc-button-touch-target\\\"></span>\\n\", styles: [\".mat-mdc-button-base{text-decoration:none}.mat-mdc-button-base .mat-icon{min-height:fit-content;flex-shrink:0}.mdc-button{-webkit-user-select:none;user-select:none;position:relative;display:inline-flex;align-items:center;justify-content:center;box-sizing:border-box;min-width:64px;border:none;outline:none;line-height:inherit;-webkit-appearance:none;overflow:visible;vertical-align:middle;background:rgba(0,0,0,0);padding:0 8px}.mdc-button::-moz-focus-inner{padding:0;border:0}.mdc-button:active{outline:none}.mdc-button:hover{cursor:pointer}.mdc-button:disabled{cursor:default;pointer-events:none}.mdc-button[hidden]{display:none}.mdc-button .mdc-button__label{position:relative}.mat-mdc-button{padding:0 var(--mat-button-text-horizontal-padding, 12px);height:var(--mat-button-text-container-height, 40px);font-family:var(--mat-button-text-label-text-font, var(--mat-sys-label-large-font));font-size:var(--mat-button-text-label-text-size, var(--mat-sys-label-large-size));letter-spacing:var(--mat-button-text-label-text-tracking, var(--mat-sys-label-large-tracking));text-transform:var(--mat-button-text-label-text-transform);font-weight:var(--mat-button-text-label-text-weight, var(--mat-sys-label-large-weight))}.mat-mdc-button,.mat-mdc-button .mdc-button__ripple{border-radius:var(--mat-button-text-container-shape, var(--mat-sys-corner-full))}.mat-mdc-button:not(:disabled){color:var(--mat-button-text-label-text-color, var(--mat-sys-primary))}.mat-mdc-button[disabled],.mat-mdc-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mat-button-text-disabled-label-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-mdc-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-button:has(.material-icons,mat-icon,[matButtonIcon]){padding:0 var(--mat-button-text-with-icon-horizontal-padding, 16px)}.mat-mdc-button>.mat-icon{margin-right:var(--mat-button-text-icon-spacing, 8px);margin-left:var(--mat-button-text-icon-offset, -4px)}[dir=rtl] .mat-mdc-button>.mat-icon{margin-right:var(--mat-button-text-icon-offset, -4px);margin-left:var(--mat-button-text-icon-spacing, 8px)}.mat-mdc-button .mdc-button__label+.mat-icon{margin-right:var(--mat-button-text-icon-offset, -4px);margin-left:var(--mat-button-text-icon-spacing, 8px)}[dir=rtl] .mat-mdc-button .mdc-button__label+.mat-icon{margin-right:var(--mat-button-text-icon-spacing, 8px);margin-left:var(--mat-button-text-icon-offset, -4px)}.mat-mdc-button .mat-ripple-element{background-color:var(--mat-button-text-ripple-color, color-mix(in srgb, var(--mat-sys-primary) calc(var(--mat-sys-pressed-state-layer-opacity) * 100%), transparent))}.mat-mdc-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-button-text-state-layer-color, var(--mat-sys-primary))}.mat-mdc-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-button-text-disabled-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-button:hover>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-button-text-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-button.cdk-program-focused>.mat-mdc-button-persistent-ripple::before,.mat-mdc-button.cdk-keyboard-focused>.mat-mdc-button-persistent-ripple::before,.mat-mdc-button.mat-mdc-button-disabled-interactive:focus>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-button-text-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-button:active>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-button-text-pressed-state-layer-opacity, var(--mat-sys-pressed-state-layer-opacity))}.mat-mdc-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;display:var(--mat-button-text-touch-target-display, block);left:0;right:0;transform:translateY(-50%)}.mat-mdc-unelevated-button{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);height:var(--mat-button-filled-container-height, 40px);font-family:var(--mat-button-filled-label-text-font, var(--mat-sys-label-large-font));font-size:var(--mat-button-filled-label-text-size, var(--mat-sys-label-large-size));letter-spacing:var(--mat-button-filled-label-text-tracking, var(--mat-sys-label-large-tracking));text-transform:var(--mat-button-filled-label-text-transform);font-weight:var(--mat-button-filled-label-text-weight, var(--mat-sys-label-large-weight));padding:0 var(--mat-button-filled-horizontal-padding, 24px)}.mat-mdc-unelevated-button>.mat-icon{margin-right:var(--mat-button-filled-icon-spacing, 8px);margin-left:var(--mat-button-filled-icon-offset, -8px)}[dir=rtl] .mat-mdc-unelevated-button>.mat-icon{margin-right:var(--mat-button-filled-icon-offset, -8px);margin-left:var(--mat-button-filled-icon-spacing, 8px)}.mat-mdc-unelevated-button .mdc-button__label+.mat-icon{margin-right:var(--mat-button-filled-icon-offset, -8px);margin-left:var(--mat-button-filled-icon-spacing, 8px)}[dir=rtl] .mat-mdc-unelevated-button .mdc-button__label+.mat-icon{margin-right:var(--mat-button-filled-icon-spacing, 8px);margin-left:var(--mat-button-filled-icon-offset, -8px)}.mat-mdc-unelevated-button .mat-ripple-element{background-color:var(--mat-button-filled-ripple-color, color-mix(in srgb, var(--mat-sys-on-primary) calc(var(--mat-sys-pressed-state-layer-opacity) * 100%), transparent))}.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-button-filled-state-layer-color, var(--mat-sys-on-primary))}.mat-mdc-unelevated-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-button-filled-disabled-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-unelevated-button:hover>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-button-filled-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-unelevated-button.cdk-program-focused>.mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button.cdk-keyboard-focused>.mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button.mat-mdc-button-disabled-interactive:focus>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-button-filled-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-unelevated-button:active>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-button-filled-pressed-state-layer-opacity, var(--mat-sys-pressed-state-layer-opacity))}.mat-mdc-unelevated-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;display:var(--mat-button-filled-touch-target-display, block);left:0;right:0;transform:translateY(-50%)}.mat-mdc-unelevated-button:not(:disabled){color:var(--mat-button-filled-label-text-color, var(--mat-sys-on-primary));background-color:var(--mat-button-filled-container-color, var(--mat-sys-primary))}.mat-mdc-unelevated-button,.mat-mdc-unelevated-button .mdc-button__ripple{border-radius:var(--mat-button-filled-container-shape, var(--mat-sys-corner-full))}.mat-mdc-unelevated-button[disabled],.mat-mdc-unelevated-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mat-button-filled-disabled-label-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent));background-color:var(--mat-button-filled-disabled-container-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mat-mdc-unelevated-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-raised-button{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);box-shadow:var(--mat-button-protected-container-elevation-shadow, var(--mat-sys-level1));height:var(--mat-button-protected-container-height, 40px);font-family:var(--mat-button-protected-label-text-font, var(--mat-sys-label-large-font));font-size:var(--mat-button-protected-label-text-size, var(--mat-sys-label-large-size));letter-spacing:var(--mat-button-protected-label-text-tracking, var(--mat-sys-label-large-tracking));text-transform:var(--mat-button-protected-label-text-transform);font-weight:var(--mat-button-protected-label-text-weight, var(--mat-sys-label-large-weight));padding:0 var(--mat-button-protected-horizontal-padding, 24px)}.mat-mdc-raised-button>.mat-icon{margin-right:var(--mat-button-protected-icon-spacing, 8px);margin-left:var(--mat-button-protected-icon-offset, -8px)}[dir=rtl] .mat-mdc-raised-button>.mat-icon{margin-right:var(--mat-button-protected-icon-offset, -8px);margin-left:var(--mat-button-protected-icon-spacing, 8px)}.mat-mdc-raised-button .mdc-button__label+.mat-icon{margin-right:var(--mat-button-protected-icon-offset, -8px);margin-left:var(--mat-button-protected-icon-spacing, 8px)}[dir=rtl] .mat-mdc-raised-button .mdc-button__label+.mat-icon{margin-right:var(--mat-button-protected-icon-spacing, 8px);margin-left:var(--mat-button-protected-icon-offset, -8px)}.mat-mdc-raised-button .mat-ripple-element{background-color:var(--mat-button-protected-ripple-color, color-mix(in srgb, var(--mat-sys-primary) calc(var(--mat-sys-pressed-state-layer-opacity) * 100%), transparent))}.mat-mdc-raised-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-button-protected-state-layer-color, var(--mat-sys-primary))}.mat-mdc-raised-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-button-protected-disabled-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-raised-button:hover>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-button-protected-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-raised-button.cdk-program-focused>.mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button.cdk-keyboard-focused>.mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button.mat-mdc-button-disabled-interactive:focus>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-button-protected-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-raised-button:active>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-button-protected-pressed-state-layer-opacity, var(--mat-sys-pressed-state-layer-opacity))}.mat-mdc-raised-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;display:var(--mat-button-protected-touch-target-display, block);left:0;right:0;transform:translateY(-50%)}.mat-mdc-raised-button:not(:disabled){color:var(--mat-button-protected-label-text-color, var(--mat-sys-primary));background-color:var(--mat-button-protected-container-color, var(--mat-sys-surface))}.mat-mdc-raised-button,.mat-mdc-raised-button .mdc-button__ripple{border-radius:var(--mat-button-protected-container-shape, var(--mat-sys-corner-full))}.mat-mdc-raised-button:hover{box-shadow:var(--mat-button-protected-hover-container-elevation-shadow, var(--mat-sys-level2))}.mat-mdc-raised-button:focus{box-shadow:var(--mat-button-protected-focus-container-elevation-shadow, var(--mat-sys-level1))}.mat-mdc-raised-button:active,.mat-mdc-raised-button:focus:active{box-shadow:var(--mat-button-protected-pressed-container-elevation-shadow, var(--mat-sys-level1))}.mat-mdc-raised-button[disabled],.mat-mdc-raised-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mat-button-protected-disabled-label-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent));background-color:var(--mat-button-protected-disabled-container-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mat-mdc-raised-button[disabled].mat-mdc-button-disabled,.mat-mdc-raised-button.mat-mdc-button-disabled.mat-mdc-button-disabled{box-shadow:var(--mat-button-protected-disabled-container-elevation-shadow, var(--mat-sys-level0))}.mat-mdc-raised-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-outlined-button{border-style:solid;transition:border 280ms cubic-bezier(0.4, 0, 0.2, 1);height:var(--mat-button-outlined-container-height, 40px);font-family:var(--mat-button-outlined-label-text-font, var(--mat-sys-label-large-font));font-size:var(--mat-button-outlined-label-text-size, var(--mat-sys-label-large-size));letter-spacing:var(--mat-button-outlined-label-text-tracking, var(--mat-sys-label-large-tracking));text-transform:var(--mat-button-outlined-label-text-transform);font-weight:var(--mat-button-outlined-label-text-weight, var(--mat-sys-label-large-weight));border-radius:var(--mat-button-outlined-container-shape, var(--mat-sys-corner-full));border-width:var(--mat-button-outlined-outline-width, 1px);padding:0 var(--mat-button-outlined-horizontal-padding, 24px)}.mat-mdc-outlined-button>.mat-icon{margin-right:var(--mat-button-outlined-icon-spacing, 8px);margin-left:var(--mat-button-outlined-icon-offset, -8px)}[dir=rtl] .mat-mdc-outlined-button>.mat-icon{margin-right:var(--mat-button-outlined-icon-offset, -8px);margin-left:var(--mat-button-outlined-icon-spacing, 8px)}.mat-mdc-outlined-button .mdc-button__label+.mat-icon{margin-right:var(--mat-button-outlined-icon-offset, -8px);margin-left:var(--mat-button-outlined-icon-spacing, 8px)}[dir=rtl] .mat-mdc-outlined-button .mdc-button__label+.mat-icon{margin-right:var(--mat-button-outlined-icon-spacing, 8px);margin-left:var(--mat-button-outlined-icon-offset, -8px)}.mat-mdc-outlined-button .mat-ripple-element{background-color:var(--mat-button-outlined-ripple-color, color-mix(in srgb, var(--mat-sys-primary) calc(var(--mat-sys-pressed-state-layer-opacity) * 100%), transparent))}.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-button-outlined-state-layer-color, var(--mat-sys-primary))}.mat-mdc-outlined-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-button-outlined-disabled-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-outlined-button:hover>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-button-outlined-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-outlined-button.cdk-program-focused>.mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button.cdk-keyboard-focused>.mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button.mat-mdc-button-disabled-interactive:focus>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-button-outlined-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-outlined-button:active>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-button-outlined-pressed-state-layer-opacity, var(--mat-sys-pressed-state-layer-opacity))}.mat-mdc-outlined-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;display:var(--mat-button-outlined-touch-target-display, block);left:0;right:0;transform:translateY(-50%)}.mat-mdc-outlined-button:not(:disabled){color:var(--mat-button-outlined-label-text-color, var(--mat-sys-primary));border-color:var(--mat-button-outlined-outline-color, var(--mat-sys-outline))}.mat-mdc-outlined-button[disabled],.mat-mdc-outlined-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mat-button-outlined-disabled-label-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent));border-color:var(--mat-button-outlined-disabled-outline-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mat-mdc-outlined-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-tonal-button{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);height:var(--mat-button-tonal-container-height, 40px);font-family:var(--mat-button-tonal-label-text-font, var(--mat-sys-label-large-font));font-size:var(--mat-button-tonal-label-text-size, var(--mat-sys-label-large-size));letter-spacing:var(--mat-button-tonal-label-text-tracking, var(--mat-sys-label-large-tracking));text-transform:var(--mat-button-tonal-label-text-transform);font-weight:var(--mat-button-tonal-label-text-weight, var(--mat-sys-label-large-weight));padding:0 var(--mat-button-tonal-horizontal-padding, 24px)}.mat-tonal-button:not(:disabled){color:var(--mat-button-tonal-label-text-color, var(--mat-sys-on-secondary-container));background-color:var(--mat-button-tonal-container-color, var(--mat-sys-secondary-container))}.mat-tonal-button,.mat-tonal-button .mdc-button__ripple{border-radius:var(--mat-button-tonal-container-shape, var(--mat-sys-corner-full))}.mat-tonal-button[disabled],.mat-tonal-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mat-button-tonal-disabled-label-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent));background-color:var(--mat-button-tonal-disabled-container-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mat-tonal-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-tonal-button>.mat-icon{margin-right:var(--mat-button-tonal-icon-spacing, 8px);margin-left:var(--mat-button-tonal-icon-offset, -8px)}[dir=rtl] .mat-tonal-button>.mat-icon{margin-right:var(--mat-button-tonal-icon-offset, -8px);margin-left:var(--mat-button-tonal-icon-spacing, 8px)}.mat-tonal-button .mdc-button__label+.mat-icon{margin-right:var(--mat-button-tonal-icon-offset, -8px);margin-left:var(--mat-button-tonal-icon-spacing, 8px)}[dir=rtl] .mat-tonal-button .mdc-button__label+.mat-icon{margin-right:var(--mat-button-tonal-icon-spacing, 8px);margin-left:var(--mat-button-tonal-icon-offset, -8px)}.mat-tonal-button .mat-ripple-element{background-color:var(--mat-button-tonal-ripple-color, color-mix(in srgb, var(--mat-sys-on-secondary-container) calc(var(--mat-sys-pressed-state-layer-opacity) * 100%), transparent))}.mat-tonal-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-button-tonal-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-tonal-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-button-tonal-disabled-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-tonal-button:hover>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-button-tonal-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-tonal-button.cdk-program-focused>.mat-mdc-button-persistent-ripple::before,.mat-tonal-button.cdk-keyboard-focused>.mat-mdc-button-persistent-ripple::before,.mat-tonal-button.mat-mdc-button-disabled-interactive:focus>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-button-tonal-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-tonal-button:active>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-button-tonal-pressed-state-layer-opacity, var(--mat-sys-pressed-state-layer-opacity))}.mat-tonal-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;display:var(--mat-button-tonal-touch-target-display, block);left:0;right:0;transform:translateY(-50%)}.mat-mdc-button,.mat-mdc-unelevated-button,.mat-mdc-raised-button,.mat-mdc-outlined-button,.mat-tonal-button{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-button .mat-mdc-button-ripple,.mat-mdc-button .mat-mdc-button-persistent-ripple,.mat-mdc-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button .mat-mdc-button-ripple,.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple,.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button .mat-mdc-button-ripple,.mat-mdc-raised-button .mat-mdc-button-persistent-ripple,.mat-mdc-raised-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button .mat-mdc-button-ripple,.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple,.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple::before,.mat-tonal-button .mat-mdc-button-ripple,.mat-tonal-button .mat-mdc-button-persistent-ripple,.mat-tonal-button .mat-mdc-button-persistent-ripple::before{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-button .mat-mdc-button-ripple,.mat-mdc-unelevated-button .mat-mdc-button-ripple,.mat-mdc-raised-button .mat-mdc-button-ripple,.mat-mdc-outlined-button .mat-mdc-button-ripple,.mat-tonal-button .mat-mdc-button-ripple{overflow:hidden}.mat-mdc-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple::before,.mat-tonal-button .mat-mdc-button-persistent-ripple::before{content:\\\"\\\";opacity:0}.mat-mdc-button .mdc-button__label,.mat-mdc-button .mat-icon,.mat-mdc-unelevated-button .mdc-button__label,.mat-mdc-unelevated-button .mat-icon,.mat-mdc-raised-button .mdc-button__label,.mat-mdc-raised-button .mat-icon,.mat-mdc-outlined-button .mdc-button__label,.mat-mdc-outlined-button .mat-icon,.mat-tonal-button .mdc-button__label,.mat-tonal-button .mat-icon{z-index:1;position:relative}.mat-mdc-button .mat-focus-indicator,.mat-mdc-unelevated-button .mat-focus-indicator,.mat-mdc-raised-button .mat-focus-indicator,.mat-mdc-outlined-button .mat-focus-indicator,.mat-tonal-button .mat-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:inherit}.mat-mdc-button:focus>.mat-focus-indicator::before,.mat-mdc-unelevated-button:focus>.mat-focus-indicator::before,.mat-mdc-raised-button:focus>.mat-focus-indicator::before,.mat-mdc-outlined-button:focus>.mat-focus-indicator::before,.mat-tonal-button:focus>.mat-focus-indicator::before{content:\\\"\\\";border-radius:inherit}.mat-mdc-button._mat-animation-noopable,.mat-mdc-unelevated-button._mat-animation-noopable,.mat-mdc-raised-button._mat-animation-noopable,.mat-mdc-outlined-button._mat-animation-noopable,.mat-tonal-button._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mdc-button>.mat-icon,.mat-mdc-unelevated-button>.mat-icon,.mat-mdc-raised-button>.mat-icon,.mat-mdc-outlined-button>.mat-icon,.mat-tonal-button>.mat-icon{display:inline-block;position:relative;vertical-align:top;font-size:1.125rem;height:1.125rem;width:1.125rem}.mat-mdc-outlined-button .mat-mdc-button-ripple,.mat-mdc-outlined-button .mdc-button__ripple{top:-1px;left:-1px;bottom:-1px;right:-1px}.mat-mdc-unelevated-button .mat-focus-indicator::before,.mat-tonal-button .mat-focus-indicator::before,.mat-mdc-raised-button .mat-focus-indicator::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-outlined-button .mat-focus-indicator::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 3px)*-1)}\\n\", \"@media(forced-colors: active){.mat-mdc-button:not(.mdc-button--outlined),.mat-mdc-unelevated-button:not(.mdc-button--outlined),.mat-mdc-raised-button:not(.mdc-button--outlined),.mat-mdc-outlined-button:not(.mdc-button--outlined),.mat-mdc-button-base.mat-tonal-button,.mat-mdc-icon-button.mat-mdc-icon-button,.mat-mdc-outlined-button .mdc-button__ripple{outline:solid 1px}}\\n\"] }]\n        }], ctorParameters: () => [], propDecorators: { appearance: [{\n                type: Input,\n                args: ['matButton']\n            }] } });\n/** Infers the button's appearance from its static attributes. */\nfunction _inferAppearance(button) {\n    if (button.hasAttribute('mat-raised-button')) {\n        return 'elevated';\n    }\n    if (button.hasAttribute('mat-stroked-button')) {\n        return 'outlined';\n    }\n    if (button.hasAttribute('mat-flat-button')) {\n        return 'filled';\n    }\n    if (button.hasAttribute('mat-button')) {\n        return 'text';\n    }\n    return null;\n}\n// tslint:disable:variable-name\n/**\n * Material Design button component for anchor elements. Anchor elements are used to provide\n * links for the user to navigate across different routes or pages.\n * See https://m3.material.io/components/buttons/overview\n */\nconst MatAnchor = MatButton;\n\n/** Injection token to be used to override the default options for FAB. */\nconst MAT_FAB_DEFAULT_OPTIONS = new InjectionToken('mat-mdc-fab-default-options', {\n    providedIn: 'root',\n    factory: MAT_FAB_DEFAULT_OPTIONS_FACTORY,\n});\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nfunction MAT_FAB_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        // The FAB by default has its color set to accent.\n        color: 'accent',\n    };\n}\n// Default FAB configuration.\nconst defaults = MAT_FAB_DEFAULT_OPTIONS_FACTORY();\n/**\n * Material Design floating action button (FAB) component. These buttons represent the primary\n * or most common action for users to interact with.\n * See https://m3.material.io/components/floating-action-button/overview\n *\n * The `MatFabButton` class has two appearances: normal and extended.\n */\nclass MatFabButton extends MatButtonBase {\n    _options = inject(MAT_FAB_DEFAULT_OPTIONS, { optional: true });\n    _isFab = true;\n    extended;\n    constructor() {\n        super();\n        this._options = this._options || defaults;\n        this.color = this._options.color || defaults.color;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatFabButton, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"16.1.0\", version: \"20.0.0\", type: MatFabButton, isStandalone: true, selector: \"button[mat-fab], a[mat-fab], button[matFab], a[matFab]\", inputs: { extended: [\"extended\", \"extended\", booleanAttribute] }, host: { properties: { \"class.mdc-fab--extended\": \"extended\", \"class.mat-mdc-extended-fab\": \"extended\" }, classAttribute: \"mdc-fab mat-mdc-fab-base mat-mdc-fab\" }, exportAs: [\"matButton\", \"matAnchor\"], usesInheritance: true, ngImport: i0, template: \"<span\\n    class=\\\"mat-mdc-button-persistent-ripple\\\"\\n    [class.mdc-button__ripple]=\\\"!_isFab\\\"\\n    [class.mdc-fab__ripple]=\\\"_isFab\\\"></span>\\n\\n<ng-content select=\\\".material-icons:not([iconPositionEnd]), mat-icon:not([iconPositionEnd]), [matButtonIcon]:not([iconPositionEnd])\\\">\\n</ng-content>\\n\\n<span class=\\\"mdc-button__label\\\"><ng-content></ng-content></span>\\n\\n<ng-content select=\\\".material-icons[iconPositionEnd], mat-icon[iconPositionEnd], [matButtonIcon][iconPositionEnd]\\\">\\n</ng-content>\\n\\n<!--\\n  The indicator can't be directly on the button, because MDC uses ::before for high contrast\\n  indication and it can't be on the ripple, because it has a border radius and overflow: hidden.\\n-->\\n<span class=\\\"mat-focus-indicator\\\"></span>\\n\\n<span class=\\\"mat-mdc-button-touch-target\\\"></span>\\n\", styles: [\".mat-mdc-fab-base{-webkit-user-select:none;user-select:none;position:relative;display:inline-flex;align-items:center;justify-content:center;box-sizing:border-box;width:56px;height:56px;padding:0;border:none;fill:currentColor;text-decoration:none;cursor:pointer;-moz-appearance:none;-webkit-appearance:none;overflow:visible;transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1),opacity 15ms linear 30ms,transform 270ms 0ms cubic-bezier(0, 0, 0.2, 1);flex-shrink:0;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-fab-base .mat-mdc-button-ripple,.mat-mdc-fab-base .mat-mdc-button-persistent-ripple,.mat-mdc-fab-base .mat-mdc-button-persistent-ripple::before{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-fab-base .mat-mdc-button-ripple{overflow:hidden}.mat-mdc-fab-base .mat-mdc-button-persistent-ripple::before{content:\\\"\\\";opacity:0}.mat-mdc-fab-base .mdc-button__label,.mat-mdc-fab-base .mat-icon{z-index:1;position:relative}.mat-mdc-fab-base .mat-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute}.mat-mdc-fab-base:focus>.mat-focus-indicator::before{content:\\\"\\\"}.mat-mdc-fab-base._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mdc-fab-base::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}.mat-mdc-fab-base[hidden]{display:none}.mat-mdc-fab-base::-moz-focus-inner{padding:0;border:0}.mat-mdc-fab-base:active,.mat-mdc-fab-base:focus{outline:none}.mat-mdc-fab-base:hover{cursor:pointer}.mat-mdc-fab-base>svg{width:100%}.mat-mdc-fab-base .mat-icon,.mat-mdc-fab-base .material-icons{transition:transform 180ms 90ms cubic-bezier(0, 0, 0.2, 1);fill:currentColor;will-change:transform}.mat-mdc-fab-base .mat-focus-indicator::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-fab-base[disabled],.mat-mdc-fab-base.mat-mdc-button-disabled{cursor:default;pointer-events:none}.mat-mdc-fab-base[disabled],.mat-mdc-fab-base[disabled]:focus,.mat-mdc-fab-base.mat-mdc-button-disabled,.mat-mdc-fab-base.mat-mdc-button-disabled:focus{box-shadow:none}.mat-mdc-fab-base.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-fab{background-color:var(--mat-fab-container-color, var(--mat-sys-primary-container));border-radius:var(--mat-fab-container-shape, var(--mat-sys-corner-large));color:var(--mat-fab-foreground-color, var(--mat-sys-on-primary-container, inherit));box-shadow:var(--mat-fab-container-elevation-shadow, var(--mat-sys-level3))}.mat-mdc-fab:hover{box-shadow:var(--mat-fab-hover-container-elevation-shadow, var(--mat-sys-level4))}.mat-mdc-fab:focus{box-shadow:var(--mat-fab-focus-container-elevation-shadow, var(--mat-sys-level3))}.mat-mdc-fab:active,.mat-mdc-fab:focus:active{box-shadow:var(--mat-fab-pressed-container-elevation-shadow, var(--mat-sys-level3))}.mat-mdc-fab[disabled],.mat-mdc-fab.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mat-fab-disabled-state-foreground-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent));background-color:var(--mat-fab-disabled-state-container-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mat-mdc-fab.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-fab .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;display:var(--mat-fab-touch-target-display, block);left:50%;width:48px;transform:translate(-50%, -50%)}.mat-mdc-fab .mat-ripple-element{background-color:var(--mat-fab-ripple-color, color-mix(in srgb, var(--mat-sys-on-primary-container) calc(var(--mat-sys-pressed-state-layer-opacity) * 100%), transparent))}.mat-mdc-fab .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-fab-state-layer-color, var(--mat-sys-on-primary-container))}.mat-mdc-fab.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-fab-disabled-state-layer-color)}.mat-mdc-fab:hover>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-fab.cdk-program-focused>.mat-mdc-button-persistent-ripple::before,.mat-mdc-fab.cdk-keyboard-focused>.mat-mdc-button-persistent-ripple::before,.mat-mdc-fab.mat-mdc-button-disabled-interactive:focus>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-fab:active>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-pressed-state-layer-opacity, var(--mat-sys-pressed-state-layer-opacity))}.mat-mdc-mini-fab{width:40px;height:40px;background-color:var(--mat-fab-small-container-color, var(--mat-sys-primary-container));border-radius:var(--mat-fab-small-container-shape, var(--mat-sys-corner-medium));color:var(--mat-fab-small-foreground-color, var(--mat-sys-on-primary-container, inherit));box-shadow:var(--mat-fab-small-container-elevation-shadow, var(--mat-sys-level3))}.mat-mdc-mini-fab:hover{box-shadow:var(--mat-fab-small-hover-container-elevation-shadow, var(--mat-sys-level4))}.mat-mdc-mini-fab:focus{box-shadow:var(--mat-fab-small-focus-container-elevation-shadow, var(--mat-sys-level3))}.mat-mdc-mini-fab:active,.mat-mdc-mini-fab:focus:active{box-shadow:var(--mat-fab-small-pressed-container-elevation-shadow, var(--mat-sys-level3))}.mat-mdc-mini-fab[disabled],.mat-mdc-mini-fab.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mat-fab-small-disabled-state-foreground-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent));background-color:var(--mat-fab-small-disabled-state-container-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mat-mdc-mini-fab.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-mini-fab .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;display:var(--mat-fab-small-touch-target-display);left:50%;width:48px;transform:translate(-50%, -50%)}.mat-mdc-mini-fab .mat-ripple-element{background-color:var(--mat-fab-small-ripple-color, color-mix(in srgb, var(--mat-sys-on-primary-container) calc(var(--mat-sys-pressed-state-layer-opacity) * 100%), transparent))}.mat-mdc-mini-fab .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-fab-small-state-layer-color, var(--mat-sys-on-primary-container))}.mat-mdc-mini-fab.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-fab-small-disabled-state-layer-color)}.mat-mdc-mini-fab:hover>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-small-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-mini-fab.cdk-program-focused>.mat-mdc-button-persistent-ripple::before,.mat-mdc-mini-fab.cdk-keyboard-focused>.mat-mdc-button-persistent-ripple::before,.mat-mdc-mini-fab.mat-mdc-button-disabled-interactive:focus>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-small-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-mini-fab:active>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-small-pressed-state-layer-opacity, var(--mat-sys-pressed-state-layer-opacity))}.mat-mdc-extended-fab{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;padding-left:20px;padding-right:20px;width:auto;max-width:100%;line-height:normal;box-shadow:var(--mat-fab-extended-container-elevation-shadow, var(--mat-sys-level3));height:var(--mat-fab-extended-container-height, 56px);border-radius:var(--mat-fab-extended-container-shape, var(--mat-sys-corner-large));font-family:var(--mat-fab-extended-label-text-font, var(--mat-sys-label-large-font));font-size:var(--mat-fab-extended-label-text-size, var(--mat-sys-label-large-size));font-weight:var(--mat-fab-extended-label-text-weight, var(--mat-sys-label-large-weight));letter-spacing:var(--mat-fab-extended-label-text-tracking, var(--mat-sys-label-large-tracking))}.mat-mdc-extended-fab:hover{box-shadow:var(--mat-fab-extended-hover-container-elevation-shadow, var(--mat-sys-level4))}.mat-mdc-extended-fab:focus{box-shadow:var(--mat-fab-extended-focus-container-elevation-shadow, var(--mat-sys-level3))}.mat-mdc-extended-fab:active,.mat-mdc-extended-fab:focus:active{box-shadow:var(--mat-fab-extended-pressed-container-elevation-shadow, var(--mat-sys-level3))}.mat-mdc-extended-fab[disabled],.mat-mdc-extended-fab.mat-mdc-button-disabled{cursor:default;pointer-events:none}.mat-mdc-extended-fab[disabled],.mat-mdc-extended-fab[disabled]:focus,.mat-mdc-extended-fab.mat-mdc-button-disabled,.mat-mdc-extended-fab.mat-mdc-button-disabled:focus{box-shadow:none}.mat-mdc-extended-fab.mat-mdc-button-disabled-interactive{pointer-events:auto}[dir=rtl] .mat-mdc-extended-fab .mdc-button__label+.mat-icon,[dir=rtl] .mat-mdc-extended-fab .mdc-button__label+.material-icons,.mat-mdc-extended-fab>.mat-icon,.mat-mdc-extended-fab>.material-icons{margin-left:-8px;margin-right:12px}.mat-mdc-extended-fab .mdc-button__label+.mat-icon,.mat-mdc-extended-fab .mdc-button__label+.material-icons,[dir=rtl] .mat-mdc-extended-fab>.mat-icon,[dir=rtl] .mat-mdc-extended-fab>.material-icons{margin-left:12px;margin-right:-8px}.mat-mdc-extended-fab .mat-mdc-button-touch-target{width:100%}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatFabButton, decorators: [{\n            type: Component,\n            args: [{ selector: `button[mat-fab], a[mat-fab], button[matFab], a[matFab]`, host: {\n                        'class': 'mdc-fab mat-mdc-fab-base mat-mdc-fab',\n                        '[class.mdc-fab--extended]': 'extended',\n                        '[class.mat-mdc-extended-fab]': 'extended',\n                    }, exportAs: 'matButton, matAnchor', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<span\\n    class=\\\"mat-mdc-button-persistent-ripple\\\"\\n    [class.mdc-button__ripple]=\\\"!_isFab\\\"\\n    [class.mdc-fab__ripple]=\\\"_isFab\\\"></span>\\n\\n<ng-content select=\\\".material-icons:not([iconPositionEnd]), mat-icon:not([iconPositionEnd]), [matButtonIcon]:not([iconPositionEnd])\\\">\\n</ng-content>\\n\\n<span class=\\\"mdc-button__label\\\"><ng-content></ng-content></span>\\n\\n<ng-content select=\\\".material-icons[iconPositionEnd], mat-icon[iconPositionEnd], [matButtonIcon][iconPositionEnd]\\\">\\n</ng-content>\\n\\n<!--\\n  The indicator can't be directly on the button, because MDC uses ::before for high contrast\\n  indication and it can't be on the ripple, because it has a border radius and overflow: hidden.\\n-->\\n<span class=\\\"mat-focus-indicator\\\"></span>\\n\\n<span class=\\\"mat-mdc-button-touch-target\\\"></span>\\n\", styles: [\".mat-mdc-fab-base{-webkit-user-select:none;user-select:none;position:relative;display:inline-flex;align-items:center;justify-content:center;box-sizing:border-box;width:56px;height:56px;padding:0;border:none;fill:currentColor;text-decoration:none;cursor:pointer;-moz-appearance:none;-webkit-appearance:none;overflow:visible;transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1),opacity 15ms linear 30ms,transform 270ms 0ms cubic-bezier(0, 0, 0.2, 1);flex-shrink:0;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-fab-base .mat-mdc-button-ripple,.mat-mdc-fab-base .mat-mdc-button-persistent-ripple,.mat-mdc-fab-base .mat-mdc-button-persistent-ripple::before{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-fab-base .mat-mdc-button-ripple{overflow:hidden}.mat-mdc-fab-base .mat-mdc-button-persistent-ripple::before{content:\\\"\\\";opacity:0}.mat-mdc-fab-base .mdc-button__label,.mat-mdc-fab-base .mat-icon{z-index:1;position:relative}.mat-mdc-fab-base .mat-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute}.mat-mdc-fab-base:focus>.mat-focus-indicator::before{content:\\\"\\\"}.mat-mdc-fab-base._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mdc-fab-base::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}.mat-mdc-fab-base[hidden]{display:none}.mat-mdc-fab-base::-moz-focus-inner{padding:0;border:0}.mat-mdc-fab-base:active,.mat-mdc-fab-base:focus{outline:none}.mat-mdc-fab-base:hover{cursor:pointer}.mat-mdc-fab-base>svg{width:100%}.mat-mdc-fab-base .mat-icon,.mat-mdc-fab-base .material-icons{transition:transform 180ms 90ms cubic-bezier(0, 0, 0.2, 1);fill:currentColor;will-change:transform}.mat-mdc-fab-base .mat-focus-indicator::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-fab-base[disabled],.mat-mdc-fab-base.mat-mdc-button-disabled{cursor:default;pointer-events:none}.mat-mdc-fab-base[disabled],.mat-mdc-fab-base[disabled]:focus,.mat-mdc-fab-base.mat-mdc-button-disabled,.mat-mdc-fab-base.mat-mdc-button-disabled:focus{box-shadow:none}.mat-mdc-fab-base.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-fab{background-color:var(--mat-fab-container-color, var(--mat-sys-primary-container));border-radius:var(--mat-fab-container-shape, var(--mat-sys-corner-large));color:var(--mat-fab-foreground-color, var(--mat-sys-on-primary-container, inherit));box-shadow:var(--mat-fab-container-elevation-shadow, var(--mat-sys-level3))}.mat-mdc-fab:hover{box-shadow:var(--mat-fab-hover-container-elevation-shadow, var(--mat-sys-level4))}.mat-mdc-fab:focus{box-shadow:var(--mat-fab-focus-container-elevation-shadow, var(--mat-sys-level3))}.mat-mdc-fab:active,.mat-mdc-fab:focus:active{box-shadow:var(--mat-fab-pressed-container-elevation-shadow, var(--mat-sys-level3))}.mat-mdc-fab[disabled],.mat-mdc-fab.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mat-fab-disabled-state-foreground-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent));background-color:var(--mat-fab-disabled-state-container-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mat-mdc-fab.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-fab .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;display:var(--mat-fab-touch-target-display, block);left:50%;width:48px;transform:translate(-50%, -50%)}.mat-mdc-fab .mat-ripple-element{background-color:var(--mat-fab-ripple-color, color-mix(in srgb, var(--mat-sys-on-primary-container) calc(var(--mat-sys-pressed-state-layer-opacity) * 100%), transparent))}.mat-mdc-fab .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-fab-state-layer-color, var(--mat-sys-on-primary-container))}.mat-mdc-fab.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-fab-disabled-state-layer-color)}.mat-mdc-fab:hover>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-fab.cdk-program-focused>.mat-mdc-button-persistent-ripple::before,.mat-mdc-fab.cdk-keyboard-focused>.mat-mdc-button-persistent-ripple::before,.mat-mdc-fab.mat-mdc-button-disabled-interactive:focus>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-fab:active>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-pressed-state-layer-opacity, var(--mat-sys-pressed-state-layer-opacity))}.mat-mdc-mini-fab{width:40px;height:40px;background-color:var(--mat-fab-small-container-color, var(--mat-sys-primary-container));border-radius:var(--mat-fab-small-container-shape, var(--mat-sys-corner-medium));color:var(--mat-fab-small-foreground-color, var(--mat-sys-on-primary-container, inherit));box-shadow:var(--mat-fab-small-container-elevation-shadow, var(--mat-sys-level3))}.mat-mdc-mini-fab:hover{box-shadow:var(--mat-fab-small-hover-container-elevation-shadow, var(--mat-sys-level4))}.mat-mdc-mini-fab:focus{box-shadow:var(--mat-fab-small-focus-container-elevation-shadow, var(--mat-sys-level3))}.mat-mdc-mini-fab:active,.mat-mdc-mini-fab:focus:active{box-shadow:var(--mat-fab-small-pressed-container-elevation-shadow, var(--mat-sys-level3))}.mat-mdc-mini-fab[disabled],.mat-mdc-mini-fab.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mat-fab-small-disabled-state-foreground-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent));background-color:var(--mat-fab-small-disabled-state-container-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mat-mdc-mini-fab.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-mini-fab .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;display:var(--mat-fab-small-touch-target-display);left:50%;width:48px;transform:translate(-50%, -50%)}.mat-mdc-mini-fab .mat-ripple-element{background-color:var(--mat-fab-small-ripple-color, color-mix(in srgb, var(--mat-sys-on-primary-container) calc(var(--mat-sys-pressed-state-layer-opacity) * 100%), transparent))}.mat-mdc-mini-fab .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-fab-small-state-layer-color, var(--mat-sys-on-primary-container))}.mat-mdc-mini-fab.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-fab-small-disabled-state-layer-color)}.mat-mdc-mini-fab:hover>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-small-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-mini-fab.cdk-program-focused>.mat-mdc-button-persistent-ripple::before,.mat-mdc-mini-fab.cdk-keyboard-focused>.mat-mdc-button-persistent-ripple::before,.mat-mdc-mini-fab.mat-mdc-button-disabled-interactive:focus>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-small-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-mini-fab:active>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-small-pressed-state-layer-opacity, var(--mat-sys-pressed-state-layer-opacity))}.mat-mdc-extended-fab{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;padding-left:20px;padding-right:20px;width:auto;max-width:100%;line-height:normal;box-shadow:var(--mat-fab-extended-container-elevation-shadow, var(--mat-sys-level3));height:var(--mat-fab-extended-container-height, 56px);border-radius:var(--mat-fab-extended-container-shape, var(--mat-sys-corner-large));font-family:var(--mat-fab-extended-label-text-font, var(--mat-sys-label-large-font));font-size:var(--mat-fab-extended-label-text-size, var(--mat-sys-label-large-size));font-weight:var(--mat-fab-extended-label-text-weight, var(--mat-sys-label-large-weight));letter-spacing:var(--mat-fab-extended-label-text-tracking, var(--mat-sys-label-large-tracking))}.mat-mdc-extended-fab:hover{box-shadow:var(--mat-fab-extended-hover-container-elevation-shadow, var(--mat-sys-level4))}.mat-mdc-extended-fab:focus{box-shadow:var(--mat-fab-extended-focus-container-elevation-shadow, var(--mat-sys-level3))}.mat-mdc-extended-fab:active,.mat-mdc-extended-fab:focus:active{box-shadow:var(--mat-fab-extended-pressed-container-elevation-shadow, var(--mat-sys-level3))}.mat-mdc-extended-fab[disabled],.mat-mdc-extended-fab.mat-mdc-button-disabled{cursor:default;pointer-events:none}.mat-mdc-extended-fab[disabled],.mat-mdc-extended-fab[disabled]:focus,.mat-mdc-extended-fab.mat-mdc-button-disabled,.mat-mdc-extended-fab.mat-mdc-button-disabled:focus{box-shadow:none}.mat-mdc-extended-fab.mat-mdc-button-disabled-interactive{pointer-events:auto}[dir=rtl] .mat-mdc-extended-fab .mdc-button__label+.mat-icon,[dir=rtl] .mat-mdc-extended-fab .mdc-button__label+.material-icons,.mat-mdc-extended-fab>.mat-icon,.mat-mdc-extended-fab>.material-icons{margin-left:-8px;margin-right:12px}.mat-mdc-extended-fab .mdc-button__label+.mat-icon,.mat-mdc-extended-fab .mdc-button__label+.material-icons,[dir=rtl] .mat-mdc-extended-fab>.mat-icon,[dir=rtl] .mat-mdc-extended-fab>.material-icons{margin-left:12px;margin-right:-8px}.mat-mdc-extended-fab .mat-mdc-button-touch-target{width:100%}\\n\"] }]\n        }], ctorParameters: () => [], propDecorators: { extended: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }] } });\n/**\n * Material Design mini floating action button (FAB) component. These buttons represent the primary\n * or most common action for users to interact with.\n * See https://m3.material.io/components/floating-action-button/overview\n */\nclass MatMiniFabButton extends MatButtonBase {\n    _options = inject(MAT_FAB_DEFAULT_OPTIONS, { optional: true });\n    _isFab = true;\n    constructor() {\n        super();\n        this._options = this._options || defaults;\n        this.color = this._options.color || defaults.color;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatMiniFabButton, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatMiniFabButton, isStandalone: true, selector: \"button[mat-mini-fab], a[mat-mini-fab], button[matMiniFab], a[matMiniFab]\", host: { classAttribute: \"mdc-fab mat-mdc-fab-base mdc-fab--mini mat-mdc-mini-fab\" }, exportAs: [\"matButton\", \"matAnchor\"], usesInheritance: true, ngImport: i0, template: \"<span\\n    class=\\\"mat-mdc-button-persistent-ripple\\\"\\n    [class.mdc-button__ripple]=\\\"!_isFab\\\"\\n    [class.mdc-fab__ripple]=\\\"_isFab\\\"></span>\\n\\n<ng-content select=\\\".material-icons:not([iconPositionEnd]), mat-icon:not([iconPositionEnd]), [matButtonIcon]:not([iconPositionEnd])\\\">\\n</ng-content>\\n\\n<span class=\\\"mdc-button__label\\\"><ng-content></ng-content></span>\\n\\n<ng-content select=\\\".material-icons[iconPositionEnd], mat-icon[iconPositionEnd], [matButtonIcon][iconPositionEnd]\\\">\\n</ng-content>\\n\\n<!--\\n  The indicator can't be directly on the button, because MDC uses ::before for high contrast\\n  indication and it can't be on the ripple, because it has a border radius and overflow: hidden.\\n-->\\n<span class=\\\"mat-focus-indicator\\\"></span>\\n\\n<span class=\\\"mat-mdc-button-touch-target\\\"></span>\\n\", styles: [\".mat-mdc-fab-base{-webkit-user-select:none;user-select:none;position:relative;display:inline-flex;align-items:center;justify-content:center;box-sizing:border-box;width:56px;height:56px;padding:0;border:none;fill:currentColor;text-decoration:none;cursor:pointer;-moz-appearance:none;-webkit-appearance:none;overflow:visible;transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1),opacity 15ms linear 30ms,transform 270ms 0ms cubic-bezier(0, 0, 0.2, 1);flex-shrink:0;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-fab-base .mat-mdc-button-ripple,.mat-mdc-fab-base .mat-mdc-button-persistent-ripple,.mat-mdc-fab-base .mat-mdc-button-persistent-ripple::before{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-fab-base .mat-mdc-button-ripple{overflow:hidden}.mat-mdc-fab-base .mat-mdc-button-persistent-ripple::before{content:\\\"\\\";opacity:0}.mat-mdc-fab-base .mdc-button__label,.mat-mdc-fab-base .mat-icon{z-index:1;position:relative}.mat-mdc-fab-base .mat-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute}.mat-mdc-fab-base:focus>.mat-focus-indicator::before{content:\\\"\\\"}.mat-mdc-fab-base._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mdc-fab-base::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}.mat-mdc-fab-base[hidden]{display:none}.mat-mdc-fab-base::-moz-focus-inner{padding:0;border:0}.mat-mdc-fab-base:active,.mat-mdc-fab-base:focus{outline:none}.mat-mdc-fab-base:hover{cursor:pointer}.mat-mdc-fab-base>svg{width:100%}.mat-mdc-fab-base .mat-icon,.mat-mdc-fab-base .material-icons{transition:transform 180ms 90ms cubic-bezier(0, 0, 0.2, 1);fill:currentColor;will-change:transform}.mat-mdc-fab-base .mat-focus-indicator::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-fab-base[disabled],.mat-mdc-fab-base.mat-mdc-button-disabled{cursor:default;pointer-events:none}.mat-mdc-fab-base[disabled],.mat-mdc-fab-base[disabled]:focus,.mat-mdc-fab-base.mat-mdc-button-disabled,.mat-mdc-fab-base.mat-mdc-button-disabled:focus{box-shadow:none}.mat-mdc-fab-base.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-fab{background-color:var(--mat-fab-container-color, var(--mat-sys-primary-container));border-radius:var(--mat-fab-container-shape, var(--mat-sys-corner-large));color:var(--mat-fab-foreground-color, var(--mat-sys-on-primary-container, inherit));box-shadow:var(--mat-fab-container-elevation-shadow, var(--mat-sys-level3))}.mat-mdc-fab:hover{box-shadow:var(--mat-fab-hover-container-elevation-shadow, var(--mat-sys-level4))}.mat-mdc-fab:focus{box-shadow:var(--mat-fab-focus-container-elevation-shadow, var(--mat-sys-level3))}.mat-mdc-fab:active,.mat-mdc-fab:focus:active{box-shadow:var(--mat-fab-pressed-container-elevation-shadow, var(--mat-sys-level3))}.mat-mdc-fab[disabled],.mat-mdc-fab.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mat-fab-disabled-state-foreground-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent));background-color:var(--mat-fab-disabled-state-container-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mat-mdc-fab.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-fab .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;display:var(--mat-fab-touch-target-display, block);left:50%;width:48px;transform:translate(-50%, -50%)}.mat-mdc-fab .mat-ripple-element{background-color:var(--mat-fab-ripple-color, color-mix(in srgb, var(--mat-sys-on-primary-container) calc(var(--mat-sys-pressed-state-layer-opacity) * 100%), transparent))}.mat-mdc-fab .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-fab-state-layer-color, var(--mat-sys-on-primary-container))}.mat-mdc-fab.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-fab-disabled-state-layer-color)}.mat-mdc-fab:hover>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-fab.cdk-program-focused>.mat-mdc-button-persistent-ripple::before,.mat-mdc-fab.cdk-keyboard-focused>.mat-mdc-button-persistent-ripple::before,.mat-mdc-fab.mat-mdc-button-disabled-interactive:focus>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-fab:active>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-pressed-state-layer-opacity, var(--mat-sys-pressed-state-layer-opacity))}.mat-mdc-mini-fab{width:40px;height:40px;background-color:var(--mat-fab-small-container-color, var(--mat-sys-primary-container));border-radius:var(--mat-fab-small-container-shape, var(--mat-sys-corner-medium));color:var(--mat-fab-small-foreground-color, var(--mat-sys-on-primary-container, inherit));box-shadow:var(--mat-fab-small-container-elevation-shadow, var(--mat-sys-level3))}.mat-mdc-mini-fab:hover{box-shadow:var(--mat-fab-small-hover-container-elevation-shadow, var(--mat-sys-level4))}.mat-mdc-mini-fab:focus{box-shadow:var(--mat-fab-small-focus-container-elevation-shadow, var(--mat-sys-level3))}.mat-mdc-mini-fab:active,.mat-mdc-mini-fab:focus:active{box-shadow:var(--mat-fab-small-pressed-container-elevation-shadow, var(--mat-sys-level3))}.mat-mdc-mini-fab[disabled],.mat-mdc-mini-fab.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mat-fab-small-disabled-state-foreground-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent));background-color:var(--mat-fab-small-disabled-state-container-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mat-mdc-mini-fab.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-mini-fab .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;display:var(--mat-fab-small-touch-target-display);left:50%;width:48px;transform:translate(-50%, -50%)}.mat-mdc-mini-fab .mat-ripple-element{background-color:var(--mat-fab-small-ripple-color, color-mix(in srgb, var(--mat-sys-on-primary-container) calc(var(--mat-sys-pressed-state-layer-opacity) * 100%), transparent))}.mat-mdc-mini-fab .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-fab-small-state-layer-color, var(--mat-sys-on-primary-container))}.mat-mdc-mini-fab.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-fab-small-disabled-state-layer-color)}.mat-mdc-mini-fab:hover>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-small-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-mini-fab.cdk-program-focused>.mat-mdc-button-persistent-ripple::before,.mat-mdc-mini-fab.cdk-keyboard-focused>.mat-mdc-button-persistent-ripple::before,.mat-mdc-mini-fab.mat-mdc-button-disabled-interactive:focus>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-small-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-mini-fab:active>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-small-pressed-state-layer-opacity, var(--mat-sys-pressed-state-layer-opacity))}.mat-mdc-extended-fab{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;padding-left:20px;padding-right:20px;width:auto;max-width:100%;line-height:normal;box-shadow:var(--mat-fab-extended-container-elevation-shadow, var(--mat-sys-level3));height:var(--mat-fab-extended-container-height, 56px);border-radius:var(--mat-fab-extended-container-shape, var(--mat-sys-corner-large));font-family:var(--mat-fab-extended-label-text-font, var(--mat-sys-label-large-font));font-size:var(--mat-fab-extended-label-text-size, var(--mat-sys-label-large-size));font-weight:var(--mat-fab-extended-label-text-weight, var(--mat-sys-label-large-weight));letter-spacing:var(--mat-fab-extended-label-text-tracking, var(--mat-sys-label-large-tracking))}.mat-mdc-extended-fab:hover{box-shadow:var(--mat-fab-extended-hover-container-elevation-shadow, var(--mat-sys-level4))}.mat-mdc-extended-fab:focus{box-shadow:var(--mat-fab-extended-focus-container-elevation-shadow, var(--mat-sys-level3))}.mat-mdc-extended-fab:active,.mat-mdc-extended-fab:focus:active{box-shadow:var(--mat-fab-extended-pressed-container-elevation-shadow, var(--mat-sys-level3))}.mat-mdc-extended-fab[disabled],.mat-mdc-extended-fab.mat-mdc-button-disabled{cursor:default;pointer-events:none}.mat-mdc-extended-fab[disabled],.mat-mdc-extended-fab[disabled]:focus,.mat-mdc-extended-fab.mat-mdc-button-disabled,.mat-mdc-extended-fab.mat-mdc-button-disabled:focus{box-shadow:none}.mat-mdc-extended-fab.mat-mdc-button-disabled-interactive{pointer-events:auto}[dir=rtl] .mat-mdc-extended-fab .mdc-button__label+.mat-icon,[dir=rtl] .mat-mdc-extended-fab .mdc-button__label+.material-icons,.mat-mdc-extended-fab>.mat-icon,.mat-mdc-extended-fab>.material-icons{margin-left:-8px;margin-right:12px}.mat-mdc-extended-fab .mdc-button__label+.mat-icon,.mat-mdc-extended-fab .mdc-button__label+.material-icons,[dir=rtl] .mat-mdc-extended-fab>.mat-icon,[dir=rtl] .mat-mdc-extended-fab>.material-icons{margin-left:12px;margin-right:-8px}.mat-mdc-extended-fab .mat-mdc-button-touch-target{width:100%}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatMiniFabButton, decorators: [{\n            type: Component,\n            args: [{ selector: `button[mat-mini-fab], a[mat-mini-fab], button[matMiniFab], a[matMiniFab]`, host: {\n                        'class': 'mdc-fab mat-mdc-fab-base mdc-fab--mini mat-mdc-mini-fab',\n                    }, exportAs: 'matButton, matAnchor', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<span\\n    class=\\\"mat-mdc-button-persistent-ripple\\\"\\n    [class.mdc-button__ripple]=\\\"!_isFab\\\"\\n    [class.mdc-fab__ripple]=\\\"_isFab\\\"></span>\\n\\n<ng-content select=\\\".material-icons:not([iconPositionEnd]), mat-icon:not([iconPositionEnd]), [matButtonIcon]:not([iconPositionEnd])\\\">\\n</ng-content>\\n\\n<span class=\\\"mdc-button__label\\\"><ng-content></ng-content></span>\\n\\n<ng-content select=\\\".material-icons[iconPositionEnd], mat-icon[iconPositionEnd], [matButtonIcon][iconPositionEnd]\\\">\\n</ng-content>\\n\\n<!--\\n  The indicator can't be directly on the button, because MDC uses ::before for high contrast\\n  indication and it can't be on the ripple, because it has a border radius and overflow: hidden.\\n-->\\n<span class=\\\"mat-focus-indicator\\\"></span>\\n\\n<span class=\\\"mat-mdc-button-touch-target\\\"></span>\\n\", styles: [\".mat-mdc-fab-base{-webkit-user-select:none;user-select:none;position:relative;display:inline-flex;align-items:center;justify-content:center;box-sizing:border-box;width:56px;height:56px;padding:0;border:none;fill:currentColor;text-decoration:none;cursor:pointer;-moz-appearance:none;-webkit-appearance:none;overflow:visible;transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1),opacity 15ms linear 30ms,transform 270ms 0ms cubic-bezier(0, 0, 0.2, 1);flex-shrink:0;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-fab-base .mat-mdc-button-ripple,.mat-mdc-fab-base .mat-mdc-button-persistent-ripple,.mat-mdc-fab-base .mat-mdc-button-persistent-ripple::before{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-fab-base .mat-mdc-button-ripple{overflow:hidden}.mat-mdc-fab-base .mat-mdc-button-persistent-ripple::before{content:\\\"\\\";opacity:0}.mat-mdc-fab-base .mdc-button__label,.mat-mdc-fab-base .mat-icon{z-index:1;position:relative}.mat-mdc-fab-base .mat-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute}.mat-mdc-fab-base:focus>.mat-focus-indicator::before{content:\\\"\\\"}.mat-mdc-fab-base._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mdc-fab-base::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}.mat-mdc-fab-base[hidden]{display:none}.mat-mdc-fab-base::-moz-focus-inner{padding:0;border:0}.mat-mdc-fab-base:active,.mat-mdc-fab-base:focus{outline:none}.mat-mdc-fab-base:hover{cursor:pointer}.mat-mdc-fab-base>svg{width:100%}.mat-mdc-fab-base .mat-icon,.mat-mdc-fab-base .material-icons{transition:transform 180ms 90ms cubic-bezier(0, 0, 0.2, 1);fill:currentColor;will-change:transform}.mat-mdc-fab-base .mat-focus-indicator::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-fab-base[disabled],.mat-mdc-fab-base.mat-mdc-button-disabled{cursor:default;pointer-events:none}.mat-mdc-fab-base[disabled],.mat-mdc-fab-base[disabled]:focus,.mat-mdc-fab-base.mat-mdc-button-disabled,.mat-mdc-fab-base.mat-mdc-button-disabled:focus{box-shadow:none}.mat-mdc-fab-base.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-fab{background-color:var(--mat-fab-container-color, var(--mat-sys-primary-container));border-radius:var(--mat-fab-container-shape, var(--mat-sys-corner-large));color:var(--mat-fab-foreground-color, var(--mat-sys-on-primary-container, inherit));box-shadow:var(--mat-fab-container-elevation-shadow, var(--mat-sys-level3))}.mat-mdc-fab:hover{box-shadow:var(--mat-fab-hover-container-elevation-shadow, var(--mat-sys-level4))}.mat-mdc-fab:focus{box-shadow:var(--mat-fab-focus-container-elevation-shadow, var(--mat-sys-level3))}.mat-mdc-fab:active,.mat-mdc-fab:focus:active{box-shadow:var(--mat-fab-pressed-container-elevation-shadow, var(--mat-sys-level3))}.mat-mdc-fab[disabled],.mat-mdc-fab.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mat-fab-disabled-state-foreground-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent));background-color:var(--mat-fab-disabled-state-container-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mat-mdc-fab.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-fab .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;display:var(--mat-fab-touch-target-display, block);left:50%;width:48px;transform:translate(-50%, -50%)}.mat-mdc-fab .mat-ripple-element{background-color:var(--mat-fab-ripple-color, color-mix(in srgb, var(--mat-sys-on-primary-container) calc(var(--mat-sys-pressed-state-layer-opacity) * 100%), transparent))}.mat-mdc-fab .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-fab-state-layer-color, var(--mat-sys-on-primary-container))}.mat-mdc-fab.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-fab-disabled-state-layer-color)}.mat-mdc-fab:hover>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-fab.cdk-program-focused>.mat-mdc-button-persistent-ripple::before,.mat-mdc-fab.cdk-keyboard-focused>.mat-mdc-button-persistent-ripple::before,.mat-mdc-fab.mat-mdc-button-disabled-interactive:focus>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-fab:active>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-pressed-state-layer-opacity, var(--mat-sys-pressed-state-layer-opacity))}.mat-mdc-mini-fab{width:40px;height:40px;background-color:var(--mat-fab-small-container-color, var(--mat-sys-primary-container));border-radius:var(--mat-fab-small-container-shape, var(--mat-sys-corner-medium));color:var(--mat-fab-small-foreground-color, var(--mat-sys-on-primary-container, inherit));box-shadow:var(--mat-fab-small-container-elevation-shadow, var(--mat-sys-level3))}.mat-mdc-mini-fab:hover{box-shadow:var(--mat-fab-small-hover-container-elevation-shadow, var(--mat-sys-level4))}.mat-mdc-mini-fab:focus{box-shadow:var(--mat-fab-small-focus-container-elevation-shadow, var(--mat-sys-level3))}.mat-mdc-mini-fab:active,.mat-mdc-mini-fab:focus:active{box-shadow:var(--mat-fab-small-pressed-container-elevation-shadow, var(--mat-sys-level3))}.mat-mdc-mini-fab[disabled],.mat-mdc-mini-fab.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mat-fab-small-disabled-state-foreground-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent));background-color:var(--mat-fab-small-disabled-state-container-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mat-mdc-mini-fab.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-mini-fab .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;display:var(--mat-fab-small-touch-target-display);left:50%;width:48px;transform:translate(-50%, -50%)}.mat-mdc-mini-fab .mat-ripple-element{background-color:var(--mat-fab-small-ripple-color, color-mix(in srgb, var(--mat-sys-on-primary-container) calc(var(--mat-sys-pressed-state-layer-opacity) * 100%), transparent))}.mat-mdc-mini-fab .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-fab-small-state-layer-color, var(--mat-sys-on-primary-container))}.mat-mdc-mini-fab.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-fab-small-disabled-state-layer-color)}.mat-mdc-mini-fab:hover>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-small-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-mini-fab.cdk-program-focused>.mat-mdc-button-persistent-ripple::before,.mat-mdc-mini-fab.cdk-keyboard-focused>.mat-mdc-button-persistent-ripple::before,.mat-mdc-mini-fab.mat-mdc-button-disabled-interactive:focus>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-small-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-mini-fab:active>.mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-small-pressed-state-layer-opacity, var(--mat-sys-pressed-state-layer-opacity))}.mat-mdc-extended-fab{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;padding-left:20px;padding-right:20px;width:auto;max-width:100%;line-height:normal;box-shadow:var(--mat-fab-extended-container-elevation-shadow, var(--mat-sys-level3));height:var(--mat-fab-extended-container-height, 56px);border-radius:var(--mat-fab-extended-container-shape, var(--mat-sys-corner-large));font-family:var(--mat-fab-extended-label-text-font, var(--mat-sys-label-large-font));font-size:var(--mat-fab-extended-label-text-size, var(--mat-sys-label-large-size));font-weight:var(--mat-fab-extended-label-text-weight, var(--mat-sys-label-large-weight));letter-spacing:var(--mat-fab-extended-label-text-tracking, var(--mat-sys-label-large-tracking))}.mat-mdc-extended-fab:hover{box-shadow:var(--mat-fab-extended-hover-container-elevation-shadow, var(--mat-sys-level4))}.mat-mdc-extended-fab:focus{box-shadow:var(--mat-fab-extended-focus-container-elevation-shadow, var(--mat-sys-level3))}.mat-mdc-extended-fab:active,.mat-mdc-extended-fab:focus:active{box-shadow:var(--mat-fab-extended-pressed-container-elevation-shadow, var(--mat-sys-level3))}.mat-mdc-extended-fab[disabled],.mat-mdc-extended-fab.mat-mdc-button-disabled{cursor:default;pointer-events:none}.mat-mdc-extended-fab[disabled],.mat-mdc-extended-fab[disabled]:focus,.mat-mdc-extended-fab.mat-mdc-button-disabled,.mat-mdc-extended-fab.mat-mdc-button-disabled:focus{box-shadow:none}.mat-mdc-extended-fab.mat-mdc-button-disabled-interactive{pointer-events:auto}[dir=rtl] .mat-mdc-extended-fab .mdc-button__label+.mat-icon,[dir=rtl] .mat-mdc-extended-fab .mdc-button__label+.material-icons,.mat-mdc-extended-fab>.mat-icon,.mat-mdc-extended-fab>.material-icons{margin-left:-8px;margin-right:12px}.mat-mdc-extended-fab .mdc-button__label+.mat-icon,.mat-mdc-extended-fab .mdc-button__label+.material-icons,[dir=rtl] .mat-mdc-extended-fab>.mat-icon,[dir=rtl] .mat-mdc-extended-fab>.material-icons{margin-left:12px;margin-right:-8px}.mat-mdc-extended-fab .mat-mdc-button-touch-target{width:100%}\\n\"] }]\n        }], ctorParameters: () => [] });\n// tslint:disable:variable-name\n/**\n * Material Design floating action button (FAB) component for anchor elements. Anchor elements\n * are used to provide links for the user to navigate across different routes or pages.\n * See https://m3.material.io/components/floating-action-button/overview\n *\n * The `MatFabAnchor` class has two appearances: normal and extended.\n */\nconst MatFabAnchor = MatFabButton;\n/**\n * Material Design mini floating action button (FAB) component for anchor elements. Anchor elements\n * are used to provide links for the user to navigate across different routes or pages.\n * See https://m3.material.io/components/floating-action-button/overview\n */\nconst MatMiniFabAnchor = MatMiniFabButton;\n\nclass MatButtonModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatButtonModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.0\", ngImport: i0, type: MatButtonModule, imports: [MatCommonModule,\n            MatRippleModule,\n            MatButton,\n            MatMiniFabButton,\n            MatIconButton,\n            MatFabButton], exports: [MatCommonModule, MatButton, MatMiniFabButton, MatIconButton, MatFabButton] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatButtonModule, imports: [MatCommonModule,\n            MatRippleModule, MatCommonModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatButtonModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        MatCommonModule,\n                        MatRippleModule,\n                        MatButton,\n                        MatMiniFabButton,\n                        MatIconButton,\n                        MatFabButton,\n                    ],\n                    exports: [MatCommonModule, MatButton, MatMiniFabButton, MatIconButton, MatFabButton],\n                }]\n        }] });\n\nexport { MAT_FAB_DEFAULT_OPTIONS, MAT_FAB_DEFAULT_OPTIONS_FACTORY, MatAnchor, MatButton, MatButtonModule, MatFabAnchor, MatFabButton, MatIconButton, MatMiniFabAnchor, MatMiniFabButton };\n\n","import * as i0 from '@angular/core';\nimport { ElementRef, NgModuleRef, EnvironmentInjector, createComponent, Injector, inject, TemplateRef, ViewContainerRef, Directive, DOCUMENT, EventEmitter, Input, Output, NgModule } from '@angular/core';\n\n/**\n * Throws an exception when attempting to attach a null portal to a host.\n * @docs-private\n */\nfunction throwNullPortalError() {\n    throw Error('Must provide a portal to attach');\n}\n/**\n * Throws an exception when attempting to attach a portal to a host that is already attached.\n * @docs-private\n */\nfunction throwPortalAlreadyAttachedError() {\n    throw Error('Host already has a portal attached');\n}\n/**\n * Throws an exception when attempting to attach a portal to an already-disposed host.\n * @docs-private\n */\nfunction throwPortalOutletAlreadyDisposedError() {\n    throw Error('This PortalOutlet has already been disposed');\n}\n/**\n * Throws an exception when attempting to attach an unknown portal type.\n * @docs-private\n */\nfunction throwUnknownPortalTypeError() {\n    throw Error('Attempting to attach an unknown Portal type. BasePortalOutlet accepts either ' +\n        'a ComponentPortal or a TemplatePortal.');\n}\n/**\n * Throws an exception when attempting to attach a portal to a null host.\n * @docs-private\n */\nfunction throwNullPortalOutletError() {\n    throw Error('Attempting to attach a portal to a null PortalOutlet');\n}\n/**\n * Throws an exception when attempting to detach a portal that is not attached.\n * @docs-private\n */\nfunction throwNoPortalAttachedError() {\n    throw Error('Attempting to detach a portal that is not attached to a host');\n}\n\n/**\n * A `Portal` is something that you want to render somewhere else.\n * It can be attach to / detached from a `PortalOutlet`.\n */\nclass Portal {\n    _attachedHost;\n    /** Attach this portal to a host. */\n    attach(host) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (host == null) {\n                throwNullPortalOutletError();\n            }\n            if (host.hasAttached()) {\n                throwPortalAlreadyAttachedError();\n            }\n        }\n        this._attachedHost = host;\n        return host.attach(this);\n    }\n    /** Detach this portal from its host */\n    detach() {\n        let host = this._attachedHost;\n        if (host != null) {\n            this._attachedHost = null;\n            host.detach();\n        }\n        else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throwNoPortalAttachedError();\n        }\n    }\n    /** Whether this portal is attached to a host. */\n    get isAttached() {\n        return this._attachedHost != null;\n    }\n    /**\n     * Sets the PortalOutlet reference without performing `attach()`. This is used directly by\n     * the PortalOutlet when it is performing an `attach()` or `detach()`.\n     */\n    setAttachedHost(host) {\n        this._attachedHost = host;\n    }\n}\n/**\n * A `ComponentPortal` is a portal that instantiates some Component upon attachment.\n */\nclass ComponentPortal extends Portal {\n    /** The type of the component that will be instantiated for attachment. */\n    component;\n    /**\n     * Where the attached component should live in Angular's *logical* component tree.\n     * This is different from where the component *renders*, which is determined by the PortalOutlet.\n     * The origin is necessary when the host is outside of the Angular application context.\n     */\n    viewContainerRef;\n    /** Injector used for the instantiation of the component. */\n    injector;\n    /**\n     * List of DOM nodes that should be projected through `<ng-content>` of the attached component.\n     */\n    projectableNodes;\n    constructor(component, viewContainerRef, injector, projectableNodes) {\n        super();\n        this.component = component;\n        this.viewContainerRef = viewContainerRef;\n        this.injector = injector;\n        this.projectableNodes = projectableNodes;\n    }\n}\n/**\n * A `TemplatePortal` is a portal that represents some embedded template (TemplateRef).\n */\nclass TemplatePortal extends Portal {\n    templateRef;\n    viewContainerRef;\n    context;\n    injector;\n    constructor(\n    /** The embedded template that will be used to instantiate an embedded View in the host. */\n    templateRef, \n    /** Reference to the ViewContainer into which the template will be stamped out. */\n    viewContainerRef, \n    /** Contextual data to be passed in to the embedded view. */\n    context, \n    /** The injector to use for the embedded view. */\n    injector) {\n        super();\n        this.templateRef = templateRef;\n        this.viewContainerRef = viewContainerRef;\n        this.context = context;\n        this.injector = injector;\n    }\n    get origin() {\n        return this.templateRef.elementRef;\n    }\n    /**\n     * Attach the portal to the provided `PortalOutlet`.\n     * When a context is provided it will override the `context` property of the `TemplatePortal`\n     * instance.\n     */\n    attach(host, context = this.context) {\n        this.context = context;\n        return super.attach(host);\n    }\n    detach() {\n        this.context = undefined;\n        return super.detach();\n    }\n}\n/**\n * A `DomPortal` is a portal whose DOM element will be taken from its current position\n * in the DOM and moved into a portal outlet, when it is attached. On detach, the content\n * will be restored to its original position.\n */\nclass DomPortal extends Portal {\n    /** DOM node hosting the portal's content. */\n    element;\n    constructor(element) {\n        super();\n        this.element = element instanceof ElementRef ? element.nativeElement : element;\n    }\n}\n/**\n * Partial implementation of PortalOutlet that handles attaching\n * ComponentPortal and TemplatePortal.\n */\nclass BasePortalOutlet {\n    /** The portal currently attached to the host. */\n    _attachedPortal;\n    /** A function that will permanently dispose this host. */\n    _disposeFn;\n    /** Whether this host has already been permanently disposed. */\n    _isDisposed = false;\n    /** Whether this host has an attached portal. */\n    hasAttached() {\n        return !!this._attachedPortal;\n    }\n    /** Attaches a portal. */\n    attach(portal) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!portal) {\n                throwNullPortalError();\n            }\n            if (this.hasAttached()) {\n                throwPortalAlreadyAttachedError();\n            }\n            if (this._isDisposed) {\n                throwPortalOutletAlreadyDisposedError();\n            }\n        }\n        if (portal instanceof ComponentPortal) {\n            this._attachedPortal = portal;\n            return this.attachComponentPortal(portal);\n        }\n        else if (portal instanceof TemplatePortal) {\n            this._attachedPortal = portal;\n            return this.attachTemplatePortal(portal);\n            // @breaking-change 10.0.0 remove null check for `this.attachDomPortal`.\n        }\n        else if (this.attachDomPortal && portal instanceof DomPortal) {\n            this._attachedPortal = portal;\n            return this.attachDomPortal(portal);\n        }\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throwUnknownPortalTypeError();\n        }\n    }\n    // @breaking-change 10.0.0 `attachDomPortal` to become a required abstract method.\n    attachDomPortal = null;\n    /** Detaches a previously attached portal. */\n    detach() {\n        if (this._attachedPortal) {\n            this._attachedPortal.setAttachedHost(null);\n            this._attachedPortal = null;\n        }\n        this._invokeDisposeFn();\n    }\n    /** Permanently dispose of this portal host. */\n    dispose() {\n        if (this.hasAttached()) {\n            this.detach();\n        }\n        this._invokeDisposeFn();\n        this._isDisposed = true;\n    }\n    /** @docs-private */\n    setDisposeFn(fn) {\n        this._disposeFn = fn;\n    }\n    _invokeDisposeFn() {\n        if (this._disposeFn) {\n            this._disposeFn();\n            this._disposeFn = null;\n        }\n    }\n}\n\n/**\n * A PortalOutlet for attaching portals to an arbitrary DOM element outside of the Angular\n * application context.\n */\nclass DomPortalOutlet extends BasePortalOutlet {\n    outletElement;\n    _appRef;\n    _defaultInjector;\n    /**\n     * @param outletElement Element into which the content is projected.\n     * @param _appRef Reference to the application. Only used in component portals when there\n     *   is no `ViewContainerRef` available.\n     * @param _defaultInjector Injector to use as a fallback when the portal being attached doesn't\n     *   have one. Only used for component portals.\n     */\n    constructor(\n    /** Element into which the content is projected. */\n    outletElement, _appRef, _defaultInjector) {\n        super();\n        this.outletElement = outletElement;\n        this._appRef = _appRef;\n        this._defaultInjector = _defaultInjector;\n    }\n    /**\n     * Attach the given ComponentPortal to DOM element.\n     * @param portal Portal to be attached\n     * @returns Reference to the created component.\n     */\n    attachComponentPortal(portal) {\n        let componentRef;\n        // If the portal specifies a ViewContainerRef, we will use that as the attachment point\n        // for the component (in terms of Angular's component tree, not rendering).\n        // When the ViewContainerRef is missing, we use the factory to create the component directly\n        // and then manually attach the view to the application.\n        if (portal.viewContainerRef) {\n            const injector = portal.injector || portal.viewContainerRef.injector;\n            const ngModuleRef = injector.get(NgModuleRef, null, { optional: true }) || undefined;\n            componentRef = portal.viewContainerRef.createComponent(portal.component, {\n                index: portal.viewContainerRef.length,\n                injector,\n                ngModuleRef,\n                projectableNodes: portal.projectableNodes || undefined,\n            });\n            this.setDisposeFn(() => componentRef.destroy());\n        }\n        else {\n            if ((typeof ngDevMode === 'undefined' || ngDevMode) && !this._appRef) {\n                throw Error('Cannot attach component portal to outlet without an ApplicationRef.');\n            }\n            const appRef = this._appRef;\n            const elementInjector = portal.injector || this._defaultInjector || Injector.NULL;\n            const environmentInjector = elementInjector.get(EnvironmentInjector, appRef.injector);\n            componentRef = createComponent(portal.component, {\n                elementInjector,\n                environmentInjector,\n                projectableNodes: portal.projectableNodes || undefined,\n            });\n            appRef.attachView(componentRef.hostView);\n            this.setDisposeFn(() => {\n                // Verify that the ApplicationRef has registered views before trying to detach a host view.\n                // This check also protects the `detachView` from being called on a destroyed ApplicationRef.\n                if (appRef.viewCount > 0) {\n                    appRef.detachView(componentRef.hostView);\n                }\n                componentRef.destroy();\n            });\n        }\n        // At this point the component has been instantiated, so we move it to the location in the DOM\n        // where we want it to be rendered.\n        this.outletElement.appendChild(this._getComponentRootNode(componentRef));\n        this._attachedPortal = portal;\n        return componentRef;\n    }\n    /**\n     * Attaches a template portal to the DOM as an embedded view.\n     * @param portal Portal to be attached.\n     * @returns Reference to the created embedded view.\n     */\n    attachTemplatePortal(portal) {\n        let viewContainer = portal.viewContainerRef;\n        let viewRef = viewContainer.createEmbeddedView(portal.templateRef, portal.context, {\n            injector: portal.injector,\n        });\n        // The method `createEmbeddedView` will add the view as a child of the viewContainer.\n        // But for the DomPortalOutlet the view can be added everywhere in the DOM\n        // (e.g Overlay Container) To move the view to the specified host element. We just\n        // re-append the existing root nodes.\n        viewRef.rootNodes.forEach(rootNode => this.outletElement.appendChild(rootNode));\n        // Note that we want to detect changes after the nodes have been moved so that\n        // any directives inside the portal that are looking at the DOM inside a lifecycle\n        // hook won't be invoked too early.\n        viewRef.detectChanges();\n        this.setDisposeFn(() => {\n            let index = viewContainer.indexOf(viewRef);\n            if (index !== -1) {\n                viewContainer.remove(index);\n            }\n        });\n        this._attachedPortal = portal;\n        // TODO(jelbourn): Return locals from view.\n        return viewRef;\n    }\n    /**\n     * Attaches a DOM portal by transferring its content into the outlet.\n     * @param portal Portal to be attached.\n     * @deprecated To be turned into a method.\n     * @breaking-change 10.0.0\n     */\n    attachDomPortal = (portal) => {\n        const element = portal.element;\n        if (!element.parentNode && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('DOM portal content must be attached to a parent node.');\n        }\n        // Anchor used to save the element's previous position so\n        // that we can restore it when the portal is detached.\n        const anchorNode = this.outletElement.ownerDocument.createComment('dom-portal');\n        element.parentNode.insertBefore(anchorNode, element);\n        this.outletElement.appendChild(element);\n        this._attachedPortal = portal;\n        super.setDisposeFn(() => {\n            // We can't use `replaceWith` here because IE doesn't support it.\n            if (anchorNode.parentNode) {\n                anchorNode.parentNode.replaceChild(element, anchorNode);\n            }\n        });\n    };\n    /**\n     * Clears out a portal from the DOM.\n     */\n    dispose() {\n        super.dispose();\n        this.outletElement.remove();\n    }\n    /** Gets the root HTMLElement for an instantiated component. */\n    _getComponentRootNode(componentRef) {\n        return componentRef.hostView.rootNodes[0];\n    }\n}\n\n/**\n * Directive version of a `TemplatePortal`. Because the directive *is* a TemplatePortal,\n * the directive instance itself can be attached to a host, enabling declarative use of portals.\n */\nclass CdkPortal extends TemplatePortal {\n    constructor() {\n        const templateRef = inject(TemplateRef);\n        const viewContainerRef = inject(ViewContainerRef);\n        super(templateRef, viewContainerRef);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkPortal, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: CdkPortal, isStandalone: true, selector: \"[cdkPortal]\", exportAs: [\"cdkPortal\"], usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkPortal, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkPortal]',\n                    exportAs: 'cdkPortal',\n                }]\n        }], ctorParameters: () => [] });\n/**\n * @deprecated Use `CdkPortal` instead.\n * @breaking-change 9.0.0\n */\nclass TemplatePortalDirective extends CdkPortal {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: TemplatePortalDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: TemplatePortalDirective, isStandalone: true, selector: \"[cdk-portal], [portal]\", providers: [\n            {\n                provide: CdkPortal,\n                useExisting: TemplatePortalDirective,\n            },\n        ], exportAs: [\"cdkPortal\"], usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: TemplatePortalDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdk-portal], [portal]',\n                    exportAs: 'cdkPortal',\n                    providers: [\n                        {\n                            provide: CdkPortal,\n                            useExisting: TemplatePortalDirective,\n                        },\n                    ],\n                }]\n        }] });\n/**\n * Directive version of a PortalOutlet. Because the directive *is* a PortalOutlet, portals can be\n * directly attached to it, enabling declarative use.\n *\n * Usage:\n * `<ng-template [cdkPortalOutlet]=\"greeting\"></ng-template>`\n */\nclass CdkPortalOutlet extends BasePortalOutlet {\n    _moduleRef = inject(NgModuleRef, { optional: true });\n    _document = inject(DOCUMENT);\n    _viewContainerRef = inject(ViewContainerRef);\n    /** Whether the portal component is initialized. */\n    _isInitialized = false;\n    /** Reference to the currently-attached component/view ref. */\n    _attachedRef;\n    constructor() {\n        super();\n    }\n    /** Portal associated with the Portal outlet. */\n    get portal() {\n        return this._attachedPortal;\n    }\n    set portal(portal) {\n        // Ignore the cases where the `portal` is set to a falsy value before the lifecycle hooks have\n        // run. This handles the cases where the user might do something like `<div cdkPortalOutlet>`\n        // and attach a portal programmatically in the parent component. When Angular does the first CD\n        // round, it will fire the setter with empty string, causing the user's content to be cleared.\n        if (this.hasAttached() && !portal && !this._isInitialized) {\n            return;\n        }\n        if (this.hasAttached()) {\n            super.detach();\n        }\n        if (portal) {\n            super.attach(portal);\n        }\n        this._attachedPortal = portal || null;\n    }\n    /** Emits when a portal is attached to the outlet. */\n    attached = new EventEmitter();\n    /** Component or view reference that is attached to the portal. */\n    get attachedRef() {\n        return this._attachedRef;\n    }\n    ngOnInit() {\n        this._isInitialized = true;\n    }\n    ngOnDestroy() {\n        super.dispose();\n        this._attachedRef = this._attachedPortal = null;\n    }\n    /**\n     * Attach the given ComponentPortal to this PortalOutlet.\n     *\n     * @param portal Portal to be attached to the portal outlet.\n     * @returns Reference to the created component.\n     */\n    attachComponentPortal(portal) {\n        portal.setAttachedHost(this);\n        // If the portal specifies an origin, use that as the logical location of the component\n        // in the application tree. Otherwise use the location of this PortalOutlet.\n        const viewContainerRef = portal.viewContainerRef != null ? portal.viewContainerRef : this._viewContainerRef;\n        const ref = viewContainerRef.createComponent(portal.component, {\n            index: viewContainerRef.length,\n            injector: portal.injector || viewContainerRef.injector,\n            projectableNodes: portal.projectableNodes || undefined,\n            ngModuleRef: this._moduleRef || undefined,\n        });\n        // If we're using a view container that's different from the injected one (e.g. when the portal\n        // specifies its own) we need to move the component into the outlet, otherwise it'll be rendered\n        // inside of the alternate view container.\n        if (viewContainerRef !== this._viewContainerRef) {\n            this._getRootNode().appendChild(ref.hostView.rootNodes[0]);\n        }\n        super.setDisposeFn(() => ref.destroy());\n        this._attachedPortal = portal;\n        this._attachedRef = ref;\n        this.attached.emit(ref);\n        return ref;\n    }\n    /**\n     * Attach the given TemplatePortal to this PortalHost as an embedded View.\n     * @param portal Portal to be attached.\n     * @returns Reference to the created embedded view.\n     */\n    attachTemplatePortal(portal) {\n        portal.setAttachedHost(this);\n        const viewRef = this._viewContainerRef.createEmbeddedView(portal.templateRef, portal.context, {\n            injector: portal.injector,\n        });\n        super.setDisposeFn(() => this._viewContainerRef.clear());\n        this._attachedPortal = portal;\n        this._attachedRef = viewRef;\n        this.attached.emit(viewRef);\n        return viewRef;\n    }\n    /**\n     * Attaches the given DomPortal to this PortalHost by moving all of the portal content into it.\n     * @param portal Portal to be attached.\n     * @deprecated To be turned into a method.\n     * @breaking-change 10.0.0\n     */\n    attachDomPortal = (portal) => {\n        const element = portal.element;\n        if (!element.parentNode && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('DOM portal content must be attached to a parent node.');\n        }\n        // Anchor used to save the element's previous position so\n        // that we can restore it when the portal is detached.\n        const anchorNode = this._document.createComment('dom-portal');\n        portal.setAttachedHost(this);\n        element.parentNode.insertBefore(anchorNode, element);\n        this._getRootNode().appendChild(element);\n        this._attachedPortal = portal;\n        super.setDisposeFn(() => {\n            if (anchorNode.parentNode) {\n                anchorNode.parentNode.replaceChild(element, anchorNode);\n            }\n        });\n    };\n    /** Gets the root node of the portal outlet. */\n    _getRootNode() {\n        const nativeElement = this._viewContainerRef.element.nativeElement;\n        // The directive could be set on a template which will result in a comment\n        // node being the root. Use the comment's parent node if that is the case.\n        return (nativeElement.nodeType === nativeElement.ELEMENT_NODE\n            ? nativeElement\n            : nativeElement.parentNode);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkPortalOutlet, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: CdkPortalOutlet, isStandalone: true, selector: \"[cdkPortalOutlet]\", inputs: { portal: [\"cdkPortalOutlet\", \"portal\"] }, outputs: { attached: \"attached\" }, exportAs: [\"cdkPortalOutlet\"], usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkPortalOutlet, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkPortalOutlet]',\n                    exportAs: 'cdkPortalOutlet',\n                }]\n        }], ctorParameters: () => [], propDecorators: { portal: [{\n                type: Input,\n                args: ['cdkPortalOutlet']\n            }], attached: [{\n                type: Output\n            }] } });\n/**\n * @deprecated Use `CdkPortalOutlet` instead.\n * @breaking-change 9.0.0\n */\nclass PortalHostDirective extends CdkPortalOutlet {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: PortalHostDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: PortalHostDirective, isStandalone: true, selector: \"[cdkPortalHost], [portalHost]\", inputs: { portal: [\"cdkPortalHost\", \"portal\"] }, providers: [\n            {\n                provide: CdkPortalOutlet,\n                useExisting: PortalHostDirective,\n            },\n        ], exportAs: [\"cdkPortalHost\"], usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: PortalHostDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkPortalHost], [portalHost]',\n                    exportAs: 'cdkPortalHost',\n                    inputs: [{ name: 'portal', alias: 'cdkPortalHost' }],\n                    providers: [\n                        {\n                            provide: CdkPortalOutlet,\n                            useExisting: PortalHostDirective,\n                        },\n                    ],\n                }]\n        }] });\nclass PortalModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: PortalModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.0\", ngImport: i0, type: PortalModule, imports: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective], exports: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: PortalModule });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: PortalModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective],\n                    exports: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective],\n                }]\n        }] });\n\nexport { BasePortalOutlet, CdkPortal, CdkPortalOutlet, ComponentPortal, DomPortal, DomPortalOutlet, Portal, PortalHostDirective, PortalModule, TemplatePortal, TemplatePortalDirective };\n\n","import { ConnectableObservable } from 'rxjs';\n\nclass DataSource {\n}\n/** Checks whether an object is a data source. */\nfunction isDataSource(value) {\n    // Check if the value is a DataSource by observing if it has a connect function. Cannot\n    // be checked as an `instanceof DataSource` since people could create their own sources\n    // that match the interface, but don't extend DataSource. We also can't use `isObservable`\n    // here, because of some internal apps.\n    return value && typeof value.connect === 'function' && !(value instanceof ConnectableObservable);\n}\n\nexport { DataSource as D, isDataSource as i };\n\n","import { isObservable, of } from 'rxjs';\nimport { D as DataSource } from './data-source-D34wiQZj.mjs';\nimport { InjectionToken } from '@angular/core';\n\n/** DataSource wrapper for a native array. */\nclass ArrayDataSource extends DataSource {\n    _data;\n    constructor(_data) {\n        super();\n        this._data = _data;\n    }\n    connect() {\n        return isObservable(this._data) ? this._data : of(this._data);\n    }\n    disconnect() { }\n}\n\n/** Indicates how a view was changed by a `_ViewRepeater`. */\nvar _ViewRepeaterOperation;\n(function (_ViewRepeaterOperation) {\n    /** The content of an existing view was replaced with another item. */\n    _ViewRepeaterOperation[_ViewRepeaterOperation[\"REPLACED\"] = 0] = \"REPLACED\";\n    /** A new view was created with `createEmbeddedView`. */\n    _ViewRepeaterOperation[_ViewRepeaterOperation[\"INSERTED\"] = 1] = \"INSERTED\";\n    /** The position of a view changed, but the content remains the same. */\n    _ViewRepeaterOperation[_ViewRepeaterOperation[\"MOVED\"] = 2] = \"MOVED\";\n    /** A view was detached from the view container. */\n    _ViewRepeaterOperation[_ViewRepeaterOperation[\"REMOVED\"] = 3] = \"REMOVED\";\n})(_ViewRepeaterOperation || (_ViewRepeaterOperation = {}));\n/**\n * Injection token for `_ViewRepeater`. This token is for use by Angular Material only.\n * @docs-private\n */\nconst _VIEW_REPEATER_STRATEGY = new InjectionToken('_ViewRepeater');\n\n/**\n * A repeater that caches views when they are removed from a\n * `ViewContainerRef`. When new items are inserted into the container,\n * the repeater will reuse one of the cached views instead of creating a new\n * embedded view. Recycling cached views reduces the quantity of expensive DOM\n * inserts.\n *\n * @template T The type for the embedded view's $implicit property.\n * @template R The type for the item in each IterableDiffer change record.\n * @template C The type for the context passed to each embedded view.\n */\nclass _RecycleViewRepeaterStrategy {\n    /**\n     * The size of the cache used to store unused views.\n     * Setting the cache size to `0` will disable caching. Defaults to 20 views.\n     */\n    viewCacheSize = 20;\n    /**\n     * View cache that stores embedded view instances that have been previously stamped out,\n     * but don't are not currently rendered. The view repeater will reuse these views rather than\n     * creating brand new ones.\n     *\n     * TODO(michaeljamesparsons) Investigate whether using a linked list would improve performance.\n     */\n    _viewCache = [];\n    /** Apply changes to the DOM. */\n    applyChanges(changes, viewContainerRef, itemContextFactory, itemValueResolver, itemViewChanged) {\n        // Rearrange the views to put them in the right location.\n        changes.forEachOperation((record, adjustedPreviousIndex, currentIndex) => {\n            let view;\n            let operation;\n            if (record.previousIndex == null) {\n                // Item added.\n                const viewArgsFactory = () => itemContextFactory(record, adjustedPreviousIndex, currentIndex);\n                view = this._insertView(viewArgsFactory, currentIndex, viewContainerRef, itemValueResolver(record));\n                operation = view ? _ViewRepeaterOperation.INSERTED : _ViewRepeaterOperation.REPLACED;\n            }\n            else if (currentIndex == null) {\n                // Item removed.\n                this._detachAndCacheView(adjustedPreviousIndex, viewContainerRef);\n                operation = _ViewRepeaterOperation.REMOVED;\n            }\n            else {\n                // Item moved.\n                view = this._moveView(adjustedPreviousIndex, currentIndex, viewContainerRef, itemValueResolver(record));\n                operation = _ViewRepeaterOperation.MOVED;\n            }\n            if (itemViewChanged) {\n                itemViewChanged({\n                    context: view?.context,\n                    operation,\n                    record,\n                });\n            }\n        });\n    }\n    detach() {\n        for (const view of this._viewCache) {\n            view.destroy();\n        }\n        this._viewCache = [];\n    }\n    /**\n     * Inserts a view for a new item, either from the cache or by creating a new\n     * one. Returns `undefined` if the item was inserted into a cached view.\n     */\n    _insertView(viewArgsFactory, currentIndex, viewContainerRef, value) {\n        const cachedView = this._insertViewFromCache(currentIndex, viewContainerRef);\n        if (cachedView) {\n            cachedView.context.$implicit = value;\n            return undefined;\n        }\n        const viewArgs = viewArgsFactory();\n        return viewContainerRef.createEmbeddedView(viewArgs.templateRef, viewArgs.context, viewArgs.index);\n    }\n    /** Detaches the view at the given index and inserts into the view cache. */\n    _detachAndCacheView(index, viewContainerRef) {\n        const detachedView = viewContainerRef.detach(index);\n        this._maybeCacheView(detachedView, viewContainerRef);\n    }\n    /** Moves view at the previous index to the current index. */\n    _moveView(adjustedPreviousIndex, currentIndex, viewContainerRef, value) {\n        const view = viewContainerRef.get(adjustedPreviousIndex);\n        viewContainerRef.move(view, currentIndex);\n        view.context.$implicit = value;\n        return view;\n    }\n    /**\n     * Cache the given detached view. If the cache is full, the view will be\n     * destroyed.\n     */\n    _maybeCacheView(view, viewContainerRef) {\n        if (this._viewCache.length < this.viewCacheSize) {\n            this._viewCache.push(view);\n        }\n        else {\n            const index = viewContainerRef.indexOf(view);\n            // The host component could remove views from the container outside of\n            // the view repeater. It's unlikely this will occur, but just in case,\n            // destroy the view on its own, otherwise destroy it through the\n            // container to ensure that all the references are removed.\n            if (index === -1) {\n                view.destroy();\n            }\n            else {\n                viewContainerRef.remove(index);\n            }\n        }\n    }\n    /** Inserts a recycled view from the cache at the given index. */\n    _insertViewFromCache(index, viewContainerRef) {\n        const cachedView = this._viewCache.pop();\n        if (cachedView) {\n            viewContainerRef.insert(cachedView, index);\n        }\n        return cachedView || null;\n    }\n}\n\nexport { ArrayDataSource as A, _RecycleViewRepeaterStrategy as _, _ViewRepeaterOperation as a, _VIEW_REPEATER_STRATEGY as b };\n\n","import * as i0 from '@angular/core';\nimport { InjectionToken, forwardRef, Directive, Input, inject, NgZone, RendererFactory2, Injectable, ElementRef, Renderer2, DOCUMENT, ChangeDetectorRef, signal, Injector, effect, ApplicationRef, DestroyRef, untracked, afterNextRender, booleanAttribute, Optional, Inject, Component, ViewEncapsulation, ChangeDetectionStrategy, Output, ViewChild, ViewContainerRef, TemplateRef, IterableDiffers, NgModule } from '@angular/core';\nimport { Subject, of, Observable, Subscription, animationFrameScheduler, asapScheduler, isObservable } from 'rxjs';\nimport { distinctUntilChanged, auditTime, filter, startWith, takeUntil, pairwise, switchMap, shareReplay } from 'rxjs/operators';\nimport { c as coerceNumberProperty, a as coerceElement } from './element-x4z00URv.mjs';\nimport { P as Platform } from './platform-DNDzkVcI.mjs';\nimport { D as Directionality } from './directionality-CChdj3az.mjs';\nimport { g as getRtlScrollAxisType, R as RtlScrollAxisType, s as supportsScrollBehavior } from './scrolling-BkvA05C8.mjs';\nimport { BidiModule } from './bidi.mjs';\nexport { Dir as ɵɵDir } from './bidi.mjs';\nimport { b as _VIEW_REPEATER_STRATEGY, A as ArrayDataSource, _ as _RecycleViewRepeaterStrategy } from './recycle-view-repeater-strategy-SfuyU210.mjs';\nimport { i as isDataSource } from './data-source-D34wiQZj.mjs';\nimport '@angular/common';\n\n/** The injection token used to specify the virtual scrolling strategy. */\nconst VIRTUAL_SCROLL_STRATEGY = new InjectionToken('VIRTUAL_SCROLL_STRATEGY');\n\n/** Virtual scrolling strategy for lists with items of known fixed size. */\nclass FixedSizeVirtualScrollStrategy {\n    _scrolledIndexChange = new Subject();\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    scrolledIndexChange = this._scrolledIndexChange.pipe(distinctUntilChanged());\n    /** The attached viewport. */\n    _viewport = null;\n    /** The size of the items in the virtually scrolling list. */\n    _itemSize;\n    /** The minimum amount of buffer rendered beyond the viewport (in pixels). */\n    _minBufferPx;\n    /** The number of buffer items to render beyond the edge of the viewport (in pixels). */\n    _maxBufferPx;\n    /**\n     * @param itemSize The size of the items in the virtually scrolling list.\n     * @param minBufferPx The minimum amount of buffer (in pixels) before needing to render more\n     * @param maxBufferPx The amount of buffer (in pixels) to render when rendering more.\n     */\n    constructor(itemSize, minBufferPx, maxBufferPx) {\n        this._itemSize = itemSize;\n        this._minBufferPx = minBufferPx;\n        this._maxBufferPx = maxBufferPx;\n    }\n    /**\n     * Attaches this scroll strategy to a viewport.\n     * @param viewport The viewport to attach this strategy to.\n     */\n    attach(viewport) {\n        this._viewport = viewport;\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    }\n    /** Detaches this scroll strategy from the currently attached viewport. */\n    detach() {\n        this._scrolledIndexChange.complete();\n        this._viewport = null;\n    }\n    /**\n     * Update the item size and buffer size.\n     * @param itemSize The size of the items in the virtually scrolling list.\n     * @param minBufferPx The minimum amount of buffer (in pixels) before needing to render more\n     * @param maxBufferPx The amount of buffer (in pixels) to render when rendering more.\n     */\n    updateItemAndBufferSize(itemSize, minBufferPx, maxBufferPx) {\n        if (maxBufferPx < minBufferPx && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('CDK virtual scroll: maxBufferPx must be greater than or equal to minBufferPx');\n        }\n        this._itemSize = itemSize;\n        this._minBufferPx = minBufferPx;\n        this._maxBufferPx = maxBufferPx;\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    }\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    onContentScrolled() {\n        this._updateRenderedRange();\n    }\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    onDataLengthChanged() {\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    }\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    onContentRendered() {\n        /* no-op */\n    }\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    onRenderedOffsetChanged() {\n        /* no-op */\n    }\n    /**\n     * Scroll to the offset for the given index.\n     * @param index The index of the element to scroll to.\n     * @param behavior The ScrollBehavior to use when scrolling.\n     */\n    scrollToIndex(index, behavior) {\n        if (this._viewport) {\n            this._viewport.scrollToOffset(index * this._itemSize, behavior);\n        }\n    }\n    /** Update the viewport's total content size. */\n    _updateTotalContentSize() {\n        if (!this._viewport) {\n            return;\n        }\n        this._viewport.setTotalContentSize(this._viewport.getDataLength() * this._itemSize);\n    }\n    /** Update the viewport's rendered range. */\n    _updateRenderedRange() {\n        if (!this._viewport) {\n            return;\n        }\n        const renderedRange = this._viewport.getRenderedRange();\n        const newRange = { start: renderedRange.start, end: renderedRange.end };\n        const viewportSize = this._viewport.getViewportSize();\n        const dataLength = this._viewport.getDataLength();\n        let scrollOffset = this._viewport.measureScrollOffset();\n        // Prevent NaN as result when dividing by zero.\n        let firstVisibleIndex = this._itemSize > 0 ? scrollOffset / this._itemSize : 0;\n        // If user scrolls to the bottom of the list and data changes to a smaller list\n        if (newRange.end > dataLength) {\n            // We have to recalculate the first visible index based on new data length and viewport size.\n            const maxVisibleItems = Math.ceil(viewportSize / this._itemSize);\n            const newVisibleIndex = Math.max(0, Math.min(firstVisibleIndex, dataLength - maxVisibleItems));\n            // If first visible index changed we must update scroll offset to handle start/end buffers\n            // Current range must also be adjusted to cover the new position (bottom of new list).\n            if (firstVisibleIndex != newVisibleIndex) {\n                firstVisibleIndex = newVisibleIndex;\n                scrollOffset = newVisibleIndex * this._itemSize;\n                newRange.start = Math.floor(firstVisibleIndex);\n            }\n            newRange.end = Math.max(0, Math.min(dataLength, newRange.start + maxVisibleItems));\n        }\n        const startBuffer = scrollOffset - newRange.start * this._itemSize;\n        if (startBuffer < this._minBufferPx && newRange.start != 0) {\n            const expandStart = Math.ceil((this._maxBufferPx - startBuffer) / this._itemSize);\n            newRange.start = Math.max(0, newRange.start - expandStart);\n            newRange.end = Math.min(dataLength, Math.ceil(firstVisibleIndex + (viewportSize + this._minBufferPx) / this._itemSize));\n        }\n        else {\n            const endBuffer = newRange.end * this._itemSize - (scrollOffset + viewportSize);\n            if (endBuffer < this._minBufferPx && newRange.end != dataLength) {\n                const expandEnd = Math.ceil((this._maxBufferPx - endBuffer) / this._itemSize);\n                if (expandEnd > 0) {\n                    newRange.end = Math.min(dataLength, newRange.end + expandEnd);\n                    newRange.start = Math.max(0, Math.floor(firstVisibleIndex - this._minBufferPx / this._itemSize));\n                }\n            }\n        }\n        this._viewport.setRenderedRange(newRange);\n        this._viewport.setRenderedContentOffset(this._itemSize * newRange.start);\n        this._scrolledIndexChange.next(Math.floor(firstVisibleIndex));\n    }\n}\n/**\n * Provider factory for `FixedSizeVirtualScrollStrategy` that simply extracts the already created\n * `FixedSizeVirtualScrollStrategy` from the given directive.\n * @param fixedSizeDir The instance of `CdkFixedSizeVirtualScroll` to extract the\n *     `FixedSizeVirtualScrollStrategy` from.\n */\nfunction _fixedSizeVirtualScrollStrategyFactory(fixedSizeDir) {\n    return fixedSizeDir._scrollStrategy;\n}\n/** A virtual scroll strategy that supports fixed-size items. */\nclass CdkFixedSizeVirtualScroll {\n    /** The size of the items in the list (in pixels). */\n    get itemSize() {\n        return this._itemSize;\n    }\n    set itemSize(value) {\n        this._itemSize = coerceNumberProperty(value);\n    }\n    _itemSize = 20;\n    /**\n     * The minimum amount of buffer rendered beyond the viewport (in pixels).\n     * If the amount of buffer dips below this number, more items will be rendered. Defaults to 100px.\n     */\n    get minBufferPx() {\n        return this._minBufferPx;\n    }\n    set minBufferPx(value) {\n        this._minBufferPx = coerceNumberProperty(value);\n    }\n    _minBufferPx = 100;\n    /**\n     * The number of pixels worth of buffer to render for when rendering new items. Defaults to 200px.\n     */\n    get maxBufferPx() {\n        return this._maxBufferPx;\n    }\n    set maxBufferPx(value) {\n        this._maxBufferPx = coerceNumberProperty(value);\n    }\n    _maxBufferPx = 200;\n    /** The scroll strategy used by this directive. */\n    _scrollStrategy = new FixedSizeVirtualScrollStrategy(this.itemSize, this.minBufferPx, this.maxBufferPx);\n    ngOnChanges() {\n        this._scrollStrategy.updateItemAndBufferSize(this.itemSize, this.minBufferPx, this.maxBufferPx);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkFixedSizeVirtualScroll, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: CdkFixedSizeVirtualScroll, isStandalone: true, selector: \"cdk-virtual-scroll-viewport[itemSize]\", inputs: { itemSize: \"itemSize\", minBufferPx: \"minBufferPx\", maxBufferPx: \"maxBufferPx\" }, providers: [\n            {\n                provide: VIRTUAL_SCROLL_STRATEGY,\n                useFactory: _fixedSizeVirtualScrollStrategyFactory,\n                deps: [forwardRef(() => CdkFixedSizeVirtualScroll)],\n            },\n        ], usesOnChanges: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkFixedSizeVirtualScroll, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-virtual-scroll-viewport[itemSize]',\n                    providers: [\n                        {\n                            provide: VIRTUAL_SCROLL_STRATEGY,\n                            useFactory: _fixedSizeVirtualScrollStrategyFactory,\n                            deps: [forwardRef(() => CdkFixedSizeVirtualScroll)],\n                        },\n                    ],\n                }]\n        }], propDecorators: { itemSize: [{\n                type: Input\n            }], minBufferPx: [{\n                type: Input\n            }], maxBufferPx: [{\n                type: Input\n            }] } });\n\n/** Time in ms to throttle the scrolling events by default. */\nconst DEFAULT_SCROLL_TIME = 20;\n/**\n * Service contained all registered Scrollable references and emits an event when any one of the\n * Scrollable references emit a scrolled event.\n */\nclass ScrollDispatcher {\n    _ngZone = inject(NgZone);\n    _platform = inject(Platform);\n    _renderer = inject(RendererFactory2).createRenderer(null, null);\n    _cleanupGlobalListener;\n    constructor() { }\n    /** Subject for notifying that a registered scrollable reference element has been scrolled. */\n    _scrolled = new Subject();\n    /** Keeps track of the amount of subscriptions to `scrolled`. Used for cleaning up afterwards. */\n    _scrolledCount = 0;\n    /**\n     * Map of all the scrollable references that are registered with the service and their\n     * scroll event subscriptions.\n     */\n    scrollContainers = new Map();\n    /**\n     * Registers a scrollable instance with the service and listens for its scrolled events. When the\n     * scrollable is scrolled, the service emits the event to its scrolled observable.\n     * @param scrollable Scrollable instance to be registered.\n     */\n    register(scrollable) {\n        if (!this.scrollContainers.has(scrollable)) {\n            this.scrollContainers.set(scrollable, scrollable.elementScrolled().subscribe(() => this._scrolled.next(scrollable)));\n        }\n    }\n    /**\n     * De-registers a Scrollable reference and unsubscribes from its scroll event observable.\n     * @param scrollable Scrollable instance to be deregistered.\n     */\n    deregister(scrollable) {\n        const scrollableReference = this.scrollContainers.get(scrollable);\n        if (scrollableReference) {\n            scrollableReference.unsubscribe();\n            this.scrollContainers.delete(scrollable);\n        }\n    }\n    /**\n     * Returns an observable that emits an event whenever any of the registered Scrollable\n     * references (or window, document, or body) fire a scrolled event. Can provide a time in ms\n     * to override the default \"throttle\" time.\n     *\n     * **Note:** in order to avoid hitting change detection for every scroll event,\n     * all of the events emitted from this stream will be run outside the Angular zone.\n     * If you need to update any data bindings as a result of a scroll event, you have\n     * to run the callback using `NgZone.run`.\n     */\n    scrolled(auditTimeInMs = DEFAULT_SCROLL_TIME) {\n        if (!this._platform.isBrowser) {\n            return of();\n        }\n        return new Observable((observer) => {\n            if (!this._cleanupGlobalListener) {\n                this._cleanupGlobalListener = this._ngZone.runOutsideAngular(() => this._renderer.listen('document', 'scroll', () => this._scrolled.next()));\n            }\n            // In the case of a 0ms delay, use an observable without auditTime\n            // since it does add a perceptible delay in processing overhead.\n            const subscription = auditTimeInMs > 0\n                ? this._scrolled.pipe(auditTime(auditTimeInMs)).subscribe(observer)\n                : this._scrolled.subscribe(observer);\n            this._scrolledCount++;\n            return () => {\n                subscription.unsubscribe();\n                this._scrolledCount--;\n                if (!this._scrolledCount) {\n                    this._cleanupGlobalListener?.();\n                    this._cleanupGlobalListener = undefined;\n                }\n            };\n        });\n    }\n    ngOnDestroy() {\n        this._cleanupGlobalListener?.();\n        this._cleanupGlobalListener = undefined;\n        this.scrollContainers.forEach((_, container) => this.deregister(container));\n        this._scrolled.complete();\n    }\n    /**\n     * Returns an observable that emits whenever any of the\n     * scrollable ancestors of an element are scrolled.\n     * @param elementOrElementRef Element whose ancestors to listen for.\n     * @param auditTimeInMs Time to throttle the scroll events.\n     */\n    ancestorScrolled(elementOrElementRef, auditTimeInMs) {\n        const ancestors = this.getAncestorScrollContainers(elementOrElementRef);\n        return this.scrolled(auditTimeInMs).pipe(filter(target => !target || ancestors.indexOf(target) > -1));\n    }\n    /** Returns all registered Scrollables that contain the provided element. */\n    getAncestorScrollContainers(elementOrElementRef) {\n        const scrollingContainers = [];\n        this.scrollContainers.forEach((_subscription, scrollable) => {\n            if (this._scrollableContainsElement(scrollable, elementOrElementRef)) {\n                scrollingContainers.push(scrollable);\n            }\n        });\n        return scrollingContainers;\n    }\n    /** Returns true if the element is contained within the provided Scrollable. */\n    _scrollableContainsElement(scrollable, elementOrElementRef) {\n        let element = coerceElement(elementOrElementRef);\n        let scrollableElement = scrollable.getElementRef().nativeElement;\n        // Traverse through the element parents until we reach null, checking if any of the elements\n        // are the scrollable's element.\n        do {\n            if (element == scrollableElement) {\n                return true;\n            }\n        } while ((element = element.parentElement));\n        return false;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: ScrollDispatcher, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: ScrollDispatcher, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: ScrollDispatcher, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [] });\n\n/**\n * Sends an event when the directive's element is scrolled. Registers itself with the\n * ScrollDispatcher service to include itself as part of its collection of scrolling events that it\n * can be listened to through the service.\n */\nclass CdkScrollable {\n    elementRef = inject(ElementRef);\n    scrollDispatcher = inject(ScrollDispatcher);\n    ngZone = inject(NgZone);\n    dir = inject(Directionality, { optional: true });\n    _scrollElement = this.elementRef.nativeElement;\n    _destroyed = new Subject();\n    _renderer = inject(Renderer2);\n    _cleanupScroll;\n    _elementScrolled = new Subject();\n    constructor() { }\n    ngOnInit() {\n        this._cleanupScroll = this.ngZone.runOutsideAngular(() => this._renderer.listen(this._scrollElement, 'scroll', event => this._elementScrolled.next(event)));\n        this.scrollDispatcher.register(this);\n    }\n    ngOnDestroy() {\n        this._cleanupScroll?.();\n        this._elementScrolled.complete();\n        this.scrollDispatcher.deregister(this);\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Returns observable that emits when a scroll event is fired on the host element. */\n    elementScrolled() {\n        return this._elementScrolled;\n    }\n    /** Gets the ElementRef for the viewport. */\n    getElementRef() {\n        return this.elementRef;\n    }\n    /**\n     * Scrolls to the specified offsets. This is a normalized version of the browser's native scrollTo\n     * method, since browsers are not consistent about what scrollLeft means in RTL. For this method\n     * left and right always refer to the left and right side of the scrolling container irrespective\n     * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n     * in an RTL context.\n     * @param options specified the offsets to scroll to.\n     */\n    scrollTo(options) {\n        const el = this.elementRef.nativeElement;\n        const isRtl = this.dir && this.dir.value == 'rtl';\n        // Rewrite start & end offsets as right or left offsets.\n        if (options.left == null) {\n            options.left = isRtl ? options.end : options.start;\n        }\n        if (options.right == null) {\n            options.right = isRtl ? options.start : options.end;\n        }\n        // Rewrite the bottom offset as a top offset.\n        if (options.bottom != null) {\n            options.top =\n                el.scrollHeight - el.clientHeight - options.bottom;\n        }\n        // Rewrite the right offset as a left offset.\n        if (isRtl && getRtlScrollAxisType() != RtlScrollAxisType.NORMAL) {\n            if (options.left != null) {\n                options.right =\n                    el.scrollWidth - el.clientWidth - options.left;\n            }\n            if (getRtlScrollAxisType() == RtlScrollAxisType.INVERTED) {\n                options.left = options.right;\n            }\n            else if (getRtlScrollAxisType() == RtlScrollAxisType.NEGATED) {\n                options.left = options.right ? -options.right : options.right;\n            }\n        }\n        else {\n            if (options.right != null) {\n                options.left =\n                    el.scrollWidth - el.clientWidth - options.right;\n            }\n        }\n        this._applyScrollToOptions(options);\n    }\n    _applyScrollToOptions(options) {\n        const el = this.elementRef.nativeElement;\n        if (supportsScrollBehavior()) {\n            el.scrollTo(options);\n        }\n        else {\n            if (options.top != null) {\n                el.scrollTop = options.top;\n            }\n            if (options.left != null) {\n                el.scrollLeft = options.left;\n            }\n        }\n    }\n    /**\n     * Measures the scroll offset relative to the specified edge of the viewport. This method can be\n     * used instead of directly checking scrollLeft or scrollTop, since browsers are not consistent\n     * about what scrollLeft means in RTL. The values returned by this method are normalized such that\n     * left and right always refer to the left and right side of the scrolling container irrespective\n     * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n     * in an RTL context.\n     * @param from The edge to measure from.\n     */\n    measureScrollOffset(from) {\n        const LEFT = 'left';\n        const RIGHT = 'right';\n        const el = this.elementRef.nativeElement;\n        if (from == 'top') {\n            return el.scrollTop;\n        }\n        if (from == 'bottom') {\n            return el.scrollHeight - el.clientHeight - el.scrollTop;\n        }\n        // Rewrite start & end as left or right offsets.\n        const isRtl = this.dir && this.dir.value == 'rtl';\n        if (from == 'start') {\n            from = isRtl ? RIGHT : LEFT;\n        }\n        else if (from == 'end') {\n            from = isRtl ? LEFT : RIGHT;\n        }\n        if (isRtl && getRtlScrollAxisType() == RtlScrollAxisType.INVERTED) {\n            // For INVERTED, scrollLeft is (scrollWidth - clientWidth) when scrolled all the way left and\n            // 0 when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollWidth - el.clientWidth - el.scrollLeft;\n            }\n            else {\n                return el.scrollLeft;\n            }\n        }\n        else if (isRtl && getRtlScrollAxisType() == RtlScrollAxisType.NEGATED) {\n            // For NEGATED, scrollLeft is -(scrollWidth - clientWidth) when scrolled all the way left and\n            // 0 when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollLeft + el.scrollWidth - el.clientWidth;\n            }\n            else {\n                return -el.scrollLeft;\n            }\n        }\n        else {\n            // For NORMAL, as well as non-RTL contexts, scrollLeft is 0 when scrolled all the way left and\n            // (scrollWidth - clientWidth) when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollLeft;\n            }\n            else {\n                return el.scrollWidth - el.clientWidth - el.scrollLeft;\n            }\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkScrollable, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: CdkScrollable, isStandalone: true, selector: \"[cdk-scrollable], [cdkScrollable]\", ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkScrollable, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdk-scrollable], [cdkScrollable]',\n                }]\n        }], ctorParameters: () => [] });\n\n/** Time in ms to throttle the resize events by default. */\nconst DEFAULT_RESIZE_TIME = 20;\n/**\n * Simple utility for getting the bounds of the browser viewport.\n * @docs-private\n */\nclass ViewportRuler {\n    _platform = inject(Platform);\n    _listeners;\n    /** Cached viewport dimensions. */\n    _viewportSize;\n    /** Stream of viewport change events. */\n    _change = new Subject();\n    /** Used to reference correct document/window */\n    _document = inject(DOCUMENT);\n    constructor() {\n        const ngZone = inject(NgZone);\n        const renderer = inject(RendererFactory2).createRenderer(null, null);\n        ngZone.runOutsideAngular(() => {\n            if (this._platform.isBrowser) {\n                const changeListener = (event) => this._change.next(event);\n                this._listeners = [\n                    renderer.listen('window', 'resize', changeListener),\n                    renderer.listen('window', 'orientationchange', changeListener),\n                ];\n            }\n            // Clear the cached position so that the viewport is re-measured next time it is required.\n            // We don't need to keep track of the subscription, because it is completed on destroy.\n            this.change().subscribe(() => (this._viewportSize = null));\n        });\n    }\n    ngOnDestroy() {\n        this._listeners?.forEach(cleanup => cleanup());\n        this._change.complete();\n    }\n    /** Returns the viewport's width and height. */\n    getViewportSize() {\n        if (!this._viewportSize) {\n            this._updateViewportSize();\n        }\n        const output = { width: this._viewportSize.width, height: this._viewportSize.height };\n        // If we're not on a browser, don't cache the size since it'll be mocked out anyway.\n        if (!this._platform.isBrowser) {\n            this._viewportSize = null;\n        }\n        return output;\n    }\n    /** Gets a DOMRect for the viewport's bounds. */\n    getViewportRect() {\n        // Use the document element's bounding rect rather than the window scroll properties\n        // (e.g. pageYOffset, scrollY) due to in issue in Chrome and IE where window scroll\n        // properties and client coordinates (boundingClientRect, clientX/Y, etc.) are in different\n        // conceptual viewports. Under most circumstances these viewports are equivalent, but they\n        // can disagree when the page is pinch-zoomed (on devices that support touch).\n        // See https://bugs.chromium.org/p/chromium/issues/detail?id=489206#c4\n        // We use the documentElement instead of the body because, by default (without a css reset)\n        // browsers typically give the document body an 8px margin, which is not included in\n        // getBoundingClientRect().\n        const scrollPosition = this.getViewportScrollPosition();\n        const { width, height } = this.getViewportSize();\n        return {\n            top: scrollPosition.top,\n            left: scrollPosition.left,\n            bottom: scrollPosition.top + height,\n            right: scrollPosition.left + width,\n            height,\n            width,\n        };\n    }\n    /** Gets the (top, left) scroll position of the viewport. */\n    getViewportScrollPosition() {\n        // While we can get a reference to the fake document\n        // during SSR, it doesn't have getBoundingClientRect.\n        if (!this._platform.isBrowser) {\n            return { top: 0, left: 0 };\n        }\n        // The top-left-corner of the viewport is determined by the scroll position of the document\n        // body, normally just (scrollLeft, scrollTop). However, Chrome and Firefox disagree about\n        // whether `document.body` or `document.documentElement` is the scrolled element, so reading\n        // `scrollTop` and `scrollLeft` is inconsistent. However, using the bounding rect of\n        // `document.documentElement` works consistently, where the `top` and `left` values will\n        // equal negative the scroll position.\n        const document = this._document;\n        const window = this._getWindow();\n        const documentElement = document.documentElement;\n        const documentRect = documentElement.getBoundingClientRect();\n        const top = -documentRect.top ||\n            document.body.scrollTop ||\n            window.scrollY ||\n            documentElement.scrollTop ||\n            0;\n        const left = -documentRect.left ||\n            document.body.scrollLeft ||\n            window.scrollX ||\n            documentElement.scrollLeft ||\n            0;\n        return { top, left };\n    }\n    /**\n     * Returns a stream that emits whenever the size of the viewport changes.\n     * This stream emits outside of the Angular zone.\n     * @param throttleTime Time in milliseconds to throttle the stream.\n     */\n    change(throttleTime = DEFAULT_RESIZE_TIME) {\n        return throttleTime > 0 ? this._change.pipe(auditTime(throttleTime)) : this._change;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        return this._document.defaultView || window;\n    }\n    /** Updates the cached viewport size. */\n    _updateViewportSize() {\n        const window = this._getWindow();\n        this._viewportSize = this._platform.isBrowser\n            ? { width: window.innerWidth, height: window.innerHeight }\n            : { width: 0, height: 0 };\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: ViewportRuler, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: ViewportRuler, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: ViewportRuler, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [] });\n\nconst VIRTUAL_SCROLLABLE = new InjectionToken('VIRTUAL_SCROLLABLE');\n/**\n * Extending the `CdkScrollable` to be used as scrolling container for virtual scrolling.\n */\nclass CdkVirtualScrollable extends CdkScrollable {\n    constructor() {\n        super();\n    }\n    /**\n     * Measure the viewport size for the provided orientation.\n     *\n     * @param orientation The orientation to measure the size from.\n     */\n    measureViewportSize(orientation) {\n        const viewportEl = this.elementRef.nativeElement;\n        return orientation === 'horizontal' ? viewportEl.clientWidth : viewportEl.clientHeight;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkVirtualScrollable, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: CdkVirtualScrollable, isStandalone: true, usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkVirtualScrollable, decorators: [{\n            type: Directive\n        }], ctorParameters: () => [] });\n\n/** Checks if the given ranges are equal. */\nfunction rangesEqual(r1, r2) {\n    return r1.start == r2.start && r1.end == r2.end;\n}\n/**\n * Scheduler to be used for scroll events. Needs to fall back to\n * something that doesn't rely on requestAnimationFrame on environments\n * that don't support it (e.g. server-side rendering).\n */\nconst SCROLL_SCHEDULER = typeof requestAnimationFrame !== 'undefined' ? animationFrameScheduler : asapScheduler;\n/** A viewport that virtualizes its scrolling with the help of `CdkVirtualForOf`. */\nclass CdkVirtualScrollViewport extends CdkVirtualScrollable {\n    elementRef = inject(ElementRef);\n    _changeDetectorRef = inject(ChangeDetectorRef);\n    _scrollStrategy = inject(VIRTUAL_SCROLL_STRATEGY, {\n        optional: true,\n    });\n    scrollable = inject(VIRTUAL_SCROLLABLE, { optional: true });\n    _platform = inject(Platform);\n    /** Emits when the viewport is detached from a CdkVirtualForOf. */\n    _detachedSubject = new Subject();\n    /** Emits when the rendered range changes. */\n    _renderedRangeSubject = new Subject();\n    /** The direction the viewport scrolls. */\n    get orientation() {\n        return this._orientation;\n    }\n    set orientation(orientation) {\n        if (this._orientation !== orientation) {\n            this._orientation = orientation;\n            this._calculateSpacerSize();\n        }\n    }\n    _orientation = 'vertical';\n    /**\n     * Whether rendered items should persist in the DOM after scrolling out of view. By default, items\n     * will be removed.\n     */\n    appendOnly = false;\n    // Note: we don't use the typical EventEmitter here because we need to subscribe to the scroll\n    // strategy lazily (i.e. only if the user is actually listening to the events). We do this because\n    // depending on how the strategy calculates the scrolled index, it may come at a cost to\n    // performance.\n    /** Emits when the index of the first element visible in the viewport changes. */\n    scrolledIndexChange = new Observable((observer) => this._scrollStrategy.scrolledIndexChange.subscribe(index => Promise.resolve().then(() => this.ngZone.run(() => observer.next(index)))));\n    /** The element that wraps the rendered content. */\n    _contentWrapper;\n    /** A stream that emits whenever the rendered range changes. */\n    renderedRangeStream = this._renderedRangeSubject;\n    /**\n     * The total size of all content (in pixels), including content that is not currently rendered.\n     */\n    _totalContentSize = 0;\n    /** A string representing the `style.width` property value to be used for the spacer element. */\n    _totalContentWidth = signal('');\n    /** A string representing the `style.height` property value to be used for the spacer element. */\n    _totalContentHeight = signal('');\n    /**\n     * The CSS transform applied to the rendered subset of items so that they appear within the bounds\n     * of the visible viewport.\n     */\n    _renderedContentTransform;\n    /** The currently rendered range of indices. */\n    _renderedRange = { start: 0, end: 0 };\n    /** The length of the data bound to this viewport (in number of items). */\n    _dataLength = 0;\n    /** The size of the viewport (in pixels). */\n    _viewportSize = 0;\n    /** the currently attached CdkVirtualScrollRepeater. */\n    _forOf;\n    /** The last rendered content offset that was set. */\n    _renderedContentOffset = 0;\n    /**\n     * Whether the last rendered content offset was to the end of the content (and therefore needs to\n     * be rewritten as an offset to the start of the content).\n     */\n    _renderedContentOffsetNeedsRewrite = false;\n    _changeDetectionNeeded = signal(false);\n    /** A list of functions to run after the next change detection cycle. */\n    _runAfterChangeDetection = [];\n    /** Subscription to changes in the viewport size. */\n    _viewportChanges = Subscription.EMPTY;\n    _injector = inject(Injector);\n    _isDestroyed = false;\n    constructor() {\n        super();\n        const viewportRuler = inject(ViewportRuler);\n        if (!this._scrollStrategy && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('Error: cdk-virtual-scroll-viewport requires the \"itemSize\" property to be set.');\n        }\n        this._viewportChanges = viewportRuler.change().subscribe(() => {\n            this.checkViewportSize();\n        });\n        if (!this.scrollable) {\n            // No scrollable is provided, so the virtual-scroll-viewport needs to become a scrollable\n            this.elementRef.nativeElement.classList.add('cdk-virtual-scrollable');\n            this.scrollable = this;\n        }\n        const ref = effect(() => {\n            if (this._changeDetectionNeeded()) {\n                this._doChangeDetection();\n            }\n        }, \n        // Using ApplicationRef injector is important here because we want this to be a root\n        // effect that runs before change detection of any application views (since we're depending on markForCheck marking parents dirty)\n        { injector: inject(ApplicationRef).injector });\n        inject(DestroyRef).onDestroy(() => void ref.destroy());\n    }\n    ngOnInit() {\n        // Scrolling depends on the element dimensions which we can't get during SSR.\n        if (!this._platform.isBrowser) {\n            return;\n        }\n        if (this.scrollable === this) {\n            super.ngOnInit();\n        }\n        // It's still too early to measure the viewport at this point. Deferring with a promise allows\n        // the Viewport to be rendered with the correct size before we measure. We run this outside the\n        // zone to avoid causing more change detection cycles. We handle the change detection loop\n        // ourselves instead.\n        this.ngZone.runOutsideAngular(() => Promise.resolve().then(() => {\n            this._measureViewportSize();\n            this._scrollStrategy.attach(this);\n            this.scrollable\n                .elementScrolled()\n                .pipe(\n            // Start off with a fake scroll event so we properly detect our initial position.\n            startWith(null), \n            // Collect multiple events into one until the next animation frame. This way if\n            // there are multiple scroll events in the same frame we only need to recheck\n            // our layout once.\n            auditTime(0, SCROLL_SCHEDULER), \n            // Usually `elementScrolled` is completed when the scrollable is destroyed, but\n            // that may not be the case if a `CdkVirtualScrollableElement` is used so we have\n            // to unsubscribe here just in case.\n            takeUntil(this._destroyed))\n                .subscribe(() => this._scrollStrategy.onContentScrolled());\n            this._markChangeDetectionNeeded();\n        }));\n    }\n    ngOnDestroy() {\n        this.detach();\n        this._scrollStrategy.detach();\n        // Complete all subjects\n        this._renderedRangeSubject.complete();\n        this._detachedSubject.complete();\n        this._viewportChanges.unsubscribe();\n        this._isDestroyed = true;\n        super.ngOnDestroy();\n    }\n    /** Attaches a `CdkVirtualScrollRepeater` to this viewport. */\n    attach(forOf) {\n        if (this._forOf && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('CdkVirtualScrollViewport is already attached.');\n        }\n        // Subscribe to the data stream of the CdkVirtualForOf to keep track of when the data length\n        // changes. Run outside the zone to avoid triggering change detection, since we're managing the\n        // change detection loop ourselves.\n        this.ngZone.runOutsideAngular(() => {\n            this._forOf = forOf;\n            this._forOf.dataStream.pipe(takeUntil(this._detachedSubject)).subscribe(data => {\n                const newLength = data.length;\n                if (newLength !== this._dataLength) {\n                    this._dataLength = newLength;\n                    this._scrollStrategy.onDataLengthChanged();\n                }\n                this._doChangeDetection();\n            });\n        });\n    }\n    /** Detaches the current `CdkVirtualForOf`. */\n    detach() {\n        this._forOf = null;\n        this._detachedSubject.next();\n    }\n    /** Gets the length of the data bound to this viewport (in number of items). */\n    getDataLength() {\n        return this._dataLength;\n    }\n    /** Gets the size of the viewport (in pixels). */\n    getViewportSize() {\n        return this._viewportSize;\n    }\n    // TODO(mmalerba): This is technically out of sync with what's really rendered until a render\n    // cycle happens. I'm being careful to only call it after the render cycle is complete and before\n    // setting it to something else, but its error prone and should probably be split into\n    // `pendingRange` and `renderedRange`, the latter reflecting whats actually in the DOM.\n    /** Get the current rendered range of items. */\n    getRenderedRange() {\n        return this._renderedRange;\n    }\n    measureBoundingClientRectWithScrollOffset(from) {\n        return this.getElementRef().nativeElement.getBoundingClientRect()[from];\n    }\n    /**\n     * Sets the total size of all content (in pixels), including content that is not currently\n     * rendered.\n     */\n    setTotalContentSize(size) {\n        if (this._totalContentSize !== size) {\n            this._totalContentSize = size;\n            this._calculateSpacerSize();\n            this._markChangeDetectionNeeded();\n        }\n    }\n    /** Sets the currently rendered range of indices. */\n    setRenderedRange(range) {\n        if (!rangesEqual(this._renderedRange, range)) {\n            if (this.appendOnly) {\n                range = { start: 0, end: Math.max(this._renderedRange.end, range.end) };\n            }\n            this._renderedRangeSubject.next((this._renderedRange = range));\n            this._markChangeDetectionNeeded(() => this._scrollStrategy.onContentRendered());\n        }\n    }\n    /**\n     * Gets the offset from the start of the viewport to the start of the rendered data (in pixels).\n     */\n    getOffsetToRenderedContentStart() {\n        return this._renderedContentOffsetNeedsRewrite ? null : this._renderedContentOffset;\n    }\n    /**\n     * Sets the offset from the start of the viewport to either the start or end of the rendered data\n     * (in pixels).\n     */\n    setRenderedContentOffset(offset, to = 'to-start') {\n        // In appendOnly, we always start from the top\n        offset = this.appendOnly && to === 'to-start' ? 0 : offset;\n        // For a horizontal viewport in a right-to-left language we need to translate along the x-axis\n        // in the negative direction.\n        const isRtl = this.dir && this.dir.value == 'rtl';\n        const isHorizontal = this.orientation == 'horizontal';\n        const axis = isHorizontal ? 'X' : 'Y';\n        const axisDirection = isHorizontal && isRtl ? -1 : 1;\n        let transform = `translate${axis}(${Number(axisDirection * offset)}px)`;\n        this._renderedContentOffset = offset;\n        if (to === 'to-end') {\n            transform += ` translate${axis}(-100%)`;\n            // The viewport should rewrite this as a `to-start` offset on the next render cycle. Otherwise\n            // elements will appear to expand in the wrong direction (e.g. `mat-expansion-panel` would\n            // expand upward).\n            this._renderedContentOffsetNeedsRewrite = true;\n        }\n        if (this._renderedContentTransform != transform) {\n            // We know this value is safe because we parse `offset` with `Number()` before passing it\n            // into the string.\n            this._renderedContentTransform = transform;\n            this._markChangeDetectionNeeded(() => {\n                if (this._renderedContentOffsetNeedsRewrite) {\n                    this._renderedContentOffset -= this.measureRenderedContentSize();\n                    this._renderedContentOffsetNeedsRewrite = false;\n                    this.setRenderedContentOffset(this._renderedContentOffset);\n                }\n                else {\n                    this._scrollStrategy.onRenderedOffsetChanged();\n                }\n            });\n        }\n    }\n    /**\n     * Scrolls to the given offset from the start of the viewport. Please note that this is not always\n     * the same as setting `scrollTop` or `scrollLeft`. In a horizontal viewport with right-to-left\n     * direction, this would be the equivalent of setting a fictional `scrollRight` property.\n     * @param offset The offset to scroll to.\n     * @param behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\n     */\n    scrollToOffset(offset, behavior = 'auto') {\n        const options = { behavior };\n        if (this.orientation === 'horizontal') {\n            options.start = offset;\n        }\n        else {\n            options.top = offset;\n        }\n        this.scrollable.scrollTo(options);\n    }\n    /**\n     * Scrolls to the offset for the given index.\n     * @param index The index of the element to scroll to.\n     * @param behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\n     */\n    scrollToIndex(index, behavior = 'auto') {\n        this._scrollStrategy.scrollToIndex(index, behavior);\n    }\n    /**\n     * Gets the current scroll offset from the start of the scrollable (in pixels).\n     * @param from The edge to measure the offset from. Defaults to 'top' in vertical mode and 'start'\n     *     in horizontal mode.\n     */\n    measureScrollOffset(from) {\n        // This is to break the call cycle\n        let measureScrollOffset;\n        if (this.scrollable == this) {\n            measureScrollOffset = (_from) => super.measureScrollOffset(_from);\n        }\n        else {\n            measureScrollOffset = (_from) => this.scrollable.measureScrollOffset(_from);\n        }\n        return Math.max(0, measureScrollOffset(from ?? (this.orientation === 'horizontal' ? 'start' : 'top')) -\n            this.measureViewportOffset());\n    }\n    /**\n     * Measures the offset of the viewport from the scrolling container\n     * @param from The edge to measure from.\n     */\n    measureViewportOffset(from) {\n        let fromRect;\n        const LEFT = 'left';\n        const RIGHT = 'right';\n        const isRtl = this.dir?.value == 'rtl';\n        if (from == 'start') {\n            fromRect = isRtl ? RIGHT : LEFT;\n        }\n        else if (from == 'end') {\n            fromRect = isRtl ? LEFT : RIGHT;\n        }\n        else if (from) {\n            fromRect = from;\n        }\n        else {\n            fromRect = this.orientation === 'horizontal' ? 'left' : 'top';\n        }\n        const scrollerClientRect = this.scrollable.measureBoundingClientRectWithScrollOffset(fromRect);\n        const viewportClientRect = this.elementRef.nativeElement.getBoundingClientRect()[fromRect];\n        return viewportClientRect - scrollerClientRect;\n    }\n    /** Measure the combined size of all of the rendered items. */\n    measureRenderedContentSize() {\n        const contentEl = this._contentWrapper.nativeElement;\n        return this.orientation === 'horizontal' ? contentEl.offsetWidth : contentEl.offsetHeight;\n    }\n    /**\n     * Measure the total combined size of the given range. Throws if the range includes items that are\n     * not rendered.\n     */\n    measureRangeSize(range) {\n        if (!this._forOf) {\n            return 0;\n        }\n        return this._forOf.measureRangeSize(range, this.orientation);\n    }\n    /** Update the viewport dimensions and re-render. */\n    checkViewportSize() {\n        // TODO: Cleanup later when add logic for handling content resize\n        this._measureViewportSize();\n        this._scrollStrategy.onDataLengthChanged();\n    }\n    /** Measure the viewport size. */\n    _measureViewportSize() {\n        this._viewportSize = this.scrollable.measureViewportSize(this.orientation);\n    }\n    /** Queue up change detection to run. */\n    _markChangeDetectionNeeded(runAfter) {\n        if (runAfter) {\n            this._runAfterChangeDetection.push(runAfter);\n        }\n        if (untracked(this._changeDetectionNeeded)) {\n            return;\n        }\n        this.ngZone.runOutsideAngular(() => {\n            Promise.resolve().then(() => {\n                this.ngZone.run(() => {\n                    this._changeDetectionNeeded.set(true);\n                });\n            });\n        });\n    }\n    /** Run change detection. */\n    _doChangeDetection() {\n        if (this._isDestroyed) {\n            return;\n        }\n        this.ngZone.run(() => {\n            // Apply changes to Angular bindings. Note: We must call `markForCheck` to run change detection\n            // from the root, since the repeated items are content projected in. Calling `detectChanges`\n            // instead does not properly check the projected content.\n            this._changeDetectorRef.markForCheck();\n            // Apply the content transform. The transform can't be set via an Angular binding because\n            // bypassSecurityTrustStyle is banned in Google. However the value is safe, it's composed of\n            // string literals, a variable that can only be 'X' or 'Y', and user input that is run through\n            // the `Number` function first to coerce it to a numeric value.\n            this._contentWrapper.nativeElement.style.transform = this._renderedContentTransform;\n            afterNextRender(() => {\n                this._changeDetectionNeeded.set(false);\n                const runAfterChangeDetection = this._runAfterChangeDetection;\n                this._runAfterChangeDetection = [];\n                for (const fn of runAfterChangeDetection) {\n                    fn();\n                }\n            }, { injector: this._injector });\n        });\n    }\n    /** Calculates the `style.width` and `style.height` for the spacer element. */\n    _calculateSpacerSize() {\n        this._totalContentHeight.set(this.orientation === 'horizontal' ? '' : `${this._totalContentSize}px`);\n        this._totalContentWidth.set(this.orientation === 'horizontal' ? `${this._totalContentSize}px` : '');\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkVirtualScrollViewport, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"16.1.0\", version: \"20.0.0\", type: CdkVirtualScrollViewport, isStandalone: true, selector: \"cdk-virtual-scroll-viewport\", inputs: { orientation: \"orientation\", appendOnly: [\"appendOnly\", \"appendOnly\", booleanAttribute] }, outputs: { scrolledIndexChange: \"scrolledIndexChange\" }, host: { properties: { \"class.cdk-virtual-scroll-orientation-horizontal\": \"orientation === \\\"horizontal\\\"\", \"class.cdk-virtual-scroll-orientation-vertical\": \"orientation !== \\\"horizontal\\\"\" }, classAttribute: \"cdk-virtual-scroll-viewport\" }, providers: [\n            {\n                provide: CdkScrollable,\n                useFactory: (virtualScrollable, viewport) => virtualScrollable || viewport,\n                deps: [[new Optional(), new Inject(VIRTUAL_SCROLLABLE)], CdkVirtualScrollViewport],\n            },\n        ], viewQueries: [{ propertyName: \"_contentWrapper\", first: true, predicate: [\"contentWrapper\"], descendants: true, static: true }], usesInheritance: true, ngImport: i0, template: \"<!--\\n  Wrap the rendered content in an element that will be used to offset it based on the scroll\\n  position.\\n-->\\n<div #contentWrapper class=\\\"cdk-virtual-scroll-content-wrapper\\\">\\n  <ng-content></ng-content>\\n</div>\\n<!--\\n  Spacer used to force the scrolling container to the correct size for the *total* number of items\\n  so that the scrollbar captures the size of the entire data set.\\n-->\\n<div class=\\\"cdk-virtual-scroll-spacer\\\"\\n     [style.width]=\\\"_totalContentWidth()\\\" [style.height]=\\\"_totalContentHeight()\\\"></div>\\n\", styles: [\"cdk-virtual-scroll-viewport{display:block;position:relative;transform:translateZ(0)}.cdk-virtual-scrollable{overflow:auto;will-change:scroll-position;contain:strict}.cdk-virtual-scroll-content-wrapper{position:absolute;top:0;left:0;contain:content}[dir=rtl] .cdk-virtual-scroll-content-wrapper{right:0;left:auto}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper{min-height:100%}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-left:0;padding-right:0;margin-left:0;margin-right:0;border-left-width:0;border-right-width:0;outline:none}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper{min-width:100%}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-top:0;padding-bottom:0;margin-top:0;margin-bottom:0;border-top-width:0;border-bottom-width:0;outline:none}.cdk-virtual-scroll-spacer{height:1px;transform-origin:0 0;flex:0 0 auto}[dir=rtl] .cdk-virtual-scroll-spacer{transform-origin:100% 0}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkVirtualScrollViewport, decorators: [{\n            type: Component,\n            args: [{ selector: 'cdk-virtual-scroll-viewport', host: {\n                        'class': 'cdk-virtual-scroll-viewport',\n                        '[class.cdk-virtual-scroll-orientation-horizontal]': 'orientation === \"horizontal\"',\n                        '[class.cdk-virtual-scroll-orientation-vertical]': 'orientation !== \"horizontal\"',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, providers: [\n                        {\n                            provide: CdkScrollable,\n                            useFactory: (virtualScrollable, viewport) => virtualScrollable || viewport,\n                            deps: [[new Optional(), new Inject(VIRTUAL_SCROLLABLE)], CdkVirtualScrollViewport],\n                        },\n                    ], template: \"<!--\\n  Wrap the rendered content in an element that will be used to offset it based on the scroll\\n  position.\\n-->\\n<div #contentWrapper class=\\\"cdk-virtual-scroll-content-wrapper\\\">\\n  <ng-content></ng-content>\\n</div>\\n<!--\\n  Spacer used to force the scrolling container to the correct size for the *total* number of items\\n  so that the scrollbar captures the size of the entire data set.\\n-->\\n<div class=\\\"cdk-virtual-scroll-spacer\\\"\\n     [style.width]=\\\"_totalContentWidth()\\\" [style.height]=\\\"_totalContentHeight()\\\"></div>\\n\", styles: [\"cdk-virtual-scroll-viewport{display:block;position:relative;transform:translateZ(0)}.cdk-virtual-scrollable{overflow:auto;will-change:scroll-position;contain:strict}.cdk-virtual-scroll-content-wrapper{position:absolute;top:0;left:0;contain:content}[dir=rtl] .cdk-virtual-scroll-content-wrapper{right:0;left:auto}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper{min-height:100%}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-left:0;padding-right:0;margin-left:0;margin-right:0;border-left-width:0;border-right-width:0;outline:none}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper{min-width:100%}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-top:0;padding-bottom:0;margin-top:0;margin-bottom:0;border-top-width:0;border-bottom-width:0;outline:none}.cdk-virtual-scroll-spacer{height:1px;transform-origin:0 0;flex:0 0 auto}[dir=rtl] .cdk-virtual-scroll-spacer{transform-origin:100% 0}\\n\"] }]\n        }], ctorParameters: () => [], propDecorators: { orientation: [{\n                type: Input\n            }], appendOnly: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], scrolledIndexChange: [{\n                type: Output\n            }], _contentWrapper: [{\n                type: ViewChild,\n                args: ['contentWrapper', { static: true }]\n            }] } });\n\n/** Helper to extract the offset of a DOM Node in a certain direction. */\nfunction getOffset(orientation, direction, node) {\n    const el = node;\n    if (!el.getBoundingClientRect) {\n        return 0;\n    }\n    const rect = el.getBoundingClientRect();\n    if (orientation === 'horizontal') {\n        return direction === 'start' ? rect.left : rect.right;\n    }\n    return direction === 'start' ? rect.top : rect.bottom;\n}\n/**\n * A directive similar to `ngForOf` to be used for rendering data inside a virtual scrolling\n * container.\n */\nclass CdkVirtualForOf {\n    _viewContainerRef = inject(ViewContainerRef);\n    _template = inject(TemplateRef);\n    _differs = inject(IterableDiffers);\n    _viewRepeater = inject(_VIEW_REPEATER_STRATEGY);\n    _viewport = inject(CdkVirtualScrollViewport, { skipSelf: true });\n    /** Emits when the rendered view of the data changes. */\n    viewChange = new Subject();\n    /** Subject that emits when a new DataSource instance is given. */\n    _dataSourceChanges = new Subject();\n    /** The DataSource to display. */\n    get cdkVirtualForOf() {\n        return this._cdkVirtualForOf;\n    }\n    set cdkVirtualForOf(value) {\n        this._cdkVirtualForOf = value;\n        if (isDataSource(value)) {\n            this._dataSourceChanges.next(value);\n        }\n        else {\n            // If value is an an NgIterable, convert it to an array.\n            this._dataSourceChanges.next(new ArrayDataSource(isObservable(value) ? value : Array.from(value || [])));\n        }\n    }\n    _cdkVirtualForOf;\n    /**\n     * The `TrackByFunction` to use for tracking changes. The `TrackByFunction` takes the index and\n     * the item and produces a value to be used as the item's identity when tracking changes.\n     */\n    get cdkVirtualForTrackBy() {\n        return this._cdkVirtualForTrackBy;\n    }\n    set cdkVirtualForTrackBy(fn) {\n        this._needsUpdate = true;\n        this._cdkVirtualForTrackBy = fn\n            ? (index, item) => fn(index + (this._renderedRange ? this._renderedRange.start : 0), item)\n            : undefined;\n    }\n    _cdkVirtualForTrackBy;\n    /** The template used to stamp out new elements. */\n    set cdkVirtualForTemplate(value) {\n        if (value) {\n            this._needsUpdate = true;\n            this._template = value;\n        }\n    }\n    /**\n     * The size of the cache used to store templates that are not being used for re-use later.\n     * Setting the cache size to `0` will disable caching. Defaults to 20 templates.\n     */\n    get cdkVirtualForTemplateCacheSize() {\n        return this._viewRepeater.viewCacheSize;\n    }\n    set cdkVirtualForTemplateCacheSize(size) {\n        this._viewRepeater.viewCacheSize = coerceNumberProperty(size);\n    }\n    /** Emits whenever the data in the current DataSource changes. */\n    dataStream = this._dataSourceChanges.pipe(\n    // Start off with null `DataSource`.\n    startWith(null), \n    // Bundle up the previous and current data sources so we can work with both.\n    pairwise(), \n    // Use `_changeDataSource` to disconnect from the previous data source and connect to the\n    // new one, passing back a stream of data changes which we run through `switchMap` to give\n    // us a data stream that emits the latest data from whatever the current `DataSource` is.\n    switchMap(([prev, cur]) => this._changeDataSource(prev, cur)), \n    // Replay the last emitted data when someone subscribes.\n    shareReplay(1));\n    /** The differ used to calculate changes to the data. */\n    _differ = null;\n    /** The most recent data emitted from the DataSource. */\n    _data;\n    /** The currently rendered items. */\n    _renderedItems;\n    /** The currently rendered range of indices. */\n    _renderedRange;\n    /** Whether the rendered data should be updated during the next ngDoCheck cycle. */\n    _needsUpdate = false;\n    _destroyed = new Subject();\n    constructor() {\n        const ngZone = inject(NgZone);\n        this.dataStream.subscribe(data => {\n            this._data = data;\n            this._onRenderedDataChange();\n        });\n        this._viewport.renderedRangeStream.pipe(takeUntil(this._destroyed)).subscribe(range => {\n            this._renderedRange = range;\n            if (this.viewChange.observers.length) {\n                ngZone.run(() => this.viewChange.next(this._renderedRange));\n            }\n            this._onRenderedDataChange();\n        });\n        this._viewport.attach(this);\n    }\n    /**\n     * Measures the combined size (width for horizontal orientation, height for vertical) of all items\n     * in the specified range. Throws an error if the range includes items that are not currently\n     * rendered.\n     */\n    measureRangeSize(range, orientation) {\n        if (range.start >= range.end) {\n            return 0;\n        }\n        if ((range.start < this._renderedRange.start || range.end > this._renderedRange.end) &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error(`Error: attempted to measure an item that isn't rendered.`);\n        }\n        // The index into the list of rendered views for the first item in the range.\n        const renderedStartIndex = range.start - this._renderedRange.start;\n        // The length of the range we're measuring.\n        const rangeLen = range.end - range.start;\n        // Loop over all the views, find the first and land node and compute the size by subtracting\n        // the top of the first node from the bottom of the last one.\n        let firstNode;\n        let lastNode;\n        // Find the first node by starting from the beginning and going forwards.\n        for (let i = 0; i < rangeLen; i++) {\n            const view = this._viewContainerRef.get(i + renderedStartIndex);\n            if (view && view.rootNodes.length) {\n                firstNode = lastNode = view.rootNodes[0];\n                break;\n            }\n        }\n        // Find the last node by starting from the end and going backwards.\n        for (let i = rangeLen - 1; i > -1; i--) {\n            const view = this._viewContainerRef.get(i + renderedStartIndex);\n            if (view && view.rootNodes.length) {\n                lastNode = view.rootNodes[view.rootNodes.length - 1];\n                break;\n            }\n        }\n        return firstNode && lastNode\n            ? getOffset(orientation, 'end', lastNode) - getOffset(orientation, 'start', firstNode)\n            : 0;\n    }\n    ngDoCheck() {\n        if (this._differ && this._needsUpdate) {\n            // TODO(mmalerba): We should differentiate needs update due to scrolling and a new portion of\n            // this list being rendered (can use simpler algorithm) vs needs update due to data actually\n            // changing (need to do this diff).\n            const changes = this._differ.diff(this._renderedItems);\n            if (!changes) {\n                this._updateContext();\n            }\n            else {\n                this._applyChanges(changes);\n            }\n            this._needsUpdate = false;\n        }\n    }\n    ngOnDestroy() {\n        this._viewport.detach();\n        this._dataSourceChanges.next(undefined);\n        this._dataSourceChanges.complete();\n        this.viewChange.complete();\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._viewRepeater.detach();\n    }\n    /** React to scroll state changes in the viewport. */\n    _onRenderedDataChange() {\n        if (!this._renderedRange) {\n            return;\n        }\n        this._renderedItems = this._data.slice(this._renderedRange.start, this._renderedRange.end);\n        if (!this._differ) {\n            // Use a wrapper function for the `trackBy` so any new values are\n            // picked up automatically without having to recreate the differ.\n            this._differ = this._differs.find(this._renderedItems).create((index, item) => {\n                return this.cdkVirtualForTrackBy ? this.cdkVirtualForTrackBy(index, item) : item;\n            });\n        }\n        this._needsUpdate = true;\n    }\n    /** Swap out one `DataSource` for another. */\n    _changeDataSource(oldDs, newDs) {\n        if (oldDs) {\n            oldDs.disconnect(this);\n        }\n        this._needsUpdate = true;\n        return newDs ? newDs.connect(this) : of();\n    }\n    /** Update the `CdkVirtualForOfContext` for all views. */\n    _updateContext() {\n        const count = this._data.length;\n        let i = this._viewContainerRef.length;\n        while (i--) {\n            const view = this._viewContainerRef.get(i);\n            view.context.index = this._renderedRange.start + i;\n            view.context.count = count;\n            this._updateComputedContextProperties(view.context);\n            view.detectChanges();\n        }\n    }\n    /** Apply changes to the DOM. */\n    _applyChanges(changes) {\n        this._viewRepeater.applyChanges(changes, this._viewContainerRef, (record, _adjustedPreviousIndex, currentIndex) => this._getEmbeddedViewArgs(record, currentIndex), record => record.item);\n        // Update $implicit for any items that had an identity change.\n        changes.forEachIdentityChange((record) => {\n            const view = this._viewContainerRef.get(record.currentIndex);\n            view.context.$implicit = record.item;\n        });\n        // Update the context variables on all items.\n        const count = this._data.length;\n        let i = this._viewContainerRef.length;\n        while (i--) {\n            const view = this._viewContainerRef.get(i);\n            view.context.index = this._renderedRange.start + i;\n            view.context.count = count;\n            this._updateComputedContextProperties(view.context);\n        }\n    }\n    /** Update the computed properties on the `CdkVirtualForOfContext`. */\n    _updateComputedContextProperties(context) {\n        context.first = context.index === 0;\n        context.last = context.index === context.count - 1;\n        context.even = context.index % 2 === 0;\n        context.odd = !context.even;\n    }\n    _getEmbeddedViewArgs(record, index) {\n        // Note that it's important that we insert the item directly at the proper index,\n        // rather than inserting it and the moving it in place, because if there's a directive\n        // on the same node that injects the `ViewContainerRef`, Angular will insert another\n        // comment node which can throw off the move when it's being repeated for all items.\n        return {\n            templateRef: this._template,\n            context: {\n                $implicit: record.item,\n                // It's guaranteed that the iterable is not \"undefined\" or \"null\" because we only\n                // generate views for elements if the \"cdkVirtualForOf\" iterable has elements.\n                cdkVirtualForOf: this._cdkVirtualForOf,\n                index: -1,\n                count: -1,\n                first: false,\n                last: false,\n                odd: false,\n                even: false,\n            },\n            index,\n        };\n    }\n    static ngTemplateContextGuard(directive, context) {\n        return true;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkVirtualForOf, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: CdkVirtualForOf, isStandalone: true, selector: \"[cdkVirtualFor][cdkVirtualForOf]\", inputs: { cdkVirtualForOf: \"cdkVirtualForOf\", cdkVirtualForTrackBy: \"cdkVirtualForTrackBy\", cdkVirtualForTemplate: \"cdkVirtualForTemplate\", cdkVirtualForTemplateCacheSize: \"cdkVirtualForTemplateCacheSize\" }, providers: [{ provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy }], ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkVirtualForOf, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkVirtualFor][cdkVirtualForOf]',\n                    providers: [{ provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy }],\n                }]\n        }], ctorParameters: () => [], propDecorators: { cdkVirtualForOf: [{\n                type: Input\n            }], cdkVirtualForTrackBy: [{\n                type: Input\n            }], cdkVirtualForTemplate: [{\n                type: Input\n            }], cdkVirtualForTemplateCacheSize: [{\n                type: Input\n            }] } });\n\n/**\n * Provides a virtual scrollable for the element it is attached to.\n */\nclass CdkVirtualScrollableElement extends CdkVirtualScrollable {\n    constructor() {\n        super();\n    }\n    measureBoundingClientRectWithScrollOffset(from) {\n        return (this.getElementRef().nativeElement.getBoundingClientRect()[from] -\n            this.measureScrollOffset(from));\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkVirtualScrollableElement, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: CdkVirtualScrollableElement, isStandalone: true, selector: \"[cdkVirtualScrollingElement]\", host: { classAttribute: \"cdk-virtual-scrollable\" }, providers: [{ provide: VIRTUAL_SCROLLABLE, useExisting: CdkVirtualScrollableElement }], usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkVirtualScrollableElement, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkVirtualScrollingElement]',\n                    providers: [{ provide: VIRTUAL_SCROLLABLE, useExisting: CdkVirtualScrollableElement }],\n                    host: {\n                        'class': 'cdk-virtual-scrollable',\n                    },\n                }]\n        }], ctorParameters: () => [] });\n\n/**\n * Provides as virtual scrollable for the global / window scrollbar.\n */\nclass CdkVirtualScrollableWindow extends CdkVirtualScrollable {\n    constructor() {\n        super();\n        const document = inject(DOCUMENT);\n        this.elementRef = new ElementRef(document.documentElement);\n        this._scrollElement = document;\n    }\n    measureBoundingClientRectWithScrollOffset(from) {\n        return this.getElementRef().nativeElement.getBoundingClientRect()[from];\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkVirtualScrollableWindow, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: CdkVirtualScrollableWindow, isStandalone: true, selector: \"cdk-virtual-scroll-viewport[scrollWindow]\", providers: [{ provide: VIRTUAL_SCROLLABLE, useExisting: CdkVirtualScrollableWindow }], usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkVirtualScrollableWindow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-virtual-scroll-viewport[scrollWindow]',\n                    providers: [{ provide: VIRTUAL_SCROLLABLE, useExisting: CdkVirtualScrollableWindow }],\n                }]\n        }], ctorParameters: () => [] });\n\nclass CdkScrollableModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkScrollableModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkScrollableModule, imports: [CdkScrollable], exports: [CdkScrollable] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkScrollableModule });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkScrollableModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [CdkScrollable],\n                    imports: [CdkScrollable],\n                }]\n        }] });\n/**\n * @docs-primary-export\n */\nclass ScrollingModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: ScrollingModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.0\", ngImport: i0, type: ScrollingModule, imports: [BidiModule, CdkScrollableModule, CdkVirtualScrollViewport,\n            CdkFixedSizeVirtualScroll,\n            CdkVirtualForOf,\n            CdkVirtualScrollableWindow,\n            CdkVirtualScrollableElement], exports: [BidiModule, CdkScrollableModule, CdkFixedSizeVirtualScroll,\n            CdkVirtualForOf,\n            CdkVirtualScrollViewport,\n            CdkVirtualScrollableWindow,\n            CdkVirtualScrollableElement] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: ScrollingModule, imports: [BidiModule,\n            CdkScrollableModule, BidiModule, CdkScrollableModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: ScrollingModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        BidiModule,\n                        CdkScrollableModule,\n                        CdkVirtualScrollViewport,\n                        CdkFixedSizeVirtualScroll,\n                        CdkVirtualForOf,\n                        CdkVirtualScrollableWindow,\n                        CdkVirtualScrollableElement,\n                    ],\n                    exports: [\n                        BidiModule,\n                        CdkScrollableModule,\n                        CdkFixedSizeVirtualScroll,\n                        CdkVirtualForOf,\n                        CdkVirtualScrollViewport,\n                        CdkVirtualScrollableWindow,\n                        CdkVirtualScrollableElement,\n                    ],\n                }]\n        }] });\n\nexport { CdkFixedSizeVirtualScroll, CdkScrollable, CdkScrollableModule, CdkVirtualForOf, CdkVirtualScrollViewport, CdkVirtualScrollable, CdkVirtualScrollableElement, CdkVirtualScrollableWindow, DEFAULT_RESIZE_TIME, DEFAULT_SCROLL_TIME, FixedSizeVirtualScrollStrategy, ScrollDispatcher, ScrollingModule, VIRTUAL_SCROLLABLE, VIRTUAL_SCROLL_STRATEGY, ViewportRuler, _fixedSizeVirtualScrollStrategyFactory };\n\n","import * as i0 from '@angular/core';\nimport { DOCUMENT, NgZone, inject, Injector, Injectable, RendererFactory2, Component, ChangeDetectionStrategy, ViewEncapsulation, afterNextRender, ElementRef, ApplicationRef, Renderer2, ANIMATION_MODULE_TYPE, EnvironmentInjector, InjectionToken, Directive, EventEmitter, TemplateRef, ViewContainerRef, booleanAttribute, Input, Output, NgModule } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { P as Platform } from './platform-DNDzkVcI.mjs';\nimport { _ as _getEventTarget } from './shadow-dom-B0oHn41l.mjs';\nimport { _ as _isTestEnvironment } from './test-environment-CT0XxPyp.mjs';\nimport { _ as _CdkPrivateStyleLoader } from './style-loader-B2sGQXxD.mjs';\nimport { Subject, Subscription } from 'rxjs';\nimport { c as coerceCssPixelValue } from './css-pixel-value-C_HEqLhI.mjs';\nimport { c as coerceArray } from './array-I1yfCXUO.mjs';\nimport { ViewportRuler, ScrollDispatcher, ScrollingModule } from './scrolling.mjs';\nimport { DomPortalOutlet, TemplatePortal, PortalModule } from './portal.mjs';\nimport { s as supportsScrollBehavior } from './scrolling-BkvA05C8.mjs';\nimport { filter, takeWhile } from 'rxjs/operators';\nimport { _ as _IdGenerator } from './id-generator-LuoRZSid.mjs';\nimport { D as Directionality } from './directionality-CChdj3az.mjs';\nimport { g as ESCAPE } from './keycodes-CpHkExLC.mjs';\nimport { hasModifierKey } from './keycodes.mjs';\nimport { BidiModule } from './bidi.mjs';\n\nconst scrollBehaviorSupported = supportsScrollBehavior();\n/**\n * Creates a scroll strategy that prevents the user from scrolling while the overlay is open.\n * @param injector Injector used to resolve dependencies of the scroll strategy.\n * @param config Configuration options for the scroll strategy.\n */\nfunction createBlockScrollStrategy(injector) {\n    return new BlockScrollStrategy(injector.get(ViewportRuler), injector.get(DOCUMENT));\n}\n/**\n * Strategy that will prevent the user from scrolling while the overlay is visible.\n */\nclass BlockScrollStrategy {\n    _viewportRuler;\n    _previousHTMLStyles = { top: '', left: '' };\n    _previousScrollPosition;\n    _isEnabled = false;\n    _document;\n    constructor(_viewportRuler, document) {\n        this._viewportRuler = _viewportRuler;\n        this._document = document;\n    }\n    /** Attaches this scroll strategy to an overlay. */\n    attach() { }\n    /** Blocks page-level scroll while the attached overlay is open. */\n    enable() {\n        if (this._canBeEnabled()) {\n            const root = this._document.documentElement;\n            this._previousScrollPosition = this._viewportRuler.getViewportScrollPosition();\n            // Cache the previous inline styles in case the user had set them.\n            this._previousHTMLStyles.left = root.style.left || '';\n            this._previousHTMLStyles.top = root.style.top || '';\n            // Note: we're using the `html` node, instead of the `body`, because the `body` may\n            // have the user agent margin, whereas the `html` is guaranteed not to have one.\n            root.style.left = coerceCssPixelValue(-this._previousScrollPosition.left);\n            root.style.top = coerceCssPixelValue(-this._previousScrollPosition.top);\n            root.classList.add('cdk-global-scrollblock');\n            this._isEnabled = true;\n        }\n    }\n    /** Unblocks page-level scroll while the attached overlay is open. */\n    disable() {\n        if (this._isEnabled) {\n            const html = this._document.documentElement;\n            const body = this._document.body;\n            const htmlStyle = html.style;\n            const bodyStyle = body.style;\n            const previousHtmlScrollBehavior = htmlStyle.scrollBehavior || '';\n            const previousBodyScrollBehavior = bodyStyle.scrollBehavior || '';\n            this._isEnabled = false;\n            htmlStyle.left = this._previousHTMLStyles.left;\n            htmlStyle.top = this._previousHTMLStyles.top;\n            html.classList.remove('cdk-global-scrollblock');\n            // Disable user-defined smooth scrolling temporarily while we restore the scroll position.\n            // See https://developer.mozilla.org/en-US/docs/Web/CSS/scroll-behavior\n            // Note that we don't mutate the property if the browser doesn't support `scroll-behavior`,\n            // because it can throw off feature detections in `supportsScrollBehavior` which\n            // checks for `'scrollBehavior' in documentElement.style`.\n            if (scrollBehaviorSupported) {\n                htmlStyle.scrollBehavior = bodyStyle.scrollBehavior = 'auto';\n            }\n            window.scroll(this._previousScrollPosition.left, this._previousScrollPosition.top);\n            if (scrollBehaviorSupported) {\n                htmlStyle.scrollBehavior = previousHtmlScrollBehavior;\n                bodyStyle.scrollBehavior = previousBodyScrollBehavior;\n            }\n        }\n    }\n    _canBeEnabled() {\n        // Since the scroll strategies can't be singletons, we have to use a global CSS class\n        // (`cdk-global-scrollblock`) to make sure that we don't try to disable global\n        // scrolling multiple times.\n        const html = this._document.documentElement;\n        if (html.classList.contains('cdk-global-scrollblock') || this._isEnabled) {\n            return false;\n        }\n        const rootElement = this._document.documentElement;\n        const viewport = this._viewportRuler.getViewportSize();\n        return rootElement.scrollHeight > viewport.height || rootElement.scrollWidth > viewport.width;\n    }\n}\n\n/**\n * Returns an error to be thrown when attempting to attach an already-attached scroll strategy.\n */\nfunction getMatScrollStrategyAlreadyAttachedError() {\n    return Error(`Scroll strategy has already been attached.`);\n}\n\n/**\n * Creates a scroll strategy that closes the overlay when the user starts to scroll.\n * @param injector Injector used to resolve dependencies of the scroll strategy.\n * @param config Configuration options for the scroll strategy.\n */\nfunction createCloseScrollStrategy(injector, config) {\n    return new CloseScrollStrategy(injector.get(ScrollDispatcher), injector.get(NgZone), injector.get(ViewportRuler), config);\n}\n/**\n * Strategy that will close the overlay as soon as the user starts scrolling.\n */\nclass CloseScrollStrategy {\n    _scrollDispatcher;\n    _ngZone;\n    _viewportRuler;\n    _config;\n    _scrollSubscription = null;\n    _overlayRef;\n    _initialScrollPosition;\n    constructor(_scrollDispatcher, _ngZone, _viewportRuler, _config) {\n        this._scrollDispatcher = _scrollDispatcher;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._config = _config;\n    }\n    /** Attaches this scroll strategy to an overlay. */\n    attach(overlayRef) {\n        if (this._overlayRef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatScrollStrategyAlreadyAttachedError();\n        }\n        this._overlayRef = overlayRef;\n    }\n    /** Enables the closing of the attached overlay on scroll. */\n    enable() {\n        if (this._scrollSubscription) {\n            return;\n        }\n        const stream = this._scrollDispatcher.scrolled(0).pipe(filter(scrollable => {\n            return (!scrollable ||\n                !this._overlayRef.overlayElement.contains(scrollable.getElementRef().nativeElement));\n        }));\n        if (this._config && this._config.threshold && this._config.threshold > 1) {\n            this._initialScrollPosition = this._viewportRuler.getViewportScrollPosition().top;\n            this._scrollSubscription = stream.subscribe(() => {\n                const scrollPosition = this._viewportRuler.getViewportScrollPosition().top;\n                if (Math.abs(scrollPosition - this._initialScrollPosition) > this._config.threshold) {\n                    this._detach();\n                }\n                else {\n                    this._overlayRef.updatePosition();\n                }\n            });\n        }\n        else {\n            this._scrollSubscription = stream.subscribe(this._detach);\n        }\n    }\n    /** Disables the closing the attached overlay on scroll. */\n    disable() {\n        if (this._scrollSubscription) {\n            this._scrollSubscription.unsubscribe();\n            this._scrollSubscription = null;\n        }\n    }\n    detach() {\n        this.disable();\n        this._overlayRef = null;\n    }\n    /** Detaches the overlay ref and disables the scroll strategy. */\n    _detach = () => {\n        this.disable();\n        if (this._overlayRef.hasAttached()) {\n            this._ngZone.run(() => this._overlayRef.detach());\n        }\n    };\n}\n\n/** Creates a scroll strategy that does nothing. */\nfunction createNoopScrollStrategy() {\n    return new NoopScrollStrategy();\n}\n/** Scroll strategy that doesn't do anything. */\nclass NoopScrollStrategy {\n    /** Does nothing, as this scroll strategy is a no-op. */\n    enable() { }\n    /** Does nothing, as this scroll strategy is a no-op. */\n    disable() { }\n    /** Does nothing, as this scroll strategy is a no-op. */\n    attach() { }\n}\n\n/**\n * Gets whether an element is scrolled outside of view by any of its parent scrolling containers.\n * @param element Dimensions of the element (from getBoundingClientRect)\n * @param scrollContainers Dimensions of element's scrolling containers (from getBoundingClientRect)\n * @returns Whether the element is scrolled out of view\n * @docs-private\n */\nfunction isElementScrolledOutsideView(element, scrollContainers) {\n    return scrollContainers.some(containerBounds => {\n        const outsideAbove = element.bottom < containerBounds.top;\n        const outsideBelow = element.top > containerBounds.bottom;\n        const outsideLeft = element.right < containerBounds.left;\n        const outsideRight = element.left > containerBounds.right;\n        return outsideAbove || outsideBelow || outsideLeft || outsideRight;\n    });\n}\n/**\n * Gets whether an element is clipped by any of its scrolling containers.\n * @param element Dimensions of the element (from getBoundingClientRect)\n * @param scrollContainers Dimensions of element's scrolling containers (from getBoundingClientRect)\n * @returns Whether the element is clipped\n * @docs-private\n */\nfunction isElementClippedByScrolling(element, scrollContainers) {\n    return scrollContainers.some(scrollContainerRect => {\n        const clippedAbove = element.top < scrollContainerRect.top;\n        const clippedBelow = element.bottom > scrollContainerRect.bottom;\n        const clippedLeft = element.left < scrollContainerRect.left;\n        const clippedRight = element.right > scrollContainerRect.right;\n        return clippedAbove || clippedBelow || clippedLeft || clippedRight;\n    });\n}\n\n/**\n * Creates a scroll strategy that updates the overlay's position when the user scrolls.\n * @param injector Injector used to resolve dependencies of the scroll strategy.\n * @param config Configuration options for the scroll strategy.\n */\nfunction createRepositionScrollStrategy(injector, config) {\n    return new RepositionScrollStrategy(injector.get(ScrollDispatcher), injector.get(ViewportRuler), injector.get(NgZone), config);\n}\n/**\n * Strategy that will update the element position as the user is scrolling.\n */\nclass RepositionScrollStrategy {\n    _scrollDispatcher;\n    _viewportRuler;\n    _ngZone;\n    _config;\n    _scrollSubscription = null;\n    _overlayRef;\n    constructor(_scrollDispatcher, _viewportRuler, _ngZone, _config) {\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewportRuler = _viewportRuler;\n        this._ngZone = _ngZone;\n        this._config = _config;\n    }\n    /** Attaches this scroll strategy to an overlay. */\n    attach(overlayRef) {\n        if (this._overlayRef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatScrollStrategyAlreadyAttachedError();\n        }\n        this._overlayRef = overlayRef;\n    }\n    /** Enables repositioning of the attached overlay on scroll. */\n    enable() {\n        if (!this._scrollSubscription) {\n            const throttle = this._config ? this._config.scrollThrottle : 0;\n            this._scrollSubscription = this._scrollDispatcher.scrolled(throttle).subscribe(() => {\n                this._overlayRef.updatePosition();\n                // TODO(crisbeto): make `close` on by default once all components can handle it.\n                if (this._config && this._config.autoClose) {\n                    const overlayRect = this._overlayRef.overlayElement.getBoundingClientRect();\n                    const { width, height } = this._viewportRuler.getViewportSize();\n                    // TODO(crisbeto): include all ancestor scroll containers here once\n                    // we have a way of exposing the trigger element to the scroll strategy.\n                    const parentRects = [{ width, height, bottom: height, right: width, top: 0, left: 0 }];\n                    if (isElementScrolledOutsideView(overlayRect, parentRects)) {\n                        this.disable();\n                        this._ngZone.run(() => this._overlayRef.detach());\n                    }\n                }\n            });\n        }\n    }\n    /** Disables repositioning of the attached overlay on scroll. */\n    disable() {\n        if (this._scrollSubscription) {\n            this._scrollSubscription.unsubscribe();\n            this._scrollSubscription = null;\n        }\n    }\n    detach() {\n        this.disable();\n        this._overlayRef = null;\n    }\n}\n\n/**\n * Options for how an overlay will handle scrolling.\n *\n * Users can provide a custom value for `ScrollStrategyOptions` to replace the default\n * behaviors. This class primarily acts as a factory for ScrollStrategy instances.\n */\nclass ScrollStrategyOptions {\n    _injector = inject(Injector);\n    constructor() { }\n    /** Do nothing on scroll. */\n    noop = () => new NoopScrollStrategy();\n    /**\n     * Close the overlay as soon as the user scrolls.\n     * @param config Configuration to be used inside the scroll strategy.\n     */\n    close = (config) => createCloseScrollStrategy(this._injector, config);\n    /** Block scrolling. */\n    block = () => createBlockScrollStrategy(this._injector);\n    /**\n     * Update the overlay's position on scroll.\n     * @param config Configuration to be used inside the scroll strategy.\n     * Allows debouncing the reposition calls.\n     */\n    reposition = (config) => createRepositionScrollStrategy(this._injector, config);\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: ScrollStrategyOptions, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: ScrollStrategyOptions, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: ScrollStrategyOptions, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [] });\n\n/** Initial configuration used when creating an overlay. */\nclass OverlayConfig {\n    /** Strategy with which to position the overlay. */\n    positionStrategy;\n    /** Strategy to be used when handling scroll events while the overlay is open. */\n    scrollStrategy = new NoopScrollStrategy();\n    /** Custom class to add to the overlay pane. */\n    panelClass = '';\n    /** Whether the overlay has a backdrop. */\n    hasBackdrop = false;\n    /** Custom class to add to the backdrop */\n    backdropClass = 'cdk-overlay-dark-backdrop';\n    /** Whether to disable any built-in animations. */\n    disableAnimations;\n    /** The width of the overlay panel. If a number is provided, pixel units are assumed. */\n    width;\n    /** The height of the overlay panel. If a number is provided, pixel units are assumed. */\n    height;\n    /** The min-width of the overlay panel. If a number is provided, pixel units are assumed. */\n    minWidth;\n    /** The min-height of the overlay panel. If a number is provided, pixel units are assumed. */\n    minHeight;\n    /** The max-width of the overlay panel. If a number is provided, pixel units are assumed. */\n    maxWidth;\n    /** The max-height of the overlay panel. If a number is provided, pixel units are assumed. */\n    maxHeight;\n    /**\n     * Direction of the text in the overlay panel. If a `Directionality` instance\n     * is passed in, the overlay will handle changes to its value automatically.\n     */\n    direction;\n    /**\n     * Whether the overlay should be disposed of when the user goes backwards/forwards in history.\n     * Note that this usually doesn't include clicking on links (unless the user is using\n     * the `HashLocationStrategy`).\n     */\n    disposeOnNavigation = false;\n    constructor(config) {\n        if (config) {\n            // Use `Iterable` instead of `Array` because TypeScript, as of 3.6.3,\n            // loses the array generic type in the `for of`. But we *also* have to use `Array` because\n            // typescript won't iterate over an `Iterable` unless you compile with `--downlevelIteration`\n            const configKeys = Object.keys(config);\n            for (const key of configKeys) {\n                if (config[key] !== undefined) {\n                    // TypeScript, as of version 3.5, sees the left-hand-side of this expression\n                    // as \"I don't know *which* key this is, so the only valid value is the intersection\n                    // of all the possible values.\" In this case, that happens to be `undefined`. TypeScript\n                    // is not smart enough to see that the right-hand-side is actually an access of the same\n                    // exact type with the same exact key, meaning that the value type must be identical.\n                    // So we use `any` to work around this.\n                    this[key] = config[key];\n                }\n            }\n        }\n    }\n}\n\n/** The points of the origin element and the overlay element to connect. */\nclass ConnectionPositionPair {\n    offsetX;\n    offsetY;\n    panelClass;\n    /** X-axis attachment point for connected overlay origin. Can be 'start', 'end', or 'center'. */\n    originX;\n    /** Y-axis attachment point for connected overlay origin. Can be 'top', 'bottom', or 'center'. */\n    originY;\n    /** X-axis attachment point for connected overlay. Can be 'start', 'end', or 'center'. */\n    overlayX;\n    /** Y-axis attachment point for connected overlay. Can be 'top', 'bottom', or 'center'. */\n    overlayY;\n    constructor(origin, overlay, \n    /** Offset along the X axis. */\n    offsetX, \n    /** Offset along the Y axis. */\n    offsetY, \n    /** Class(es) to be applied to the panel while this position is active. */\n    panelClass) {\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        this.panelClass = panelClass;\n        this.originX = origin.originX;\n        this.originY = origin.originY;\n        this.overlayX = overlay.overlayX;\n        this.overlayY = overlay.overlayY;\n    }\n}\n/**\n * Set of properties regarding the position of the origin and overlay relative to the viewport\n * with respect to the containing Scrollable elements.\n *\n * The overlay and origin are clipped if any part of their bounding client rectangle exceeds the\n * bounds of any one of the strategy's Scrollable's bounding client rectangle.\n *\n * The overlay and origin are outside view if there is no overlap between their bounding client\n * rectangle and any one of the strategy's Scrollable's bounding client rectangle.\n *\n *       -----------                    -----------\n *       | outside |                    | clipped |\n *       |  view   |              --------------------------\n *       |         |              |     |         |        |\n *       ----------               |     -----------        |\n *  --------------------------    |                        |\n *  |                        |    |      Scrollable        |\n *  |                        |    |                        |\n *  |                        |     --------------------------\n *  |      Scrollable        |\n *  |                        |\n *  --------------------------\n *\n *  @docs-private\n */\nclass ScrollingVisibility {\n    isOriginClipped;\n    isOriginOutsideView;\n    isOverlayClipped;\n    isOverlayOutsideView;\n}\n/** The change event emitted by the strategy when a fallback position is used. */\nclass ConnectedOverlayPositionChange {\n    connectionPair;\n    scrollableViewProperties;\n    constructor(\n    /** The position used as a result of this change. */\n    connectionPair, \n    /** @docs-private */\n    scrollableViewProperties) {\n        this.connectionPair = connectionPair;\n        this.scrollableViewProperties = scrollableViewProperties;\n    }\n}\n/**\n * Validates whether a vertical position property matches the expected values.\n * @param property Name of the property being validated.\n * @param value Value of the property being validated.\n * @docs-private\n */\nfunction validateVerticalPosition(property, value) {\n    if (value !== 'top' && value !== 'bottom' && value !== 'center') {\n        throw Error(`ConnectedPosition: Invalid ${property} \"${value}\". ` +\n            `Expected \"top\", \"bottom\" or \"center\".`);\n    }\n}\n/**\n * Validates whether a horizontal position property matches the expected values.\n * @param property Name of the property being validated.\n * @param value Value of the property being validated.\n * @docs-private\n */\nfunction validateHorizontalPosition(property, value) {\n    if (value !== 'start' && value !== 'end' && value !== 'center') {\n        throw Error(`ConnectedPosition: Invalid ${property} \"${value}\". ` +\n            `Expected \"start\", \"end\" or \"center\".`);\n    }\n}\n\n/**\n * Service for dispatching events that land on the body to appropriate overlay ref,\n * if any. It maintains a list of attached overlays to determine best suited overlay based\n * on event target and order of overlay opens.\n */\nclass BaseOverlayDispatcher {\n    /** Currently attached overlays in the order they were attached. */\n    _attachedOverlays = [];\n    _document = inject(DOCUMENT);\n    _isAttached;\n    constructor() { }\n    ngOnDestroy() {\n        this.detach();\n    }\n    /** Add a new overlay to the list of attached overlay refs. */\n    add(overlayRef) {\n        // Ensure that we don't get the same overlay multiple times.\n        this.remove(overlayRef);\n        this._attachedOverlays.push(overlayRef);\n    }\n    /** Remove an overlay from the list of attached overlay refs. */\n    remove(overlayRef) {\n        const index = this._attachedOverlays.indexOf(overlayRef);\n        if (index > -1) {\n            this._attachedOverlays.splice(index, 1);\n        }\n        // Remove the global listener once there are no more overlays.\n        if (this._attachedOverlays.length === 0) {\n            this.detach();\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: BaseOverlayDispatcher, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: BaseOverlayDispatcher, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: BaseOverlayDispatcher, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [] });\n\n/**\n * Service for dispatching keyboard events that land on the body to appropriate overlay ref,\n * if any. It maintains a list of attached overlays to determine best suited overlay based\n * on event target and order of overlay opens.\n */\nclass OverlayKeyboardDispatcher extends BaseOverlayDispatcher {\n    _ngZone = inject(NgZone);\n    _renderer = inject(RendererFactory2).createRenderer(null, null);\n    _cleanupKeydown;\n    /** Add a new overlay to the list of attached overlay refs. */\n    add(overlayRef) {\n        super.add(overlayRef);\n        // Lazily start dispatcher once first overlay is added\n        if (!this._isAttached) {\n            this._ngZone.runOutsideAngular(() => {\n                this._cleanupKeydown = this._renderer.listen('body', 'keydown', this._keydownListener);\n            });\n            this._isAttached = true;\n        }\n    }\n    /** Detaches the global keyboard event listener. */\n    detach() {\n        if (this._isAttached) {\n            this._cleanupKeydown?.();\n            this._isAttached = false;\n        }\n    }\n    /** Keyboard event listener that will be attached to the body. */\n    _keydownListener = (event) => {\n        const overlays = this._attachedOverlays;\n        for (let i = overlays.length - 1; i > -1; i--) {\n            // Dispatch the keydown event to the top overlay which has subscribers to its keydown events.\n            // We want to target the most recent overlay, rather than trying to match where the event came\n            // from, because some components might open an overlay, but keep focus on a trigger element\n            // (e.g. for select and autocomplete). We skip overlays without keydown event subscriptions,\n            // because we don't want overlays that don't handle keyboard events to block the ones below\n            // them that do.\n            if (overlays[i]._keydownEvents.observers.length > 0) {\n                this._ngZone.run(() => overlays[i]._keydownEvents.next(event));\n                break;\n            }\n        }\n    };\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: OverlayKeyboardDispatcher, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: OverlayKeyboardDispatcher, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: OverlayKeyboardDispatcher, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\n/**\n * Service for dispatching mouse click events that land on the body to appropriate overlay ref,\n * if any. It maintains a list of attached overlays to determine best suited overlay based\n * on event target and order of overlay opens.\n */\nclass OverlayOutsideClickDispatcher extends BaseOverlayDispatcher {\n    _platform = inject(Platform);\n    _ngZone = inject(NgZone);\n    _renderer = inject(RendererFactory2).createRenderer(null, null);\n    _cursorOriginalValue;\n    _cursorStyleIsSet = false;\n    _pointerDownEventTarget;\n    _cleanups;\n    /** Add a new overlay to the list of attached overlay refs. */\n    add(overlayRef) {\n        super.add(overlayRef);\n        // Safari on iOS does not generate click events for non-interactive\n        // elements. However, we want to receive a click for any element outside\n        // the overlay. We can force a \"clickable\" state by setting\n        // `cursor: pointer` on the document body. See:\n        // https://developer.mozilla.org/en-US/docs/Web/API/Element/click_event#Safari_Mobile\n        // https://developer.apple.com/library/archive/documentation/AppleApplications/Reference/SafariWebContent/HandlingEvents/HandlingEvents.html\n        if (!this._isAttached) {\n            const body = this._document.body;\n            const eventOptions = { capture: true };\n            const renderer = this._renderer;\n            this._cleanups = this._ngZone.runOutsideAngular(() => [\n                renderer.listen(body, 'pointerdown', this._pointerDownListener, eventOptions),\n                renderer.listen(body, 'click', this._clickListener, eventOptions),\n                renderer.listen(body, 'auxclick', this._clickListener, eventOptions),\n                renderer.listen(body, 'contextmenu', this._clickListener, eventOptions),\n            ]);\n            // click event is not fired on iOS. To make element \"clickable\" we are\n            // setting the cursor to pointer\n            if (this._platform.IOS && !this._cursorStyleIsSet) {\n                this._cursorOriginalValue = body.style.cursor;\n                body.style.cursor = 'pointer';\n                this._cursorStyleIsSet = true;\n            }\n            this._isAttached = true;\n        }\n    }\n    /** Detaches the global keyboard event listener. */\n    detach() {\n        if (this._isAttached) {\n            this._cleanups?.forEach(cleanup => cleanup());\n            this._cleanups = undefined;\n            if (this._platform.IOS && this._cursorStyleIsSet) {\n                this._document.body.style.cursor = this._cursorOriginalValue;\n                this._cursorStyleIsSet = false;\n            }\n            this._isAttached = false;\n        }\n    }\n    /** Store pointerdown event target to track origin of click. */\n    _pointerDownListener = (event) => {\n        this._pointerDownEventTarget = _getEventTarget(event);\n    };\n    /** Click event listener that will be attached to the body propagate phase. */\n    _clickListener = (event) => {\n        const target = _getEventTarget(event);\n        // In case of a click event, we want to check the origin of the click\n        // (e.g. in case where a user starts a click inside the overlay and\n        // releases the click outside of it).\n        // This is done by using the event target of the preceding pointerdown event.\n        // Every click event caused by a pointer device has a preceding pointerdown\n        // event, unless the click was programmatically triggered (e.g. in a unit test).\n        const origin = event.type === 'click' && this._pointerDownEventTarget\n            ? this._pointerDownEventTarget\n            : target;\n        // Reset the stored pointerdown event target, to avoid having it interfere\n        // in subsequent events.\n        this._pointerDownEventTarget = null;\n        // We copy the array because the original may be modified asynchronously if the\n        // outsidePointerEvents listener decides to detach overlays resulting in index errors inside\n        // the for loop.\n        const overlays = this._attachedOverlays.slice();\n        // Dispatch the mouse event to the top overlay which has subscribers to its mouse events.\n        // We want to target all overlays for which the click could be considered as outside click.\n        // As soon as we reach an overlay for which the click is not outside click we break off\n        // the loop.\n        for (let i = overlays.length - 1; i > -1; i--) {\n            const overlayRef = overlays[i];\n            if (overlayRef._outsidePointerEvents.observers.length < 1 || !overlayRef.hasAttached()) {\n                continue;\n            }\n            // If it's a click inside the overlay, just break - we should do nothing\n            // If it's an outside click (both origin and target of the click) dispatch the mouse event,\n            // and proceed with the next overlay\n            if (containsPierceShadowDom(overlayRef.overlayElement, target) ||\n                containsPierceShadowDom(overlayRef.overlayElement, origin)) {\n                break;\n            }\n            const outsidePointerEvents = overlayRef._outsidePointerEvents;\n            /** @breaking-change 14.0.0 _ngZone will be required. */\n            if (this._ngZone) {\n                this._ngZone.run(() => outsidePointerEvents.next(event));\n            }\n            else {\n                outsidePointerEvents.next(event);\n            }\n        }\n    };\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: OverlayOutsideClickDispatcher, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: OverlayOutsideClickDispatcher, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: OverlayOutsideClickDispatcher, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n/** Version of `Element.contains` that transcends shadow DOM boundaries. */\nfunction containsPierceShadowDom(parent, child) {\n    const supportsShadowRoot = typeof ShadowRoot !== 'undefined' && ShadowRoot;\n    let current = child;\n    while (current) {\n        if (current === parent) {\n            return true;\n        }\n        current =\n            supportsShadowRoot && current instanceof ShadowRoot ? current.host : current.parentNode;\n    }\n    return false;\n}\n\nclass _CdkOverlayStyleLoader {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: _CdkOverlayStyleLoader, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"20.0.0\", type: _CdkOverlayStyleLoader, isStandalone: true, selector: \"ng-component\", host: { attributes: { \"cdk-overlay-style-loader\": \"\" } }, ngImport: i0, template: '', isInline: true, styles: [\".cdk-overlay-container,.cdk-global-overlay-wrapper{pointer-events:none;top:0;left:0;height:100%;width:100%}.cdk-overlay-container{position:fixed}@layer cdk-overlay{.cdk-overlay-container{z-index:1000}}.cdk-overlay-container:empty{display:none}.cdk-global-overlay-wrapper{display:flex;position:absolute}@layer cdk-overlay{.cdk-global-overlay-wrapper{z-index:1000}}.cdk-overlay-pane{position:absolute;pointer-events:auto;box-sizing:border-box;display:flex;max-width:100%;max-height:100%}@layer cdk-overlay{.cdk-overlay-pane{z-index:1000}}.cdk-overlay-backdrop{position:absolute;top:0;bottom:0;left:0;right:0;pointer-events:auto;-webkit-tap-highlight-color:rgba(0,0,0,0);opacity:0;touch-action:manipulation}@layer cdk-overlay{.cdk-overlay-backdrop{z-index:1000;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}}@media(prefers-reduced-motion){.cdk-overlay-backdrop{transition-duration:1ms}}.cdk-overlay-backdrop-showing{opacity:1}@media(forced-colors: active){.cdk-overlay-backdrop-showing{opacity:.6}}@layer cdk-overlay{.cdk-overlay-dark-backdrop{background:rgba(0,0,0,.32)}}.cdk-overlay-transparent-backdrop{transition:visibility 1ms linear,opacity 1ms linear;visibility:hidden;opacity:1}.cdk-overlay-transparent-backdrop.cdk-overlay-backdrop-showing,.cdk-high-contrast-active .cdk-overlay-transparent-backdrop{opacity:0;visibility:visible}.cdk-overlay-backdrop-noop-animation{transition:none}.cdk-overlay-connected-position-bounding-box{position:absolute;display:flex;flex-direction:column;min-width:1px;min-height:1px}@layer cdk-overlay{.cdk-overlay-connected-position-bounding-box{z-index:1000}}.cdk-global-scrollblock{position:fixed;width:100%;overflow-y:scroll}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: _CdkOverlayStyleLoader, decorators: [{\n            type: Component,\n            args: [{ template: '', changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, host: { 'cdk-overlay-style-loader': '' }, styles: [\".cdk-overlay-container,.cdk-global-overlay-wrapper{pointer-events:none;top:0;left:0;height:100%;width:100%}.cdk-overlay-container{position:fixed}@layer cdk-overlay{.cdk-overlay-container{z-index:1000}}.cdk-overlay-container:empty{display:none}.cdk-global-overlay-wrapper{display:flex;position:absolute}@layer cdk-overlay{.cdk-global-overlay-wrapper{z-index:1000}}.cdk-overlay-pane{position:absolute;pointer-events:auto;box-sizing:border-box;display:flex;max-width:100%;max-height:100%}@layer cdk-overlay{.cdk-overlay-pane{z-index:1000}}.cdk-overlay-backdrop{position:absolute;top:0;bottom:0;left:0;right:0;pointer-events:auto;-webkit-tap-highlight-color:rgba(0,0,0,0);opacity:0;touch-action:manipulation}@layer cdk-overlay{.cdk-overlay-backdrop{z-index:1000;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}}@media(prefers-reduced-motion){.cdk-overlay-backdrop{transition-duration:1ms}}.cdk-overlay-backdrop-showing{opacity:1}@media(forced-colors: active){.cdk-overlay-backdrop-showing{opacity:.6}}@layer cdk-overlay{.cdk-overlay-dark-backdrop{background:rgba(0,0,0,.32)}}.cdk-overlay-transparent-backdrop{transition:visibility 1ms linear,opacity 1ms linear;visibility:hidden;opacity:1}.cdk-overlay-transparent-backdrop.cdk-overlay-backdrop-showing,.cdk-high-contrast-active .cdk-overlay-transparent-backdrop{opacity:0;visibility:visible}.cdk-overlay-backdrop-noop-animation{transition:none}.cdk-overlay-connected-position-bounding-box{position:absolute;display:flex;flex-direction:column;min-width:1px;min-height:1px}@layer cdk-overlay{.cdk-overlay-connected-position-bounding-box{z-index:1000}}.cdk-global-scrollblock{position:fixed;width:100%;overflow-y:scroll}\\n\"] }]\n        }] });\n/** Container inside which all overlays will render. */\nclass OverlayContainer {\n    _platform = inject(Platform);\n    _containerElement;\n    _document = inject(DOCUMENT);\n    _styleLoader = inject(_CdkPrivateStyleLoader);\n    constructor() { }\n    ngOnDestroy() {\n        this._containerElement?.remove();\n    }\n    /**\n     * This method returns the overlay container element. It will lazily\n     * create the element the first time it is called to facilitate using\n     * the container in non-browser environments.\n     * @returns the container element\n     */\n    getContainerElement() {\n        this._loadStyles();\n        if (!this._containerElement) {\n            this._createContainer();\n        }\n        return this._containerElement;\n    }\n    /**\n     * Create the overlay container element, which is simply a div\n     * with the 'cdk-overlay-container' class on the document body.\n     */\n    _createContainer() {\n        const containerClass = 'cdk-overlay-container';\n        // TODO(crisbeto): remove the testing check once we have an overlay testing\n        // module or Angular starts tearing down the testing `NgModule`. See:\n        // https://github.com/angular/angular/issues/18831\n        if (this._platform.isBrowser || _isTestEnvironment()) {\n            const oppositePlatformContainers = this._document.querySelectorAll(`.${containerClass}[platform=\"server\"], ` + `.${containerClass}[platform=\"test\"]`);\n            // Remove any old containers from the opposite platform.\n            // This can happen when transitioning from the server to the client.\n            for (let i = 0; i < oppositePlatformContainers.length; i++) {\n                oppositePlatformContainers[i].remove();\n            }\n        }\n        const container = this._document.createElement('div');\n        container.classList.add(containerClass);\n        // A long time ago we kept adding new overlay containers whenever a new app was instantiated,\n        // but at some point we added logic which clears the duplicate ones in order to avoid leaks.\n        // The new logic was a little too aggressive since it was breaking some legitimate use cases.\n        // To mitigate the problem we made it so that only containers from a different platform are\n        // cleared, but the side-effect was that people started depending on the overly-aggressive\n        // logic to clean up their tests for them. Until we can introduce an overlay-specific testing\n        // module which does the cleanup, we try to detect that we're in a test environment and we\n        // always clear the container. See #17006.\n        // TODO(crisbeto): remove the test environment check once we have an overlay testing module.\n        if (_isTestEnvironment()) {\n            container.setAttribute('platform', 'test');\n        }\n        else if (!this._platform.isBrowser) {\n            container.setAttribute('platform', 'server');\n        }\n        this._document.body.appendChild(container);\n        this._containerElement = container;\n    }\n    /** Loads the structural styles necessary for the overlay to work. */\n    _loadStyles() {\n        this._styleLoader.load(_CdkOverlayStyleLoader);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: OverlayContainer, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: OverlayContainer, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: OverlayContainer, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [] });\n\n/** Encapsulates the logic for attaching and detaching a backdrop. */\nclass BackdropRef {\n    _renderer;\n    _ngZone;\n    element;\n    _cleanupClick;\n    _cleanupTransitionEnd;\n    _fallbackTimeout;\n    constructor(document, _renderer, _ngZone, onClick) {\n        this._renderer = _renderer;\n        this._ngZone = _ngZone;\n        this.element = document.createElement('div');\n        this.element.classList.add('cdk-overlay-backdrop');\n        this._cleanupClick = _renderer.listen(this.element, 'click', onClick);\n    }\n    detach() {\n        this._ngZone.runOutsideAngular(() => {\n            const element = this.element;\n            clearTimeout(this._fallbackTimeout);\n            this._cleanupTransitionEnd?.();\n            this._cleanupTransitionEnd = this._renderer.listen(element, 'transitionend', this.dispose);\n            this._fallbackTimeout = setTimeout(this.dispose, 500);\n            // If the backdrop doesn't have a transition, the `transitionend` event won't fire.\n            // In this case we make it unclickable and we try to remove it after a delay.\n            element.style.pointerEvents = 'none';\n            element.classList.remove('cdk-overlay-backdrop-showing');\n        });\n    }\n    dispose = () => {\n        clearTimeout(this._fallbackTimeout);\n        this._cleanupClick?.();\n        this._cleanupTransitionEnd?.();\n        this._cleanupClick = this._cleanupTransitionEnd = this._fallbackTimeout = undefined;\n        this.element.remove();\n    };\n}\n\n/**\n * Reference to an overlay that has been created with the Overlay service.\n * Used to manipulate or dispose of said overlay.\n */\nclass OverlayRef {\n    _portalOutlet;\n    _host;\n    _pane;\n    _config;\n    _ngZone;\n    _keyboardDispatcher;\n    _document;\n    _location;\n    _outsideClickDispatcher;\n    _animationsDisabled;\n    _injector;\n    _renderer;\n    _backdropClick = new Subject();\n    _attachments = new Subject();\n    _detachments = new Subject();\n    _positionStrategy;\n    _scrollStrategy;\n    _locationChanges = Subscription.EMPTY;\n    _backdropRef = null;\n    _detachContentMutationObserver;\n    _detachContentAfterRenderRef;\n    /**\n     * Reference to the parent of the `_host` at the time it was detached. Used to restore\n     * the `_host` to its original position in the DOM when it gets re-attached.\n     */\n    _previousHostParent;\n    /** Stream of keydown events dispatched to this overlay. */\n    _keydownEvents = new Subject();\n    /** Stream of mouse outside events dispatched to this overlay. */\n    _outsidePointerEvents = new Subject();\n    /** Reference to the currently-running `afterNextRender` call. */\n    _afterNextRenderRef;\n    constructor(_portalOutlet, _host, _pane, _config, _ngZone, _keyboardDispatcher, _document, _location, _outsideClickDispatcher, _animationsDisabled = false, _injector, _renderer) {\n        this._portalOutlet = _portalOutlet;\n        this._host = _host;\n        this._pane = _pane;\n        this._config = _config;\n        this._ngZone = _ngZone;\n        this._keyboardDispatcher = _keyboardDispatcher;\n        this._document = _document;\n        this._location = _location;\n        this._outsideClickDispatcher = _outsideClickDispatcher;\n        this._animationsDisabled = _animationsDisabled;\n        this._injector = _injector;\n        this._renderer = _renderer;\n        if (_config.scrollStrategy) {\n            this._scrollStrategy = _config.scrollStrategy;\n            this._scrollStrategy.attach(this);\n        }\n        this._positionStrategy = _config.positionStrategy;\n    }\n    /** The overlay's HTML element */\n    get overlayElement() {\n        return this._pane;\n    }\n    /** The overlay's backdrop HTML element. */\n    get backdropElement() {\n        return this._backdropRef?.element || null;\n    }\n    /**\n     * Wrapper around the panel element. Can be used for advanced\n     * positioning where a wrapper with specific styling is\n     * required around the overlay pane.\n     */\n    get hostElement() {\n        return this._host;\n    }\n    /**\n     * Attaches content, given via a Portal, to the overlay.\n     * If the overlay is configured to have a backdrop, it will be created.\n     *\n     * @param portal Portal instance to which to attach the overlay.\n     * @returns The portal attachment result.\n     */\n    attach(portal) {\n        // Insert the host into the DOM before attaching the portal, otherwise\n        // the animations module will skip animations on repeat attachments.\n        if (!this._host.parentElement && this._previousHostParent) {\n            this._previousHostParent.appendChild(this._host);\n        }\n        const attachResult = this._portalOutlet.attach(portal);\n        if (this._positionStrategy) {\n            this._positionStrategy.attach(this);\n        }\n        this._updateStackingOrder();\n        this._updateElementSize();\n        this._updateElementDirection();\n        if (this._scrollStrategy) {\n            this._scrollStrategy.enable();\n        }\n        // We need to clean this up ourselves, because we're passing in an\n        // `EnvironmentInjector` below which won't ever be destroyed.\n        // Otherwise it causes some callbacks to be retained (see #29696).\n        this._afterNextRenderRef?.destroy();\n        // Update the position once the overlay is fully rendered before attempting to position it,\n        // as the position may depend on the size of the rendered content.\n        this._afterNextRenderRef = afterNextRender(() => {\n            // The overlay could've been detached before the callback executed.\n            if (this.hasAttached()) {\n                this.updatePosition();\n            }\n        }, { injector: this._injector });\n        // Enable pointer events for the overlay pane element.\n        this._togglePointerEvents(true);\n        if (this._config.hasBackdrop) {\n            this._attachBackdrop();\n        }\n        if (this._config.panelClass) {\n            this._toggleClasses(this._pane, this._config.panelClass, true);\n        }\n        // Only emit the `attachments` event once all other setup is done.\n        this._attachments.next();\n        this._completeDetachContent();\n        // Track this overlay by the keyboard dispatcher\n        this._keyboardDispatcher.add(this);\n        if (this._config.disposeOnNavigation) {\n            this._locationChanges = this._location.subscribe(() => this.dispose());\n        }\n        this._outsideClickDispatcher.add(this);\n        // TODO(crisbeto): the null check is here, because the portal outlet returns `any`.\n        // We should be guaranteed for the result to be `ComponentRef | EmbeddedViewRef`, but\n        // `instanceof EmbeddedViewRef` doesn't appear to work at the moment.\n        if (typeof attachResult?.onDestroy === 'function') {\n            // In most cases we control the portal and we know when it is being detached so that\n            // we can finish the disposal process. The exception is if the user passes in a custom\n            // `ViewContainerRef` that isn't destroyed through the overlay API. Note that we use\n            // `detach` here instead of `dispose`, because we don't know if the user intends to\n            // reattach the overlay at a later point. It also has the advantage of waiting for animations.\n            attachResult.onDestroy(() => {\n                if (this.hasAttached()) {\n                    // We have to delay the `detach` call, because detaching immediately prevents\n                    // other destroy hooks from running. This is likely a framework bug similar to\n                    // https://github.com/angular/angular/issues/46119\n                    this._ngZone.runOutsideAngular(() => Promise.resolve().then(() => this.detach()));\n                }\n            });\n        }\n        return attachResult;\n    }\n    /**\n     * Detaches an overlay from a portal.\n     * @returns The portal detachment result.\n     */\n    detach() {\n        if (!this.hasAttached()) {\n            return;\n        }\n        this.detachBackdrop();\n        // When the overlay is detached, the pane element should disable pointer events.\n        // This is necessary because otherwise the pane element will cover the page and disable\n        // pointer events therefore. Depends on the position strategy and the applied pane boundaries.\n        this._togglePointerEvents(false);\n        if (this._positionStrategy && this._positionStrategy.detach) {\n            this._positionStrategy.detach();\n        }\n        if (this._scrollStrategy) {\n            this._scrollStrategy.disable();\n        }\n        const detachmentResult = this._portalOutlet.detach();\n        // Only emit after everything is detached.\n        this._detachments.next();\n        this._completeDetachContent();\n        // Remove this overlay from keyboard dispatcher tracking.\n        this._keyboardDispatcher.remove(this);\n        // Keeping the host element in the DOM can cause scroll jank, because it still gets\n        // rendered, even though it's transparent and unclickable which is why we remove it.\n        this._detachContentWhenEmpty();\n        this._locationChanges.unsubscribe();\n        this._outsideClickDispatcher.remove(this);\n        return detachmentResult;\n    }\n    /** Cleans up the overlay from the DOM. */\n    dispose() {\n        const isAttached = this.hasAttached();\n        if (this._positionStrategy) {\n            this._positionStrategy.dispose();\n        }\n        this._disposeScrollStrategy();\n        this._backdropRef?.dispose();\n        this._locationChanges.unsubscribe();\n        this._keyboardDispatcher.remove(this);\n        this._portalOutlet.dispose();\n        this._attachments.complete();\n        this._backdropClick.complete();\n        this._keydownEvents.complete();\n        this._outsidePointerEvents.complete();\n        this._outsideClickDispatcher.remove(this);\n        this._host?.remove();\n        this._afterNextRenderRef?.destroy();\n        this._previousHostParent = this._pane = this._host = this._backdropRef = null;\n        if (isAttached) {\n            this._detachments.next();\n        }\n        this._detachments.complete();\n        this._completeDetachContent();\n    }\n    /** Whether the overlay has attached content. */\n    hasAttached() {\n        return this._portalOutlet.hasAttached();\n    }\n    /** Gets an observable that emits when the backdrop has been clicked. */\n    backdropClick() {\n        return this._backdropClick;\n    }\n    /** Gets an observable that emits when the overlay has been attached. */\n    attachments() {\n        return this._attachments;\n    }\n    /** Gets an observable that emits when the overlay has been detached. */\n    detachments() {\n        return this._detachments;\n    }\n    /** Gets an observable of keydown events targeted to this overlay. */\n    keydownEvents() {\n        return this._keydownEvents;\n    }\n    /** Gets an observable of pointer events targeted outside this overlay. */\n    outsidePointerEvents() {\n        return this._outsidePointerEvents;\n    }\n    /** Gets the current overlay configuration, which is immutable. */\n    getConfig() {\n        return this._config;\n    }\n    /** Updates the position of the overlay based on the position strategy. */\n    updatePosition() {\n        if (this._positionStrategy) {\n            this._positionStrategy.apply();\n        }\n    }\n    /** Switches to a new position strategy and updates the overlay position. */\n    updatePositionStrategy(strategy) {\n        if (strategy === this._positionStrategy) {\n            return;\n        }\n        if (this._positionStrategy) {\n            this._positionStrategy.dispose();\n        }\n        this._positionStrategy = strategy;\n        if (this.hasAttached()) {\n            strategy.attach(this);\n            this.updatePosition();\n        }\n    }\n    /** Update the size properties of the overlay. */\n    updateSize(sizeConfig) {\n        this._config = { ...this._config, ...sizeConfig };\n        this._updateElementSize();\n    }\n    /** Sets the LTR/RTL direction for the overlay. */\n    setDirection(dir) {\n        this._config = { ...this._config, direction: dir };\n        this._updateElementDirection();\n    }\n    /** Add a CSS class or an array of classes to the overlay pane. */\n    addPanelClass(classes) {\n        if (this._pane) {\n            this._toggleClasses(this._pane, classes, true);\n        }\n    }\n    /** Remove a CSS class or an array of classes from the overlay pane. */\n    removePanelClass(classes) {\n        if (this._pane) {\n            this._toggleClasses(this._pane, classes, false);\n        }\n    }\n    /**\n     * Returns the layout direction of the overlay panel.\n     */\n    getDirection() {\n        const direction = this._config.direction;\n        if (!direction) {\n            return 'ltr';\n        }\n        return typeof direction === 'string' ? direction : direction.value;\n    }\n    /** Switches to a new scroll strategy. */\n    updateScrollStrategy(strategy) {\n        if (strategy === this._scrollStrategy) {\n            return;\n        }\n        this._disposeScrollStrategy();\n        this._scrollStrategy = strategy;\n        if (this.hasAttached()) {\n            strategy.attach(this);\n            strategy.enable();\n        }\n    }\n    /** Updates the text direction of the overlay panel. */\n    _updateElementDirection() {\n        this._host.setAttribute('dir', this.getDirection());\n    }\n    /** Updates the size of the overlay element based on the overlay config. */\n    _updateElementSize() {\n        if (!this._pane) {\n            return;\n        }\n        const style = this._pane.style;\n        style.width = coerceCssPixelValue(this._config.width);\n        style.height = coerceCssPixelValue(this._config.height);\n        style.minWidth = coerceCssPixelValue(this._config.minWidth);\n        style.minHeight = coerceCssPixelValue(this._config.minHeight);\n        style.maxWidth = coerceCssPixelValue(this._config.maxWidth);\n        style.maxHeight = coerceCssPixelValue(this._config.maxHeight);\n    }\n    /** Toggles the pointer events for the overlay pane element. */\n    _togglePointerEvents(enablePointer) {\n        this._pane.style.pointerEvents = enablePointer ? '' : 'none';\n    }\n    /** Attaches a backdrop for this overlay. */\n    _attachBackdrop() {\n        const showingClass = 'cdk-overlay-backdrop-showing';\n        this._backdropRef?.dispose();\n        this._backdropRef = new BackdropRef(this._document, this._renderer, this._ngZone, event => {\n            this._backdropClick.next(event);\n        });\n        if (this._animationsDisabled) {\n            this._backdropRef.element.classList.add('cdk-overlay-backdrop-noop-animation');\n        }\n        if (this._config.backdropClass) {\n            this._toggleClasses(this._backdropRef.element, this._config.backdropClass, true);\n        }\n        // Insert the backdrop before the pane in the DOM order,\n        // in order to handle stacked overlays properly.\n        this._host.parentElement.insertBefore(this._backdropRef.element, this._host);\n        // Add class to fade-in the backdrop after one frame.\n        if (!this._animationsDisabled && typeof requestAnimationFrame !== 'undefined') {\n            this._ngZone.runOutsideAngular(() => {\n                requestAnimationFrame(() => this._backdropRef?.element.classList.add(showingClass));\n            });\n        }\n        else {\n            this._backdropRef.element.classList.add(showingClass);\n        }\n    }\n    /**\n     * Updates the stacking order of the element, moving it to the top if necessary.\n     * This is required in cases where one overlay was detached, while another one,\n     * that should be behind it, was destroyed. The next time both of them are opened,\n     * the stacking will be wrong, because the detached element's pane will still be\n     * in its original DOM position.\n     */\n    _updateStackingOrder() {\n        if (this._host.nextSibling) {\n            this._host.parentNode.appendChild(this._host);\n        }\n    }\n    /** Detaches the backdrop (if any) associated with the overlay. */\n    detachBackdrop() {\n        if (this._animationsDisabled) {\n            this._backdropRef?.dispose();\n            this._backdropRef = null;\n        }\n        else {\n            this._backdropRef?.detach();\n        }\n    }\n    /** Toggles a single CSS class or an array of classes on an element. */\n    _toggleClasses(element, cssClasses, isAdd) {\n        const classes = coerceArray(cssClasses || []).filter(c => !!c);\n        if (classes.length) {\n            isAdd ? element.classList.add(...classes) : element.classList.remove(...classes);\n        }\n    }\n    /** Detaches the overlay once the content finishes animating and is removed from the DOM. */\n    _detachContentWhenEmpty() {\n        let rethrow = false;\n        // Attempt to detach on the next render.\n        try {\n            this._detachContentAfterRenderRef = afterNextRender(() => {\n                // Rethrow if we encounter an actual error detaching.\n                rethrow = true;\n                this._detachContent();\n            }, {\n                injector: this._injector,\n            });\n        }\n        catch (e) {\n            if (rethrow) {\n                throw e;\n            }\n            // afterNextRender throws if the EnvironmentInjector is has already been destroyed.\n            // This may happen in tests that don't properly flush all async work.\n            // In order to avoid breaking those tests, we just detach immediately in this case.\n            this._detachContent();\n        }\n        // Otherwise wait until the content finishes animating out and detach.\n        if (globalThis.MutationObserver && this._pane) {\n            this._detachContentMutationObserver ||= new globalThis.MutationObserver(() => {\n                this._detachContent();\n            });\n            this._detachContentMutationObserver.observe(this._pane, { childList: true });\n        }\n    }\n    _detachContent() {\n        // Needs a couple of checks for the pane and host, because\n        // they may have been removed by the time the zone stabilizes.\n        if (!this._pane || !this._host || this._pane.children.length === 0) {\n            if (this._pane && this._config.panelClass) {\n                this._toggleClasses(this._pane, this._config.panelClass, false);\n            }\n            if (this._host && this._host.parentElement) {\n                this._previousHostParent = this._host.parentElement;\n                this._host.remove();\n            }\n            this._completeDetachContent();\n        }\n    }\n    _completeDetachContent() {\n        this._detachContentAfterRenderRef?.destroy();\n        this._detachContentAfterRenderRef = undefined;\n        this._detachContentMutationObserver?.disconnect();\n    }\n    /** Disposes of a scroll strategy. */\n    _disposeScrollStrategy() {\n        const scrollStrategy = this._scrollStrategy;\n        scrollStrategy?.disable();\n        scrollStrategy?.detach?.();\n    }\n}\n\n// TODO: refactor clipping detection into a separate thing (part of scrolling module)\n// TODO: doesn't handle both flexible width and height when it has to scroll along both axis.\n/** Class to be added to the overlay bounding box. */\nconst boundingBoxClass = 'cdk-overlay-connected-position-bounding-box';\n/** Regex used to split a string on its CSS units. */\nconst cssUnitPattern = /([A-Za-z%]+)$/;\n/**\n * Creates a flexible position strategy.\n * @param injector Injector used to resolve dependnecies for the position strategy.\n * @param origin Origin relative to which to position the overlay.\n */\nfunction createFlexibleConnectedPositionStrategy(injector, origin) {\n    return new FlexibleConnectedPositionStrategy(origin, injector.get(ViewportRuler), injector.get(DOCUMENT), injector.get(Platform), injector.get(OverlayContainer));\n}\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * implicit position relative some origin element. The relative position is defined in terms of\n * a point on the origin element that is connected to a point on the overlay element. For example,\n * a basic dropdown is connecting the bottom-left corner of the origin to the top-left corner\n * of the overlay.\n */\nclass FlexibleConnectedPositionStrategy {\n    _viewportRuler;\n    _document;\n    _platform;\n    _overlayContainer;\n    /** The overlay to which this strategy is attached. */\n    _overlayRef;\n    /** Whether we're performing the very first positioning of the overlay. */\n    _isInitialRender;\n    /** Last size used for the bounding box. Used to avoid resizing the overlay after open. */\n    _lastBoundingBoxSize = { width: 0, height: 0 };\n    /** Whether the overlay was pushed in a previous positioning. */\n    _isPushed = false;\n    /** Whether the overlay can be pushed on-screen on the initial open. */\n    _canPush = true;\n    /** Whether the overlay can grow via flexible width/height after the initial open. */\n    _growAfterOpen = false;\n    /** Whether the overlay's width and height can be constrained to fit within the viewport. */\n    _hasFlexibleDimensions = true;\n    /** Whether the overlay position is locked. */\n    _positionLocked = false;\n    /** Cached origin dimensions */\n    _originRect;\n    /** Cached overlay dimensions */\n    _overlayRect;\n    /** Cached viewport dimensions */\n    _viewportRect;\n    /** Cached container dimensions */\n    _containerRect;\n    /** Amount of space that must be maintained between the overlay and the edge of the viewport. */\n    _viewportMargin = 0;\n    /** The Scrollable containers used to check scrollable view properties on position change. */\n    _scrollables = [];\n    /** Ordered list of preferred positions, from most to least desirable. */\n    _preferredPositions = [];\n    /** The origin element against which the overlay will be positioned. */\n    _origin;\n    /** The overlay pane element. */\n    _pane;\n    /** Whether the strategy has been disposed of already. */\n    _isDisposed;\n    /**\n     * Parent element for the overlay panel used to constrain the overlay panel's size to fit\n     * within the viewport.\n     */\n    _boundingBox;\n    /** The last position to have been calculated as the best fit position. */\n    _lastPosition;\n    /** The last calculated scroll visibility. Only tracked  */\n    _lastScrollVisibility;\n    /** Subject that emits whenever the position changes. */\n    _positionChanges = new Subject();\n    /** Subscription to viewport size changes. */\n    _resizeSubscription = Subscription.EMPTY;\n    /** Default offset for the overlay along the x axis. */\n    _offsetX = 0;\n    /** Default offset for the overlay along the y axis. */\n    _offsetY = 0;\n    /** Selector to be used when finding the elements on which to set the transform origin. */\n    _transformOriginSelector;\n    /** Keeps track of the CSS classes that the position strategy has applied on the overlay panel. */\n    _appliedPanelClasses = [];\n    /** Amount by which the overlay was pushed in each axis during the last time it was positioned. */\n    _previousPushAmount;\n    /** Observable sequence of position changes. */\n    positionChanges = this._positionChanges;\n    /** Ordered list of preferred positions, from most to least desirable. */\n    get positions() {\n        return this._preferredPositions;\n    }\n    constructor(connectedTo, _viewportRuler, _document, _platform, _overlayContainer) {\n        this._viewportRuler = _viewportRuler;\n        this._document = _document;\n        this._platform = _platform;\n        this._overlayContainer = _overlayContainer;\n        this.setOrigin(connectedTo);\n    }\n    /** Attaches this position strategy to an overlay. */\n    attach(overlayRef) {\n        if (this._overlayRef &&\n            overlayRef !== this._overlayRef &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('This position strategy is already attached to an overlay');\n        }\n        this._validatePositions();\n        overlayRef.hostElement.classList.add(boundingBoxClass);\n        this._overlayRef = overlayRef;\n        this._boundingBox = overlayRef.hostElement;\n        this._pane = overlayRef.overlayElement;\n        this._isDisposed = false;\n        this._isInitialRender = true;\n        this._lastPosition = null;\n        this._resizeSubscription.unsubscribe();\n        this._resizeSubscription = this._viewportRuler.change().subscribe(() => {\n            // When the window is resized, we want to trigger the next reposition as if it\n            // was an initial render, in order for the strategy to pick a new optimal position,\n            // otherwise position locking will cause it to stay at the old one.\n            this._isInitialRender = true;\n            this.apply();\n        });\n    }\n    /**\n     * Updates the position of the overlay element, using whichever preferred position relative\n     * to the origin best fits on-screen.\n     *\n     * The selection of a position goes as follows:\n     *  - If any positions fit completely within the viewport as-is,\n     *      choose the first position that does so.\n     *  - If flexible dimensions are enabled and at least one satisfies the given minimum width/height,\n     *      choose the position with the greatest available size modified by the positions' weight.\n     *  - If pushing is enabled, take the position that went off-screen the least and push it\n     *      on-screen.\n     *  - If none of the previous criteria were met, use the position that goes off-screen the least.\n     * @docs-private\n     */\n    apply() {\n        // We shouldn't do anything if the strategy was disposed or we're on the server.\n        if (this._isDisposed || !this._platform.isBrowser) {\n            return;\n        }\n        // If the position has been applied already (e.g. when the overlay was opened) and the\n        // consumer opted into locking in the position, re-use the old position, in order to\n        // prevent the overlay from jumping around.\n        if (!this._isInitialRender && this._positionLocked && this._lastPosition) {\n            this.reapplyLastPosition();\n            return;\n        }\n        this._clearPanelClasses();\n        this._resetOverlayElementStyles();\n        this._resetBoundingBoxStyles();\n        // We need the bounding rects for the origin, the overlay and the container to determine how to position\n        // the overlay relative to the origin.\n        // We use the viewport rect to determine whether a position would go off-screen.\n        this._viewportRect = this._getNarrowedViewportRect();\n        this._originRect = this._getOriginRect();\n        this._overlayRect = this._pane.getBoundingClientRect();\n        this._containerRect = this._overlayContainer.getContainerElement().getBoundingClientRect();\n        const originRect = this._originRect;\n        const overlayRect = this._overlayRect;\n        const viewportRect = this._viewportRect;\n        const containerRect = this._containerRect;\n        // Positions where the overlay will fit with flexible dimensions.\n        const flexibleFits = [];\n        // Fallback if none of the preferred positions fit within the viewport.\n        let fallback;\n        // Go through each of the preferred positions looking for a good fit.\n        // If a good fit is found, it will be applied immediately.\n        for (let pos of this._preferredPositions) {\n            // Get the exact (x, y) coordinate for the point-of-origin on the origin element.\n            let originPoint = this._getOriginPoint(originRect, containerRect, pos);\n            // From that point-of-origin, get the exact (x, y) coordinate for the top-left corner of the\n            // overlay in this position. We use the top-left corner for calculations and later translate\n            // this into an appropriate (top, left, bottom, right) style.\n            let overlayPoint = this._getOverlayPoint(originPoint, overlayRect, pos);\n            // Calculate how well the overlay would fit into the viewport with this point.\n            let overlayFit = this._getOverlayFit(overlayPoint, overlayRect, viewportRect, pos);\n            // If the overlay, without any further work, fits into the viewport, use this position.\n            if (overlayFit.isCompletelyWithinViewport) {\n                this._isPushed = false;\n                this._applyPosition(pos, originPoint);\n                return;\n            }\n            // If the overlay has flexible dimensions, we can use this position\n            // so long as there's enough space for the minimum dimensions.\n            if (this._canFitWithFlexibleDimensions(overlayFit, overlayPoint, viewportRect)) {\n                // Save positions where the overlay will fit with flexible dimensions. We will use these\n                // if none of the positions fit *without* flexible dimensions.\n                flexibleFits.push({\n                    position: pos,\n                    origin: originPoint,\n                    overlayRect,\n                    boundingBoxRect: this._calculateBoundingBoxRect(originPoint, pos),\n                });\n                continue;\n            }\n            // If the current preferred position does not fit on the screen, remember the position\n            // if it has more visible area on-screen than we've seen and move onto the next preferred\n            // position.\n            if (!fallback || fallback.overlayFit.visibleArea < overlayFit.visibleArea) {\n                fallback = { overlayFit, overlayPoint, originPoint, position: pos, overlayRect };\n            }\n        }\n        // If there are any positions where the overlay would fit with flexible dimensions, choose the\n        // one that has the greatest area available modified by the position's weight\n        if (flexibleFits.length) {\n            let bestFit = null;\n            let bestScore = -1;\n            for (const fit of flexibleFits) {\n                const score = fit.boundingBoxRect.width * fit.boundingBoxRect.height * (fit.position.weight || 1);\n                if (score > bestScore) {\n                    bestScore = score;\n                    bestFit = fit;\n                }\n            }\n            this._isPushed = false;\n            this._applyPosition(bestFit.position, bestFit.origin);\n            return;\n        }\n        // When none of the preferred positions fit within the viewport, take the position\n        // that went off-screen the least and attempt to push it on-screen.\n        if (this._canPush) {\n            // TODO(jelbourn): after pushing, the opening \"direction\" of the overlay might not make sense.\n            this._isPushed = true;\n            this._applyPosition(fallback.position, fallback.originPoint);\n            return;\n        }\n        // All options for getting the overlay within the viewport have been exhausted, so go with the\n        // position that went off-screen the least.\n        this._applyPosition(fallback.position, fallback.originPoint);\n    }\n    detach() {\n        this._clearPanelClasses();\n        this._lastPosition = null;\n        this._previousPushAmount = null;\n        this._resizeSubscription.unsubscribe();\n    }\n    /** Cleanup after the element gets destroyed. */\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        // We can't use `_resetBoundingBoxStyles` here, because it resets\n        // some properties to zero, rather than removing them.\n        if (this._boundingBox) {\n            extendStyles(this._boundingBox.style, {\n                top: '',\n                left: '',\n                right: '',\n                bottom: '',\n                height: '',\n                width: '',\n                alignItems: '',\n                justifyContent: '',\n            });\n        }\n        if (this._pane) {\n            this._resetOverlayElementStyles();\n        }\n        if (this._overlayRef) {\n            this._overlayRef.hostElement.classList.remove(boundingBoxClass);\n        }\n        this.detach();\n        this._positionChanges.complete();\n        this._overlayRef = this._boundingBox = null;\n        this._isDisposed = true;\n    }\n    /**\n     * This re-aligns the overlay element with the trigger in its last calculated position,\n     * even if a position higher in the \"preferred positions\" list would now fit. This\n     * allows one to re-align the panel without changing the orientation of the panel.\n     */\n    reapplyLastPosition() {\n        if (this._isDisposed || !this._platform.isBrowser) {\n            return;\n        }\n        const lastPosition = this._lastPosition;\n        if (lastPosition) {\n            this._originRect = this._getOriginRect();\n            this._overlayRect = this._pane.getBoundingClientRect();\n            this._viewportRect = this._getNarrowedViewportRect();\n            this._containerRect = this._overlayContainer.getContainerElement().getBoundingClientRect();\n            const originPoint = this._getOriginPoint(this._originRect, this._containerRect, lastPosition);\n            this._applyPosition(lastPosition, originPoint);\n        }\n        else {\n            this.apply();\n        }\n    }\n    /**\n     * Sets the list of Scrollable containers that host the origin element so that\n     * on reposition we can evaluate if it or the overlay has been clipped or outside view. Every\n     * Scrollable must be an ancestor element of the strategy's origin element.\n     */\n    withScrollableContainers(scrollables) {\n        this._scrollables = scrollables;\n        return this;\n    }\n    /**\n     * Adds new preferred positions.\n     * @param positions List of positions options for this overlay.\n     */\n    withPositions(positions) {\n        this._preferredPositions = positions;\n        // If the last calculated position object isn't part of the positions anymore, clear\n        // it in order to avoid it being picked up if the consumer tries to re-apply.\n        if (positions.indexOf(this._lastPosition) === -1) {\n            this._lastPosition = null;\n        }\n        this._validatePositions();\n        return this;\n    }\n    /**\n     * Sets a minimum distance the overlay may be positioned to the edge of the viewport.\n     * @param margin Required margin between the overlay and the viewport edge in pixels.\n     */\n    withViewportMargin(margin) {\n        this._viewportMargin = margin;\n        return this;\n    }\n    /** Sets whether the overlay's width and height can be constrained to fit within the viewport. */\n    withFlexibleDimensions(flexibleDimensions = true) {\n        this._hasFlexibleDimensions = flexibleDimensions;\n        return this;\n    }\n    /** Sets whether the overlay can grow after the initial open via flexible width/height. */\n    withGrowAfterOpen(growAfterOpen = true) {\n        this._growAfterOpen = growAfterOpen;\n        return this;\n    }\n    /** Sets whether the overlay can be pushed on-screen if none of the provided positions fit. */\n    withPush(canPush = true) {\n        this._canPush = canPush;\n        return this;\n    }\n    /**\n     * Sets whether the overlay's position should be locked in after it is positioned\n     * initially. When an overlay is locked in, it won't attempt to reposition itself\n     * when the position is re-applied (e.g. when the user scrolls away).\n     * @param isLocked Whether the overlay should locked in.\n     */\n    withLockedPosition(isLocked = true) {\n        this._positionLocked = isLocked;\n        return this;\n    }\n    /**\n     * Sets the origin, relative to which to position the overlay.\n     * Using an element origin is useful for building components that need to be positioned\n     * relatively to a trigger (e.g. dropdown menus or tooltips), whereas using a point can be\n     * used for cases like contextual menus which open relative to the user's pointer.\n     * @param origin Reference to the new origin.\n     */\n    setOrigin(origin) {\n        this._origin = origin;\n        return this;\n    }\n    /**\n     * Sets the default offset for the overlay's connection point on the x-axis.\n     * @param offset New offset in the X axis.\n     */\n    withDefaultOffsetX(offset) {\n        this._offsetX = offset;\n        return this;\n    }\n    /**\n     * Sets the default offset for the overlay's connection point on the y-axis.\n     * @param offset New offset in the Y axis.\n     */\n    withDefaultOffsetY(offset) {\n        this._offsetY = offset;\n        return this;\n    }\n    /**\n     * Configures that the position strategy should set a `transform-origin` on some elements\n     * inside the overlay, depending on the current position that is being applied. This is\n     * useful for the cases where the origin of an animation can change depending on the\n     * alignment of the overlay.\n     * @param selector CSS selector that will be used to find the target\n     *    elements onto which to set the transform origin.\n     */\n    withTransformOriginOn(selector) {\n        this._transformOriginSelector = selector;\n        return this;\n    }\n    /**\n     * Gets the (x, y) coordinate of a connection point on the origin based on a relative position.\n     */\n    _getOriginPoint(originRect, containerRect, pos) {\n        let x;\n        if (pos.originX == 'center') {\n            // Note: when centering we should always use the `left`\n            // offset, otherwise the position will be wrong in RTL.\n            x = originRect.left + originRect.width / 2;\n        }\n        else {\n            const startX = this._isRtl() ? originRect.right : originRect.left;\n            const endX = this._isRtl() ? originRect.left : originRect.right;\n            x = pos.originX == 'start' ? startX : endX;\n        }\n        // When zooming in Safari the container rectangle contains negative values for the position\n        // and we need to re-add them to the calculated coordinates.\n        if (containerRect.left < 0) {\n            x -= containerRect.left;\n        }\n        let y;\n        if (pos.originY == 'center') {\n            y = originRect.top + originRect.height / 2;\n        }\n        else {\n            y = pos.originY == 'top' ? originRect.top : originRect.bottom;\n        }\n        // Normally the containerRect's top value would be zero, however when the overlay is attached to an input\n        // (e.g. in an autocomplete), mobile browsers will shift everything in order to put the input in the middle\n        // of the screen and to make space for the virtual keyboard. We need to account for this offset,\n        // otherwise our positioning will be thrown off.\n        // Additionally, when zooming in Safari this fixes the vertical position.\n        if (containerRect.top < 0) {\n            y -= containerRect.top;\n        }\n        return { x, y };\n    }\n    /**\n     * Gets the (x, y) coordinate of the top-left corner of the overlay given a given position and\n     * origin point to which the overlay should be connected.\n     */\n    _getOverlayPoint(originPoint, overlayRect, pos) {\n        // Calculate the (overlayStartX, overlayStartY), the start of the\n        // potential overlay position relative to the origin point.\n        let overlayStartX;\n        if (pos.overlayX == 'center') {\n            overlayStartX = -overlayRect.width / 2;\n        }\n        else if (pos.overlayX === 'start') {\n            overlayStartX = this._isRtl() ? -overlayRect.width : 0;\n        }\n        else {\n            overlayStartX = this._isRtl() ? 0 : -overlayRect.width;\n        }\n        let overlayStartY;\n        if (pos.overlayY == 'center') {\n            overlayStartY = -overlayRect.height / 2;\n        }\n        else {\n            overlayStartY = pos.overlayY == 'top' ? 0 : -overlayRect.height;\n        }\n        // The (x, y) coordinates of the overlay.\n        return {\n            x: originPoint.x + overlayStartX,\n            y: originPoint.y + overlayStartY,\n        };\n    }\n    /** Gets how well an overlay at the given point will fit within the viewport. */\n    _getOverlayFit(point, rawOverlayRect, viewport, position) {\n        // Round the overlay rect when comparing against the\n        // viewport, because the viewport is always rounded.\n        const overlay = getRoundedBoundingClientRect(rawOverlayRect);\n        let { x, y } = point;\n        let offsetX = this._getOffset(position, 'x');\n        let offsetY = this._getOffset(position, 'y');\n        // Account for the offsets since they could push the overlay out of the viewport.\n        if (offsetX) {\n            x += offsetX;\n        }\n        if (offsetY) {\n            y += offsetY;\n        }\n        // How much the overlay would overflow at this position, on each side.\n        let leftOverflow = 0 - x;\n        let rightOverflow = x + overlay.width - viewport.width;\n        let topOverflow = 0 - y;\n        let bottomOverflow = y + overlay.height - viewport.height;\n        // Visible parts of the element on each axis.\n        let visibleWidth = this._subtractOverflows(overlay.width, leftOverflow, rightOverflow);\n        let visibleHeight = this._subtractOverflows(overlay.height, topOverflow, bottomOverflow);\n        let visibleArea = visibleWidth * visibleHeight;\n        return {\n            visibleArea,\n            isCompletelyWithinViewport: overlay.width * overlay.height === visibleArea,\n            fitsInViewportVertically: visibleHeight === overlay.height,\n            fitsInViewportHorizontally: visibleWidth == overlay.width,\n        };\n    }\n    /**\n     * Whether the overlay can fit within the viewport when it may resize either its width or height.\n     * @param fit How well the overlay fits in the viewport at some position.\n     * @param point The (x, y) coordinates of the overlay at some position.\n     * @param viewport The geometry of the viewport.\n     */\n    _canFitWithFlexibleDimensions(fit, point, viewport) {\n        if (this._hasFlexibleDimensions) {\n            const availableHeight = viewport.bottom - point.y;\n            const availableWidth = viewport.right - point.x;\n            const minHeight = getPixelValue(this._overlayRef.getConfig().minHeight);\n            const minWidth = getPixelValue(this._overlayRef.getConfig().minWidth);\n            const verticalFit = fit.fitsInViewportVertically || (minHeight != null && minHeight <= availableHeight);\n            const horizontalFit = fit.fitsInViewportHorizontally || (minWidth != null && minWidth <= availableWidth);\n            return verticalFit && horizontalFit;\n        }\n        return false;\n    }\n    /**\n     * Gets the point at which the overlay can be \"pushed\" on-screen. If the overlay is larger than\n     * the viewport, the top-left corner will be pushed on-screen (with overflow occurring on the\n     * right and bottom).\n     *\n     * @param start Starting point from which the overlay is pushed.\n     * @param rawOverlayRect Dimensions of the overlay.\n     * @param scrollPosition Current viewport scroll position.\n     * @returns The point at which to position the overlay after pushing. This is effectively a new\n     *     originPoint.\n     */\n    _pushOverlayOnScreen(start, rawOverlayRect, scrollPosition) {\n        // If the position is locked and we've pushed the overlay already, reuse the previous push\n        // amount, rather than pushing it again. If we were to continue pushing, the element would\n        // remain in the viewport, which goes against the expectations when position locking is enabled.\n        if (this._previousPushAmount && this._positionLocked) {\n            return {\n                x: start.x + this._previousPushAmount.x,\n                y: start.y + this._previousPushAmount.y,\n            };\n        }\n        // Round the overlay rect when comparing against the\n        // viewport, because the viewport is always rounded.\n        const overlay = getRoundedBoundingClientRect(rawOverlayRect);\n        const viewport = this._viewportRect;\n        // Determine how much the overlay goes outside the viewport on each\n        // side, which we'll use to decide which direction to push it.\n        const overflowRight = Math.max(start.x + overlay.width - viewport.width, 0);\n        const overflowBottom = Math.max(start.y + overlay.height - viewport.height, 0);\n        const overflowTop = Math.max(viewport.top - scrollPosition.top - start.y, 0);\n        const overflowLeft = Math.max(viewport.left - scrollPosition.left - start.x, 0);\n        // Amount by which to push the overlay in each axis such that it remains on-screen.\n        let pushX = 0;\n        let pushY = 0;\n        // If the overlay fits completely within the bounds of the viewport, push it from whichever\n        // direction is goes off-screen. Otherwise, push the top-left corner such that its in the\n        // viewport and allow for the trailing end of the overlay to go out of bounds.\n        if (overlay.width <= viewport.width) {\n            pushX = overflowLeft || -overflowRight;\n        }\n        else {\n            pushX = start.x < this._viewportMargin ? viewport.left - scrollPosition.left - start.x : 0;\n        }\n        if (overlay.height <= viewport.height) {\n            pushY = overflowTop || -overflowBottom;\n        }\n        else {\n            pushY = start.y < this._viewportMargin ? viewport.top - scrollPosition.top - start.y : 0;\n        }\n        this._previousPushAmount = { x: pushX, y: pushY };\n        return {\n            x: start.x + pushX,\n            y: start.y + pushY,\n        };\n    }\n    /**\n     * Applies a computed position to the overlay and emits a position change.\n     * @param position The position preference\n     * @param originPoint The point on the origin element where the overlay is connected.\n     */\n    _applyPosition(position, originPoint) {\n        this._setTransformOrigin(position);\n        this._setOverlayElementStyles(originPoint, position);\n        this._setBoundingBoxStyles(originPoint, position);\n        if (position.panelClass) {\n            this._addPanelClasses(position.panelClass);\n        }\n        // Notify that the position has been changed along with its change properties.\n        // We only emit if we've got any subscriptions, because the scroll visibility\n        // calculations can be somewhat expensive.\n        if (this._positionChanges.observers.length) {\n            const scrollVisibility = this._getScrollVisibility();\n            // We're recalculating on scroll, but we only want to emit if anything\n            // changed since downstream code might be hitting the `NgZone`.\n            if (position !== this._lastPosition ||\n                !this._lastScrollVisibility ||\n                !compareScrollVisibility(this._lastScrollVisibility, scrollVisibility)) {\n                const changeEvent = new ConnectedOverlayPositionChange(position, scrollVisibility);\n                this._positionChanges.next(changeEvent);\n            }\n            this._lastScrollVisibility = scrollVisibility;\n        }\n        // Save the last connected position in case the position needs to be re-calculated.\n        this._lastPosition = position;\n        this._isInitialRender = false;\n    }\n    /** Sets the transform origin based on the configured selector and the passed-in position.  */\n    _setTransformOrigin(position) {\n        if (!this._transformOriginSelector) {\n            return;\n        }\n        const elements = this._boundingBox.querySelectorAll(this._transformOriginSelector);\n        let xOrigin;\n        let yOrigin = position.overlayY;\n        if (position.overlayX === 'center') {\n            xOrigin = 'center';\n        }\n        else if (this._isRtl()) {\n            xOrigin = position.overlayX === 'start' ? 'right' : 'left';\n        }\n        else {\n            xOrigin = position.overlayX === 'start' ? 'left' : 'right';\n        }\n        for (let i = 0; i < elements.length; i++) {\n            elements[i].style.transformOrigin = `${xOrigin} ${yOrigin}`;\n        }\n    }\n    /**\n     * Gets the position and size of the overlay's sizing container.\n     *\n     * This method does no measuring and applies no styles so that we can cheaply compute the\n     * bounds for all positions and choose the best fit based on these results.\n     */\n    _calculateBoundingBoxRect(origin, position) {\n        const viewport = this._viewportRect;\n        const isRtl = this._isRtl();\n        let height, top, bottom;\n        if (position.overlayY === 'top') {\n            // Overlay is opening \"downward\" and thus is bound by the bottom viewport edge.\n            top = origin.y;\n            height = viewport.height - top + this._viewportMargin;\n        }\n        else if (position.overlayY === 'bottom') {\n            // Overlay is opening \"upward\" and thus is bound by the top viewport edge. We need to add\n            // the viewport margin back in, because the viewport rect is narrowed down to remove the\n            // margin, whereas the `origin` position is calculated based on its `DOMRect`.\n            bottom = viewport.height - origin.y + this._viewportMargin * 2;\n            height = viewport.height - bottom + this._viewportMargin;\n        }\n        else {\n            // If neither top nor bottom, it means that the overlay is vertically centered on the\n            // origin point. Note that we want the position relative to the viewport, rather than\n            // the page, which is why we don't use something like `viewport.bottom - origin.y` and\n            // `origin.y - viewport.top`.\n            const smallestDistanceToViewportEdge = Math.min(viewport.bottom - origin.y + viewport.top, origin.y);\n            const previousHeight = this._lastBoundingBoxSize.height;\n            height = smallestDistanceToViewportEdge * 2;\n            top = origin.y - smallestDistanceToViewportEdge;\n            if (height > previousHeight && !this._isInitialRender && !this._growAfterOpen) {\n                top = origin.y - previousHeight / 2;\n            }\n        }\n        // The overlay is opening 'right-ward' (the content flows to the right).\n        const isBoundedByRightViewportEdge = (position.overlayX === 'start' && !isRtl) || (position.overlayX === 'end' && isRtl);\n        // The overlay is opening 'left-ward' (the content flows to the left).\n        const isBoundedByLeftViewportEdge = (position.overlayX === 'end' && !isRtl) || (position.overlayX === 'start' && isRtl);\n        let width, left, right;\n        if (isBoundedByLeftViewportEdge) {\n            right = viewport.width - origin.x + this._viewportMargin * 2;\n            width = origin.x - this._viewportMargin;\n        }\n        else if (isBoundedByRightViewportEdge) {\n            left = origin.x;\n            width = viewport.right - origin.x;\n        }\n        else {\n            // If neither start nor end, it means that the overlay is horizontally centered on the\n            // origin point. Note that we want the position relative to the viewport, rather than\n            // the page, which is why we don't use something like `viewport.right - origin.x` and\n            // `origin.x - viewport.left`.\n            const smallestDistanceToViewportEdge = Math.min(viewport.right - origin.x + viewport.left, origin.x);\n            const previousWidth = this._lastBoundingBoxSize.width;\n            width = smallestDistanceToViewportEdge * 2;\n            left = origin.x - smallestDistanceToViewportEdge;\n            if (width > previousWidth && !this._isInitialRender && !this._growAfterOpen) {\n                left = origin.x - previousWidth / 2;\n            }\n        }\n        return { top: top, left: left, bottom: bottom, right: right, width, height };\n    }\n    /**\n     * Sets the position and size of the overlay's sizing wrapper. The wrapper is positioned on the\n     * origin's connection point and stretches to the bounds of the viewport.\n     *\n     * @param origin The point on the origin element where the overlay is connected.\n     * @param position The position preference\n     */\n    _setBoundingBoxStyles(origin, position) {\n        const boundingBoxRect = this._calculateBoundingBoxRect(origin, position);\n        // It's weird if the overlay *grows* while scrolling, so we take the last size into account\n        // when applying a new size.\n        if (!this._isInitialRender && !this._growAfterOpen) {\n            boundingBoxRect.height = Math.min(boundingBoxRect.height, this._lastBoundingBoxSize.height);\n            boundingBoxRect.width = Math.min(boundingBoxRect.width, this._lastBoundingBoxSize.width);\n        }\n        const styles = {};\n        if (this._hasExactPosition()) {\n            styles.top = styles.left = '0';\n            styles.bottom = styles.right = styles.maxHeight = styles.maxWidth = '';\n            styles.width = styles.height = '100%';\n        }\n        else {\n            const maxHeight = this._overlayRef.getConfig().maxHeight;\n            const maxWidth = this._overlayRef.getConfig().maxWidth;\n            styles.height = coerceCssPixelValue(boundingBoxRect.height);\n            styles.top = coerceCssPixelValue(boundingBoxRect.top);\n            styles.bottom = coerceCssPixelValue(boundingBoxRect.bottom);\n            styles.width = coerceCssPixelValue(boundingBoxRect.width);\n            styles.left = coerceCssPixelValue(boundingBoxRect.left);\n            styles.right = coerceCssPixelValue(boundingBoxRect.right);\n            // Push the pane content towards the proper direction.\n            if (position.overlayX === 'center') {\n                styles.alignItems = 'center';\n            }\n            else {\n                styles.alignItems = position.overlayX === 'end' ? 'flex-end' : 'flex-start';\n            }\n            if (position.overlayY === 'center') {\n                styles.justifyContent = 'center';\n            }\n            else {\n                styles.justifyContent = position.overlayY === 'bottom' ? 'flex-end' : 'flex-start';\n            }\n            if (maxHeight) {\n                styles.maxHeight = coerceCssPixelValue(maxHeight);\n            }\n            if (maxWidth) {\n                styles.maxWidth = coerceCssPixelValue(maxWidth);\n            }\n        }\n        this._lastBoundingBoxSize = boundingBoxRect;\n        extendStyles(this._boundingBox.style, styles);\n    }\n    /** Resets the styles for the bounding box so that a new positioning can be computed. */\n    _resetBoundingBoxStyles() {\n        extendStyles(this._boundingBox.style, {\n            top: '0',\n            left: '0',\n            right: '0',\n            bottom: '0',\n            height: '',\n            width: '',\n            alignItems: '',\n            justifyContent: '',\n        });\n    }\n    /** Resets the styles for the overlay pane so that a new positioning can be computed. */\n    _resetOverlayElementStyles() {\n        extendStyles(this._pane.style, {\n            top: '',\n            left: '',\n            bottom: '',\n            right: '',\n            position: '',\n            transform: '',\n        });\n    }\n    /** Sets positioning styles to the overlay element. */\n    _setOverlayElementStyles(originPoint, position) {\n        const styles = {};\n        const hasExactPosition = this._hasExactPosition();\n        const hasFlexibleDimensions = this._hasFlexibleDimensions;\n        const config = this._overlayRef.getConfig();\n        if (hasExactPosition) {\n            const scrollPosition = this._viewportRuler.getViewportScrollPosition();\n            extendStyles(styles, this._getExactOverlayY(position, originPoint, scrollPosition));\n            extendStyles(styles, this._getExactOverlayX(position, originPoint, scrollPosition));\n        }\n        else {\n            styles.position = 'static';\n        }\n        // Use a transform to apply the offsets. We do this because the `center` positions rely on\n        // being in the normal flex flow and setting a `top` / `left` at all will completely throw\n        // off the position. We also can't use margins, because they won't have an effect in some\n        // cases where the element doesn't have anything to \"push off of\". Finally, this works\n        // better both with flexible and non-flexible positioning.\n        let transformString = '';\n        let offsetX = this._getOffset(position, 'x');\n        let offsetY = this._getOffset(position, 'y');\n        if (offsetX) {\n            transformString += `translateX(${offsetX}px) `;\n        }\n        if (offsetY) {\n            transformString += `translateY(${offsetY}px)`;\n        }\n        styles.transform = transformString.trim();\n        // If a maxWidth or maxHeight is specified on the overlay, we remove them. We do this because\n        // we need these values to both be set to \"100%\" for the automatic flexible sizing to work.\n        // The maxHeight and maxWidth are set on the boundingBox in order to enforce the constraint.\n        // Note that this doesn't apply when we have an exact position, in which case we do want to\n        // apply them because they'll be cleared from the bounding box.\n        if (config.maxHeight) {\n            if (hasExactPosition) {\n                styles.maxHeight = coerceCssPixelValue(config.maxHeight);\n            }\n            else if (hasFlexibleDimensions) {\n                styles.maxHeight = '';\n            }\n        }\n        if (config.maxWidth) {\n            if (hasExactPosition) {\n                styles.maxWidth = coerceCssPixelValue(config.maxWidth);\n            }\n            else if (hasFlexibleDimensions) {\n                styles.maxWidth = '';\n            }\n        }\n        extendStyles(this._pane.style, styles);\n    }\n    /** Gets the exact top/bottom for the overlay when not using flexible sizing or when pushing. */\n    _getExactOverlayY(position, originPoint, scrollPosition) {\n        // Reset any existing styles. This is necessary in case the\n        // preferred position has changed since the last `apply`.\n        let styles = { top: '', bottom: '' };\n        let overlayPoint = this._getOverlayPoint(originPoint, this._overlayRect, position);\n        if (this._isPushed) {\n            overlayPoint = this._pushOverlayOnScreen(overlayPoint, this._overlayRect, scrollPosition);\n        }\n        // We want to set either `top` or `bottom` based on whether the overlay wants to appear\n        // above or below the origin and the direction in which the element will expand.\n        if (position.overlayY === 'bottom') {\n            // When using `bottom`, we adjust the y position such that it is the distance\n            // from the bottom of the viewport rather than the top.\n            const documentHeight = this._document.documentElement.clientHeight;\n            styles.bottom = `${documentHeight - (overlayPoint.y + this._overlayRect.height)}px`;\n        }\n        else {\n            styles.top = coerceCssPixelValue(overlayPoint.y);\n        }\n        return styles;\n    }\n    /** Gets the exact left/right for the overlay when not using flexible sizing or when pushing. */\n    _getExactOverlayX(position, originPoint, scrollPosition) {\n        // Reset any existing styles. This is necessary in case the preferred position has\n        // changed since the last `apply`.\n        let styles = { left: '', right: '' };\n        let overlayPoint = this._getOverlayPoint(originPoint, this._overlayRect, position);\n        if (this._isPushed) {\n            overlayPoint = this._pushOverlayOnScreen(overlayPoint, this._overlayRect, scrollPosition);\n        }\n        // We want to set either `left` or `right` based on whether the overlay wants to appear \"before\"\n        // or \"after\" the origin, which determines the direction in which the element will expand.\n        // For the horizontal axis, the meaning of \"before\" and \"after\" change based on whether the\n        // page is in RTL or LTR.\n        let horizontalStyleProperty;\n        if (this._isRtl()) {\n            horizontalStyleProperty = position.overlayX === 'end' ? 'left' : 'right';\n        }\n        else {\n            horizontalStyleProperty = position.overlayX === 'end' ? 'right' : 'left';\n        }\n        // When we're setting `right`, we adjust the x position such that it is the distance\n        // from the right edge of the viewport rather than the left edge.\n        if (horizontalStyleProperty === 'right') {\n            const documentWidth = this._document.documentElement.clientWidth;\n            styles.right = `${documentWidth - (overlayPoint.x + this._overlayRect.width)}px`;\n        }\n        else {\n            styles.left = coerceCssPixelValue(overlayPoint.x);\n        }\n        return styles;\n    }\n    /**\n     * Gets the view properties of the trigger and overlay, including whether they are clipped\n     * or completely outside the view of any of the strategy's scrollables.\n     */\n    _getScrollVisibility() {\n        // Note: needs fresh rects since the position could've changed.\n        const originBounds = this._getOriginRect();\n        const overlayBounds = this._pane.getBoundingClientRect();\n        // TODO(jelbourn): instead of needing all of the client rects for these scrolling containers\n        // every time, we should be able to use the scrollTop of the containers if the size of those\n        // containers hasn't changed.\n        const scrollContainerBounds = this._scrollables.map(scrollable => {\n            return scrollable.getElementRef().nativeElement.getBoundingClientRect();\n        });\n        return {\n            isOriginClipped: isElementClippedByScrolling(originBounds, scrollContainerBounds),\n            isOriginOutsideView: isElementScrolledOutsideView(originBounds, scrollContainerBounds),\n            isOverlayClipped: isElementClippedByScrolling(overlayBounds, scrollContainerBounds),\n            isOverlayOutsideView: isElementScrolledOutsideView(overlayBounds, scrollContainerBounds),\n        };\n    }\n    /** Subtracts the amount that an element is overflowing on an axis from its length. */\n    _subtractOverflows(length, ...overflows) {\n        return overflows.reduce((currentValue, currentOverflow) => {\n            return currentValue - Math.max(currentOverflow, 0);\n        }, length);\n    }\n    /** Narrows the given viewport rect by the current _viewportMargin. */\n    _getNarrowedViewportRect() {\n        // We recalculate the viewport rect here ourselves, rather than using the ViewportRuler,\n        // because we want to use the `clientWidth` and `clientHeight` as the base. The difference\n        // being that the client properties don't include the scrollbar, as opposed to `innerWidth`\n        // and `innerHeight` that do. This is necessary, because the overlay container uses\n        // 100% `width` and `height` which don't include the scrollbar either.\n        const width = this._document.documentElement.clientWidth;\n        const height = this._document.documentElement.clientHeight;\n        const scrollPosition = this._viewportRuler.getViewportScrollPosition();\n        return {\n            top: scrollPosition.top + this._viewportMargin,\n            left: scrollPosition.left + this._viewportMargin,\n            right: scrollPosition.left + width - this._viewportMargin,\n            bottom: scrollPosition.top + height - this._viewportMargin,\n            width: width - 2 * this._viewportMargin,\n            height: height - 2 * this._viewportMargin,\n        };\n    }\n    /** Whether the we're dealing with an RTL context */\n    _isRtl() {\n        return this._overlayRef.getDirection() === 'rtl';\n    }\n    /** Determines whether the overlay uses exact or flexible positioning. */\n    _hasExactPosition() {\n        return !this._hasFlexibleDimensions || this._isPushed;\n    }\n    /** Retrieves the offset of a position along the x or y axis. */\n    _getOffset(position, axis) {\n        if (axis === 'x') {\n            // We don't do something like `position['offset' + axis]` in\n            // order to avoid breaking minifiers that rename properties.\n            return position.offsetX == null ? this._offsetX : position.offsetX;\n        }\n        return position.offsetY == null ? this._offsetY : position.offsetY;\n    }\n    /** Validates that the current position match the expected values. */\n    _validatePositions() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._preferredPositions.length) {\n                throw Error('FlexibleConnectedPositionStrategy: At least one position is required.');\n            }\n            // TODO(crisbeto): remove these once Angular's template type\n            // checking is advanced enough to catch these cases.\n            this._preferredPositions.forEach(pair => {\n                validateHorizontalPosition('originX', pair.originX);\n                validateVerticalPosition('originY', pair.originY);\n                validateHorizontalPosition('overlayX', pair.overlayX);\n                validateVerticalPosition('overlayY', pair.overlayY);\n            });\n        }\n    }\n    /** Adds a single CSS class or an array of classes on the overlay panel. */\n    _addPanelClasses(cssClasses) {\n        if (this._pane) {\n            coerceArray(cssClasses).forEach(cssClass => {\n                if (cssClass !== '' && this._appliedPanelClasses.indexOf(cssClass) === -1) {\n                    this._appliedPanelClasses.push(cssClass);\n                    this._pane.classList.add(cssClass);\n                }\n            });\n        }\n    }\n    /** Clears the classes that the position strategy has applied from the overlay panel. */\n    _clearPanelClasses() {\n        if (this._pane) {\n            this._appliedPanelClasses.forEach(cssClass => {\n                this._pane.classList.remove(cssClass);\n            });\n            this._appliedPanelClasses = [];\n        }\n    }\n    /** Returns the DOMRect of the current origin. */\n    _getOriginRect() {\n        const origin = this._origin;\n        if (origin instanceof ElementRef) {\n            return origin.nativeElement.getBoundingClientRect();\n        }\n        // Check for Element so SVG elements are also supported.\n        if (origin instanceof Element) {\n            return origin.getBoundingClientRect();\n        }\n        const width = origin.width || 0;\n        const height = origin.height || 0;\n        // If the origin is a point, return a client rect as if it was a 0x0 element at the point.\n        return {\n            top: origin.y,\n            bottom: origin.y + height,\n            left: origin.x,\n            right: origin.x + width,\n            height,\n            width,\n        };\n    }\n}\n/** Shallow-extends a stylesheet object with another stylesheet object. */\nfunction extendStyles(destination, source) {\n    for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n            destination[key] = source[key];\n        }\n    }\n    return destination;\n}\n/**\n * Extracts the pixel value as a number from a value, if it's a number\n * or a CSS pixel string (e.g. `1337px`). Otherwise returns null.\n */\nfunction getPixelValue(input) {\n    if (typeof input !== 'number' && input != null) {\n        const [value, units] = input.split(cssUnitPattern);\n        return !units || units === 'px' ? parseFloat(value) : null;\n    }\n    return input || null;\n}\n/**\n * Gets a version of an element's bounding `DOMRect` where all the values are rounded down to\n * the nearest pixel. This allows us to account for the cases where there may be sub-pixel\n * deviations in the `DOMRect` returned by the browser (e.g. when zoomed in with a percentage\n * size, see #21350).\n */\nfunction getRoundedBoundingClientRect(clientRect) {\n    return {\n        top: Math.floor(clientRect.top),\n        right: Math.floor(clientRect.right),\n        bottom: Math.floor(clientRect.bottom),\n        left: Math.floor(clientRect.left),\n        width: Math.floor(clientRect.width),\n        height: Math.floor(clientRect.height),\n    };\n}\n/** Returns whether two `ScrollingVisibility` objects are identical. */\nfunction compareScrollVisibility(a, b) {\n    if (a === b) {\n        return true;\n    }\n    return (a.isOriginClipped === b.isOriginClipped &&\n        a.isOriginOutsideView === b.isOriginOutsideView &&\n        a.isOverlayClipped === b.isOverlayClipped &&\n        a.isOverlayOutsideView === b.isOverlayOutsideView);\n}\nconst STANDARD_DROPDOWN_BELOW_POSITIONS = [\n    { originX: 'start', originY: 'bottom', overlayX: 'start', overlayY: 'top' },\n    { originX: 'start', originY: 'top', overlayX: 'start', overlayY: 'bottom' },\n    { originX: 'end', originY: 'bottom', overlayX: 'end', overlayY: 'top' },\n    { originX: 'end', originY: 'top', overlayX: 'end', overlayY: 'bottom' },\n];\nconst STANDARD_DROPDOWN_ADJACENT_POSITIONS = [\n    { originX: 'end', originY: 'top', overlayX: 'start', overlayY: 'top' },\n    { originX: 'end', originY: 'bottom', overlayX: 'start', overlayY: 'bottom' },\n    { originX: 'start', originY: 'top', overlayX: 'end', overlayY: 'top' },\n    { originX: 'start', originY: 'bottom', overlayX: 'end', overlayY: 'bottom' },\n];\n\n/** Class to be added to the overlay pane wrapper. */\nconst wrapperClass = 'cdk-global-overlay-wrapper';\n/**\n * Creates a global position strategy.\n * @param injector Injector used to resolve dependencies for the strategy.\n */\nfunction createGlobalPositionStrategy(_injector) {\n    // Note: `injector` is unused, but we may need it in\n    // the future which would introduce a breaking change.\n    return new GlobalPositionStrategy();\n}\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * explicit position relative to the browser's viewport. We use flexbox, instead of\n * transforms, in order to avoid issues with subpixel rendering which can cause the\n * element to become blurry.\n */\nclass GlobalPositionStrategy {\n    /** The overlay to which this strategy is attached. */\n    _overlayRef;\n    _cssPosition = 'static';\n    _topOffset = '';\n    _bottomOffset = '';\n    _alignItems = '';\n    _xPosition = '';\n    _xOffset = '';\n    _width = '';\n    _height = '';\n    _isDisposed = false;\n    attach(overlayRef) {\n        const config = overlayRef.getConfig();\n        this._overlayRef = overlayRef;\n        if (this._width && !config.width) {\n            overlayRef.updateSize({ width: this._width });\n        }\n        if (this._height && !config.height) {\n            overlayRef.updateSize({ height: this._height });\n        }\n        overlayRef.hostElement.classList.add(wrapperClass);\n        this._isDisposed = false;\n    }\n    /**\n     * Sets the top position of the overlay. Clears any previously set vertical position.\n     * @param value New top offset.\n     */\n    top(value = '') {\n        this._bottomOffset = '';\n        this._topOffset = value;\n        this._alignItems = 'flex-start';\n        return this;\n    }\n    /**\n     * Sets the left position of the overlay. Clears any previously set horizontal position.\n     * @param value New left offset.\n     */\n    left(value = '') {\n        this._xOffset = value;\n        this._xPosition = 'left';\n        return this;\n    }\n    /**\n     * Sets the bottom position of the overlay. Clears any previously set vertical position.\n     * @param value New bottom offset.\n     */\n    bottom(value = '') {\n        this._topOffset = '';\n        this._bottomOffset = value;\n        this._alignItems = 'flex-end';\n        return this;\n    }\n    /**\n     * Sets the right position of the overlay. Clears any previously set horizontal position.\n     * @param value New right offset.\n     */\n    right(value = '') {\n        this._xOffset = value;\n        this._xPosition = 'right';\n        return this;\n    }\n    /**\n     * Sets the overlay to the start of the viewport, depending on the overlay direction.\n     * This will be to the left in LTR layouts and to the right in RTL.\n     * @param offset Offset from the edge of the screen.\n     */\n    start(value = '') {\n        this._xOffset = value;\n        this._xPosition = 'start';\n        return this;\n    }\n    /**\n     * Sets the overlay to the end of the viewport, depending on the overlay direction.\n     * This will be to the right in LTR layouts and to the left in RTL.\n     * @param offset Offset from the edge of the screen.\n     */\n    end(value = '') {\n        this._xOffset = value;\n        this._xPosition = 'end';\n        return this;\n    }\n    /**\n     * Sets the overlay width and clears any previously set width.\n     * @param value New width for the overlay\n     * @deprecated Pass the `width` through the `OverlayConfig`.\n     * @breaking-change 8.0.0\n     */\n    width(value = '') {\n        if (this._overlayRef) {\n            this._overlayRef.updateSize({ width: value });\n        }\n        else {\n            this._width = value;\n        }\n        return this;\n    }\n    /**\n     * Sets the overlay height and clears any previously set height.\n     * @param value New height for the overlay\n     * @deprecated Pass the `height` through the `OverlayConfig`.\n     * @breaking-change 8.0.0\n     */\n    height(value = '') {\n        if (this._overlayRef) {\n            this._overlayRef.updateSize({ height: value });\n        }\n        else {\n            this._height = value;\n        }\n        return this;\n    }\n    /**\n     * Centers the overlay horizontally with an optional offset.\n     * Clears any previously set horizontal position.\n     *\n     * @param offset Overlay offset from the horizontal center.\n     */\n    centerHorizontally(offset = '') {\n        this.left(offset);\n        this._xPosition = 'center';\n        return this;\n    }\n    /**\n     * Centers the overlay vertically with an optional offset.\n     * Clears any previously set vertical position.\n     *\n     * @param offset Overlay offset from the vertical center.\n     */\n    centerVertically(offset = '') {\n        this.top(offset);\n        this._alignItems = 'center';\n        return this;\n    }\n    /**\n     * Apply the position to the element.\n     * @docs-private\n     */\n    apply() {\n        // Since the overlay ref applies the strategy asynchronously, it could\n        // have been disposed before it ends up being applied. If that is the\n        // case, we shouldn't do anything.\n        if (!this._overlayRef || !this._overlayRef.hasAttached()) {\n            return;\n        }\n        const styles = this._overlayRef.overlayElement.style;\n        const parentStyles = this._overlayRef.hostElement.style;\n        const config = this._overlayRef.getConfig();\n        const { width, height, maxWidth, maxHeight } = config;\n        const shouldBeFlushHorizontally = (width === '100%' || width === '100vw') &&\n            (!maxWidth || maxWidth === '100%' || maxWidth === '100vw');\n        const shouldBeFlushVertically = (height === '100%' || height === '100vh') &&\n            (!maxHeight || maxHeight === '100%' || maxHeight === '100vh');\n        const xPosition = this._xPosition;\n        const xOffset = this._xOffset;\n        const isRtl = this._overlayRef.getConfig().direction === 'rtl';\n        let marginLeft = '';\n        let marginRight = '';\n        let justifyContent = '';\n        if (shouldBeFlushHorizontally) {\n            justifyContent = 'flex-start';\n        }\n        else if (xPosition === 'center') {\n            justifyContent = 'center';\n            if (isRtl) {\n                marginRight = xOffset;\n            }\n            else {\n                marginLeft = xOffset;\n            }\n        }\n        else if (isRtl) {\n            if (xPosition === 'left' || xPosition === 'end') {\n                justifyContent = 'flex-end';\n                marginLeft = xOffset;\n            }\n            else if (xPosition === 'right' || xPosition === 'start') {\n                justifyContent = 'flex-start';\n                marginRight = xOffset;\n            }\n        }\n        else if (xPosition === 'left' || xPosition === 'start') {\n            justifyContent = 'flex-start';\n            marginLeft = xOffset;\n        }\n        else if (xPosition === 'right' || xPosition === 'end') {\n            justifyContent = 'flex-end';\n            marginRight = xOffset;\n        }\n        styles.position = this._cssPosition;\n        styles.marginLeft = shouldBeFlushHorizontally ? '0' : marginLeft;\n        styles.marginTop = shouldBeFlushVertically ? '0' : this._topOffset;\n        styles.marginBottom = this._bottomOffset;\n        styles.marginRight = shouldBeFlushHorizontally ? '0' : marginRight;\n        parentStyles.justifyContent = justifyContent;\n        parentStyles.alignItems = shouldBeFlushVertically ? 'flex-start' : this._alignItems;\n    }\n    /**\n     * Cleans up the DOM changes from the position strategy.\n     * @docs-private\n     */\n    dispose() {\n        if (this._isDisposed || !this._overlayRef) {\n            return;\n        }\n        const styles = this._overlayRef.overlayElement.style;\n        const parent = this._overlayRef.hostElement;\n        const parentStyles = parent.style;\n        parent.classList.remove(wrapperClass);\n        parentStyles.justifyContent =\n            parentStyles.alignItems =\n                styles.marginTop =\n                    styles.marginBottom =\n                        styles.marginLeft =\n                            styles.marginRight =\n                                styles.position =\n                                    '';\n        this._overlayRef = null;\n        this._isDisposed = true;\n    }\n}\n\n/** Builder for overlay position strategy. */\nclass OverlayPositionBuilder {\n    _injector = inject(Injector);\n    constructor() { }\n    /**\n     * Creates a global position strategy.\n     */\n    global() {\n        return createGlobalPositionStrategy();\n    }\n    /**\n     * Creates a flexible position strategy.\n     * @param origin Origin relative to which to position the overlay.\n     */\n    flexibleConnectedTo(origin) {\n        return createFlexibleConnectedPositionStrategy(this._injector, origin);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: OverlayPositionBuilder, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: OverlayPositionBuilder, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: OverlayPositionBuilder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [] });\n\n/**\n * Creates an overlay.\n * @param injector Injector to use when resolving the overlay's dependencies.\n * @param config Configuration applied to the overlay.\n * @returns Reference to the created overlay.\n */\nfunction createOverlayRef(injector, config) {\n    // This is done in the overlay container as well, but we have it here\n    // since it's common to mock out the overlay container in tests.\n    injector.get(_CdkPrivateStyleLoader).load(_CdkOverlayStyleLoader);\n    const overlayContainer = injector.get(OverlayContainer);\n    const doc = injector.get(DOCUMENT);\n    const idGenerator = injector.get(_IdGenerator);\n    const appRef = injector.get(ApplicationRef);\n    const directionality = injector.get(Directionality);\n    const host = doc.createElement('div');\n    const pane = doc.createElement('div');\n    pane.id = idGenerator.getId('cdk-overlay-');\n    pane.classList.add('cdk-overlay-pane');\n    host.appendChild(pane);\n    overlayContainer.getContainerElement().appendChild(host);\n    const portalOutlet = new DomPortalOutlet(pane, appRef, injector);\n    const overlayConfig = new OverlayConfig(config);\n    const renderer = injector.get(Renderer2, null, { optional: true }) ||\n        injector.get(RendererFactory2).createRenderer(null, null);\n    overlayConfig.direction = overlayConfig.direction || directionality.value;\n    return new OverlayRef(portalOutlet, host, pane, overlayConfig, injector.get(NgZone), injector.get(OverlayKeyboardDispatcher), doc, injector.get(Location), injector.get(OverlayOutsideClickDispatcher), config?.disableAnimations ??\n        injector.get(ANIMATION_MODULE_TYPE, null, { optional: true }) === 'NoopAnimations', injector.get(EnvironmentInjector), renderer);\n}\n/**\n * Service to create Overlays. Overlays are dynamically added pieces of floating UI, meant to be\n * used as a low-level building block for other components. Dialogs, tooltips, menus,\n * selects, etc. can all be built using overlays. The service should primarily be used by authors\n * of re-usable components rather than developers building end-user applications.\n *\n * An overlay *is* a PortalOutlet, so any kind of Portal can be loaded into one.\n */\nclass Overlay {\n    scrollStrategies = inject(ScrollStrategyOptions);\n    _positionBuilder = inject(OverlayPositionBuilder);\n    _injector = inject(Injector);\n    constructor() { }\n    /**\n     * Creates an overlay.\n     * @param config Configuration applied to the overlay.\n     * @returns Reference to the created overlay.\n     */\n    create(config) {\n        return createOverlayRef(this._injector, config);\n    }\n    /**\n     * Gets a position builder that can be used, via fluent API,\n     * to construct and configure a position strategy.\n     * @returns An overlay position builder.\n     */\n    position() {\n        return this._positionBuilder;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: Overlay, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: Overlay, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: Overlay, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [] });\n\n/** Default set of positions for the overlay. Follows the behavior of a dropdown. */\nconst defaultPositionList = [\n    {\n        originX: 'start',\n        originY: 'bottom',\n        overlayX: 'start',\n        overlayY: 'top',\n    },\n    {\n        originX: 'start',\n        originY: 'top',\n        overlayX: 'start',\n        overlayY: 'bottom',\n    },\n    {\n        originX: 'end',\n        originY: 'top',\n        overlayX: 'end',\n        overlayY: 'bottom',\n    },\n    {\n        originX: 'end',\n        originY: 'bottom',\n        overlayX: 'end',\n        overlayY: 'top',\n    },\n];\n/** Injection token that determines the scroll handling while the connected overlay is open. */\nconst CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY = new InjectionToken('cdk-connected-overlay-scroll-strategy', {\n    providedIn: 'root',\n    factory: () => {\n        const injector = inject(Injector);\n        return () => createRepositionScrollStrategy(injector);\n    },\n});\n/**\n * Directive applied to an element to make it usable as an origin for an Overlay using a\n * ConnectedPositionStrategy.\n */\nclass CdkOverlayOrigin {\n    elementRef = inject(ElementRef);\n    constructor() { }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkOverlayOrigin, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: CdkOverlayOrigin, isStandalone: true, selector: \"[cdk-overlay-origin], [overlay-origin], [cdkOverlayOrigin]\", exportAs: [\"cdkOverlayOrigin\"], ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkOverlayOrigin, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdk-overlay-origin], [overlay-origin], [cdkOverlayOrigin]',\n                    exportAs: 'cdkOverlayOrigin',\n                }]\n        }], ctorParameters: () => [] });\n/**\n * Directive to facilitate declarative creation of an\n * Overlay using a FlexibleConnectedPositionStrategy.\n */\nclass CdkConnectedOverlay {\n    _dir = inject(Directionality, { optional: true });\n    _injector = inject(Injector);\n    _overlayRef;\n    _templatePortal;\n    _backdropSubscription = Subscription.EMPTY;\n    _attachSubscription = Subscription.EMPTY;\n    _detachSubscription = Subscription.EMPTY;\n    _positionSubscription = Subscription.EMPTY;\n    _offsetX;\n    _offsetY;\n    _position;\n    _scrollStrategyFactory = inject(CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY);\n    _disposeOnNavigation = false;\n    _ngZone = inject(NgZone);\n    /** Origin for the connected overlay. */\n    origin;\n    /** Registered connected position pairs. */\n    positions;\n    /**\n     * This input overrides the positions input if specified. It lets users pass\n     * in arbitrary positioning strategies.\n     */\n    positionStrategy;\n    /** The offset in pixels for the overlay connection point on the x-axis */\n    get offsetX() {\n        return this._offsetX;\n    }\n    set offsetX(offsetX) {\n        this._offsetX = offsetX;\n        if (this._position) {\n            this._updatePositionStrategy(this._position);\n        }\n    }\n    /** The offset in pixels for the overlay connection point on the y-axis */\n    get offsetY() {\n        return this._offsetY;\n    }\n    set offsetY(offsetY) {\n        this._offsetY = offsetY;\n        if (this._position) {\n            this._updatePositionStrategy(this._position);\n        }\n    }\n    /** The width of the overlay panel. */\n    width;\n    /** The height of the overlay panel. */\n    height;\n    /** The min width of the overlay panel. */\n    minWidth;\n    /** The min height of the overlay panel. */\n    minHeight;\n    /** The custom class to be set on the backdrop element. */\n    backdropClass;\n    /** The custom class to add to the overlay pane element. */\n    panelClass;\n    /** Margin between the overlay and the viewport edges. */\n    viewportMargin = 0;\n    /** Strategy to be used when handling scroll events while the overlay is open. */\n    scrollStrategy;\n    /** Whether the overlay is open. */\n    open = false;\n    /** Whether the overlay can be closed by user interaction. */\n    disableClose = false;\n    /** CSS selector which to set the transform origin. */\n    transformOriginSelector;\n    /** Whether or not the overlay should attach a backdrop. */\n    hasBackdrop = false;\n    /** Whether or not the overlay should be locked when scrolling. */\n    lockPosition = false;\n    /** Whether the overlay's width and height can be constrained to fit within the viewport. */\n    flexibleDimensions = false;\n    /** Whether the overlay can grow after the initial open when flexible positioning is turned on. */\n    growAfterOpen = false;\n    /** Whether the overlay can be pushed on-screen if none of the provided positions fit. */\n    push = false;\n    /** Whether the overlay should be disposed of when the user goes backwards/forwards in history. */\n    get disposeOnNavigation() {\n        return this._disposeOnNavigation;\n    }\n    set disposeOnNavigation(value) {\n        this._disposeOnNavigation = value;\n    }\n    /** Event emitted when the backdrop is clicked. */\n    backdropClick = new EventEmitter();\n    /** Event emitted when the position has changed. */\n    positionChange = new EventEmitter();\n    /** Event emitted when the overlay has been attached. */\n    attach = new EventEmitter();\n    /** Event emitted when the overlay has been detached. */\n    detach = new EventEmitter();\n    /** Emits when there are keyboard events that are targeted at the overlay. */\n    overlayKeydown = new EventEmitter();\n    /** Emits when there are mouse outside click events that are targeted at the overlay. */\n    overlayOutsideClick = new EventEmitter();\n    // TODO(jelbourn): inputs for size, scroll behavior, animation, etc.\n    constructor() {\n        const templateRef = inject(TemplateRef);\n        const viewContainerRef = inject(ViewContainerRef);\n        this._templatePortal = new TemplatePortal(templateRef, viewContainerRef);\n        this.scrollStrategy = this._scrollStrategyFactory();\n    }\n    /** The associated overlay reference. */\n    get overlayRef() {\n        return this._overlayRef;\n    }\n    /** The element's layout direction. */\n    get dir() {\n        return this._dir ? this._dir.value : 'ltr';\n    }\n    ngOnDestroy() {\n        this._attachSubscription.unsubscribe();\n        this._detachSubscription.unsubscribe();\n        this._backdropSubscription.unsubscribe();\n        this._positionSubscription.unsubscribe();\n        this._overlayRef?.dispose();\n    }\n    ngOnChanges(changes) {\n        if (this._position) {\n            this._updatePositionStrategy(this._position);\n            this._overlayRef?.updateSize({\n                width: this.width,\n                minWidth: this.minWidth,\n                height: this.height,\n                minHeight: this.minHeight,\n            });\n            if (changes['origin'] && this.open) {\n                this._position.apply();\n            }\n        }\n        if (changes['open']) {\n            this.open ? this.attachOverlay() : this.detachOverlay();\n        }\n    }\n    /** Creates an overlay */\n    _createOverlay() {\n        if (!this.positions || !this.positions.length) {\n            this.positions = defaultPositionList;\n        }\n        const overlayRef = (this._overlayRef = createOverlayRef(this._injector, this._buildConfig()));\n        this._attachSubscription = overlayRef.attachments().subscribe(() => this.attach.emit());\n        this._detachSubscription = overlayRef.detachments().subscribe(() => this.detach.emit());\n        overlayRef.keydownEvents().subscribe((event) => {\n            this.overlayKeydown.next(event);\n            if (event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event)) {\n                event.preventDefault();\n                this.detachOverlay();\n            }\n        });\n        this._overlayRef.outsidePointerEvents().subscribe((event) => {\n            const origin = this._getOriginElement();\n            const target = _getEventTarget(event);\n            if (!origin || (origin !== target && !origin.contains(target))) {\n                this.overlayOutsideClick.next(event);\n            }\n        });\n    }\n    /** Builds the overlay config based on the directive's inputs */\n    _buildConfig() {\n        const positionStrategy = (this._position =\n            this.positionStrategy || this._createPositionStrategy());\n        const overlayConfig = new OverlayConfig({\n            direction: this._dir || 'ltr',\n            positionStrategy,\n            scrollStrategy: this.scrollStrategy,\n            hasBackdrop: this.hasBackdrop,\n            disposeOnNavigation: this.disposeOnNavigation,\n        });\n        if (this.width || this.width === 0) {\n            overlayConfig.width = this.width;\n        }\n        if (this.height || this.height === 0) {\n            overlayConfig.height = this.height;\n        }\n        if (this.minWidth || this.minWidth === 0) {\n            overlayConfig.minWidth = this.minWidth;\n        }\n        if (this.minHeight || this.minHeight === 0) {\n            overlayConfig.minHeight = this.minHeight;\n        }\n        if (this.backdropClass) {\n            overlayConfig.backdropClass = this.backdropClass;\n        }\n        if (this.panelClass) {\n            overlayConfig.panelClass = this.panelClass;\n        }\n        return overlayConfig;\n    }\n    /** Updates the state of a position strategy, based on the values of the directive inputs. */\n    _updatePositionStrategy(positionStrategy) {\n        const positions = this.positions.map(currentPosition => ({\n            originX: currentPosition.originX,\n            originY: currentPosition.originY,\n            overlayX: currentPosition.overlayX,\n            overlayY: currentPosition.overlayY,\n            offsetX: currentPosition.offsetX || this.offsetX,\n            offsetY: currentPosition.offsetY || this.offsetY,\n            panelClass: currentPosition.panelClass || undefined,\n        }));\n        return positionStrategy\n            .setOrigin(this._getOrigin())\n            .withPositions(positions)\n            .withFlexibleDimensions(this.flexibleDimensions)\n            .withPush(this.push)\n            .withGrowAfterOpen(this.growAfterOpen)\n            .withViewportMargin(this.viewportMargin)\n            .withLockedPosition(this.lockPosition)\n            .withTransformOriginOn(this.transformOriginSelector);\n    }\n    /** Returns the position strategy of the overlay to be set on the overlay config */\n    _createPositionStrategy() {\n        const strategy = createFlexibleConnectedPositionStrategy(this._injector, this._getOrigin());\n        this._updatePositionStrategy(strategy);\n        return strategy;\n    }\n    _getOrigin() {\n        if (this.origin instanceof CdkOverlayOrigin) {\n            return this.origin.elementRef;\n        }\n        else {\n            return this.origin;\n        }\n    }\n    _getOriginElement() {\n        if (this.origin instanceof CdkOverlayOrigin) {\n            return this.origin.elementRef.nativeElement;\n        }\n        if (this.origin instanceof ElementRef) {\n            return this.origin.nativeElement;\n        }\n        if (typeof Element !== 'undefined' && this.origin instanceof Element) {\n            return this.origin;\n        }\n        return null;\n    }\n    /** Attaches the overlay. */\n    attachOverlay() {\n        if (!this._overlayRef) {\n            this._createOverlay();\n        }\n        else {\n            // Update the overlay size, in case the directive's inputs have changed\n            this._overlayRef.getConfig().hasBackdrop = this.hasBackdrop;\n        }\n        if (!this._overlayRef.hasAttached()) {\n            this._overlayRef.attach(this._templatePortal);\n        }\n        if (this.hasBackdrop) {\n            this._backdropSubscription = this._overlayRef.backdropClick().subscribe(event => {\n                this.backdropClick.emit(event);\n            });\n        }\n        else {\n            this._backdropSubscription.unsubscribe();\n        }\n        this._positionSubscription.unsubscribe();\n        // Only subscribe to `positionChanges` if requested, because putting\n        // together all the information for it can be expensive.\n        if (this.positionChange.observers.length > 0) {\n            this._positionSubscription = this._position.positionChanges\n                .pipe(takeWhile(() => this.positionChange.observers.length > 0))\n                .subscribe(position => {\n                this._ngZone.run(() => this.positionChange.emit(position));\n                if (this.positionChange.observers.length === 0) {\n                    this._positionSubscription.unsubscribe();\n                }\n            });\n        }\n        this.open = true;\n    }\n    /** Detaches the overlay. */\n    detachOverlay() {\n        this._overlayRef?.detach();\n        this._backdropSubscription.unsubscribe();\n        this._positionSubscription.unsubscribe();\n        this.open = false;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkConnectedOverlay, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"20.0.0\", type: CdkConnectedOverlay, isStandalone: true, selector: \"[cdk-connected-overlay], [connected-overlay], [cdkConnectedOverlay]\", inputs: { origin: [\"cdkConnectedOverlayOrigin\", \"origin\"], positions: [\"cdkConnectedOverlayPositions\", \"positions\"], positionStrategy: [\"cdkConnectedOverlayPositionStrategy\", \"positionStrategy\"], offsetX: [\"cdkConnectedOverlayOffsetX\", \"offsetX\"], offsetY: [\"cdkConnectedOverlayOffsetY\", \"offsetY\"], width: [\"cdkConnectedOverlayWidth\", \"width\"], height: [\"cdkConnectedOverlayHeight\", \"height\"], minWidth: [\"cdkConnectedOverlayMinWidth\", \"minWidth\"], minHeight: [\"cdkConnectedOverlayMinHeight\", \"minHeight\"], backdropClass: [\"cdkConnectedOverlayBackdropClass\", \"backdropClass\"], panelClass: [\"cdkConnectedOverlayPanelClass\", \"panelClass\"], viewportMargin: [\"cdkConnectedOverlayViewportMargin\", \"viewportMargin\"], scrollStrategy: [\"cdkConnectedOverlayScrollStrategy\", \"scrollStrategy\"], open: [\"cdkConnectedOverlayOpen\", \"open\"], disableClose: [\"cdkConnectedOverlayDisableClose\", \"disableClose\"], transformOriginSelector: [\"cdkConnectedOverlayTransformOriginOn\", \"transformOriginSelector\"], hasBackdrop: [\"cdkConnectedOverlayHasBackdrop\", \"hasBackdrop\", booleanAttribute], lockPosition: [\"cdkConnectedOverlayLockPosition\", \"lockPosition\", booleanAttribute], flexibleDimensions: [\"cdkConnectedOverlayFlexibleDimensions\", \"flexibleDimensions\", booleanAttribute], growAfterOpen: [\"cdkConnectedOverlayGrowAfterOpen\", \"growAfterOpen\", booleanAttribute], push: [\"cdkConnectedOverlayPush\", \"push\", booleanAttribute], disposeOnNavigation: [\"cdkConnectedOverlayDisposeOnNavigation\", \"disposeOnNavigation\", booleanAttribute] }, outputs: { backdropClick: \"backdropClick\", positionChange: \"positionChange\", attach: \"attach\", detach: \"detach\", overlayKeydown: \"overlayKeydown\", overlayOutsideClick: \"overlayOutsideClick\" }, exportAs: [\"cdkConnectedOverlay\"], usesOnChanges: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkConnectedOverlay, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdk-connected-overlay], [connected-overlay], [cdkConnectedOverlay]',\n                    exportAs: 'cdkConnectedOverlay',\n                }]\n        }], ctorParameters: () => [], propDecorators: { origin: [{\n                type: Input,\n                args: ['cdkConnectedOverlayOrigin']\n            }], positions: [{\n                type: Input,\n                args: ['cdkConnectedOverlayPositions']\n            }], positionStrategy: [{\n                type: Input,\n                args: ['cdkConnectedOverlayPositionStrategy']\n            }], offsetX: [{\n                type: Input,\n                args: ['cdkConnectedOverlayOffsetX']\n            }], offsetY: [{\n                type: Input,\n                args: ['cdkConnectedOverlayOffsetY']\n            }], width: [{\n                type: Input,\n                args: ['cdkConnectedOverlayWidth']\n            }], height: [{\n                type: Input,\n                args: ['cdkConnectedOverlayHeight']\n            }], minWidth: [{\n                type: Input,\n                args: ['cdkConnectedOverlayMinWidth']\n            }], minHeight: [{\n                type: Input,\n                args: ['cdkConnectedOverlayMinHeight']\n            }], backdropClass: [{\n                type: Input,\n                args: ['cdkConnectedOverlayBackdropClass']\n            }], panelClass: [{\n                type: Input,\n                args: ['cdkConnectedOverlayPanelClass']\n            }], viewportMargin: [{\n                type: Input,\n                args: ['cdkConnectedOverlayViewportMargin']\n            }], scrollStrategy: [{\n                type: Input,\n                args: ['cdkConnectedOverlayScrollStrategy']\n            }], open: [{\n                type: Input,\n                args: ['cdkConnectedOverlayOpen']\n            }], disableClose: [{\n                type: Input,\n                args: ['cdkConnectedOverlayDisableClose']\n            }], transformOriginSelector: [{\n                type: Input,\n                args: ['cdkConnectedOverlayTransformOriginOn']\n            }], hasBackdrop: [{\n                type: Input,\n                args: [{ alias: 'cdkConnectedOverlayHasBackdrop', transform: booleanAttribute }]\n            }], lockPosition: [{\n                type: Input,\n                args: [{ alias: 'cdkConnectedOverlayLockPosition', transform: booleanAttribute }]\n            }], flexibleDimensions: [{\n                type: Input,\n                args: [{ alias: 'cdkConnectedOverlayFlexibleDimensions', transform: booleanAttribute }]\n            }], growAfterOpen: [{\n                type: Input,\n                args: [{ alias: 'cdkConnectedOverlayGrowAfterOpen', transform: booleanAttribute }]\n            }], push: [{\n                type: Input,\n                args: [{ alias: 'cdkConnectedOverlayPush', transform: booleanAttribute }]\n            }], disposeOnNavigation: [{\n                type: Input,\n                args: [{ alias: 'cdkConnectedOverlayDisposeOnNavigation', transform: booleanAttribute }]\n            }], backdropClick: [{\n                type: Output\n            }], positionChange: [{\n                type: Output\n            }], attach: [{\n                type: Output\n            }], detach: [{\n                type: Output\n            }], overlayKeydown: [{\n                type: Output\n            }], overlayOutsideClick: [{\n                type: Output\n            }] } });\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nfunction CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    const injector = inject(Injector);\n    return () => createRepositionScrollStrategy(injector);\n}\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nconst CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER = {\n    provide: CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY,\n    useFactory: CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n\nclass OverlayModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: OverlayModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.0\", ngImport: i0, type: OverlayModule, imports: [BidiModule, PortalModule, ScrollingModule, CdkConnectedOverlay, CdkOverlayOrigin], exports: [CdkConnectedOverlay, CdkOverlayOrigin, ScrollingModule] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: OverlayModule, providers: [Overlay, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER], imports: [BidiModule, PortalModule, ScrollingModule, ScrollingModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: OverlayModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [BidiModule, PortalModule, ScrollingModule, CdkConnectedOverlay, CdkOverlayOrigin],\n                    exports: [CdkConnectedOverlay, CdkOverlayOrigin, ScrollingModule],\n                    providers: [Overlay, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER],\n                }]\n        }] });\n\nexport { BlockScrollStrategy as B, CdkOverlayOrigin as C, FlexibleConnectedPositionStrategy as F, GlobalPositionStrategy as G, NoopScrollStrategy as N, OverlayContainer as O, RepositionScrollStrategy as R, STANDARD_DROPDOWN_ADJACENT_POSITIONS as S, Overlay as a, CdkConnectedOverlay as b, createOverlayRef as c, OverlayRef as d, OverlayPositionBuilder as e, createGlobalPositionStrategy as f, STANDARD_DROPDOWN_BELOW_POSITIONS as g, createFlexibleConnectedPositionStrategy as h, OverlayConfig as i, ConnectionPositionPair as j, ScrollingVisibility as k, ConnectedOverlayPositionChange as l, validateHorizontalPosition as m, ScrollStrategyOptions as n, createRepositionScrollStrategy as o, CloseScrollStrategy as p, createCloseScrollStrategy as q, createNoopScrollStrategy as r, createBlockScrollStrategy as s, OverlayModule as t, OverlayOutsideClickDispatcher as u, validateVerticalPosition as v, OverlayKeyboardDispatcher as w };\n\n","import { O as OverlayContainer } from './overlay-module-Bd2UplUU.mjs';\nexport { B as BlockScrollStrategy, b as CdkConnectedOverlay, C as CdkOverlayOrigin, p as CloseScrollStrategy, l as ConnectedOverlayPositionChange, j as ConnectionPositionPair, F as FlexibleConnectedPositionStrategy, G as GlobalPositionStrategy, N as NoopScrollStrategy, a as Overlay, i as OverlayConfig, w as OverlayKeyboardDispatcher, t as OverlayModule, u as OverlayOutsideClickDispatcher, e as OverlayPositionBuilder, d as OverlayRef, R as RepositionScrollStrategy, S as STANDARD_DROPDOWN_ADJACENT_POSITIONS, g as STANDARD_DROPDOWN_BELOW_POSITIONS, n as ScrollStrategyOptions, k as ScrollingVisibility, s as createBlockScrollStrategy, q as createCloseScrollStrategy, h as createFlexibleConnectedPositionStrategy, f as createGlobalPositionStrategy, r as createNoopScrollStrategy, c as createOverlayRef, o as createRepositionScrollStrategy, m as validateHorizontalPosition, v as validateVerticalPosition } from './overlay-module-Bd2UplUU.mjs';\nimport * as i0 from '@angular/core';\nimport { inject, RendererFactory2, Injectable } from '@angular/core';\nexport { CdkScrollable, ScrollDispatcher, ViewportRuler, CdkFixedSizeVirtualScroll as ɵɵCdkFixedSizeVirtualScroll, CdkScrollableModule as ɵɵCdkScrollableModule, CdkVirtualForOf as ɵɵCdkVirtualForOf, CdkVirtualScrollViewport as ɵɵCdkVirtualScrollViewport, CdkVirtualScrollableElement as ɵɵCdkVirtualScrollableElement, CdkVirtualScrollableWindow as ɵɵCdkVirtualScrollableWindow } from './scrolling.mjs';\nexport { Dir as ɵɵDir } from './bidi.mjs';\nimport '@angular/common';\nimport './platform-DNDzkVcI.mjs';\nimport './shadow-dom-B0oHn41l.mjs';\nimport './test-environment-CT0XxPyp.mjs';\nimport './style-loader-B2sGQXxD.mjs';\nimport 'rxjs';\nimport './css-pixel-value-C_HEqLhI.mjs';\nimport './array-I1yfCXUO.mjs';\nimport './portal.mjs';\nimport './scrolling-BkvA05C8.mjs';\nimport 'rxjs/operators';\nimport './id-generator-LuoRZSid.mjs';\nimport './directionality-CChdj3az.mjs';\nimport './keycodes-CpHkExLC.mjs';\nimport './keycodes.mjs';\nimport './element-x4z00URv.mjs';\nimport './recycle-view-repeater-strategy-SfuyU210.mjs';\nimport './data-source-D34wiQZj.mjs';\n\n/**\n * Alternative to OverlayContainer that supports correct displaying of overlay elements in\n * Fullscreen mode\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullScreen\n *\n * Should be provided in the root component.\n */\nclass FullscreenOverlayContainer extends OverlayContainer {\n    _renderer = inject(RendererFactory2).createRenderer(null, null);\n    _fullScreenEventName;\n    _cleanupFullScreenListener;\n    constructor() {\n        super();\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._cleanupFullScreenListener?.();\n    }\n    _createContainer() {\n        const eventName = this._getEventName();\n        super._createContainer();\n        this._adjustParentForFullscreenChange();\n        if (eventName) {\n            this._cleanupFullScreenListener?.();\n            this._cleanupFullScreenListener = this._renderer.listen('document', eventName, () => {\n                this._adjustParentForFullscreenChange();\n            });\n        }\n    }\n    _adjustParentForFullscreenChange() {\n        if (this._containerElement) {\n            const fullscreenElement = this.getFullscreenElement();\n            const parent = fullscreenElement || this._document.body;\n            parent.appendChild(this._containerElement);\n        }\n    }\n    _getEventName() {\n        if (!this._fullScreenEventName) {\n            const _document = this._document;\n            if (_document.fullscreenEnabled) {\n                this._fullScreenEventName = 'fullscreenchange';\n            }\n            else if (_document.webkitFullscreenEnabled) {\n                this._fullScreenEventName = 'webkitfullscreenchange';\n            }\n            else if (_document.mozFullScreenEnabled) {\n                this._fullScreenEventName = 'mozfullscreenchange';\n            }\n            else if (_document.msFullscreenEnabled) {\n                this._fullScreenEventName = 'MSFullscreenChange';\n            }\n        }\n        return this._fullScreenEventName;\n    }\n    /**\n     * When the page is put into fullscreen mode, a specific element is specified.\n     * Only that element and its children are visible when in fullscreen mode.\n     */\n    getFullscreenElement() {\n        const _document = this._document;\n        return (_document.fullscreenElement ||\n            _document.webkitFullscreenElement ||\n            _document.mozFullScreenElement ||\n            _document.msFullscreenElement ||\n            null);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: FullscreenOverlayContainer, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: FullscreenOverlayContainer, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: FullscreenOverlayContainer, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [] });\n\nexport { FullscreenOverlayContainer, OverlayContainer };\n\n","import * as i0 from '@angular/core';\nimport { InjectionToken, Directive, inject, Component, ViewEncapsulation, ChangeDetectionStrategy, NgZone, ElementRef, ChangeDetectorRef, DOCUMENT, Injector, afterNextRender, ViewChild, TemplateRef, Injectable, NgModule } from '@angular/core';\nimport { Subject, of } from 'rxjs';\nimport { MatButton, MatButtonModule } from './button.mjs';\nimport { _IdGenerator, LiveAnnouncer } from '@angular/cdk/a11y';\nimport { Platform } from '@angular/cdk/platform';\nimport { BasePortalOutlet, CdkPortalOutlet, ComponentPortal, TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { _ as _animationsDisabled } from './animation-ChQ1vjiF.mjs';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { OverlayConfig, createGlobalPositionStrategy, createOverlayRef, OverlayModule } from '@angular/cdk/overlay';\nimport { takeUntil } from 'rxjs/operators';\nimport { M as MatCommonModule } from './common-module-cKSwHniA.mjs';\nimport './icon-button-Qqf7bl_c.mjs';\nimport '@angular/cdk/private';\nimport './ripple-loader-wNDzC_j6.mjs';\nimport './ripple-BMyyyLz2.mjs';\nimport '@angular/cdk/coercion';\nimport './structural-styles-CObeNzjn.mjs';\nimport './index-BRImSAOu.mjs';\nimport '@angular/cdk/bidi';\n\n/** Maximum amount of milliseconds that can be passed into setTimeout. */\nconst MAX_TIMEOUT = Math.pow(2, 31) - 1;\n/**\n * Reference to a snack bar dispatched from the snack bar service.\n */\nclass MatSnackBarRef {\n    _overlayRef;\n    /** The instance of the component making up the content of the snack bar. */\n    instance;\n    /**\n     * The instance of the component making up the content of the snack bar.\n     * @docs-private\n     */\n    containerInstance;\n    /** Subject for notifying the user that the snack bar has been dismissed. */\n    _afterDismissed = new Subject();\n    /** Subject for notifying the user that the snack bar has opened and appeared. */\n    _afterOpened = new Subject();\n    /** Subject for notifying the user that the snack bar action was called. */\n    _onAction = new Subject();\n    /**\n     * Timeout ID for the duration setTimeout call. Used to clear the timeout if the snackbar is\n     * dismissed before the duration passes.\n     */\n    _durationTimeoutId;\n    /** Whether the snack bar was dismissed using the action button. */\n    _dismissedByAction = false;\n    constructor(containerInstance, _overlayRef) {\n        this._overlayRef = _overlayRef;\n        this.containerInstance = containerInstance;\n        containerInstance._onExit.subscribe(() => this._finishDismiss());\n    }\n    /** Dismisses the snack bar. */\n    dismiss() {\n        if (!this._afterDismissed.closed) {\n            this.containerInstance.exit();\n        }\n        clearTimeout(this._durationTimeoutId);\n    }\n    /** Marks the snackbar action clicked. */\n    dismissWithAction() {\n        if (!this._onAction.closed) {\n            this._dismissedByAction = true;\n            this._onAction.next();\n            this._onAction.complete();\n            this.dismiss();\n        }\n        clearTimeout(this._durationTimeoutId);\n    }\n    /**\n     * Marks the snackbar action clicked.\n     * @deprecated Use `dismissWithAction` instead.\n     * @breaking-change 8.0.0\n     */\n    closeWithAction() {\n        this.dismissWithAction();\n    }\n    /** Dismisses the snack bar after some duration */\n    _dismissAfter(duration) {\n        // Note that we need to cap the duration to the maximum value for setTimeout, because\n        // it'll revert to 1 if somebody passes in something greater (e.g. `Infinity`). See #17234.\n        this._durationTimeoutId = setTimeout(() => this.dismiss(), Math.min(duration, MAX_TIMEOUT));\n    }\n    /** Marks the snackbar as opened */\n    _open() {\n        if (!this._afterOpened.closed) {\n            this._afterOpened.next();\n            this._afterOpened.complete();\n        }\n    }\n    /** Cleans up the DOM after closing. */\n    _finishDismiss() {\n        this._overlayRef.dispose();\n        if (!this._onAction.closed) {\n            this._onAction.complete();\n        }\n        this._afterDismissed.next({ dismissedByAction: this._dismissedByAction });\n        this._afterDismissed.complete();\n        this._dismissedByAction = false;\n    }\n    /** Gets an observable that is notified when the snack bar is finished closing. */\n    afterDismissed() {\n        return this._afterDismissed;\n    }\n    /** Gets an observable that is notified when the snack bar has opened and appeared. */\n    afterOpened() {\n        return this.containerInstance._onEnter;\n    }\n    /** Gets an observable that is notified when the snack bar action is called. */\n    onAction() {\n        return this._onAction;\n    }\n}\n\n/** Injection token that can be used to access the data that was passed in to a snack bar. */\nconst MAT_SNACK_BAR_DATA = new InjectionToken('MatSnackBarData');\n/**\n * Configuration used when opening a snack-bar.\n */\nclass MatSnackBarConfig {\n    /** The politeness level for the MatAriaLiveAnnouncer announcement. */\n    politeness = 'polite';\n    /**\n     * Message to be announced by the LiveAnnouncer. When opening a snackbar without a custom\n     * component or template, the announcement message will default to the specified message.\n     */\n    announcementMessage = '';\n    /**\n     * The view container that serves as the parent for the snackbar for the purposes of dependency\n     * injection. Note: this does not affect where the snackbar is inserted in the DOM.\n     */\n    viewContainerRef;\n    /** The length of time in milliseconds to wait before automatically dismissing the snack bar. */\n    duration = 0;\n    /** Extra CSS classes to be added to the snack bar container. */\n    panelClass;\n    /** Text layout direction for the snack bar. */\n    direction;\n    /** Data being injected into the child component. */\n    data = null;\n    /** The horizontal position to place the snack bar. */\n    horizontalPosition = 'center';\n    /** The vertical position to place the snack bar. */\n    verticalPosition = 'bottom';\n}\n\n/** Directive that should be applied to the text element to be rendered in the snack bar. */\nclass MatSnackBarLabel {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatSnackBarLabel, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatSnackBarLabel, isStandalone: true, selector: \"[matSnackBarLabel]\", host: { classAttribute: \"mat-mdc-snack-bar-label mdc-snackbar__label\" }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatSnackBarLabel, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `[matSnackBarLabel]`,\n                    host: {\n                        'class': 'mat-mdc-snack-bar-label mdc-snackbar__label',\n                    },\n                }]\n        }] });\n/** Directive that should be applied to the element containing the snack bar's action buttons. */\nclass MatSnackBarActions {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatSnackBarActions, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatSnackBarActions, isStandalone: true, selector: \"[matSnackBarActions]\", host: { classAttribute: \"mat-mdc-snack-bar-actions mdc-snackbar__actions\" }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatSnackBarActions, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `[matSnackBarActions]`,\n                    host: {\n                        'class': 'mat-mdc-snack-bar-actions mdc-snackbar__actions',\n                    },\n                }]\n        }] });\n/** Directive that should be applied to each of the snack bar's action buttons. */\nclass MatSnackBarAction {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatSnackBarAction, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatSnackBarAction, isStandalone: true, selector: \"[matSnackBarAction]\", host: { classAttribute: \"mat-mdc-snack-bar-action mdc-snackbar__action\" }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatSnackBarAction, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `[matSnackBarAction]`,\n                    host: {\n                        'class': 'mat-mdc-snack-bar-action mdc-snackbar__action',\n                    },\n                }]\n        }] });\n\nclass SimpleSnackBar {\n    snackBarRef = inject(MatSnackBarRef);\n    data = inject(MAT_SNACK_BAR_DATA);\n    constructor() { }\n    /** Performs the action on the snack bar. */\n    action() {\n        this.snackBarRef.dismissWithAction();\n    }\n    /** If the action button should be shown. */\n    get hasAction() {\n        return !!this.data.action;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: SimpleSnackBar, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"20.0.0\", type: SimpleSnackBar, isStandalone: true, selector: \"simple-snack-bar\", host: { classAttribute: \"mat-mdc-simple-snack-bar\" }, exportAs: [\"matSnackBar\"], ngImport: i0, template: \"<div matSnackBarLabel>\\n  {{data.message}}\\n</div>\\n\\n@if (hasAction) {\\n  <div matSnackBarActions>\\n    <button matButton matSnackBarAction (click)=\\\"action()\\\">\\n      {{data.action}}\\n    </button>\\n  </div>\\n}\\n\", styles: [\".mat-mdc-simple-snack-bar{display:flex}\\n\"], dependencies: [{ kind: \"component\", type: MatButton, selector: \"    button[matButton], a[matButton], button[mat-button], button[mat-raised-button],    button[mat-flat-button], button[mat-stroked-button], a[mat-button], a[mat-raised-button],    a[mat-flat-button], a[mat-stroked-button]  \", inputs: [\"matButton\"], exportAs: [\"matButton\", \"matAnchor\"] }, { kind: \"directive\", type: MatSnackBarLabel, selector: \"[matSnackBarLabel]\" }, { kind: \"directive\", type: MatSnackBarActions, selector: \"[matSnackBarActions]\" }, { kind: \"directive\", type: MatSnackBarAction, selector: \"[matSnackBarAction]\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: SimpleSnackBar, decorators: [{\n            type: Component,\n            args: [{ selector: 'simple-snack-bar', exportAs: 'matSnackBar', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, imports: [MatButton, MatSnackBarLabel, MatSnackBarActions, MatSnackBarAction], host: {\n                        'class': 'mat-mdc-simple-snack-bar',\n                    }, template: \"<div matSnackBarLabel>\\n  {{data.message}}\\n</div>\\n\\n@if (hasAction) {\\n  <div matSnackBarActions>\\n    <button matButton matSnackBarAction (click)=\\\"action()\\\">\\n      {{data.action}}\\n    </button>\\n  </div>\\n}\\n\", styles: [\".mat-mdc-simple-snack-bar{display:flex}\\n\"] }]\n        }], ctorParameters: () => [] });\n\nconst ENTER_ANIMATION = '_mat-snack-bar-enter';\nconst EXIT_ANIMATION = '_mat-snack-bar-exit';\n/**\n * Internal component that wraps user-provided snack bar content.\n * @docs-private\n */\nclass MatSnackBarContainer extends BasePortalOutlet {\n    _ngZone = inject(NgZone);\n    _elementRef = inject(ElementRef);\n    _changeDetectorRef = inject(ChangeDetectorRef);\n    _platform = inject(Platform);\n    _animationsDisabled = _animationsDisabled();\n    snackBarConfig = inject(MatSnackBarConfig);\n    _document = inject(DOCUMENT);\n    _trackedModals = new Set();\n    _enterFallback;\n    _exitFallback;\n    _injector = inject(Injector);\n    /** The number of milliseconds to wait before announcing the snack bar's content. */\n    _announceDelay = 150;\n    /** The timeout for announcing the snack bar's content. */\n    _announceTimeoutId;\n    /** Whether the component has been destroyed. */\n    _destroyed = false;\n    /** The portal outlet inside of this container into which the snack bar content will be loaded. */\n    _portalOutlet;\n    /** Subject for notifying that the snack bar has announced to screen readers. */\n    _onAnnounce = new Subject();\n    /** Subject for notifying that the snack bar has exited from view. */\n    _onExit = new Subject();\n    /** Subject for notifying that the snack bar has finished entering the view. */\n    _onEnter = new Subject();\n    /** The state of the snack bar animations. */\n    _animationState = 'void';\n    /** aria-live value for the live region. */\n    _live;\n    /**\n     * Element that will have the `mdc-snackbar__label` class applied if the attached component\n     * or template does not have it. This ensures that the appropriate structure, typography, and\n     * color is applied to the attached view.\n     */\n    _label;\n    /**\n     * Role of the live region. This is only for Firefox as there is a known issue where Firefox +\n     * JAWS does not read out aria-live message.\n     */\n    _role;\n    /** Unique ID of the aria-live element. */\n    _liveElementId = inject(_IdGenerator).getId('mat-snack-bar-container-live-');\n    constructor() {\n        super();\n        const config = this.snackBarConfig;\n        // Use aria-live rather than a live role like 'alert' or 'status'\n        // because NVDA and JAWS have show inconsistent behavior with live roles.\n        if (config.politeness === 'assertive' && !config.announcementMessage) {\n            this._live = 'assertive';\n        }\n        else if (config.politeness === 'off') {\n            this._live = 'off';\n        }\n        else {\n            this._live = 'polite';\n        }\n        // Only set role for Firefox. Set role based on aria-live because setting role=\"alert\" implies\n        // aria-live=\"assertive\" which may cause issues if aria-live is set to \"polite\" above.\n        if (this._platform.FIREFOX) {\n            if (this._live === 'polite') {\n                this._role = 'status';\n            }\n            if (this._live === 'assertive') {\n                this._role = 'alert';\n            }\n        }\n    }\n    /** Attach a component portal as content to this snack bar container. */\n    attachComponentPortal(portal) {\n        this._assertNotAttached();\n        const result = this._portalOutlet.attachComponentPortal(portal);\n        this._afterPortalAttached();\n        return result;\n    }\n    /** Attach a template portal as content to this snack bar container. */\n    attachTemplatePortal(portal) {\n        this._assertNotAttached();\n        const result = this._portalOutlet.attachTemplatePortal(portal);\n        this._afterPortalAttached();\n        return result;\n    }\n    /**\n     * Attaches a DOM portal to the snack bar container.\n     * @deprecated To be turned into a method.\n     * @breaking-change 10.0.0\n     */\n    attachDomPortal = (portal) => {\n        this._assertNotAttached();\n        const result = this._portalOutlet.attachDomPortal(portal);\n        this._afterPortalAttached();\n        return result;\n    };\n    /** Handle end of animations, updating the state of the snackbar. */\n    onAnimationEnd(animationName) {\n        if (animationName === EXIT_ANIMATION) {\n            this._completeExit();\n        }\n        else if (animationName === ENTER_ANIMATION) {\n            clearTimeout(this._enterFallback);\n            this._ngZone.run(() => {\n                this._onEnter.next();\n                this._onEnter.complete();\n            });\n        }\n    }\n    /** Begin animation of snack bar entrance into view. */\n    enter() {\n        if (!this._destroyed) {\n            this._animationState = 'visible';\n            // _animationState lives in host bindings and `detectChanges` does not refresh host bindings\n            // so we have to call `markForCheck` to ensure the host view is refreshed eventually.\n            this._changeDetectorRef.markForCheck();\n            this._changeDetectorRef.detectChanges();\n            this._screenReaderAnnounce();\n            if (this._animationsDisabled) {\n                afterNextRender(() => {\n                    this._ngZone.run(() => queueMicrotask(() => this.onAnimationEnd(ENTER_ANIMATION)));\n                }, { injector: this._injector });\n            }\n            else {\n                clearTimeout(this._enterFallback);\n                this._enterFallback = setTimeout(() => {\n                    // The snack bar will stay invisible if it fails to animate. Add a fallback class so it\n                    // becomes visible. This can happen in some apps that do `* {animation: none !important}`.\n                    this._elementRef.nativeElement.classList.add('mat-snack-bar-fallback-visible');\n                    this.onAnimationEnd(ENTER_ANIMATION);\n                }, 200);\n            }\n        }\n    }\n    /** Begin animation of the snack bar exiting from view. */\n    exit() {\n        if (this._destroyed) {\n            return of(undefined);\n        }\n        // It's common for snack bars to be opened by random outside calls like HTTP requests or\n        // errors. Run inside the NgZone to ensure that it functions correctly.\n        this._ngZone.run(() => {\n            // Note: this one transitions to `hidden`, rather than `void`, in order to handle the case\n            // where multiple snack bars are opened in quick succession (e.g. two consecutive calls to\n            // `MatSnackBar.open`).\n            this._animationState = 'hidden';\n            this._changeDetectorRef.markForCheck();\n            // Mark this element with an 'exit' attribute to indicate that the snackbar has\n            // been dismissed and will soon be removed from the DOM. This is used by the snackbar\n            // test harness.\n            this._elementRef.nativeElement.setAttribute('mat-exit', '');\n            // If the snack bar hasn't been announced by the time it exits it wouldn't have been open\n            // long enough to visually read it either, so clear the timeout for announcing.\n            clearTimeout(this._announceTimeoutId);\n            if (this._animationsDisabled) {\n                afterNextRender(() => {\n                    this._ngZone.run(() => queueMicrotask(() => this.onAnimationEnd(EXIT_ANIMATION)));\n                }, { injector: this._injector });\n            }\n            else {\n                clearTimeout(this._exitFallback);\n                this._exitFallback = setTimeout(() => this.onAnimationEnd(EXIT_ANIMATION), 200);\n            }\n        });\n        return this._onExit;\n    }\n    /** Makes sure the exit callbacks have been invoked when the element is destroyed. */\n    ngOnDestroy() {\n        this._destroyed = true;\n        this._clearFromModals();\n        this._completeExit();\n    }\n    _completeExit() {\n        clearTimeout(this._exitFallback);\n        queueMicrotask(() => {\n            this._onExit.next();\n            this._onExit.complete();\n        });\n    }\n    /**\n     * Called after the portal contents have been attached. Can be\n     * used to modify the DOM once it's guaranteed to be in place.\n     */\n    _afterPortalAttached() {\n        const element = this._elementRef.nativeElement;\n        const panelClasses = this.snackBarConfig.panelClass;\n        if (panelClasses) {\n            if (Array.isArray(panelClasses)) {\n                // Note that we can't use a spread here, because IE doesn't support multiple arguments.\n                panelClasses.forEach(cssClass => element.classList.add(cssClass));\n            }\n            else {\n                element.classList.add(panelClasses);\n            }\n        }\n        this._exposeToModals();\n        // Check to see if the attached component or template uses the MDC template structure,\n        // specifically the MDC label. If not, the container should apply the MDC label class to this\n        // component's label container, which will apply MDC's label styles to the attached view.\n        const label = this._label.nativeElement;\n        const labelClass = 'mdc-snackbar__label';\n        label.classList.toggle(labelClass, !label.querySelector(`.${labelClass}`));\n    }\n    /**\n     * Some browsers won't expose the accessibility node of the live element if there is an\n     * `aria-modal` and the live element is outside of it. This method works around the issue by\n     * pointing the `aria-owns` of all modals to the live element.\n     */\n    _exposeToModals() {\n        // TODO(http://github.com/angular/components/issues/26853): consider de-duplicating this with the\n        // `LiveAnnouncer` and any other usages.\n        //\n        // Note that the selector here is limited to CDK overlays at the moment in order to reduce the\n        // section of the DOM we need to look through. This should cover all the cases we support, but\n        // the selector can be expanded if it turns out to be too narrow.\n        const id = this._liveElementId;\n        const modals = this._document.querySelectorAll('body > .cdk-overlay-container [aria-modal=\"true\"]');\n        for (let i = 0; i < modals.length; i++) {\n            const modal = modals[i];\n            const ariaOwns = modal.getAttribute('aria-owns');\n            this._trackedModals.add(modal);\n            if (!ariaOwns) {\n                modal.setAttribute('aria-owns', id);\n            }\n            else if (ariaOwns.indexOf(id) === -1) {\n                modal.setAttribute('aria-owns', ariaOwns + ' ' + id);\n            }\n        }\n    }\n    /** Clears the references to the live element from any modals it was added to. */\n    _clearFromModals() {\n        this._trackedModals.forEach(modal => {\n            const ariaOwns = modal.getAttribute('aria-owns');\n            if (ariaOwns) {\n                const newValue = ariaOwns.replace(this._liveElementId, '').trim();\n                if (newValue.length > 0) {\n                    modal.setAttribute('aria-owns', newValue);\n                }\n                else {\n                    modal.removeAttribute('aria-owns');\n                }\n            }\n        });\n        this._trackedModals.clear();\n    }\n    /** Asserts that no content is already attached to the container. */\n    _assertNotAttached() {\n        if (this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('Attempting to attach snack bar content after content is already attached');\n        }\n    }\n    /**\n     * Starts a timeout to move the snack bar content to the live region so screen readers will\n     * announce it.\n     */\n    _screenReaderAnnounce() {\n        if (this._announceTimeoutId) {\n            return;\n        }\n        this._ngZone.runOutsideAngular(() => {\n            this._announceTimeoutId = setTimeout(() => {\n                if (this._destroyed) {\n                    return;\n                }\n                const element = this._elementRef.nativeElement;\n                const inertElement = element.querySelector('[aria-hidden]');\n                const liveElement = element.querySelector('[aria-live]');\n                if (inertElement && liveElement) {\n                    // If an element in the snack bar content is focused before being moved\n                    // track it and restore focus after moving to the live region.\n                    let focusedElement = null;\n                    if (this._platform.isBrowser &&\n                        document.activeElement instanceof HTMLElement &&\n                        inertElement.contains(document.activeElement)) {\n                        focusedElement = document.activeElement;\n                    }\n                    inertElement.removeAttribute('aria-hidden');\n                    liveElement.appendChild(inertElement);\n                    focusedElement?.focus();\n                    this._onAnnounce.next();\n                    this._onAnnounce.complete();\n                }\n            }, this._announceDelay);\n        });\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatSnackBarContainer, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatSnackBarContainer, isStandalone: true, selector: \"mat-snack-bar-container\", host: { listeners: { \"animationend\": \"onAnimationEnd($event.animationName)\", \"animationcancel\": \"onAnimationEnd($event.animationName)\" }, properties: { \"class.mat-snack-bar-container-enter\": \"_animationState === \\\"visible\\\"\", \"class.mat-snack-bar-container-exit\": \"_animationState === \\\"hidden\\\"\", \"class.mat-snack-bar-container-animations-enabled\": \"!_animationsDisabled\" }, classAttribute: \"mdc-snackbar mat-mdc-snack-bar-container\" }, viewQueries: [{ propertyName: \"_portalOutlet\", first: true, predicate: CdkPortalOutlet, descendants: true, static: true }, { propertyName: \"_label\", first: true, predicate: [\"label\"], descendants: true, static: true }], usesInheritance: true, ngImport: i0, template: \"<div class=\\\"mdc-snackbar__surface mat-mdc-snackbar-surface\\\">\\n  <!--\\n    This outer label wrapper will have the class `mdc-snackbar__label` applied if\\n    the attached template/component does not contain it.\\n  -->\\n  <div class=\\\"mat-mdc-snack-bar-label\\\" #label>\\n    <!-- Initialy holds the snack bar content, will be empty after announcing to screen readers. -->\\n    <div aria-hidden=\\\"true\\\">\\n      <ng-template cdkPortalOutlet />\\n    </div>\\n\\n    <!-- Will receive the snack bar content from the non-live div, move will happen a short delay after opening -->\\n    <div [attr.aria-live]=\\\"_live\\\" [attr.role]=\\\"_role\\\" [attr.id]=\\\"_liveElementId\\\"></div>\\n  </div>\\n</div>\\n\", styles: [\"@keyframes _mat-snack-bar-enter{from{transform:scale(0.8);opacity:0}to{transform:scale(1);opacity:1}}@keyframes _mat-snack-bar-exit{from{opacity:1}to{opacity:0}}.mat-mdc-snack-bar-container{display:flex;align-items:center;justify-content:center;box-sizing:border-box;-webkit-tap-highlight-color:rgba(0,0,0,0);margin:8px}.mat-mdc-snack-bar-handset .mat-mdc-snack-bar-container{width:100vw}.mat-snack-bar-container-animations-enabled{opacity:0}.mat-snack-bar-container-animations-enabled.mat-snack-bar-fallback-visible{opacity:1}.mat-snack-bar-container-animations-enabled.mat-snack-bar-container-enter{animation:_mat-snack-bar-enter 150ms cubic-bezier(0, 0, 0.2, 1) forwards}.mat-snack-bar-container-animations-enabled.mat-snack-bar-container-exit{animation:_mat-snack-bar-exit 75ms cubic-bezier(0.4, 0, 1, 1) forwards}.mat-mdc-snackbar-surface{box-shadow:0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12);display:flex;align-items:center;justify-content:flex-start;box-sizing:border-box;padding-left:0;padding-right:8px}[dir=rtl] .mat-mdc-snackbar-surface{padding-right:0;padding-left:8px}.mat-mdc-snack-bar-container .mat-mdc-snackbar-surface{min-width:344px;max-width:672px}.mat-mdc-snack-bar-handset .mat-mdc-snackbar-surface{width:100%;min-width:0}@media(forced-colors: active){.mat-mdc-snackbar-surface{outline:solid 1px}}.mat-mdc-snack-bar-container .mat-mdc-snackbar-surface{color:var(--mat-snack-bar-supporting-text-color, var(--mat-sys-inverse-on-surface));border-radius:var(--mat-snack-bar-container-shape, var(--mat-sys-corner-extra-small));background-color:var(--mat-snack-bar-container-color, var(--mat-sys-inverse-surface))}.mdc-snackbar__label{width:100%;flex-grow:1;box-sizing:border-box;margin:0;padding:14px 8px 14px 16px}[dir=rtl] .mdc-snackbar__label{padding-left:8px;padding-right:16px}.mat-mdc-snack-bar-container .mdc-snackbar__label{font-family:var(--mat-snack-bar-supporting-text-font, var(--mat-sys-body-medium-font));font-size:var(--mat-snack-bar-supporting-text-size, var(--mat-sys-body-medium-size));font-weight:var(--mat-snack-bar-supporting-text-weight, var(--mat-sys-body-medium-weight));line-height:var(--mat-snack-bar-supporting-text-line-height, var(--mat-sys-body-medium-line-height))}.mat-mdc-snack-bar-actions{display:flex;flex-shrink:0;align-items:center;box-sizing:border-box}.mat-mdc-snack-bar-handset,.mat-mdc-snack-bar-container,.mat-mdc-snack-bar-label{flex:1 1 auto}.mat-mdc-snack-bar-container .mat-mdc-button.mat-mdc-snack-bar-action:not(:disabled){--mat-button-text-state-layer-color: currentColor;--mat-button-text-ripple-color: currentColor}.mat-mdc-snack-bar-container .mat-mdc-button.mat-mdc-snack-bar-action:not(:disabled).mat-unthemed{color:var(--mat-snack-bar-button-color, var(--mat-sys-inverse-primary))}.mat-mdc-snack-bar-container .mat-mdc-button.mat-mdc-snack-bar-action:not(:disabled) .mat-ripple-element{opacity:.1}\\n\"], dependencies: [{ kind: \"directive\", type: CdkPortalOutlet, selector: \"[cdkPortalOutlet]\", inputs: [\"cdkPortalOutlet\"], outputs: [\"attached\"], exportAs: [\"cdkPortalOutlet\"] }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatSnackBarContainer, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-snack-bar-container', changeDetection: ChangeDetectionStrategy.Default, encapsulation: ViewEncapsulation.None, imports: [CdkPortalOutlet], host: {\n                        'class': 'mdc-snackbar mat-mdc-snack-bar-container',\n                        '[class.mat-snack-bar-container-enter]': '_animationState === \"visible\"',\n                        '[class.mat-snack-bar-container-exit]': '_animationState === \"hidden\"',\n                        '[class.mat-snack-bar-container-animations-enabled]': '!_animationsDisabled',\n                        '(animationend)': 'onAnimationEnd($event.animationName)',\n                        '(animationcancel)': 'onAnimationEnd($event.animationName)',\n                    }, template: \"<div class=\\\"mdc-snackbar__surface mat-mdc-snackbar-surface\\\">\\n  <!--\\n    This outer label wrapper will have the class `mdc-snackbar__label` applied if\\n    the attached template/component does not contain it.\\n  -->\\n  <div class=\\\"mat-mdc-snack-bar-label\\\" #label>\\n    <!-- Initialy holds the snack bar content, will be empty after announcing to screen readers. -->\\n    <div aria-hidden=\\\"true\\\">\\n      <ng-template cdkPortalOutlet />\\n    </div>\\n\\n    <!-- Will receive the snack bar content from the non-live div, move will happen a short delay after opening -->\\n    <div [attr.aria-live]=\\\"_live\\\" [attr.role]=\\\"_role\\\" [attr.id]=\\\"_liveElementId\\\"></div>\\n  </div>\\n</div>\\n\", styles: [\"@keyframes _mat-snack-bar-enter{from{transform:scale(0.8);opacity:0}to{transform:scale(1);opacity:1}}@keyframes _mat-snack-bar-exit{from{opacity:1}to{opacity:0}}.mat-mdc-snack-bar-container{display:flex;align-items:center;justify-content:center;box-sizing:border-box;-webkit-tap-highlight-color:rgba(0,0,0,0);margin:8px}.mat-mdc-snack-bar-handset .mat-mdc-snack-bar-container{width:100vw}.mat-snack-bar-container-animations-enabled{opacity:0}.mat-snack-bar-container-animations-enabled.mat-snack-bar-fallback-visible{opacity:1}.mat-snack-bar-container-animations-enabled.mat-snack-bar-container-enter{animation:_mat-snack-bar-enter 150ms cubic-bezier(0, 0, 0.2, 1) forwards}.mat-snack-bar-container-animations-enabled.mat-snack-bar-container-exit{animation:_mat-snack-bar-exit 75ms cubic-bezier(0.4, 0, 1, 1) forwards}.mat-mdc-snackbar-surface{box-shadow:0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12);display:flex;align-items:center;justify-content:flex-start;box-sizing:border-box;padding-left:0;padding-right:8px}[dir=rtl] .mat-mdc-snackbar-surface{padding-right:0;padding-left:8px}.mat-mdc-snack-bar-container .mat-mdc-snackbar-surface{min-width:344px;max-width:672px}.mat-mdc-snack-bar-handset .mat-mdc-snackbar-surface{width:100%;min-width:0}@media(forced-colors: active){.mat-mdc-snackbar-surface{outline:solid 1px}}.mat-mdc-snack-bar-container .mat-mdc-snackbar-surface{color:var(--mat-snack-bar-supporting-text-color, var(--mat-sys-inverse-on-surface));border-radius:var(--mat-snack-bar-container-shape, var(--mat-sys-corner-extra-small));background-color:var(--mat-snack-bar-container-color, var(--mat-sys-inverse-surface))}.mdc-snackbar__label{width:100%;flex-grow:1;box-sizing:border-box;margin:0;padding:14px 8px 14px 16px}[dir=rtl] .mdc-snackbar__label{padding-left:8px;padding-right:16px}.mat-mdc-snack-bar-container .mdc-snackbar__label{font-family:var(--mat-snack-bar-supporting-text-font, var(--mat-sys-body-medium-font));font-size:var(--mat-snack-bar-supporting-text-size, var(--mat-sys-body-medium-size));font-weight:var(--mat-snack-bar-supporting-text-weight, var(--mat-sys-body-medium-weight));line-height:var(--mat-snack-bar-supporting-text-line-height, var(--mat-sys-body-medium-line-height))}.mat-mdc-snack-bar-actions{display:flex;flex-shrink:0;align-items:center;box-sizing:border-box}.mat-mdc-snack-bar-handset,.mat-mdc-snack-bar-container,.mat-mdc-snack-bar-label{flex:1 1 auto}.mat-mdc-snack-bar-container .mat-mdc-button.mat-mdc-snack-bar-action:not(:disabled){--mat-button-text-state-layer-color: currentColor;--mat-button-text-ripple-color: currentColor}.mat-mdc-snack-bar-container .mat-mdc-button.mat-mdc-snack-bar-action:not(:disabled).mat-unthemed{color:var(--mat-snack-bar-button-color, var(--mat-sys-inverse-primary))}.mat-mdc-snack-bar-container .mat-mdc-button.mat-mdc-snack-bar-action:not(:disabled) .mat-ripple-element{opacity:.1}\\n\"] }]\n        }], ctorParameters: () => [], propDecorators: { _portalOutlet: [{\n                type: ViewChild,\n                args: [CdkPortalOutlet, { static: true }]\n            }], _label: [{\n                type: ViewChild,\n                args: ['label', { static: true }]\n            }] } });\n\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nfunction MAT_SNACK_BAR_DEFAULT_OPTIONS_FACTORY() {\n    return new MatSnackBarConfig();\n}\n/** Injection token that can be used to specify default snack bar. */\nconst MAT_SNACK_BAR_DEFAULT_OPTIONS = new InjectionToken('mat-snack-bar-default-options', {\n    providedIn: 'root',\n    factory: MAT_SNACK_BAR_DEFAULT_OPTIONS_FACTORY,\n});\n/**\n * Service to dispatch Material Design snack bar messages.\n */\nclass MatSnackBar {\n    _live = inject(LiveAnnouncer);\n    _injector = inject(Injector);\n    _breakpointObserver = inject(BreakpointObserver);\n    _parentSnackBar = inject(MatSnackBar, { optional: true, skipSelf: true });\n    _defaultConfig = inject(MAT_SNACK_BAR_DEFAULT_OPTIONS);\n    _animationsDisabled = _animationsDisabled();\n    /**\n     * Reference to the current snack bar in the view *at this level* (in the Angular injector tree).\n     * If there is a parent snack-bar service, all operations should delegate to that parent\n     * via `_openedSnackBarRef`.\n     */\n    _snackBarRefAtThisLevel = null;\n    /** The component that should be rendered as the snack bar's simple component. */\n    simpleSnackBarComponent = SimpleSnackBar;\n    /** The container component that attaches the provided template or component. */\n    snackBarContainerComponent = MatSnackBarContainer;\n    /** The CSS class to apply for handset mode. */\n    handsetCssClass = 'mat-mdc-snack-bar-handset';\n    /** Reference to the currently opened snackbar at *any* level. */\n    get _openedSnackBarRef() {\n        const parent = this._parentSnackBar;\n        return parent ? parent._openedSnackBarRef : this._snackBarRefAtThisLevel;\n    }\n    set _openedSnackBarRef(value) {\n        if (this._parentSnackBar) {\n            this._parentSnackBar._openedSnackBarRef = value;\n        }\n        else {\n            this._snackBarRefAtThisLevel = value;\n        }\n    }\n    constructor() { }\n    /**\n     * Creates and dispatches a snack bar with a custom component for the content, removing any\n     * currently opened snack bars.\n     *\n     * @param component Component to be instantiated.\n     * @param config Extra configuration for the snack bar.\n     */\n    openFromComponent(component, config) {\n        return this._attach(component, config);\n    }\n    /**\n     * Creates and dispatches a snack bar with a custom template for the content, removing any\n     * currently opened snack bars.\n     *\n     * @param template Template to be instantiated.\n     * @param config Extra configuration for the snack bar.\n     */\n    openFromTemplate(template, config) {\n        return this._attach(template, config);\n    }\n    /**\n     * Opens a snackbar with a message and an optional action.\n     * @param message The message to show in the snackbar.\n     * @param action The label for the snackbar action.\n     * @param config Additional configuration options for the snackbar.\n     */\n    open(message, action = '', config) {\n        const _config = { ...this._defaultConfig, ...config };\n        // Since the user doesn't have access to the component, we can\n        // override the data to pass in our own message and action.\n        _config.data = { message, action };\n        // Since the snack bar has `role=\"alert\"`, we don't\n        // want to announce the same message twice.\n        if (_config.announcementMessage === message) {\n            _config.announcementMessage = undefined;\n        }\n        return this.openFromComponent(this.simpleSnackBarComponent, _config);\n    }\n    /**\n     * Dismisses the currently-visible snack bar.\n     */\n    dismiss() {\n        if (this._openedSnackBarRef) {\n            this._openedSnackBarRef.dismiss();\n        }\n    }\n    ngOnDestroy() {\n        // Only dismiss the snack bar at the current level on destroy.\n        if (this._snackBarRefAtThisLevel) {\n            this._snackBarRefAtThisLevel.dismiss();\n        }\n    }\n    /**\n     * Attaches the snack bar container component to the overlay.\n     */\n    _attachSnackBarContainer(overlayRef, config) {\n        const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        const injector = Injector.create({\n            parent: userInjector || this._injector,\n            providers: [{ provide: MatSnackBarConfig, useValue: config }],\n        });\n        const containerPortal = new ComponentPortal(this.snackBarContainerComponent, config.viewContainerRef, injector);\n        const containerRef = overlayRef.attach(containerPortal);\n        containerRef.instance.snackBarConfig = config;\n        return containerRef.instance;\n    }\n    /**\n     * Places a new component or a template as the content of the snack bar container.\n     */\n    _attach(content, userConfig) {\n        const config = { ...new MatSnackBarConfig(), ...this._defaultConfig, ...userConfig };\n        const overlayRef = this._createOverlay(config);\n        const container = this._attachSnackBarContainer(overlayRef, config);\n        const snackBarRef = new MatSnackBarRef(container, overlayRef);\n        if (content instanceof TemplateRef) {\n            const portal = new TemplatePortal(content, null, {\n                $implicit: config.data,\n                snackBarRef,\n            });\n            snackBarRef.instance = container.attachTemplatePortal(portal);\n        }\n        else {\n            const injector = this._createInjector(config, snackBarRef);\n            const portal = new ComponentPortal(content, undefined, injector);\n            const contentRef = container.attachComponentPortal(portal);\n            // We can't pass this via the injector, because the injector is created earlier.\n            snackBarRef.instance = contentRef.instance;\n        }\n        // Subscribe to the breakpoint observer and attach the mat-snack-bar-handset class as\n        // appropriate. This class is applied to the overlay element because the overlay must expand to\n        // fill the width of the screen for full width snackbars.\n        this._breakpointObserver\n            .observe(Breakpoints.HandsetPortrait)\n            .pipe(takeUntil(overlayRef.detachments()))\n            .subscribe(state => {\n            overlayRef.overlayElement.classList.toggle(this.handsetCssClass, state.matches);\n        });\n        if (config.announcementMessage) {\n            // Wait until the snack bar contents have been announced then deliver this message.\n            container._onAnnounce.subscribe(() => {\n                this._live.announce(config.announcementMessage, config.politeness);\n            });\n        }\n        this._animateSnackBar(snackBarRef, config);\n        this._openedSnackBarRef = snackBarRef;\n        return this._openedSnackBarRef;\n    }\n    /** Animates the old snack bar out and the new one in. */\n    _animateSnackBar(snackBarRef, config) {\n        // When the snackbar is dismissed, clear the reference to it.\n        snackBarRef.afterDismissed().subscribe(() => {\n            // Clear the snackbar ref if it hasn't already been replaced by a newer snackbar.\n            if (this._openedSnackBarRef == snackBarRef) {\n                this._openedSnackBarRef = null;\n            }\n            if (config.announcementMessage) {\n                this._live.clear();\n            }\n        });\n        // If a dismiss timeout is provided, set up dismiss based on after the snackbar is opened.\n        if (config.duration && config.duration > 0) {\n            snackBarRef.afterOpened().subscribe(() => snackBarRef._dismissAfter(config.duration));\n        }\n        if (this._openedSnackBarRef) {\n            // If a snack bar is already in view, dismiss it and enter the\n            // new snack bar after exit animation is complete.\n            this._openedSnackBarRef.afterDismissed().subscribe(() => {\n                snackBarRef.containerInstance.enter();\n            });\n            this._openedSnackBarRef.dismiss();\n        }\n        else {\n            // If no snack bar is in view, enter the new snack bar.\n            snackBarRef.containerInstance.enter();\n        }\n    }\n    /**\n     * Creates a new overlay and places it in the correct location.\n     * @param config The user-specified snack bar config.\n     */\n    _createOverlay(config) {\n        const overlayConfig = new OverlayConfig();\n        overlayConfig.direction = config.direction;\n        const positionStrategy = createGlobalPositionStrategy(this._injector);\n        // Set horizontal position.\n        const isRtl = config.direction === 'rtl';\n        const isLeft = config.horizontalPosition === 'left' ||\n            (config.horizontalPosition === 'start' && !isRtl) ||\n            (config.horizontalPosition === 'end' && isRtl);\n        const isRight = !isLeft && config.horizontalPosition !== 'center';\n        if (isLeft) {\n            positionStrategy.left('0');\n        }\n        else if (isRight) {\n            positionStrategy.right('0');\n        }\n        else {\n            positionStrategy.centerHorizontally();\n        }\n        // Set horizontal position.\n        if (config.verticalPosition === 'top') {\n            positionStrategy.top('0');\n        }\n        else {\n            positionStrategy.bottom('0');\n        }\n        overlayConfig.positionStrategy = positionStrategy;\n        overlayConfig.disableAnimations = this._animationsDisabled;\n        return createOverlayRef(this._injector, overlayConfig);\n    }\n    /**\n     * Creates an injector to be used inside of a snack bar component.\n     * @param config Config that was used to create the snack bar.\n     * @param snackBarRef Reference to the snack bar.\n     */\n    _createInjector(config, snackBarRef) {\n        const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        return Injector.create({\n            parent: userInjector || this._injector,\n            providers: [\n                { provide: MatSnackBarRef, useValue: snackBarRef },\n                { provide: MAT_SNACK_BAR_DATA, useValue: config.data },\n            ],\n        });\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatSnackBar, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatSnackBar, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatSnackBar, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [] });\n\nconst DIRECTIVES = [MatSnackBarContainer, MatSnackBarLabel, MatSnackBarActions, MatSnackBarAction];\nclass MatSnackBarModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatSnackBarModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.0\", ngImport: i0, type: MatSnackBarModule, imports: [OverlayModule,\n            PortalModule,\n            MatButtonModule,\n            MatCommonModule,\n            SimpleSnackBar, MatSnackBarContainer, MatSnackBarLabel, MatSnackBarActions, MatSnackBarAction], exports: [MatCommonModule, MatSnackBarContainer, MatSnackBarLabel, MatSnackBarActions, MatSnackBarAction] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatSnackBarModule, providers: [MatSnackBar], imports: [OverlayModule,\n            PortalModule,\n            MatButtonModule,\n            MatCommonModule,\n            SimpleSnackBar, MatCommonModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatSnackBarModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        OverlayModule,\n                        PortalModule,\n                        MatButtonModule,\n                        MatCommonModule,\n                        SimpleSnackBar,\n                        ...DIRECTIVES,\n                    ],\n                    exports: [MatCommonModule, ...DIRECTIVES],\n                    providers: [MatSnackBar],\n                }]\n        }] });\n\n/**\n * Animations used by the Material snack bar.\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nconst matSnackBarAnimations = {\n    // Represents\n    // trigger('state', [\n    //   state(\n    //     'void, hidden',\n    //     style({\n    //       transform: 'scale(0.8)',\n    //       opacity: 0,\n    //     }),\n    //   ),\n    //   state(\n    //     'visible',\n    //     style({\n    //       transform: 'scale(1)',\n    //       opacity: 1,\n    //     }),\n    //   ),\n    //   transition('* => visible', animate('150ms cubic-bezier(0, 0, 0.2, 1)')),\n    //   transition(\n    //     '* => void, * => hidden',\n    //     animate(\n    //       '75ms cubic-bezier(0.4, 0.0, 1, 1)',\n    //       style({\n    //         opacity: 0,\n    //       }),\n    //     ),\n    //   ),\n    // ])\n    /** Animation that shows and hides a snack bar. */\n    snackBarState: {\n        type: 7,\n        name: 'state',\n        'definitions': [\n            {\n                type: 0,\n                name: 'void, hidden',\n                styles: { type: 6, styles: { transform: 'scale(0.8)', opacity: 0 }, offset: null },\n            },\n            {\n                type: 0,\n                name: 'visible',\n                styles: { type: 6, styles: { transform: 'scale(1)', opacity: 1 }, offset: null },\n            },\n            {\n                type: 1,\n                expr: '* => visible',\n                animation: { type: 4, styles: null, timings: '150ms cubic-bezier(0, 0, 0.2, 1)' },\n                options: null,\n            },\n            {\n                type: 1,\n                expr: '* => void, * => hidden',\n                animation: {\n                    type: 4,\n                    styles: { type: 6, styles: { opacity: 0 }, offset: null },\n                    timings: '75ms cubic-bezier(0.4, 0.0, 1, 1)',\n                },\n                options: null,\n            },\n        ],\n        options: {},\n    },\n};\n\nexport { MAT_SNACK_BAR_DATA, MAT_SNACK_BAR_DEFAULT_OPTIONS, MAT_SNACK_BAR_DEFAULT_OPTIONS_FACTORY, MatSnackBar, MatSnackBarAction, MatSnackBarActions, MatSnackBarConfig, MatSnackBarContainer, MatSnackBarLabel, MatSnackBarModule, MatSnackBarRef, SimpleSnackBar, matSnackBarAnimations };\n\n","/**\n * @license Angular v20.1.7\n * (c) 2010-2025 Google LLC. https://angular.io/\n * License: MIT\n */\n\n/**\n * @description Constants for the categories of parameters that can be defined for animations.\n *\n * A corresponding function defines a set of parameters for each category, and\n * collects them into a corresponding `AnimationMetadata` object.\n *\n * @publicApi\n */\nvar AnimationMetadataType;\n(function (AnimationMetadataType) {\n    /**\n     * Associates a named animation state with a set of CSS styles.\n     * See [`state()`](api/animations/state)\n     */\n    AnimationMetadataType[AnimationMetadataType[\"State\"] = 0] = \"State\";\n    /**\n     * Data for a transition from one animation state to another.\n     * See `transition()`\n     */\n    AnimationMetadataType[AnimationMetadataType[\"Transition\"] = 1] = \"Transition\";\n    /**\n     * Contains a set of animation steps.\n     * See `sequence()`\n     */\n    AnimationMetadataType[AnimationMetadataType[\"Sequence\"] = 2] = \"Sequence\";\n    /**\n     * Contains a set of animation steps.\n     * See `group()`\n     */\n    AnimationMetadataType[AnimationMetadataType[\"Group\"] = 3] = \"Group\";\n    /**\n     * Contains an animation step.\n     * See `animate()`\n     */\n    AnimationMetadataType[AnimationMetadataType[\"Animate\"] = 4] = \"Animate\";\n    /**\n     * Contains a set of animation steps.\n     * See `keyframes()`\n     */\n    AnimationMetadataType[AnimationMetadataType[\"Keyframes\"] = 5] = \"Keyframes\";\n    /**\n     * Contains a set of CSS property-value pairs into a named style.\n     * See `style()`\n     */\n    AnimationMetadataType[AnimationMetadataType[\"Style\"] = 6] = \"Style\";\n    /**\n     * Associates an animation with an entry trigger that can be attached to an element.\n     * See `trigger()`\n     */\n    AnimationMetadataType[AnimationMetadataType[\"Trigger\"] = 7] = \"Trigger\";\n    /**\n     * Contains a re-usable animation.\n     * See `animation()`\n     */\n    AnimationMetadataType[AnimationMetadataType[\"Reference\"] = 8] = \"Reference\";\n    /**\n     * Contains data to use in executing child animations returned by a query.\n     * See `animateChild()`\n     */\n    AnimationMetadataType[AnimationMetadataType[\"AnimateChild\"] = 9] = \"AnimateChild\";\n    /**\n     * Contains animation parameters for a re-usable animation.\n     * See `useAnimation()`\n     */\n    AnimationMetadataType[AnimationMetadataType[\"AnimateRef\"] = 10] = \"AnimateRef\";\n    /**\n     * Contains child-animation query data.\n     * See `query()`\n     */\n    AnimationMetadataType[AnimationMetadataType[\"Query\"] = 11] = \"Query\";\n    /**\n     * Contains data for staggering an animation sequence.\n     * See `stagger()`\n     */\n    AnimationMetadataType[AnimationMetadataType[\"Stagger\"] = 12] = \"Stagger\";\n})(AnimationMetadataType || (AnimationMetadataType = {}));\n/**\n * Specifies automatic styling.\n *\n * @publicApi\n */\nconst AUTO_STYLE = '*';\n/**\n * Creates a named animation trigger, containing a  list of [`state()`](api/animations/state)\n * and `transition()` entries to be evaluated when the expression\n * bound to the trigger changes.\n *\n * @param name An identifying string.\n * @param definitions  An animation definition object, containing an array of\n * [`state()`](api/animations/state) and `transition()` declarations.\n *\n * @return An object that encapsulates the trigger data.\n *\n * @usageNotes\n * Define an animation trigger in the `animations` section of `@Component` metadata.\n * In the template, reference the trigger by name and bind it to a trigger expression that\n * evaluates to a defined animation state, using the following format:\n *\n * `[@triggerName]=\"expression\"`\n *\n * Animation trigger bindings convert all values to strings, and then match the\n * previous and current values against any linked transitions.\n * Booleans can be specified as `1` or `true` and `0` or `false`.\n *\n * ### Usage Example\n *\n * The following example creates an animation trigger reference based on the provided\n * name value.\n * The provided animation value is expected to be an array consisting of state and\n * transition declarations.\n *\n * ```ts\n * @Component({\n *   selector: \"my-component\",\n *   templateUrl: \"my-component-tpl.html\",\n *   animations: [\n *     trigger(\"myAnimationTrigger\", [\n *       state(...),\n *       state(...),\n *       transition(...),\n *       transition(...)\n *     ])\n *   ]\n * })\n * class MyComponent {\n *   myStatusExp = \"something\";\n * }\n * ```\n *\n * The template associated with this component makes use of the defined trigger\n * by binding to an element within its template code.\n *\n * ```html\n * <!-- somewhere inside of my-component-tpl.html -->\n * <div [@myAnimationTrigger]=\"myStatusExp\">...</div>\n * ```\n *\n * ### Using an inline function\n * The `transition` animation method also supports reading an inline function which can decide\n * if its associated animation should be run.\n *\n * ```ts\n * // this method is run each time the `myAnimationTrigger` trigger value changes.\n * function myInlineMatcherFn(fromState: string, toState: string, element: any, params: {[key:\n string]: any}): boolean {\n *   // notice that `element` and `params` are also available here\n *   return toState == 'yes-please-animate';\n * }\n *\n * @Component({\n *   selector: 'my-component',\n *   templateUrl: 'my-component-tpl.html',\n *   animations: [\n *     trigger('myAnimationTrigger', [\n *       transition(myInlineMatcherFn, [\n *         // the animation sequence code\n *       ]),\n *     ])\n *   ]\n * })\n * class MyComponent {\n *   myStatusExp = \"yes-please-animate\";\n * }\n * ```\n *\n * ### Disabling Animations\n * When true, the special animation control binding `@.disabled` binding prevents\n * all animations from rendering.\n * Place the  `@.disabled` binding on an element to disable\n * animations on the element itself, as well as any inner animation triggers\n * within the element.\n *\n * The following example shows how to use this feature:\n *\n * ```angular-ts\n * @Component({\n *   selector: 'my-component',\n *   template: `\n *     <div [@.disabled]=\"isDisabled\">\n *       <div [@childAnimation]=\"exp\"></div>\n *     </div>\n *   `,\n *   animations: [\n *     trigger(\"childAnimation\", [\n *       // ...\n *     ])\n *   ]\n * })\n * class MyComponent {\n *   isDisabled = true;\n *   exp = '...';\n * }\n * ```\n *\n * When `@.disabled` is true, it prevents the `@childAnimation` trigger from animating,\n * along with any inner animations.\n *\n * ### Disable animations application-wide\n * When an area of the template is set to have animations disabled,\n * **all** inner components have their animations disabled as well.\n * This means that you can disable all animations for an app\n * by placing a host binding set on `@.disabled` on the topmost Angular component.\n *\n * ```ts\n * import {Component, HostBinding} from '@angular/core';\n *\n * @Component({\n *   selector: 'app-component',\n *   templateUrl: 'app.component.html',\n * })\n * class AppComponent {\n *   @HostBinding('@.disabled')\n *   public animationsDisabled = true;\n * }\n * ```\n *\n * ### Overriding disablement of inner animations\n * Despite inner animations being disabled, a parent animation can `query()`\n * for inner elements located in disabled areas of the template and still animate\n * them if needed. This is also the case for when a sub animation is\n * queried by a parent and then later animated using `animateChild()`.\n *\n * ### Detecting when an animation is disabled\n * If a region of the DOM (or the entire application) has its animations disabled, the animation\n * trigger callbacks still fire, but for zero seconds. When the callback fires, it provides\n * an instance of an `AnimationEvent`. If animations are disabled,\n * the `.disabled` flag on the event is true.\n *\n * @publicApi\n */\nfunction trigger(name, definitions) {\n    return { type: AnimationMetadataType.Trigger, name, definitions, options: {} };\n}\n/**\n * Defines an animation step that combines styling information with timing information.\n *\n * @param timings Sets `AnimateTimings` for the parent animation.\n * A string in the format \"duration [delay] [easing]\".\n *  - Duration and delay are expressed as a number and optional time unit,\n * such as \"1s\" or \"10ms\" for one second and 10 milliseconds, respectively.\n * The default unit is milliseconds.\n *  - The easing value controls how the animation accelerates and decelerates\n * during its runtime. Value is one of  `ease`, `ease-in`, `ease-out`,\n * `ease-in-out`, or a `cubic-bezier()` function call.\n * If not supplied, no easing is applied.\n *\n * For example, the string \"1s 100ms ease-out\" specifies a duration of\n * 1000 milliseconds, and delay of 100 ms, and the \"ease-out\" easing style,\n * which decelerates near the end of the duration.\n * @param styles Sets AnimationStyles for the parent animation.\n * A function call to either `style()` or `keyframes()`\n * that returns a collection of CSS style entries to be applied to the parent animation.\n * When null, uses the styles from the destination state.\n * This is useful when describing an animation step that will complete an animation;\n * see \"Animating to the final state\" in `transitions()`.\n * @returns An object that encapsulates the animation step.\n *\n * @usageNotes\n * Call within an animation `sequence()`, {@link /api/animations/group group()}, or\n * `transition()` call to specify an animation step\n * that applies given style data to the parent animation for a given amount of time.\n *\n * ### Syntax Examples\n * **Timing examples**\n *\n * The following examples show various `timings` specifications.\n * - `animate(500)` : Duration is 500 milliseconds.\n * - `animate(\"1s\")` : Duration is 1000 milliseconds.\n * - `animate(\"100ms 0.5s\")` : Duration is 100 milliseconds, delay is 500 milliseconds.\n * - `animate(\"5s ease-in\")` : Duration is 5000 milliseconds, easing in.\n * - `animate(\"5s 10ms cubic-bezier(.17,.67,.88,.1)\")` : Duration is 5000 milliseconds, delay is 10\n * milliseconds, easing according to a bezier curve.\n *\n * **Style examples**\n *\n * The following example calls `style()` to set a single CSS style.\n * ```ts\n * animate(500, style({ background: \"red\" }))\n * ```\n * The following example calls `keyframes()` to set a CSS style\n * to different values for successive keyframes.\n * ```ts\n * animate(500, keyframes(\n *  [\n *   style({ background: \"blue\" }),\n *   style({ background: \"red\" })\n *  ])\n * ```\n *\n * @publicApi\n */\nfunction animate(timings, styles = null) {\n    return { type: AnimationMetadataType.Animate, styles, timings };\n}\n/**\n * @description Defines a list of animation steps to be run in parallel.\n *\n * @param steps An array of animation step objects.\n * - When steps are defined by `style()` or `animate()`\n * function calls, each call within the group is executed instantly.\n * - To specify offset styles to be applied at a later time, define steps with\n * `keyframes()`, or use `animate()` calls with a delay value.\n * For example:\n *\n * ```ts\n * group([\n *   animate(\"1s\", style({ background: \"black\" })),\n *   animate(\"2s\", style({ color: \"white\" }))\n * ])\n * ```\n *\n * @param options An options object containing a delay and\n * developer-defined parameters that provide styling defaults and\n * can be overridden on invocation.\n *\n * @return An object that encapsulates the group data.\n *\n * @usageNotes\n * Grouped animations are useful when a series of styles must be\n * animated at different starting times and closed off at different ending times.\n *\n * When called within a `sequence()` or a\n * `transition()` call, does not continue to the next\n * instruction until all of the inner animation steps have completed.\n *\n * @publicApi\n */\nfunction group(steps, options = null) {\n    return { type: AnimationMetadataType.Group, steps, options };\n}\n/**\n * Defines a list of animation steps to be run sequentially, one by one.\n *\n * @param steps An array of animation step objects.\n * - Steps defined by `style()` calls apply the styling data immediately.\n * - Steps defined by `animate()` calls apply the styling data over time\n *   as specified by the timing data.\n *\n * ```ts\n * sequence([\n *   style({ opacity: 0 }),\n *   animate(\"1s\", style({ opacity: 1 }))\n * ])\n * ```\n *\n * @param options An options object containing a delay and\n * developer-defined parameters that provide styling defaults and\n * can be overridden on invocation.\n *\n * @return An object that encapsulates the sequence data.\n *\n * @usageNotes\n * When you pass an array of steps to a\n * `transition()` call, the steps run sequentially by default.\n * Compare this to the  {@link /api/animations/group group()} call, which runs animation steps in\n *parallel.\n *\n * When a sequence is used within a  {@link /api/animations/group group()} or a `transition()` call,\n * execution continues to the next instruction only after each of the inner animation\n * steps have completed.\n *\n * @publicApi\n **/\nfunction sequence(steps, options = null) {\n    return { type: AnimationMetadataType.Sequence, steps, options };\n}\n/**\n * Declares a key/value object containing CSS properties/styles that\n * can then be used for an animation [`state`](api/animations/state), within an animation\n *`sequence`, or as styling data for calls to `animate()` and `keyframes()`.\n *\n * @param tokens A set of CSS styles or HTML styles associated with an animation state.\n * The value can be any of the following:\n * - A key-value style pair associating a CSS property with a value.\n * - An array of key-value style pairs.\n * - An asterisk (*), to use auto-styling, where styles are derived from the element\n * being animated and applied to the animation when it starts.\n *\n * Auto-styling can be used to define a state that depends on layout or other\n * environmental factors.\n *\n * @return An object that encapsulates the style data.\n *\n * @usageNotes\n * The following examples create animation styles that collect a set of\n * CSS property values:\n *\n * ```ts\n * // string values for CSS properties\n * style({ background: \"red\", color: \"blue\" })\n *\n * // numerical pixel values\n * style({ width: 100, height: 0 })\n * ```\n *\n * The following example uses auto-styling to allow an element to animate from\n * a height of 0 up to its full height:\n *\n * ```ts\n * style({ height: 0 }),\n * animate(\"1s\", style({ height: \"*\" }))\n * ```\n *\n * @publicApi\n **/\nfunction style(tokens) {\n    return { type: AnimationMetadataType.Style, styles: tokens, offset: null };\n}\n/**\n * Declares an animation state within a trigger attached to an element.\n *\n * @param name One or more names for the defined state in a comma-separated string.\n * The following reserved state names can be supplied to define a style for specific use\n * cases:\n *\n * - `void` You can associate styles with this name to be used when\n * the element is detached from the application. For example, when an `ngIf` evaluates\n * to false, the state of the associated element is void.\n *  - `*` (asterisk) Indicates the default state. You can associate styles with this name\n * to be used as the fallback when the state that is being animated is not declared\n * within the trigger.\n *\n * @param styles A set of CSS styles associated with this state, created using the\n * `style()` function.\n * This set of styles persists on the element once the state has been reached.\n * @param options Parameters that can be passed to the state when it is invoked.\n * 0 or more key-value pairs.\n * @return An object that encapsulates the new state data.\n *\n * @usageNotes\n * Use the `trigger()` function to register states to an animation trigger.\n * Use the `transition()` function to animate between states.\n * When a state is active within a component, its associated styles persist on the element,\n * even when the animation ends.\n *\n * @publicApi\n **/\nfunction state(name, styles, options) {\n    return { type: AnimationMetadataType.State, name, styles, options };\n}\n/**\n * Defines a set of animation styles, associating each style with an optional `offset` value.\n *\n * @param steps A set of animation styles with optional offset data.\n * The optional `offset` value for a style specifies a percentage of the total animation\n * time at which that style is applied.\n * @returns An object that encapsulates the keyframes data.\n *\n * @usageNotes\n * Use with the `animate()` call. Instead of applying animations\n * from the current state\n * to the destination state, keyframes describe how each style entry is applied and at what point\n * within the animation arc.\n * Compare [CSS Keyframe Animations](https://www.w3schools.com/css/css3_animations.asp).\n *\n * ### Usage\n *\n * In the following example, the offset values describe\n * when each `backgroundColor` value is applied. The color is red at the start, and changes to\n * blue when 20% of the total time has elapsed.\n *\n * ```ts\n * // the provided offset values\n * animate(\"5s\", keyframes([\n *   style({ backgroundColor: \"red\", offset: 0 }),\n *   style({ backgroundColor: \"blue\", offset: 0.2 }),\n *   style({ backgroundColor: \"orange\", offset: 0.3 }),\n *   style({ backgroundColor: \"black\", offset: 1 })\n * ]))\n * ```\n *\n * If there are no `offset` values specified in the style entries, the offsets\n * are calculated automatically.\n *\n * ```ts\n * animate(\"5s\", keyframes([\n *   style({ backgroundColor: \"red\" }) // offset = 0\n *   style({ backgroundColor: \"blue\" }) // offset = 0.33\n *   style({ backgroundColor: \"orange\" }) // offset = 0.66\n *   style({ backgroundColor: \"black\" }) // offset = 1\n * ]))\n *```\n\n * @publicApi\n */\nfunction keyframes(steps) {\n    return { type: AnimationMetadataType.Keyframes, steps };\n}\n/**\n * Declares an animation transition which is played when a certain specified condition is met.\n *\n * @param stateChangeExpr A string with a specific format or a function that specifies when the\n * animation transition should occur (see [State Change Expression](#state-change-expression)).\n *\n * @param steps One or more animation objects that represent the animation's instructions.\n *\n * @param options An options object that can be used to specify a delay for the animation or provide\n * custom parameters for it.\n *\n * @returns An object that encapsulates the transition data.\n *\n * @usageNotes\n *\n * ### State Change Expression\n *\n * The State Change Expression instructs Angular when to run the transition's animations, it can\n *either be\n *  - a string with a specific syntax\n *  - or a function that compares the previous and current state (value of the expression bound to\n *    the element's trigger) and returns `true` if the transition should occur or `false` otherwise\n *\n * The string format can be:\n *  - `fromState => toState`, which indicates that the transition's animations should occur then the\n *    expression bound to the trigger's element goes from `fromState` to `toState`\n *\n *    _Example:_\n *      ```ts\n *        transition('open => closed', animate('.5s ease-out', style({ height: 0 }) ))\n *      ```\n *\n *  - `fromState <=> toState`, which indicates that the transition's animations should occur then\n *    the expression bound to the trigger's element goes from `fromState` to `toState` or vice versa\n *\n *    _Example:_\n *      ```ts\n *        transition('enabled <=> disabled', animate('1s cubic-bezier(0.8,0.3,0,1)'))\n *      ```\n *\n *  - `:enter`/`:leave`, which indicates that the transition's animations should occur when the\n *    element enters or exists the DOM\n *\n *    _Example:_\n *      ```ts\n *        transition(':enter', [\n *          style({ opacity: 0 }),\n *          animate('500ms', style({ opacity: 1 }))\n *        ])\n *      ```\n *\n *  - `:increment`/`:decrement`, which indicates that the transition's animations should occur when\n *    the numerical expression bound to the trigger's element has increased in value or decreased\n *\n *    _Example:_\n *      ```ts\n *        transition(':increment', query('@counter', animateChild()))\n *      ```\n *\n *  - a sequence of any of the above divided by commas, which indicates that transition's animations\n *    should occur whenever one of the state change expressions matches\n *\n *    _Example:_\n *      ```ts\n *        transition(':increment, * => enabled, :enter', animate('1s ease', keyframes([\n *          style({ transform: 'scale(1)', offset: 0}),\n *          style({ transform: 'scale(1.1)', offset: 0.7}),\n *          style({ transform: 'scale(1)', offset: 1})\n *        ]))),\n *      ```\n *\n * Also note that in such context:\n *  - `void` can be used to indicate the absence of the element\n *  - asterisks can be used as wildcards that match any state\n *  - (as a consequence of the above, `void => *` is equivalent to `:enter` and `* => void` is\n *    equivalent to `:leave`)\n *  - `true` and `false` also match expression values of `1` and `0` respectively (but do not match\n *    _truthy_ and _falsy_ values)\n *\n * <div class=\"docs-alert docs-alert-helpful\">\n *\n *  Be careful about entering end leaving elements as their transitions present a common\n *  pitfall for developers.\n *\n *  Note that when an element with a trigger enters the DOM its `:enter` transition always\n *  gets executed, but its `:leave` transition will not be executed if the element is removed\n *  alongside its parent (as it will be removed \"without warning\" before its transition has\n *  a chance to be executed, the only way that such transition can occur is if the element\n *  is exiting the DOM on its own).\n *\n *\n * </div>\n *\n * ### Animating to a Final State\n *\n * If the final step in a transition is a call to `animate()` that uses a timing value\n * with no `style` data, that step is automatically considered the final animation arc,\n * for the element to reach the final state, in such case Angular automatically adds or removes\n * CSS styles to ensure that the element is in the correct final state.\n *\n *\n * ### Usage Examples\n *\n *  - Transition animations applied based on\n *    the trigger's expression value\n *\n *   ```html\n *   <div [@myAnimationTrigger]=\"myStatusExp\">\n *    ...\n *   </div>\n *   ```\n *\n *   ```ts\n *   trigger(\"myAnimationTrigger\", [\n *     ..., // states\n *     transition(\"on => off, open => closed\", animate(500)),\n *     transition(\"* <=> error\", query('.indicator', animateChild()))\n *   ])\n *   ```\n *\n *  - Transition animations applied based on custom logic dependent\n *    on the trigger's expression value and provided parameters\n *\n *    ```html\n *    <div [@myAnimationTrigger]=\"{\n *     value: stepName,\n *     params: { target: currentTarget }\n *    }\">\n *     ...\n *    </div>\n *    ```\n *\n *    ```ts\n *    trigger(\"myAnimationTrigger\", [\n *      ..., // states\n *      transition(\n *        (fromState, toState, _element, params) =>\n *          ['firststep', 'laststep'].includes(fromState.toLowerCase())\n *          && toState === params?.['target'],\n *        animate('1s')\n *      )\n *    ])\n *    ```\n *\n * @publicApi\n **/\nfunction transition(stateChangeExpr, steps, options = null) {\n    return { type: AnimationMetadataType.Transition, expr: stateChangeExpr, animation: steps, options };\n}\n/**\n * Produces a reusable animation that can be invoked in another animation or sequence,\n * by calling the `useAnimation()` function.\n *\n * @param steps One or more animation objects, as returned by the `animate()`\n * or `sequence()` function, that form a transformation from one state to another.\n * A sequence is used by default when you pass an array.\n * @param options An options object that can contain a delay value for the start of the\n * animation, and additional developer-defined parameters.\n * Provided values for additional parameters are used as defaults,\n * and override values can be passed to the caller on invocation.\n * @returns An object that encapsulates the animation data.\n *\n * @usageNotes\n * The following example defines a reusable animation, providing some default parameter\n * values.\n *\n * ```ts\n * var fadeAnimation = animation([\n *   style({ opacity: '{{ start }}' }),\n *   animate('{{ time }}',\n *   style({ opacity: '{{ end }}'}))\n *   ],\n *   { params: { time: '1000ms', start: 0, end: 1 }});\n * ```\n *\n * The following invokes the defined animation with a call to `useAnimation()`,\n * passing in override parameter values.\n *\n * ```js\n * useAnimation(fadeAnimation, {\n *   params: {\n *     time: '2s',\n *     start: 1,\n *     end: 0\n *   }\n * })\n * ```\n *\n * If any of the passed-in parameter values are missing from this call,\n * the default values are used. If one or more parameter values are missing before a step is\n * animated, `useAnimation()` throws an error.\n *\n * @publicApi\n */\nfunction animation(steps, options = null) {\n    return { type: AnimationMetadataType.Reference, animation: steps, options };\n}\n/**\n * Executes a queried inner animation element within an animation sequence.\n *\n * @param options An options object that can contain a delay value for the start of the\n * animation, and additional override values for developer-defined parameters.\n * @return An object that encapsulates the child animation data.\n *\n * @usageNotes\n * Each time an animation is triggered in Angular, the parent animation\n * has priority and any child animations are blocked. In order\n * for a child animation to run, the parent animation must query each of the elements\n * containing child animations, and run them using this function.\n *\n * Note that this feature is designed to be used with `query()` and it will only work\n * with animations that are assigned using the Angular animation library. CSS keyframes\n * and transitions are not handled by this API.\n *\n * @publicApi\n */\nfunction animateChild(options = null) {\n    return { type: AnimationMetadataType.AnimateChild, options };\n}\n/**\n * Starts a reusable animation that is created using the `animation()` function.\n *\n * @param animation The reusable animation to start.\n * @param options An options object that can contain a delay value for the start of\n * the animation, and additional override values for developer-defined parameters.\n * @return An object that contains the animation parameters.\n *\n * @publicApi\n */\nfunction useAnimation(animation, options = null) {\n    return { type: AnimationMetadataType.AnimateRef, animation, options };\n}\n/**\n * Finds one or more inner elements within the current element that is\n * being animated within a sequence. Use with `animate()`.\n *\n * @param selector The element to query, or a set of elements that contain Angular-specific\n * characteristics, specified with one or more of the following tokens.\n *  - `query(\":enter\")` or `query(\":leave\")` : Query for newly inserted/removed elements (not\n *     all elements can be queried via these tokens, see\n *     [Entering and Leaving Elements](#entering-and-leaving-elements))\n *  - `query(\":animating\")` : Query all currently animating elements.\n *  - `query(\"@triggerName\")` : Query elements that contain an animation trigger.\n *  - `query(\"@*\")` : Query all elements that contain an animation triggers.\n *  - `query(\":self\")` : Include the current element into the animation sequence.\n *\n * @param animation One or more animation steps to apply to the queried element or elements.\n * An array is treated as an animation sequence.\n * @param options An options object. Use the 'limit' field to limit the total number of\n * items to collect.\n * @return An object that encapsulates the query data.\n *\n * @usageNotes\n *\n * ### Multiple Tokens\n *\n * Tokens can be merged into a combined query selector string. For example:\n *\n * ```ts\n *  query(':self, .record:enter, .record:leave, @subTrigger', [...])\n * ```\n *\n * The `query()` function collects multiple elements and works internally by using\n * `element.querySelectorAll`. Use the `limit` field of an options object to limit\n * the total number of items to be collected. For example:\n *\n * ```js\n * query('div', [\n *   animate(...),\n *   animate(...)\n * ], { limit: 1 })\n * ```\n *\n * By default, throws an error when zero items are found. Set the\n * `optional` flag to ignore this error. For example:\n *\n * ```js\n * query('.some-element-that-may-not-be-there', [\n *   animate(...),\n *   animate(...)\n * ], { optional: true })\n * ```\n *\n * ### Entering and Leaving Elements\n *\n * Not all elements can be queried via the `:enter` and `:leave` tokens, the only ones\n * that can are those that Angular assumes can enter/leave based on their own logic\n * (if their insertion/removal is simply a consequence of that of their parent they\n * should be queried via a different token in their parent's `:enter`/`:leave` transitions).\n *\n * The only elements Angular assumes can enter/leave based on their own logic (thus the only\n * ones that can be queried via the `:enter` and `:leave` tokens) are:\n *  - Those inserted dynamically (via `ViewContainerRef`)\n *  - Those that have a structural directive (which, under the hood, are a subset of the above ones)\n *\n * <div class=\"docs-alert docs-alert-helpful\">\n *\n *  Note that elements will be successfully queried via `:enter`/`:leave` even if their\n *  insertion/removal is not done manually via `ViewContainerRef`or caused by their structural\n *  directive (e.g. they enter/exit alongside their parent).\n *\n * </div>\n *\n * <div class=\"docs-alert docs-alert-important\">\n *\n *  There is an exception to what previously mentioned, besides elements entering/leaving based on\n *  their own logic, elements with an animation trigger can always be queried via `:leave` when\n * their parent is also leaving.\n *\n * </div>\n *\n * ### Usage Example\n *\n * The following example queries for inner elements and animates them\n * individually using `animate()`.\n *\n * ```angular-ts\n * @Component({\n *   selector: 'inner',\n *   template: `\n *     <div [@queryAnimation]=\"exp\">\n *       <h1>Title</h1>\n *       <div class=\"content\">\n *         Blah blah blah\n *       </div>\n *     </div>\n *   `,\n *   animations: [\n *    trigger('queryAnimation', [\n *      transition('* => goAnimate', [\n *        // hide the inner elements\n *        query('h1', style({ opacity: 0 })),\n *        query('.content', style({ opacity: 0 })),\n *\n *        // animate the inner elements in, one by one\n *        query('h1', animate(1000, style({ opacity: 1 }))),\n *        query('.content', animate(1000, style({ opacity: 1 }))),\n *      ])\n *    ])\n *  ]\n * })\n * class Cmp {\n *   exp = '';\n *\n *   goAnimate() {\n *     this.exp = 'goAnimate';\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nfunction query(selector, animation, options = null) {\n    return { type: AnimationMetadataType.Query, selector, animation, options };\n}\n/**\n * Use within an animation `query()` call to issue a timing gap after\n * each queried item is animated.\n *\n * @param timings A delay value.\n * @param animation One ore more animation steps.\n * @returns An object that encapsulates the stagger data.\n *\n * @usageNotes\n * In the following example, a container element wraps a list of items stamped out\n * by an `@for` block. The container element contains an animation trigger that will later be set\n * to query for each of the inner items.\n *\n * Each time items are added, the opacity fade-in animation runs,\n * and each removed item is faded out.\n * When either of these animations occur, the stagger effect is\n * applied after each item's animation is started.\n *\n * ```html\n * <!-- list.component.html -->\n * <button (click)=\"toggle()\">Show / Hide Items</button>\n * <hr />\n * <div [@listAnimation]=\"items.length\">\n *   @for(item of items; track $index) {\n *      <div>{{ item }}</div>\n *   }\n * </div>\n * ```\n *\n * Here is the component code:\n *\n * ```ts\n * import {trigger, transition, style, animate, query, stagger} from '@angular/animations';\n * @Component({\n *   templateUrl: 'list.component.html',\n *   animations: [\n *     trigger('listAnimation', [\n *     ...\n *     ])\n *   ]\n * })\n * class ListComponent {\n *   items = [];\n *\n *   showItems() {\n *     this.items = [0,1,2,3,4];\n *   }\n *\n *   hideItems() {\n *     this.items = [];\n *   }\n *\n *   toggle() {\n *     this.items.length ? this.hideItems() : this.showItems();\n *    }\n *  }\n * ```\n *\n * Here is the animation trigger code:\n *\n * ```ts\n * trigger('listAnimation', [\n *   transition('* => *', [ // each time the binding value changes\n *     query(':leave', [\n *       stagger(100, [\n *         animate('0.5s', style({ opacity: 0 }))\n *       ])\n *     ]),\n *     query(':enter', [\n *       style({ opacity: 0 }),\n *       stagger(100, [\n *         animate('0.5s', style({ opacity: 1 }))\n *       ])\n *     ])\n *   ])\n * ])\n * ```\n *\n * @publicApi\n */\nfunction stagger(timings, animation) {\n    return { type: AnimationMetadataType.Stagger, timings, animation };\n}\n\n/**\n * An empty programmatic controller for reusable animations.\n * Used internally when animations are disabled, to avoid\n * checking for the null case when an animation player is expected.\n *\n * @see {@link animate}\n * @see {@link AnimationPlayer}\n *\n * @publicApi\n */\nclass NoopAnimationPlayer {\n    _onDoneFns = [];\n    _onStartFns = [];\n    _onDestroyFns = [];\n    _originalOnDoneFns = [];\n    _originalOnStartFns = [];\n    _started = false;\n    _destroyed = false;\n    _finished = false;\n    _position = 0;\n    parentPlayer = null;\n    totalTime;\n    constructor(duration = 0, delay = 0) {\n        this.totalTime = duration + delay;\n    }\n    _onFinish() {\n        if (!this._finished) {\n            this._finished = true;\n            this._onDoneFns.forEach((fn) => fn());\n            this._onDoneFns = [];\n        }\n    }\n    onStart(fn) {\n        this._originalOnStartFns.push(fn);\n        this._onStartFns.push(fn);\n    }\n    onDone(fn) {\n        this._originalOnDoneFns.push(fn);\n        this._onDoneFns.push(fn);\n    }\n    onDestroy(fn) {\n        this._onDestroyFns.push(fn);\n    }\n    hasStarted() {\n        return this._started;\n    }\n    init() { }\n    play() {\n        if (!this.hasStarted()) {\n            this._onStart();\n            this.triggerMicrotask();\n        }\n        this._started = true;\n    }\n    /** @internal */\n    triggerMicrotask() {\n        queueMicrotask(() => this._onFinish());\n    }\n    _onStart() {\n        this._onStartFns.forEach((fn) => fn());\n        this._onStartFns = [];\n    }\n    pause() { }\n    restart() { }\n    finish() {\n        this._onFinish();\n    }\n    destroy() {\n        if (!this._destroyed) {\n            this._destroyed = true;\n            if (!this.hasStarted()) {\n                this._onStart();\n            }\n            this.finish();\n            this._onDestroyFns.forEach((fn) => fn());\n            this._onDestroyFns = [];\n        }\n    }\n    reset() {\n        this._started = false;\n        this._finished = false;\n        this._onStartFns = this._originalOnStartFns;\n        this._onDoneFns = this._originalOnDoneFns;\n    }\n    setPosition(position) {\n        this._position = this.totalTime ? position * this.totalTime : 1;\n    }\n    getPosition() {\n        return this.totalTime ? this._position / this.totalTime : 1;\n    }\n    /** @internal */\n    triggerCallback(phaseName) {\n        const methods = phaseName == 'start' ? this._onStartFns : this._onDoneFns;\n        methods.forEach((fn) => fn());\n        methods.length = 0;\n    }\n}\n\n/**\n * A programmatic controller for a group of reusable animations.\n * Used internally to control animations.\n *\n * @see {@link AnimationPlayer}\n * @see {@link animations/group group}\n *\n */\nclass AnimationGroupPlayer {\n    _onDoneFns = [];\n    _onStartFns = [];\n    _finished = false;\n    _started = false;\n    _destroyed = false;\n    _onDestroyFns = [];\n    parentPlayer = null;\n    totalTime = 0;\n    players;\n    constructor(_players) {\n        this.players = _players;\n        let doneCount = 0;\n        let destroyCount = 0;\n        let startCount = 0;\n        const total = this.players.length;\n        if (total == 0) {\n            queueMicrotask(() => this._onFinish());\n        }\n        else {\n            this.players.forEach((player) => {\n                player.onDone(() => {\n                    if (++doneCount == total) {\n                        this._onFinish();\n                    }\n                });\n                player.onDestroy(() => {\n                    if (++destroyCount == total) {\n                        this._onDestroy();\n                    }\n                });\n                player.onStart(() => {\n                    if (++startCount == total) {\n                        this._onStart();\n                    }\n                });\n            });\n        }\n        this.totalTime = this.players.reduce((time, player) => Math.max(time, player.totalTime), 0);\n    }\n    _onFinish() {\n        if (!this._finished) {\n            this._finished = true;\n            this._onDoneFns.forEach((fn) => fn());\n            this._onDoneFns = [];\n        }\n    }\n    init() {\n        this.players.forEach((player) => player.init());\n    }\n    onStart(fn) {\n        this._onStartFns.push(fn);\n    }\n    _onStart() {\n        if (!this.hasStarted()) {\n            this._started = true;\n            this._onStartFns.forEach((fn) => fn());\n            this._onStartFns = [];\n        }\n    }\n    onDone(fn) {\n        this._onDoneFns.push(fn);\n    }\n    onDestroy(fn) {\n        this._onDestroyFns.push(fn);\n    }\n    hasStarted() {\n        return this._started;\n    }\n    play() {\n        if (!this.parentPlayer) {\n            this.init();\n        }\n        this._onStart();\n        this.players.forEach((player) => player.play());\n    }\n    pause() {\n        this.players.forEach((player) => player.pause());\n    }\n    restart() {\n        this.players.forEach((player) => player.restart());\n    }\n    finish() {\n        this._onFinish();\n        this.players.forEach((player) => player.finish());\n    }\n    destroy() {\n        this._onDestroy();\n    }\n    _onDestroy() {\n        if (!this._destroyed) {\n            this._destroyed = true;\n            this._onFinish();\n            this.players.forEach((player) => player.destroy());\n            this._onDestroyFns.forEach((fn) => fn());\n            this._onDestroyFns = [];\n        }\n    }\n    reset() {\n        this.players.forEach((player) => player.reset());\n        this._destroyed = false;\n        this._finished = false;\n        this._started = false;\n    }\n    setPosition(p) {\n        const timeAtPosition = p * this.totalTime;\n        this.players.forEach((player) => {\n            const position = player.totalTime ? Math.min(1, timeAtPosition / player.totalTime) : 1;\n            player.setPosition(position);\n        });\n    }\n    getPosition() {\n        const longestPlayer = this.players.reduce((longestSoFar, player) => {\n            const newPlayerIsLongest = longestSoFar === null || player.totalTime > longestSoFar.totalTime;\n            return newPlayerIsLongest ? player : longestSoFar;\n        }, null);\n        return longestPlayer != null ? longestPlayer.getPosition() : 0;\n    }\n    beforeDestroy() {\n        this.players.forEach((player) => {\n            if (player.beforeDestroy) {\n                player.beforeDestroy();\n            }\n        });\n    }\n    /** @internal */\n    triggerCallback(phaseName) {\n        const methods = phaseName == 'start' ? this._onStartFns : this._onDoneFns;\n        methods.forEach((fn) => fn());\n        methods.length = 0;\n    }\n}\n\nconst ɵPRE_STYLE = '!';\n\nexport { AUTO_STYLE, AnimationGroupPlayer, AnimationMetadataType, NoopAnimationPlayer, animate, animateChild, animation, group, keyframes, query, sequence, stagger, state, style, transition, trigger, useAnimation, ɵPRE_STYLE };\n\n","/**\n * @license Angular v20.1.7\n * (c) 2010-2025 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { AnimationGroupPlayer, NoopAnimationPlayer, AUTO_STYLE, ɵPRE_STYLE as _PRE_STYLE, AnimationMetadataType, sequence } from './private_export.mjs';\nimport { ɵRuntimeError as _RuntimeError } from '@angular/core';\n\nconst LINE_START = '\\n - ';\nfunction invalidTimingValue(exp) {\n    return new _RuntimeError(3000 /* RuntimeErrorCode.INVALID_TIMING_VALUE */, ngDevMode && `The provided timing value \"${exp}\" is invalid.`);\n}\nfunction negativeStepValue() {\n    return new _RuntimeError(3100 /* RuntimeErrorCode.NEGATIVE_STEP_VALUE */, ngDevMode && 'Duration values below 0 are not allowed for this animation step.');\n}\nfunction negativeDelayValue() {\n    return new _RuntimeError(3101 /* RuntimeErrorCode.NEGATIVE_DELAY_VALUE */, ngDevMode && 'Delay values below 0 are not allowed for this animation step.');\n}\nfunction invalidStyleParams(varName) {\n    return new _RuntimeError(3001 /* RuntimeErrorCode.INVALID_STYLE_PARAMS */, ngDevMode &&\n        `Unable to resolve the local animation param ${varName} in the given list of values`);\n}\nfunction invalidParamValue(varName) {\n    return new _RuntimeError(3003 /* RuntimeErrorCode.INVALID_PARAM_VALUE */, ngDevMode && `Please provide a value for the animation param ${varName}`);\n}\nfunction invalidNodeType(nodeType) {\n    return new _RuntimeError(3004 /* RuntimeErrorCode.INVALID_NODE_TYPE */, ngDevMode && `Unable to resolve animation metadata node #${nodeType}`);\n}\nfunction invalidCssUnitValue(userProvidedProperty, value) {\n    return new _RuntimeError(3005 /* RuntimeErrorCode.INVALID_CSS_UNIT_VALUE */, ngDevMode && `Please provide a CSS unit value for ${userProvidedProperty}:${value}`);\n}\nfunction invalidTrigger() {\n    return new _RuntimeError(3006 /* RuntimeErrorCode.INVALID_TRIGGER */, ngDevMode &&\n        \"animation triggers cannot be prefixed with an `@` sign (e.g. trigger('@foo', [...]))\");\n}\nfunction invalidDefinition() {\n    return new _RuntimeError(3007 /* RuntimeErrorCode.INVALID_DEFINITION */, ngDevMode && 'only state() and transition() definitions can sit inside of a trigger()');\n}\nfunction invalidState(metadataName, missingSubs) {\n    return new _RuntimeError(3008 /* RuntimeErrorCode.INVALID_STATE */, ngDevMode &&\n        `state(\"${metadataName}\", ...) must define default values for all the following style substitutions: ${missingSubs.join(', ')}`);\n}\nfunction invalidStyleValue(value) {\n    return new _RuntimeError(3002 /* RuntimeErrorCode.INVALID_STYLE_VALUE */, ngDevMode && `The provided style string value ${value} is not allowed.`);\n}\nfunction invalidParallelAnimation(prop, firstStart, firstEnd, secondStart, secondEnd) {\n    return new _RuntimeError(3010 /* RuntimeErrorCode.INVALID_PARALLEL_ANIMATION */, ngDevMode &&\n        `The CSS property \"${prop}\" that exists between the times of \"${firstStart}ms\" and \"${firstEnd}ms\" is also being animated in a parallel animation between the times of \"${secondStart}ms\" and \"${secondEnd}ms\"`);\n}\nfunction invalidKeyframes() {\n    return new _RuntimeError(3011 /* RuntimeErrorCode.INVALID_KEYFRAMES */, ngDevMode && `keyframes() must be placed inside of a call to animate()`);\n}\nfunction invalidOffset() {\n    return new _RuntimeError(3012 /* RuntimeErrorCode.INVALID_OFFSET */, ngDevMode && `Please ensure that all keyframe offsets are between 0 and 1`);\n}\nfunction keyframeOffsetsOutOfOrder() {\n    return new _RuntimeError(3200 /* RuntimeErrorCode.KEYFRAME_OFFSETS_OUT_OF_ORDER */, ngDevMode && `Please ensure that all keyframe offsets are in order`);\n}\nfunction keyframesMissingOffsets() {\n    return new _RuntimeError(3202 /* RuntimeErrorCode.KEYFRAMES_MISSING_OFFSETS */, ngDevMode && `Not all style() steps within the declared keyframes() contain offsets`);\n}\nfunction invalidStagger() {\n    return new _RuntimeError(3013 /* RuntimeErrorCode.INVALID_STAGGER */, ngDevMode && `stagger() can only be used inside of query()`);\n}\nfunction invalidQuery(selector) {\n    return new _RuntimeError(3014 /* RuntimeErrorCode.INVALID_QUERY */, ngDevMode &&\n        `\\`query(\"${selector}\")\\` returned zero elements. (Use \\`query(\"${selector}\", { optional: true })\\` if you wish to allow this.)`);\n}\nfunction invalidExpression(expr) {\n    return new _RuntimeError(3015 /* RuntimeErrorCode.INVALID_EXPRESSION */, ngDevMode && `The provided transition expression \"${expr}\" is not supported`);\n}\nfunction invalidTransitionAlias(alias) {\n    return new _RuntimeError(3016 /* RuntimeErrorCode.INVALID_TRANSITION_ALIAS */, ngDevMode && `The transition alias value \"${alias}\" is not supported`);\n}\nfunction validationFailed(errors) {\n    return new _RuntimeError(3500 /* RuntimeErrorCode.VALIDATION_FAILED */, ngDevMode && `animation validation failed:\\n${errors.map((err) => err.message).join('\\n')}`);\n}\nfunction buildingFailed(errors) {\n    return new _RuntimeError(3501 /* RuntimeErrorCode.BUILDING_FAILED */, ngDevMode && `animation building failed:\\n${errors.map((err) => err.message).join('\\n')}`);\n}\nfunction triggerBuildFailed(name, errors) {\n    return new _RuntimeError(3404 /* RuntimeErrorCode.TRIGGER_BUILD_FAILED */, ngDevMode &&\n        `The animation trigger \"${name}\" has failed to build due to the following errors:\\n - ${errors\n            .map((err) => err.message)\n            .join('\\n - ')}`);\n}\nfunction animationFailed(errors) {\n    return new _RuntimeError(3502 /* RuntimeErrorCode.ANIMATION_FAILED */, ngDevMode &&\n        `Unable to animate due to the following errors:${LINE_START}${errors\n            .map((err) => err.message)\n            .join(LINE_START)}`);\n}\nfunction registerFailed(errors) {\n    return new _RuntimeError(3503 /* RuntimeErrorCode.REGISTRATION_FAILED */, ngDevMode &&\n        `Unable to build the animation due to the following errors: ${errors\n            .map((err) => err.message)\n            .join('\\n')}`);\n}\nfunction missingOrDestroyedAnimation() {\n    return new _RuntimeError(3300 /* RuntimeErrorCode.MISSING_OR_DESTROYED_ANIMATION */, ngDevMode && \"The requested animation doesn't exist or has already been destroyed\");\n}\nfunction createAnimationFailed(errors) {\n    return new _RuntimeError(3504 /* RuntimeErrorCode.CREATE_ANIMATION_FAILED */, ngDevMode &&\n        `Unable to create the animation due to the following errors:${errors\n            .map((err) => err.message)\n            .join('\\n')}`);\n}\nfunction missingPlayer(id) {\n    return new _RuntimeError(3301 /* RuntimeErrorCode.MISSING_PLAYER */, ngDevMode && `Unable to find the timeline player referenced by ${id}`);\n}\nfunction missingTrigger(phase, name) {\n    return new _RuntimeError(3302 /* RuntimeErrorCode.MISSING_TRIGGER */, ngDevMode &&\n        `Unable to listen on the animation trigger event \"${phase}\" because the animation trigger \"${name}\" doesn\\'t exist!`);\n}\nfunction missingEvent(name) {\n    return new _RuntimeError(3303 /* RuntimeErrorCode.MISSING_EVENT */, ngDevMode &&\n        `Unable to listen on the animation trigger \"${name}\" because the provided event is undefined!`);\n}\nfunction unsupportedTriggerEvent(phase, name) {\n    return new _RuntimeError(3400 /* RuntimeErrorCode.UNSUPPORTED_TRIGGER_EVENT */, ngDevMode &&\n        `The provided animation trigger event \"${phase}\" for the animation trigger \"${name}\" is not supported!`);\n}\nfunction unregisteredTrigger(name) {\n    return new _RuntimeError(3401 /* RuntimeErrorCode.UNREGISTERED_TRIGGER */, ngDevMode && `The provided animation trigger \"${name}\" has not been registered!`);\n}\nfunction triggerTransitionsFailed(errors) {\n    return new _RuntimeError(3402 /* RuntimeErrorCode.TRIGGER_TRANSITIONS_FAILED */, ngDevMode &&\n        `Unable to process animations due to the following failed trigger transitions\\n ${errors\n            .map((err) => err.message)\n            .join('\\n')}`);\n}\nfunction transitionFailed(name, errors) {\n    return new _RuntimeError(3505 /* RuntimeErrorCode.TRANSITION_FAILED */, ngDevMode && `@${name} has failed due to:\\n ${errors.map((err) => err.message).join('\\n- ')}`);\n}\n\n/**\n * Set of all animatable CSS properties\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_animated_properties\n */\nconst ANIMATABLE_PROP_SET = new Set([\n    '-moz-outline-radius',\n    '-moz-outline-radius-bottomleft',\n    '-moz-outline-radius-bottomright',\n    '-moz-outline-radius-topleft',\n    '-moz-outline-radius-topright',\n    '-ms-grid-columns',\n    '-ms-grid-rows',\n    '-webkit-line-clamp',\n    '-webkit-text-fill-color',\n    '-webkit-text-stroke',\n    '-webkit-text-stroke-color',\n    'accent-color',\n    'all',\n    'backdrop-filter',\n    'background',\n    'background-color',\n    'background-position',\n    'background-size',\n    'block-size',\n    'border',\n    'border-block-end',\n    'border-block-end-color',\n    'border-block-end-width',\n    'border-block-start',\n    'border-block-start-color',\n    'border-block-start-width',\n    'border-bottom',\n    'border-bottom-color',\n    'border-bottom-left-radius',\n    'border-bottom-right-radius',\n    'border-bottom-width',\n    'border-color',\n    'border-end-end-radius',\n    'border-end-start-radius',\n    'border-image-outset',\n    'border-image-slice',\n    'border-image-width',\n    'border-inline-end',\n    'border-inline-end-color',\n    'border-inline-end-width',\n    'border-inline-start',\n    'border-inline-start-color',\n    'border-inline-start-width',\n    'border-left',\n    'border-left-color',\n    'border-left-width',\n    'border-radius',\n    'border-right',\n    'border-right-color',\n    'border-right-width',\n    'border-start-end-radius',\n    'border-start-start-radius',\n    'border-top',\n    'border-top-color',\n    'border-top-left-radius',\n    'border-top-right-radius',\n    'border-top-width',\n    'border-width',\n    'bottom',\n    'box-shadow',\n    'caret-color',\n    'clip',\n    'clip-path',\n    'color',\n    'column-count',\n    'column-gap',\n    'column-rule',\n    'column-rule-color',\n    'column-rule-width',\n    'column-width',\n    'columns',\n    'filter',\n    'flex',\n    'flex-basis',\n    'flex-grow',\n    'flex-shrink',\n    'font',\n    'font-size',\n    'font-size-adjust',\n    'font-stretch',\n    'font-variation-settings',\n    'font-weight',\n    'gap',\n    'grid-column-gap',\n    'grid-gap',\n    'grid-row-gap',\n    'grid-template-columns',\n    'grid-template-rows',\n    'height',\n    'inline-size',\n    'input-security',\n    'inset',\n    'inset-block',\n    'inset-block-end',\n    'inset-block-start',\n    'inset-inline',\n    'inset-inline-end',\n    'inset-inline-start',\n    'left',\n    'letter-spacing',\n    'line-clamp',\n    'line-height',\n    'margin',\n    'margin-block-end',\n    'margin-block-start',\n    'margin-bottom',\n    'margin-inline-end',\n    'margin-inline-start',\n    'margin-left',\n    'margin-right',\n    'margin-top',\n    'mask',\n    'mask-border',\n    'mask-position',\n    'mask-size',\n    'max-block-size',\n    'max-height',\n    'max-inline-size',\n    'max-lines',\n    'max-width',\n    'min-block-size',\n    'min-height',\n    'min-inline-size',\n    'min-width',\n    'object-position',\n    'offset',\n    'offset-anchor',\n    'offset-distance',\n    'offset-path',\n    'offset-position',\n    'offset-rotate',\n    'opacity',\n    'order',\n    'outline',\n    'outline-color',\n    'outline-offset',\n    'outline-width',\n    'padding',\n    'padding-block-end',\n    'padding-block-start',\n    'padding-bottom',\n    'padding-inline-end',\n    'padding-inline-start',\n    'padding-left',\n    'padding-right',\n    'padding-top',\n    'perspective',\n    'perspective-origin',\n    'right',\n    'rotate',\n    'row-gap',\n    'scale',\n    'scroll-margin',\n    'scroll-margin-block',\n    'scroll-margin-block-end',\n    'scroll-margin-block-start',\n    'scroll-margin-bottom',\n    'scroll-margin-inline',\n    'scroll-margin-inline-end',\n    'scroll-margin-inline-start',\n    'scroll-margin-left',\n    'scroll-margin-right',\n    'scroll-margin-top',\n    'scroll-padding',\n    'scroll-padding-block',\n    'scroll-padding-block-end',\n    'scroll-padding-block-start',\n    'scroll-padding-bottom',\n    'scroll-padding-inline',\n    'scroll-padding-inline-end',\n    'scroll-padding-inline-start',\n    'scroll-padding-left',\n    'scroll-padding-right',\n    'scroll-padding-top',\n    'scroll-snap-coordinate',\n    'scroll-snap-destination',\n    'scrollbar-color',\n    'shape-image-threshold',\n    'shape-margin',\n    'shape-outside',\n    'tab-size',\n    'text-decoration',\n    'text-decoration-color',\n    'text-decoration-thickness',\n    'text-emphasis',\n    'text-emphasis-color',\n    'text-indent',\n    'text-shadow',\n    'text-underline-offset',\n    'top',\n    'transform',\n    'transform-origin',\n    'translate',\n    'vertical-align',\n    'visibility',\n    'width',\n    'word-spacing',\n    'z-index',\n    'zoom',\n]);\n\nfunction optimizeGroupPlayer(players) {\n    switch (players.length) {\n        case 0:\n            return new NoopAnimationPlayer();\n        case 1:\n            return players[0];\n        default:\n            return new AnimationGroupPlayer(players);\n    }\n}\nfunction normalizeKeyframes$1(normalizer, keyframes, preStyles = new Map(), postStyles = new Map()) {\n    const errors = [];\n    const normalizedKeyframes = [];\n    let previousOffset = -1;\n    let previousKeyframe = null;\n    keyframes.forEach((kf) => {\n        const offset = kf.get('offset');\n        const isSameOffset = offset == previousOffset;\n        const normalizedKeyframe = (isSameOffset && previousKeyframe) || new Map();\n        kf.forEach((val, prop) => {\n            let normalizedProp = prop;\n            let normalizedValue = val;\n            if (prop !== 'offset') {\n                normalizedProp = normalizer.normalizePropertyName(normalizedProp, errors);\n                switch (normalizedValue) {\n                    case _PRE_STYLE:\n                        normalizedValue = preStyles.get(prop);\n                        break;\n                    case AUTO_STYLE:\n                        normalizedValue = postStyles.get(prop);\n                        break;\n                    default:\n                        normalizedValue = normalizer.normalizeStyleValue(prop, normalizedProp, normalizedValue, errors);\n                        break;\n                }\n            }\n            normalizedKeyframe.set(normalizedProp, normalizedValue);\n        });\n        if (!isSameOffset) {\n            normalizedKeyframes.push(normalizedKeyframe);\n        }\n        previousKeyframe = normalizedKeyframe;\n        previousOffset = offset;\n    });\n    if (errors.length) {\n        throw animationFailed(errors);\n    }\n    return normalizedKeyframes;\n}\nfunction listenOnPlayer(player, eventName, event, callback) {\n    switch (eventName) {\n        case 'start':\n            player.onStart(() => callback(event && copyAnimationEvent(event, 'start', player)));\n            break;\n        case 'done':\n            player.onDone(() => callback(event && copyAnimationEvent(event, 'done', player)));\n            break;\n        case 'destroy':\n            player.onDestroy(() => callback(event && copyAnimationEvent(event, 'destroy', player)));\n            break;\n    }\n}\nfunction copyAnimationEvent(e, phaseName, player) {\n    const totalTime = player.totalTime;\n    const disabled = player.disabled ? true : false;\n    const event = makeAnimationEvent(e.element, e.triggerName, e.fromState, e.toState, phaseName || e.phaseName, totalTime == undefined ? e.totalTime : totalTime, disabled);\n    const data = e['_data'];\n    if (data != null) {\n        event['_data'] = data;\n    }\n    return event;\n}\nfunction makeAnimationEvent(element, triggerName, fromState, toState, phaseName = '', totalTime = 0, disabled) {\n    return { element, triggerName, fromState, toState, phaseName, totalTime, disabled: !!disabled };\n}\nfunction getOrSetDefaultValue(map, key, defaultValue) {\n    let value = map.get(key);\n    if (!value) {\n        map.set(key, (value = defaultValue));\n    }\n    return value;\n}\nfunction parseTimelineCommand(command) {\n    const separatorPos = command.indexOf(':');\n    const id = command.substring(1, separatorPos);\n    const action = command.slice(separatorPos + 1);\n    return [id, action];\n}\nconst documentElement = /* @__PURE__ */ (() => typeof document === 'undefined' ? null : document.documentElement)();\nfunction getParentElement(element) {\n    const parent = element.parentNode || element.host || null; // consider host to support shadow DOM\n    if (parent === documentElement) {\n        return null;\n    }\n    return parent;\n}\nfunction containsVendorPrefix(prop) {\n    // Webkit is the only real popular vendor prefix nowadays\n    // cc: http://shouldiprefix.com/\n    return prop.substring(1, 6) == 'ebkit'; // webkit or Webkit\n}\nlet _CACHED_BODY = null;\nlet _IS_WEBKIT = false;\nfunction validateStyleProperty(prop) {\n    if (!_CACHED_BODY) {\n        _CACHED_BODY = getBodyNode() || {};\n        _IS_WEBKIT = _CACHED_BODY.style ? 'WebkitAppearance' in _CACHED_BODY.style : false;\n    }\n    let result = true;\n    if (_CACHED_BODY.style && !containsVendorPrefix(prop)) {\n        result = prop in _CACHED_BODY.style;\n        if (!result && _IS_WEBKIT) {\n            const camelProp = 'Webkit' + prop.charAt(0).toUpperCase() + prop.slice(1);\n            result = camelProp in _CACHED_BODY.style;\n        }\n    }\n    return result;\n}\nfunction validateWebAnimatableStyleProperty(prop) {\n    return ANIMATABLE_PROP_SET.has(prop);\n}\nfunction getBodyNode() {\n    if (typeof document != 'undefined') {\n        return document.body;\n    }\n    return null;\n}\nfunction containsElement(elm1, elm2) {\n    while (elm2) {\n        if (elm2 === elm1) {\n            return true;\n        }\n        elm2 = getParentElement(elm2);\n    }\n    return false;\n}\nfunction invokeQuery(element, selector, multi) {\n    if (multi) {\n        return Array.from(element.querySelectorAll(selector));\n    }\n    const elem = element.querySelector(selector);\n    return elem ? [elem] : [];\n}\n\nconst ONE_SECOND = 1000;\nconst SUBSTITUTION_EXPR_START = '{{';\nconst SUBSTITUTION_EXPR_END = '}}';\nconst ENTER_CLASSNAME = 'ng-enter';\nconst LEAVE_CLASSNAME = 'ng-leave';\nconst NG_TRIGGER_CLASSNAME = 'ng-trigger';\nconst NG_TRIGGER_SELECTOR = '.ng-trigger';\nconst NG_ANIMATING_CLASSNAME = 'ng-animating';\nconst NG_ANIMATING_SELECTOR = '.ng-animating';\nfunction resolveTimingValue(value) {\n    if (typeof value == 'number')\n        return value;\n    const matches = value.match(/^(-?[\\.\\d]+)(m?s)/);\n    if (!matches || matches.length < 2)\n        return 0;\n    return _convertTimeValueToMS(parseFloat(matches[1]), matches[2]);\n}\nfunction _convertTimeValueToMS(value, unit) {\n    switch (unit) {\n        case 's':\n            return value * ONE_SECOND;\n        default: // ms or something else\n            return value;\n    }\n}\nfunction resolveTiming(timings, errors, allowNegativeValues) {\n    return timings.hasOwnProperty('duration')\n        ? timings\n        : parseTimeExpression(timings, errors, allowNegativeValues);\n}\nconst PARSE_TIME_EXPRESSION_REGEX = /^(-?[\\.\\d]+)(m?s)(?:\\s+(-?[\\.\\d]+)(m?s))?(?:\\s+([-a-z]+(?:\\(.+?\\))?))?$/i;\nfunction parseTimeExpression(exp, errors, allowNegativeValues) {\n    let duration;\n    let delay = 0;\n    let easing = '';\n    if (typeof exp === 'string') {\n        const matches = exp.match(PARSE_TIME_EXPRESSION_REGEX);\n        if (matches === null) {\n            errors.push(invalidTimingValue(exp));\n            return { duration: 0, delay: 0, easing: '' };\n        }\n        duration = _convertTimeValueToMS(parseFloat(matches[1]), matches[2]);\n        const delayMatch = matches[3];\n        if (delayMatch != null) {\n            delay = _convertTimeValueToMS(parseFloat(delayMatch), matches[4]);\n        }\n        const easingVal = matches[5];\n        if (easingVal) {\n            easing = easingVal;\n        }\n    }\n    else {\n        duration = exp;\n    }\n    if (!allowNegativeValues) {\n        let containsErrors = false;\n        let startIndex = errors.length;\n        if (duration < 0) {\n            errors.push(negativeStepValue());\n            containsErrors = true;\n        }\n        if (delay < 0) {\n            errors.push(negativeDelayValue());\n            containsErrors = true;\n        }\n        if (containsErrors) {\n            errors.splice(startIndex, 0, invalidTimingValue(exp));\n        }\n    }\n    return { duration, delay, easing };\n}\nfunction normalizeKeyframes(keyframes) {\n    if (!keyframes.length) {\n        return [];\n    }\n    if (keyframes[0] instanceof Map) {\n        return keyframes;\n    }\n    return keyframes.map((kf) => new Map(Object.entries(kf)));\n}\nfunction normalizeStyles(styles) {\n    return Array.isArray(styles) ? new Map(...styles) : new Map(styles);\n}\nfunction setStyles(element, styles, formerStyles) {\n    styles.forEach((val, prop) => {\n        const camelProp = dashCaseToCamelCase(prop);\n        if (formerStyles && !formerStyles.has(prop)) {\n            formerStyles.set(prop, element.style[camelProp]);\n        }\n        element.style[camelProp] = val;\n    });\n}\nfunction eraseStyles(element, styles) {\n    styles.forEach((_, prop) => {\n        const camelProp = dashCaseToCamelCase(prop);\n        element.style[camelProp] = '';\n    });\n}\nfunction normalizeAnimationEntry(steps) {\n    if (Array.isArray(steps)) {\n        if (steps.length == 1)\n            return steps[0];\n        return sequence(steps);\n    }\n    return steps;\n}\nfunction validateStyleParams(value, options, errors) {\n    const params = options.params || {};\n    const matches = extractStyleParams(value);\n    if (matches.length) {\n        matches.forEach((varName) => {\n            if (!params.hasOwnProperty(varName)) {\n                errors.push(invalidStyleParams(varName));\n            }\n        });\n    }\n}\nconst PARAM_REGEX = /* @__PURE__ */ new RegExp(`${SUBSTITUTION_EXPR_START}\\\\s*(.+?)\\\\s*${SUBSTITUTION_EXPR_END}`, 'g');\nfunction extractStyleParams(value) {\n    let params = [];\n    if (typeof value === 'string') {\n        let match;\n        while ((match = PARAM_REGEX.exec(value))) {\n            params.push(match[1]);\n        }\n        PARAM_REGEX.lastIndex = 0;\n    }\n    return params;\n}\nfunction interpolateParams(value, params, errors) {\n    const original = `${value}`;\n    const str = original.replace(PARAM_REGEX, (_, varName) => {\n        let localVal = params[varName];\n        // this means that the value was never overridden by the data passed in by the user\n        if (localVal == null) {\n            errors.push(invalidParamValue(varName));\n            localVal = '';\n        }\n        return localVal.toString();\n    });\n    // we do this to assert that numeric values stay as they are\n    return str == original ? value : str;\n}\nconst DASH_CASE_REGEXP = /-+([a-z0-9])/g;\nfunction dashCaseToCamelCase(input) {\n    return input.replace(DASH_CASE_REGEXP, (...m) => m[1].toUpperCase());\n}\nfunction camelCaseToDashCase(input) {\n    return input.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n}\nfunction allowPreviousPlayerStylesMerge(duration, delay) {\n    return duration === 0 || delay === 0;\n}\nfunction balancePreviousStylesIntoKeyframes(element, keyframes, previousStyles) {\n    if (previousStyles.size && keyframes.length) {\n        let startingKeyframe = keyframes[0];\n        let missingStyleProps = [];\n        previousStyles.forEach((val, prop) => {\n            if (!startingKeyframe.has(prop)) {\n                missingStyleProps.push(prop);\n            }\n            startingKeyframe.set(prop, val);\n        });\n        if (missingStyleProps.length) {\n            for (let i = 1; i < keyframes.length; i++) {\n                let kf = keyframes[i];\n                missingStyleProps.forEach((prop) => kf.set(prop, computeStyle(element, prop)));\n            }\n        }\n    }\n    return keyframes;\n}\nfunction visitDslNode(visitor, node, context) {\n    switch (node.type) {\n        case AnimationMetadataType.Trigger:\n            return visitor.visitTrigger(node, context);\n        case AnimationMetadataType.State:\n            return visitor.visitState(node, context);\n        case AnimationMetadataType.Transition:\n            return visitor.visitTransition(node, context);\n        case AnimationMetadataType.Sequence:\n            return visitor.visitSequence(node, context);\n        case AnimationMetadataType.Group:\n            return visitor.visitGroup(node, context);\n        case AnimationMetadataType.Animate:\n            return visitor.visitAnimate(node, context);\n        case AnimationMetadataType.Keyframes:\n            return visitor.visitKeyframes(node, context);\n        case AnimationMetadataType.Style:\n            return visitor.visitStyle(node, context);\n        case AnimationMetadataType.Reference:\n            return visitor.visitReference(node, context);\n        case AnimationMetadataType.AnimateChild:\n            return visitor.visitAnimateChild(node, context);\n        case AnimationMetadataType.AnimateRef:\n            return visitor.visitAnimateRef(node, context);\n        case AnimationMetadataType.Query:\n            return visitor.visitQuery(node, context);\n        case AnimationMetadataType.Stagger:\n            return visitor.visitStagger(node, context);\n        default:\n            throw invalidNodeType(node.type);\n    }\n}\nfunction computeStyle(element, prop) {\n    return window.getComputedStyle(element)[prop];\n}\n\nexport { ENTER_CLASSNAME, LEAVE_CLASSNAME, NG_ANIMATING_CLASSNAME, NG_ANIMATING_SELECTOR, NG_TRIGGER_CLASSNAME, NG_TRIGGER_SELECTOR, SUBSTITUTION_EXPR_START, allowPreviousPlayerStylesMerge, balancePreviousStylesIntoKeyframes, buildingFailed, camelCaseToDashCase, computeStyle, containsElement, createAnimationFailed, dashCaseToCamelCase, eraseStyles, extractStyleParams, getOrSetDefaultValue, getParentElement, interpolateParams, invalidCssUnitValue, invalidDefinition, invalidExpression, invalidKeyframes, invalidOffset, invalidParallelAnimation, invalidQuery, invalidStagger, invalidState, invalidStyleValue, invalidTransitionAlias, invalidTrigger, invokeQuery, keyframeOffsetsOutOfOrder, keyframesMissingOffsets, listenOnPlayer, makeAnimationEvent, missingEvent, missingOrDestroyedAnimation, missingPlayer, missingTrigger, normalizeAnimationEntry, normalizeKeyframes$1 as normalizeKeyframes, normalizeKeyframes as normalizeKeyframes$1, normalizeStyles, optimizeGroupPlayer, parseTimelineCommand, registerFailed, resolveTiming, resolveTimingValue, setStyles, transitionFailed, triggerBuildFailed, triggerTransitionsFailed, unregisteredTrigger, unsupportedTriggerEvent, validateStyleParams, validateStyleProperty, validateWebAnimatableStyleProperty, validationFailed, visitDslNode };\n\n","/**\n * @license Angular v20.1.7\n * (c) 2010-2025 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport * as i0 from '@angular/core';\nimport { Injectable } from '@angular/core';\nimport { validateStyleProperty, containsElement, getParentElement, invokeQuery, dashCaseToCamelCase, invalidCssUnitValue, invalidExpression, invalidTransitionAlias, visitDslNode, invalidTrigger, invalidDefinition, extractStyleParams, invalidState, invalidStyleValue, SUBSTITUTION_EXPR_START, invalidParallelAnimation, validateStyleParams, invalidKeyframes, invalidOffset, keyframeOffsetsOutOfOrder, keyframesMissingOffsets, getOrSetDefaultValue, invalidStagger, resolveTiming, NG_TRIGGER_SELECTOR, NG_ANIMATING_SELECTOR, normalizeAnimationEntry, resolveTimingValue, interpolateParams, invalidQuery, registerFailed, normalizeKeyframes, LEAVE_CLASSNAME, ENTER_CLASSNAME, missingOrDestroyedAnimation, createAnimationFailed, optimizeGroupPlayer, missingPlayer, listenOnPlayer, makeAnimationEvent, triggerTransitionsFailed, eraseStyles, setStyles, transitionFailed, missingTrigger, missingEvent, unsupportedTriggerEvent, NG_TRIGGER_CLASSNAME, unregisteredTrigger, NG_ANIMATING_CLASSNAME, triggerBuildFailed, parseTimelineCommand, computeStyle, camelCaseToDashCase, validateWebAnimatableStyleProperty, allowPreviousPlayerStylesMerge, normalizeKeyframes$1, balancePreviousStylesIntoKeyframes, validationFailed, normalizeStyles, buildingFailed } from './util.mjs';\nimport { NoopAnimationPlayer, AnimationMetadataType, style, AUTO_STYLE, ɵPRE_STYLE as _PRE_STYLE, AnimationGroupPlayer } from './private_export.mjs';\n\n/**\n * @publicApi\n *\n * `AnimationDriver` implentation for Noop animations\n */\nclass NoopAnimationDriver {\n    /**\n     * @returns Whether `prop` is a valid CSS property\n     */\n    validateStyleProperty(prop) {\n        return validateStyleProperty(prop);\n    }\n    /**\n     *\n     * @returns Whether elm1 contains elm2.\n     */\n    containsElement(elm1, elm2) {\n        return containsElement(elm1, elm2);\n    }\n    /**\n     * @returns Rhe parent of the given element or `null` if the element is the `document`\n     */\n    getParentElement(element) {\n        return getParentElement(element);\n    }\n    /**\n     * @returns The result of the query selector on the element. The array will contain up to 1 item\n     *     if `multi` is  `false`.\n     */\n    query(element, selector, multi) {\n        return invokeQuery(element, selector, multi);\n    }\n    /**\n     * @returns The `defaultValue` or empty string\n     */\n    computeStyle(element, prop, defaultValue) {\n        return defaultValue || '';\n    }\n    /**\n     * @returns An `NoopAnimationPlayer`\n     */\n    animate(element, keyframes, duration, delay, easing, previousPlayers = [], scrubberAccessRequested) {\n        return new NoopAnimationPlayer(duration, delay);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: NoopAnimationDriver, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: NoopAnimationDriver });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: NoopAnimationDriver, decorators: [{\n            type: Injectable\n        }] });\n/**\n * @publicApi\n */\nclass AnimationDriver {\n    /**\n     * @deprecated Use the NoopAnimationDriver class.\n     */\n    static NOOP = new NoopAnimationDriver();\n}\n\nclass AnimationStyleNormalizer {\n}\nclass NoopAnimationStyleNormalizer {\n    normalizePropertyName(propertyName, errors) {\n        return propertyName;\n    }\n    normalizeStyleValue(userProvidedProperty, normalizedProperty, value, errors) {\n        return value;\n    }\n}\n\nconst DIMENSIONAL_PROP_SET = new Set([\n    'width',\n    'height',\n    'minWidth',\n    'minHeight',\n    'maxWidth',\n    'maxHeight',\n    'left',\n    'top',\n    'bottom',\n    'right',\n    'fontSize',\n    'outlineWidth',\n    'outlineOffset',\n    'paddingTop',\n    'paddingLeft',\n    'paddingBottom',\n    'paddingRight',\n    'marginTop',\n    'marginLeft',\n    'marginBottom',\n    'marginRight',\n    'borderRadius',\n    'borderWidth',\n    'borderTopWidth',\n    'borderLeftWidth',\n    'borderRightWidth',\n    'borderBottomWidth',\n    'textIndent',\n    'perspective',\n]);\nclass WebAnimationsStyleNormalizer extends AnimationStyleNormalizer {\n    normalizePropertyName(propertyName, errors) {\n        return dashCaseToCamelCase(propertyName);\n    }\n    normalizeStyleValue(userProvidedProperty, normalizedProperty, value, errors) {\n        let unit = '';\n        const strVal = value.toString().trim();\n        if (DIMENSIONAL_PROP_SET.has(normalizedProperty) && value !== 0 && value !== '0') {\n            if (typeof value === 'number') {\n                unit = 'px';\n            }\n            else {\n                const valAndSuffixMatch = value.match(/^[+-]?[\\d\\.]+([a-z]*)$/);\n                if (valAndSuffixMatch && valAndSuffixMatch[1].length == 0) {\n                    errors.push(invalidCssUnitValue(userProvidedProperty, value));\n                }\n            }\n        }\n        return strVal + unit;\n    }\n}\n\nfunction createListOfWarnings(warnings) {\n    const LINE_START = '\\n - ';\n    return `${LINE_START}${warnings\n        .filter(Boolean)\n        .map((warning) => warning)\n        .join(LINE_START)}`;\n}\nfunction warnValidation(warnings) {\n    console.warn(`animation validation warnings:${createListOfWarnings(warnings)}`);\n}\nfunction warnTriggerBuild(name, warnings) {\n    console.warn(`The animation trigger \"${name}\" has built with the following warnings:${createListOfWarnings(warnings)}`);\n}\nfunction warnRegister(warnings) {\n    console.warn(`Animation built with the following warnings:${createListOfWarnings(warnings)}`);\n}\nfunction pushUnrecognizedPropertiesWarning(warnings, props) {\n    if (props.length) {\n        warnings.push(`The following provided properties are not recognized: ${props.join(', ')}`);\n    }\n}\n\nconst ANY_STATE = '*';\nfunction parseTransitionExpr(transitionValue, errors) {\n    const expressions = [];\n    if (typeof transitionValue == 'string') {\n        transitionValue\n            .split(/\\s*,\\s*/)\n            .forEach((str) => parseInnerTransitionStr(str, expressions, errors));\n    }\n    else {\n        expressions.push(transitionValue);\n    }\n    return expressions;\n}\nfunction parseInnerTransitionStr(eventStr, expressions, errors) {\n    if (eventStr[0] == ':') {\n        const result = parseAnimationAlias(eventStr, errors);\n        if (typeof result == 'function') {\n            expressions.push(result);\n            return;\n        }\n        eventStr = result;\n    }\n    const match = eventStr.match(/^(\\*|[-\\w]+)\\s*(<?[=-]>)\\s*(\\*|[-\\w]+)$/);\n    if (match == null || match.length < 4) {\n        errors.push(invalidExpression(eventStr));\n        return expressions;\n    }\n    const fromState = match[1];\n    const separator = match[2];\n    const toState = match[3];\n    expressions.push(makeLambdaFromStates(fromState, toState));\n    const isFullAnyStateExpr = fromState == ANY_STATE && toState == ANY_STATE;\n    if (separator[0] == '<' && !isFullAnyStateExpr) {\n        expressions.push(makeLambdaFromStates(toState, fromState));\n    }\n    return;\n}\nfunction parseAnimationAlias(alias, errors) {\n    switch (alias) {\n        case ':enter':\n            return 'void => *';\n        case ':leave':\n            return '* => void';\n        case ':increment':\n            return (fromState, toState) => parseFloat(toState) > parseFloat(fromState);\n        case ':decrement':\n            return (fromState, toState) => parseFloat(toState) < parseFloat(fromState);\n        default:\n            errors.push(invalidTransitionAlias(alias));\n            return '* => *';\n    }\n}\n// DO NOT REFACTOR ... keep the follow set instantiations\n// with the values intact (closure compiler for some reason\n// removes follow-up lines that add the values outside of\n// the constructor...\nconst TRUE_BOOLEAN_VALUES = new Set(['true', '1']);\nconst FALSE_BOOLEAN_VALUES = new Set(['false', '0']);\nfunction makeLambdaFromStates(lhs, rhs) {\n    const LHS_MATCH_BOOLEAN = TRUE_BOOLEAN_VALUES.has(lhs) || FALSE_BOOLEAN_VALUES.has(lhs);\n    const RHS_MATCH_BOOLEAN = TRUE_BOOLEAN_VALUES.has(rhs) || FALSE_BOOLEAN_VALUES.has(rhs);\n    return (fromState, toState) => {\n        let lhsMatch = lhs == ANY_STATE || lhs == fromState;\n        let rhsMatch = rhs == ANY_STATE || rhs == toState;\n        if (!lhsMatch && LHS_MATCH_BOOLEAN && typeof fromState === 'boolean') {\n            lhsMatch = fromState ? TRUE_BOOLEAN_VALUES.has(lhs) : FALSE_BOOLEAN_VALUES.has(lhs);\n        }\n        if (!rhsMatch && RHS_MATCH_BOOLEAN && typeof toState === 'boolean') {\n            rhsMatch = toState ? TRUE_BOOLEAN_VALUES.has(rhs) : FALSE_BOOLEAN_VALUES.has(rhs);\n        }\n        return lhsMatch && rhsMatch;\n    };\n}\n\nconst SELF_TOKEN = ':self';\nconst SELF_TOKEN_REGEX = /* @__PURE__ */ new RegExp(`s*${SELF_TOKEN}s*,?`, 'g');\n/*\n * [Validation]\n * The visitor code below will traverse the animation AST generated by the animation verb functions\n * (the output is a tree of objects) and attempt to perform a series of validations on the data. The\n * following corner-cases will be validated:\n *\n * 1. Overlap of animations\n * Given that a CSS property cannot be animated in more than one place at the same time, it's\n * important that this behavior is detected and validated. The way in which this occurs is that\n * each time a style property is examined, a string-map containing the property will be updated with\n * the start and end times for when the property is used within an animation step.\n *\n * If there are two or more parallel animations that are currently running (these are invoked by the\n * group()) on the same element then the validator will throw an error. Since the start/end timing\n * values are collected for each property then if the current animation step is animating the same\n * property and its timing values fall anywhere into the window of time that the property is\n * currently being animated within then this is what causes an error.\n *\n * 2. Timing values\n * The validator will validate to see if a timing value of `duration delay easing` or\n * `durationNumber` is valid or not.\n *\n * (note that upon validation the code below will replace the timing data with an object containing\n * {duration,delay,easing}.\n *\n * 3. Offset Validation\n * Each of the style() calls are allowed to have an offset value when placed inside of keyframes().\n * Offsets within keyframes() are considered valid when:\n *\n *   - No offsets are used at all\n *   - Each style() entry contains an offset value\n *   - Each offset is between 0 and 1\n *   - Each offset is greater to or equal than the previous one\n *\n * Otherwise an error will be thrown.\n */\nfunction buildAnimationAst(driver, metadata, errors, warnings) {\n    return new AnimationAstBuilderVisitor(driver).build(metadata, errors, warnings);\n}\nconst ROOT_SELECTOR = '';\nclass AnimationAstBuilderVisitor {\n    _driver;\n    constructor(_driver) {\n        this._driver = _driver;\n    }\n    build(metadata, errors, warnings) {\n        const context = new AnimationAstBuilderContext(errors);\n        this._resetContextStyleTimingState(context);\n        const ast = (visitDslNode(this, normalizeAnimationEntry(metadata), context));\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (context.unsupportedCSSPropertiesFound.size) {\n                pushUnrecognizedPropertiesWarning(warnings, [\n                    ...context.unsupportedCSSPropertiesFound.keys(),\n                ]);\n            }\n        }\n        return ast;\n    }\n    _resetContextStyleTimingState(context) {\n        context.currentQuerySelector = ROOT_SELECTOR;\n        context.collectedStyles = new Map();\n        context.collectedStyles.set(ROOT_SELECTOR, new Map());\n        context.currentTime = 0;\n    }\n    visitTrigger(metadata, context) {\n        let queryCount = (context.queryCount = 0);\n        let depCount = (context.depCount = 0);\n        const states = [];\n        const transitions = [];\n        if (metadata.name.charAt(0) == '@') {\n            context.errors.push(invalidTrigger());\n        }\n        metadata.definitions.forEach((def) => {\n            this._resetContextStyleTimingState(context);\n            if (def.type == AnimationMetadataType.State) {\n                const stateDef = def;\n                const name = stateDef.name;\n                name\n                    .toString()\n                    .split(/\\s*,\\s*/)\n                    .forEach((n) => {\n                    stateDef.name = n;\n                    states.push(this.visitState(stateDef, context));\n                });\n                stateDef.name = name;\n            }\n            else if (def.type == AnimationMetadataType.Transition) {\n                const transition = this.visitTransition(def, context);\n                queryCount += transition.queryCount;\n                depCount += transition.depCount;\n                transitions.push(transition);\n            }\n            else {\n                context.errors.push(invalidDefinition());\n            }\n        });\n        return {\n            type: AnimationMetadataType.Trigger,\n            name: metadata.name,\n            states,\n            transitions,\n            queryCount,\n            depCount,\n            options: null,\n        };\n    }\n    visitState(metadata, context) {\n        const styleAst = this.visitStyle(metadata.styles, context);\n        const astParams = (metadata.options && metadata.options.params) || null;\n        if (styleAst.containsDynamicStyles) {\n            const missingSubs = new Set();\n            const params = astParams || {};\n            styleAst.styles.forEach((style) => {\n                if (style instanceof Map) {\n                    style.forEach((value) => {\n                        extractStyleParams(value).forEach((sub) => {\n                            if (!params.hasOwnProperty(sub)) {\n                                missingSubs.add(sub);\n                            }\n                        });\n                    });\n                }\n            });\n            if (missingSubs.size) {\n                context.errors.push(invalidState(metadata.name, [...missingSubs.values()]));\n            }\n        }\n        return {\n            type: AnimationMetadataType.State,\n            name: metadata.name,\n            style: styleAst,\n            options: astParams ? { params: astParams } : null,\n        };\n    }\n    visitTransition(metadata, context) {\n        context.queryCount = 0;\n        context.depCount = 0;\n        const animation = visitDslNode(this, normalizeAnimationEntry(metadata.animation), context);\n        const matchers = parseTransitionExpr(metadata.expr, context.errors);\n        return {\n            type: AnimationMetadataType.Transition,\n            matchers,\n            animation,\n            queryCount: context.queryCount,\n            depCount: context.depCount,\n            options: normalizeAnimationOptions(metadata.options),\n        };\n    }\n    visitSequence(metadata, context) {\n        return {\n            type: AnimationMetadataType.Sequence,\n            steps: metadata.steps.map((s) => visitDslNode(this, s, context)),\n            options: normalizeAnimationOptions(metadata.options),\n        };\n    }\n    visitGroup(metadata, context) {\n        const currentTime = context.currentTime;\n        let furthestTime = 0;\n        const steps = metadata.steps.map((step) => {\n            context.currentTime = currentTime;\n            const innerAst = visitDslNode(this, step, context);\n            furthestTime = Math.max(furthestTime, context.currentTime);\n            return innerAst;\n        });\n        context.currentTime = furthestTime;\n        return {\n            type: AnimationMetadataType.Group,\n            steps,\n            options: normalizeAnimationOptions(metadata.options),\n        };\n    }\n    visitAnimate(metadata, context) {\n        const timingAst = constructTimingAst(metadata.timings, context.errors);\n        context.currentAnimateTimings = timingAst;\n        let styleAst;\n        let styleMetadata = metadata.styles\n            ? metadata.styles\n            : style({});\n        if (styleMetadata.type == AnimationMetadataType.Keyframes) {\n            styleAst = this.visitKeyframes(styleMetadata, context);\n        }\n        else {\n            let styleMetadata = metadata.styles;\n            let isEmpty = false;\n            if (!styleMetadata) {\n                isEmpty = true;\n                const newStyleData = {};\n                if (timingAst.easing) {\n                    newStyleData['easing'] = timingAst.easing;\n                }\n                styleMetadata = style(newStyleData);\n            }\n            context.currentTime += timingAst.duration + timingAst.delay;\n            const _styleAst = this.visitStyle(styleMetadata, context);\n            _styleAst.isEmptyStep = isEmpty;\n            styleAst = _styleAst;\n        }\n        context.currentAnimateTimings = null;\n        return {\n            type: AnimationMetadataType.Animate,\n            timings: timingAst,\n            style: styleAst,\n            options: null,\n        };\n    }\n    visitStyle(metadata, context) {\n        const ast = this._makeStyleAst(metadata, context);\n        this._validateStyleAst(ast, context);\n        return ast;\n    }\n    _makeStyleAst(metadata, context) {\n        const styles = [];\n        const metadataStyles = Array.isArray(metadata.styles) ? metadata.styles : [metadata.styles];\n        for (let styleTuple of metadataStyles) {\n            if (typeof styleTuple === 'string') {\n                if (styleTuple === AUTO_STYLE) {\n                    styles.push(styleTuple);\n                }\n                else {\n                    context.errors.push(invalidStyleValue(styleTuple));\n                }\n            }\n            else {\n                styles.push(new Map(Object.entries(styleTuple)));\n            }\n        }\n        let containsDynamicStyles = false;\n        let collectedEasing = null;\n        styles.forEach((styleData) => {\n            if (styleData instanceof Map) {\n                if (styleData.has('easing')) {\n                    collectedEasing = styleData.get('easing');\n                    styleData.delete('easing');\n                }\n                if (!containsDynamicStyles) {\n                    for (let value of styleData.values()) {\n                        if (value.toString().indexOf(SUBSTITUTION_EXPR_START) >= 0) {\n                            containsDynamicStyles = true;\n                            break;\n                        }\n                    }\n                }\n            }\n        });\n        return {\n            type: AnimationMetadataType.Style,\n            styles,\n            easing: collectedEasing,\n            offset: metadata.offset,\n            containsDynamicStyles,\n            options: null,\n        };\n    }\n    _validateStyleAst(ast, context) {\n        const timings = context.currentAnimateTimings;\n        let endTime = context.currentTime;\n        let startTime = context.currentTime;\n        if (timings && startTime > 0) {\n            startTime -= timings.duration + timings.delay;\n        }\n        ast.styles.forEach((tuple) => {\n            if (typeof tuple === 'string')\n                return;\n            tuple.forEach((value, prop) => {\n                if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                    if (!this._driver.validateStyleProperty(prop)) {\n                        tuple.delete(prop);\n                        context.unsupportedCSSPropertiesFound.add(prop);\n                        return;\n                    }\n                }\n                // This is guaranteed to have a defined Map at this querySelector location making it\n                // safe to add the assertion here. It is set as a default empty map in prior methods.\n                const collectedStyles = context.collectedStyles.get(context.currentQuerySelector);\n                const collectedEntry = collectedStyles.get(prop);\n                let updateCollectedStyle = true;\n                if (collectedEntry) {\n                    if (startTime != endTime &&\n                        startTime >= collectedEntry.startTime &&\n                        endTime <= collectedEntry.endTime) {\n                        context.errors.push(invalidParallelAnimation(prop, collectedEntry.startTime, collectedEntry.endTime, startTime, endTime));\n                        updateCollectedStyle = false;\n                    }\n                    // we always choose the smaller start time value since we\n                    // want to have a record of the entire animation window where\n                    // the style property is being animated in between\n                    startTime = collectedEntry.startTime;\n                }\n                if (updateCollectedStyle) {\n                    collectedStyles.set(prop, { startTime, endTime });\n                }\n                if (context.options) {\n                    validateStyleParams(value, context.options, context.errors);\n                }\n            });\n        });\n    }\n    visitKeyframes(metadata, context) {\n        const ast = { type: AnimationMetadataType.Keyframes, styles: [], options: null };\n        if (!context.currentAnimateTimings) {\n            context.errors.push(invalidKeyframes());\n            return ast;\n        }\n        const MAX_KEYFRAME_OFFSET = 1;\n        let totalKeyframesWithOffsets = 0;\n        const offsets = [];\n        let offsetsOutOfOrder = false;\n        let keyframesOutOfRange = false;\n        let previousOffset = 0;\n        const keyframes = metadata.steps.map((styles) => {\n            const style = this._makeStyleAst(styles, context);\n            let offsetVal = style.offset != null ? style.offset : consumeOffset(style.styles);\n            let offset = 0;\n            if (offsetVal != null) {\n                totalKeyframesWithOffsets++;\n                offset = style.offset = offsetVal;\n            }\n            keyframesOutOfRange = keyframesOutOfRange || offset < 0 || offset > 1;\n            offsetsOutOfOrder = offsetsOutOfOrder || offset < previousOffset;\n            previousOffset = offset;\n            offsets.push(offset);\n            return style;\n        });\n        if (keyframesOutOfRange) {\n            context.errors.push(invalidOffset());\n        }\n        if (offsetsOutOfOrder) {\n            context.errors.push(keyframeOffsetsOutOfOrder());\n        }\n        const length = metadata.steps.length;\n        let generatedOffset = 0;\n        if (totalKeyframesWithOffsets > 0 && totalKeyframesWithOffsets < length) {\n            context.errors.push(keyframesMissingOffsets());\n        }\n        else if (totalKeyframesWithOffsets == 0) {\n            generatedOffset = MAX_KEYFRAME_OFFSET / (length - 1);\n        }\n        const limit = length - 1;\n        const currentTime = context.currentTime;\n        const currentAnimateTimings = context.currentAnimateTimings;\n        const animateDuration = currentAnimateTimings.duration;\n        keyframes.forEach((kf, i) => {\n            const offset = generatedOffset > 0 ? (i == limit ? 1 : generatedOffset * i) : offsets[i];\n            const durationUpToThisFrame = offset * animateDuration;\n            context.currentTime = currentTime + currentAnimateTimings.delay + durationUpToThisFrame;\n            currentAnimateTimings.duration = durationUpToThisFrame;\n            this._validateStyleAst(kf, context);\n            kf.offset = offset;\n            ast.styles.push(kf);\n        });\n        return ast;\n    }\n    visitReference(metadata, context) {\n        return {\n            type: AnimationMetadataType.Reference,\n            animation: visitDslNode(this, normalizeAnimationEntry(metadata.animation), context),\n            options: normalizeAnimationOptions(metadata.options),\n        };\n    }\n    visitAnimateChild(metadata, context) {\n        context.depCount++;\n        return {\n            type: AnimationMetadataType.AnimateChild,\n            options: normalizeAnimationOptions(metadata.options),\n        };\n    }\n    visitAnimateRef(metadata, context) {\n        return {\n            type: AnimationMetadataType.AnimateRef,\n            animation: this.visitReference(metadata.animation, context),\n            options: normalizeAnimationOptions(metadata.options),\n        };\n    }\n    visitQuery(metadata, context) {\n        const parentSelector = context.currentQuerySelector;\n        const options = (metadata.options || {});\n        context.queryCount++;\n        context.currentQuery = metadata;\n        const [selector, includeSelf] = normalizeSelector(metadata.selector);\n        context.currentQuerySelector = parentSelector.length\n            ? parentSelector + ' ' + selector\n            : selector;\n        getOrSetDefaultValue(context.collectedStyles, context.currentQuerySelector, new Map());\n        const animation = visitDslNode(this, normalizeAnimationEntry(metadata.animation), context);\n        context.currentQuery = null;\n        context.currentQuerySelector = parentSelector;\n        return {\n            type: AnimationMetadataType.Query,\n            selector,\n            limit: options.limit || 0,\n            optional: !!options.optional,\n            includeSelf,\n            animation,\n            originalSelector: metadata.selector,\n            options: normalizeAnimationOptions(metadata.options),\n        };\n    }\n    visitStagger(metadata, context) {\n        if (!context.currentQuery) {\n            context.errors.push(invalidStagger());\n        }\n        const timings = metadata.timings === 'full'\n            ? { duration: 0, delay: 0, easing: 'full' }\n            : resolveTiming(metadata.timings, context.errors, true);\n        return {\n            type: AnimationMetadataType.Stagger,\n            animation: visitDslNode(this, normalizeAnimationEntry(metadata.animation), context),\n            timings,\n            options: null,\n        };\n    }\n}\nfunction normalizeSelector(selector) {\n    const hasAmpersand = selector.split(/\\s*,\\s*/).find((token) => token == SELF_TOKEN)\n        ? true\n        : false;\n    if (hasAmpersand) {\n        selector = selector.replace(SELF_TOKEN_REGEX, '');\n    }\n    // Note: the :enter and :leave aren't normalized here since those\n    // selectors are filled in at runtime during timeline building\n    selector = selector\n        .replace(/@\\*/g, NG_TRIGGER_SELECTOR)\n        .replace(/@\\w+/g, (match) => NG_TRIGGER_SELECTOR + '-' + match.slice(1))\n        .replace(/:animating/g, NG_ANIMATING_SELECTOR);\n    return [selector, hasAmpersand];\n}\nfunction normalizeParams(obj) {\n    return obj ? { ...obj } : null;\n}\nclass AnimationAstBuilderContext {\n    errors;\n    queryCount = 0;\n    depCount = 0;\n    currentTransition = null;\n    currentQuery = null;\n    currentQuerySelector = null;\n    currentAnimateTimings = null;\n    currentTime = 0;\n    collectedStyles = new Map();\n    options = null;\n    unsupportedCSSPropertiesFound = new Set();\n    constructor(errors) {\n        this.errors = errors;\n    }\n}\nfunction consumeOffset(styles) {\n    if (typeof styles == 'string')\n        return null;\n    let offset = null;\n    if (Array.isArray(styles)) {\n        styles.forEach((styleTuple) => {\n            if (styleTuple instanceof Map && styleTuple.has('offset')) {\n                const obj = styleTuple;\n                offset = parseFloat(obj.get('offset'));\n                obj.delete('offset');\n            }\n        });\n    }\n    else if (styles instanceof Map && styles.has('offset')) {\n        const obj = styles;\n        offset = parseFloat(obj.get('offset'));\n        obj.delete('offset');\n    }\n    return offset;\n}\nfunction constructTimingAst(value, errors) {\n    if (value.hasOwnProperty('duration')) {\n        return value;\n    }\n    if (typeof value == 'number') {\n        const duration = resolveTiming(value, errors).duration;\n        return makeTimingAst(duration, 0, '');\n    }\n    const strValue = value;\n    const isDynamic = strValue.split(/\\s+/).some((v) => v.charAt(0) == '{' && v.charAt(1) == '{');\n    if (isDynamic) {\n        const ast = makeTimingAst(0, 0, '');\n        ast.dynamic = true;\n        ast.strValue = strValue;\n        return ast;\n    }\n    const timings = resolveTiming(strValue, errors);\n    return makeTimingAst(timings.duration, timings.delay, timings.easing);\n}\nfunction normalizeAnimationOptions(options) {\n    if (options) {\n        options = { ...options };\n        if (options['params']) {\n            options['params'] = normalizeParams(options['params']);\n        }\n    }\n    else {\n        options = {};\n    }\n    return options;\n}\nfunction makeTimingAst(duration, delay, easing) {\n    return { duration, delay, easing };\n}\n\nfunction createTimelineInstruction(element, keyframes, preStyleProps, postStyleProps, duration, delay, easing = null, subTimeline = false) {\n    return {\n        type: 1 /* AnimationTransitionInstructionType.TimelineAnimation */,\n        element,\n        keyframes,\n        preStyleProps,\n        postStyleProps,\n        duration,\n        delay,\n        totalTime: duration + delay,\n        easing,\n        subTimeline,\n    };\n}\n\nclass ElementInstructionMap {\n    _map = new Map();\n    get(element) {\n        return this._map.get(element) || [];\n    }\n    append(element, instructions) {\n        let existingInstructions = this._map.get(element);\n        if (!existingInstructions) {\n            this._map.set(element, (existingInstructions = []));\n        }\n        existingInstructions.push(...instructions);\n    }\n    has(element) {\n        return this._map.has(element);\n    }\n    clear() {\n        this._map.clear();\n    }\n}\n\nconst ONE_FRAME_IN_MILLISECONDS = 1;\nconst ENTER_TOKEN = ':enter';\nconst ENTER_TOKEN_REGEX = /* @__PURE__ */ new RegExp(ENTER_TOKEN, 'g');\nconst LEAVE_TOKEN = ':leave';\nconst LEAVE_TOKEN_REGEX = /* @__PURE__ */ new RegExp(LEAVE_TOKEN, 'g');\n/*\n * The code within this file aims to generate web-animations-compatible keyframes from Angular's\n * animation DSL code.\n *\n * The code below will be converted from:\n *\n * ```ts\n * sequence([\n *   style({ opacity: 0 }),\n *   animate(1000, style({ opacity: 0 }))\n * ])\n * ```\n *\n * To:\n * ```ts\n * keyframes = [{ opacity: 0, offset: 0 }, { opacity: 1, offset: 1 }]\n * duration = 1000\n * delay = 0\n * easing = ''\n * ```\n *\n * For this operation to cover the combination of animation verbs (style, animate, group, etc...) a\n * combination of AST traversal and merge-sort-like algorithms are used.\n *\n * [AST Traversal]\n * Each of the animation verbs, when executed, will return an string-map object representing what\n * type of action it is (style, animate, group, etc...) and the data associated with it. This means\n * that when functional composition mix of these functions is evaluated (like in the example above)\n * then it will end up producing a tree of objects representing the animation itself.\n *\n * When this animation object tree is processed by the visitor code below it will visit each of the\n * verb statements within the visitor. And during each visit it will build the context of the\n * animation keyframes by interacting with the `TimelineBuilder`.\n *\n * [TimelineBuilder]\n * This class is responsible for tracking the styles and building a series of keyframe objects for a\n * timeline between a start and end time. The builder starts off with an initial timeline and each\n * time the AST comes across a `group()`, `keyframes()` or a combination of the two within a\n * `sequence()` then it will generate a sub timeline for each step as well as a new one after\n * they are complete.\n *\n * As the AST is traversed, the timing state on each of the timelines will be incremented. If a sub\n * timeline was created (based on one of the cases above) then the parent timeline will attempt to\n * merge the styles used within the sub timelines into itself (only with group() this will happen).\n * This happens with a merge operation (much like how the merge works in mergeSort) and it will only\n * copy the most recently used styles from the sub timelines into the parent timeline. This ensures\n * that if the styles are used later on in another phase of the animation then they will be the most\n * up-to-date values.\n *\n * [How Missing Styles Are Updated]\n * Each timeline has a `backFill` property which is responsible for filling in new styles into\n * already processed keyframes if a new style shows up later within the animation sequence.\n *\n * ```ts\n * sequence([\n *   style({ width: 0 }),\n *   animate(1000, style({ width: 100 })),\n *   animate(1000, style({ width: 200 })),\n *   animate(1000, style({ width: 300 }))\n *   animate(1000, style({ width: 400, height: 400 })) // notice how `height` doesn't exist anywhere\n * else\n * ])\n * ```\n *\n * What is happening here is that the `height` value is added later in the sequence, but is missing\n * from all previous animation steps. Therefore when a keyframe is created it would also be missing\n * from all previous keyframes up until where it is first used. For the timeline keyframe generation\n * to properly fill in the style it will place the previous value (the value from the parent\n * timeline) or a default value of `*` into the backFill map.\n *\n * When a sub-timeline is created it will have its own backFill property. This is done so that\n * styles present within the sub-timeline do not accidentally seep into the previous/future timeline\n * keyframes\n *\n * [Validation]\n * The code in this file is not responsible for validation. That functionality happens with within\n * the `AnimationValidatorVisitor` code.\n */\nfunction buildAnimationTimelines(driver, rootElement, ast, enterClassName, leaveClassName, startingStyles = new Map(), finalStyles = new Map(), options, subInstructions, errors = []) {\n    return new AnimationTimelineBuilderVisitor().buildKeyframes(driver, rootElement, ast, enterClassName, leaveClassName, startingStyles, finalStyles, options, subInstructions, errors);\n}\nclass AnimationTimelineBuilderVisitor {\n    buildKeyframes(driver, rootElement, ast, enterClassName, leaveClassName, startingStyles, finalStyles, options, subInstructions, errors = []) {\n        subInstructions = subInstructions || new ElementInstructionMap();\n        const context = new AnimationTimelineContext(driver, rootElement, subInstructions, enterClassName, leaveClassName, errors, []);\n        context.options = options;\n        const delay = options.delay ? resolveTimingValue(options.delay) : 0;\n        context.currentTimeline.delayNextStep(delay);\n        context.currentTimeline.setStyles([startingStyles], null, context.errors, options);\n        visitDslNode(this, ast, context);\n        // this checks to see if an actual animation happened\n        const timelines = context.timelines.filter((timeline) => timeline.containsAnimation());\n        // note: we just want to apply the final styles for the rootElement, so we do not\n        //       just apply the styles to the last timeline but the last timeline which\n        //       element is the root one (basically `*`-styles are replaced with the actual\n        //       state style values only for the root element)\n        if (timelines.length && finalStyles.size) {\n            let lastRootTimeline;\n            for (let i = timelines.length - 1; i >= 0; i--) {\n                const timeline = timelines[i];\n                if (timeline.element === rootElement) {\n                    lastRootTimeline = timeline;\n                    break;\n                }\n            }\n            if (lastRootTimeline && !lastRootTimeline.allowOnlyTimelineStyles()) {\n                lastRootTimeline.setStyles([finalStyles], null, context.errors, options);\n            }\n        }\n        return timelines.length\n            ? timelines.map((timeline) => timeline.buildKeyframes())\n            : [createTimelineInstruction(rootElement, [], [], [], 0, delay, '', false)];\n    }\n    visitTrigger(ast, context) {\n        // these values are not visited in this AST\n    }\n    visitState(ast, context) {\n        // these values are not visited in this AST\n    }\n    visitTransition(ast, context) {\n        // these values are not visited in this AST\n    }\n    visitAnimateChild(ast, context) {\n        const elementInstructions = context.subInstructions.get(context.element);\n        if (elementInstructions) {\n            const innerContext = context.createSubContext(ast.options);\n            const startTime = context.currentTimeline.currentTime;\n            const endTime = this._visitSubInstructions(elementInstructions, innerContext, innerContext.options);\n            if (startTime != endTime) {\n                // we do this on the upper context because we created a sub context for\n                // the sub child animations\n                context.transformIntoNewTimeline(endTime);\n            }\n        }\n        context.previousNode = ast;\n    }\n    visitAnimateRef(ast, context) {\n        const innerContext = context.createSubContext(ast.options);\n        innerContext.transformIntoNewTimeline();\n        this._applyAnimationRefDelays([ast.options, ast.animation.options], context, innerContext);\n        this.visitReference(ast.animation, innerContext);\n        context.transformIntoNewTimeline(innerContext.currentTimeline.currentTime);\n        context.previousNode = ast;\n    }\n    _applyAnimationRefDelays(animationsRefsOptions, context, innerContext) {\n        for (const animationRefOptions of animationsRefsOptions) {\n            const animationDelay = animationRefOptions?.delay;\n            if (animationDelay) {\n                const animationDelayValue = typeof animationDelay === 'number'\n                    ? animationDelay\n                    : resolveTimingValue(interpolateParams(animationDelay, animationRefOptions?.params ?? {}, context.errors));\n                innerContext.delayNextStep(animationDelayValue);\n            }\n        }\n    }\n    _visitSubInstructions(instructions, context, options) {\n        const startTime = context.currentTimeline.currentTime;\n        let furthestTime = startTime;\n        // this is a special-case for when a user wants to skip a sub\n        // animation from being fired entirely.\n        const duration = options.duration != null ? resolveTimingValue(options.duration) : null;\n        const delay = options.delay != null ? resolveTimingValue(options.delay) : null;\n        if (duration !== 0) {\n            instructions.forEach((instruction) => {\n                const instructionTimings = context.appendInstructionToTimeline(instruction, duration, delay);\n                furthestTime = Math.max(furthestTime, instructionTimings.duration + instructionTimings.delay);\n            });\n        }\n        return furthestTime;\n    }\n    visitReference(ast, context) {\n        context.updateOptions(ast.options, true);\n        visitDslNode(this, ast.animation, context);\n        context.previousNode = ast;\n    }\n    visitSequence(ast, context) {\n        const subContextCount = context.subContextCount;\n        let ctx = context;\n        const options = ast.options;\n        if (options && (options.params || options.delay)) {\n            ctx = context.createSubContext(options);\n            ctx.transformIntoNewTimeline();\n            if (options.delay != null) {\n                if (ctx.previousNode.type == AnimationMetadataType.Style) {\n                    ctx.currentTimeline.snapshotCurrentStyles();\n                    ctx.previousNode = DEFAULT_NOOP_PREVIOUS_NODE;\n                }\n                const delay = resolveTimingValue(options.delay);\n                ctx.delayNextStep(delay);\n            }\n        }\n        if (ast.steps.length) {\n            ast.steps.forEach((s) => visitDslNode(this, s, ctx));\n            // this is here just in case the inner steps only contain or end with a style() call\n            ctx.currentTimeline.applyStylesToKeyframe();\n            // this means that some animation function within the sequence\n            // ended up creating a sub timeline (which means the current\n            // timeline cannot overlap with the contents of the sequence)\n            if (ctx.subContextCount > subContextCount) {\n                ctx.transformIntoNewTimeline();\n            }\n        }\n        context.previousNode = ast;\n    }\n    visitGroup(ast, context) {\n        const innerTimelines = [];\n        let furthestTime = context.currentTimeline.currentTime;\n        const delay = ast.options && ast.options.delay ? resolveTimingValue(ast.options.delay) : 0;\n        ast.steps.forEach((s) => {\n            const innerContext = context.createSubContext(ast.options);\n            if (delay) {\n                innerContext.delayNextStep(delay);\n            }\n            visitDslNode(this, s, innerContext);\n            furthestTime = Math.max(furthestTime, innerContext.currentTimeline.currentTime);\n            innerTimelines.push(innerContext.currentTimeline);\n        });\n        // this operation is run after the AST loop because otherwise\n        // if the parent timeline's collected styles were updated then\n        // it would pass in invalid data into the new-to-be forked items\n        innerTimelines.forEach((timeline) => context.currentTimeline.mergeTimelineCollectedStyles(timeline));\n        context.transformIntoNewTimeline(furthestTime);\n        context.previousNode = ast;\n    }\n    _visitTiming(ast, context) {\n        if (ast.dynamic) {\n            const strValue = ast.strValue;\n            const timingValue = context.params\n                ? interpolateParams(strValue, context.params, context.errors)\n                : strValue;\n            return resolveTiming(timingValue, context.errors);\n        }\n        else {\n            return { duration: ast.duration, delay: ast.delay, easing: ast.easing };\n        }\n    }\n    visitAnimate(ast, context) {\n        const timings = (context.currentAnimateTimings = this._visitTiming(ast.timings, context));\n        const timeline = context.currentTimeline;\n        if (timings.delay) {\n            context.incrementTime(timings.delay);\n            timeline.snapshotCurrentStyles();\n        }\n        const style = ast.style;\n        if (style.type == AnimationMetadataType.Keyframes) {\n            this.visitKeyframes(style, context);\n        }\n        else {\n            context.incrementTime(timings.duration);\n            this.visitStyle(style, context);\n            timeline.applyStylesToKeyframe();\n        }\n        context.currentAnimateTimings = null;\n        context.previousNode = ast;\n    }\n    visitStyle(ast, context) {\n        const timeline = context.currentTimeline;\n        const timings = context.currentAnimateTimings;\n        // this is a special case for when a style() call\n        // directly follows  an animate() call (but not inside of an animate() call)\n        if (!timings && timeline.hasCurrentStyleProperties()) {\n            timeline.forwardFrame();\n        }\n        const easing = (timings && timings.easing) || ast.easing;\n        if (ast.isEmptyStep) {\n            timeline.applyEmptyStep(easing);\n        }\n        else {\n            timeline.setStyles(ast.styles, easing, context.errors, context.options);\n        }\n        context.previousNode = ast;\n    }\n    visitKeyframes(ast, context) {\n        const currentAnimateTimings = context.currentAnimateTimings;\n        const startTime = context.currentTimeline.duration;\n        const duration = currentAnimateTimings.duration;\n        const innerContext = context.createSubContext();\n        const innerTimeline = innerContext.currentTimeline;\n        innerTimeline.easing = currentAnimateTimings.easing;\n        ast.styles.forEach((step) => {\n            const offset = step.offset || 0;\n            innerTimeline.forwardTime(offset * duration);\n            innerTimeline.setStyles(step.styles, step.easing, context.errors, context.options);\n            innerTimeline.applyStylesToKeyframe();\n        });\n        // this will ensure that the parent timeline gets all the styles from\n        // the child even if the new timeline below is not used\n        context.currentTimeline.mergeTimelineCollectedStyles(innerTimeline);\n        // we do this because the window between this timeline and the sub timeline\n        // should ensure that the styles within are exactly the same as they were before\n        context.transformIntoNewTimeline(startTime + duration);\n        context.previousNode = ast;\n    }\n    visitQuery(ast, context) {\n        // in the event that the first step before this is a style step we need\n        // to ensure the styles are applied before the children are animated\n        const startTime = context.currentTimeline.currentTime;\n        const options = (ast.options || {});\n        const delay = options.delay ? resolveTimingValue(options.delay) : 0;\n        if (delay &&\n            (context.previousNode.type === AnimationMetadataType.Style ||\n                (startTime == 0 && context.currentTimeline.hasCurrentStyleProperties()))) {\n            context.currentTimeline.snapshotCurrentStyles();\n            context.previousNode = DEFAULT_NOOP_PREVIOUS_NODE;\n        }\n        let furthestTime = startTime;\n        const elms = context.invokeQuery(ast.selector, ast.originalSelector, ast.limit, ast.includeSelf, options.optional ? true : false, context.errors);\n        context.currentQueryTotal = elms.length;\n        let sameElementTimeline = null;\n        elms.forEach((element, i) => {\n            context.currentQueryIndex = i;\n            const innerContext = context.createSubContext(ast.options, element);\n            if (delay) {\n                innerContext.delayNextStep(delay);\n            }\n            if (element === context.element) {\n                sameElementTimeline = innerContext.currentTimeline;\n            }\n            visitDslNode(this, ast.animation, innerContext);\n            // this is here just incase the inner steps only contain or end\n            // with a style() call (which is here to signal that this is a preparatory\n            // call to style an element before it is animated again)\n            innerContext.currentTimeline.applyStylesToKeyframe();\n            const endTime = innerContext.currentTimeline.currentTime;\n            furthestTime = Math.max(furthestTime, endTime);\n        });\n        context.currentQueryIndex = 0;\n        context.currentQueryTotal = 0;\n        context.transformIntoNewTimeline(furthestTime);\n        if (sameElementTimeline) {\n            context.currentTimeline.mergeTimelineCollectedStyles(sameElementTimeline);\n            context.currentTimeline.snapshotCurrentStyles();\n        }\n        context.previousNode = ast;\n    }\n    visitStagger(ast, context) {\n        const parentContext = context.parentContext;\n        const tl = context.currentTimeline;\n        const timings = ast.timings;\n        const duration = Math.abs(timings.duration);\n        const maxTime = duration * (context.currentQueryTotal - 1);\n        let delay = duration * context.currentQueryIndex;\n        let staggerTransformer = timings.duration < 0 ? 'reverse' : timings.easing;\n        switch (staggerTransformer) {\n            case 'reverse':\n                delay = maxTime - delay;\n                break;\n            case 'full':\n                delay = parentContext.currentStaggerTime;\n                break;\n        }\n        const timeline = context.currentTimeline;\n        if (delay) {\n            timeline.delayNextStep(delay);\n        }\n        const startingTime = timeline.currentTime;\n        visitDslNode(this, ast.animation, context);\n        context.previousNode = ast;\n        // time = duration + delay\n        // the reason why this computation is so complex is because\n        // the inner timeline may either have a delay value or a stretched\n        // keyframe depending on if a subtimeline is not used or is used.\n        parentContext.currentStaggerTime =\n            tl.currentTime - startingTime + (tl.startTime - parentContext.currentTimeline.startTime);\n    }\n}\nconst DEFAULT_NOOP_PREVIOUS_NODE = {};\nclass AnimationTimelineContext {\n    _driver;\n    element;\n    subInstructions;\n    _enterClassName;\n    _leaveClassName;\n    errors;\n    timelines;\n    parentContext = null;\n    currentTimeline;\n    currentAnimateTimings = null;\n    previousNode = DEFAULT_NOOP_PREVIOUS_NODE;\n    subContextCount = 0;\n    options = {};\n    currentQueryIndex = 0;\n    currentQueryTotal = 0;\n    currentStaggerTime = 0;\n    constructor(_driver, element, subInstructions, _enterClassName, _leaveClassName, errors, timelines, initialTimeline) {\n        this._driver = _driver;\n        this.element = element;\n        this.subInstructions = subInstructions;\n        this._enterClassName = _enterClassName;\n        this._leaveClassName = _leaveClassName;\n        this.errors = errors;\n        this.timelines = timelines;\n        this.currentTimeline = initialTimeline || new TimelineBuilder(this._driver, element, 0);\n        timelines.push(this.currentTimeline);\n    }\n    get params() {\n        return this.options.params;\n    }\n    updateOptions(options, skipIfExists) {\n        if (!options)\n            return;\n        const newOptions = options;\n        let optionsToUpdate = this.options;\n        // NOTE: this will get patched up when other animation methods support duration overrides\n        if (newOptions.duration != null) {\n            optionsToUpdate.duration = resolveTimingValue(newOptions.duration);\n        }\n        if (newOptions.delay != null) {\n            optionsToUpdate.delay = resolveTimingValue(newOptions.delay);\n        }\n        const newParams = newOptions.params;\n        if (newParams) {\n            let paramsToUpdate = optionsToUpdate.params;\n            if (!paramsToUpdate) {\n                paramsToUpdate = this.options.params = {};\n            }\n            Object.keys(newParams).forEach((name) => {\n                if (!skipIfExists || !paramsToUpdate.hasOwnProperty(name)) {\n                    paramsToUpdate[name] = interpolateParams(newParams[name], paramsToUpdate, this.errors);\n                }\n            });\n        }\n    }\n    _copyOptions() {\n        const options = {};\n        if (this.options) {\n            const oldParams = this.options.params;\n            if (oldParams) {\n                const params = (options['params'] = {});\n                Object.keys(oldParams).forEach((name) => {\n                    params[name] = oldParams[name];\n                });\n            }\n        }\n        return options;\n    }\n    createSubContext(options = null, element, newTime) {\n        const target = element || this.element;\n        const context = new AnimationTimelineContext(this._driver, target, this.subInstructions, this._enterClassName, this._leaveClassName, this.errors, this.timelines, this.currentTimeline.fork(target, newTime || 0));\n        context.previousNode = this.previousNode;\n        context.currentAnimateTimings = this.currentAnimateTimings;\n        context.options = this._copyOptions();\n        context.updateOptions(options);\n        context.currentQueryIndex = this.currentQueryIndex;\n        context.currentQueryTotal = this.currentQueryTotal;\n        context.parentContext = this;\n        this.subContextCount++;\n        return context;\n    }\n    transformIntoNewTimeline(newTime) {\n        this.previousNode = DEFAULT_NOOP_PREVIOUS_NODE;\n        this.currentTimeline = this.currentTimeline.fork(this.element, newTime);\n        this.timelines.push(this.currentTimeline);\n        return this.currentTimeline;\n    }\n    appendInstructionToTimeline(instruction, duration, delay) {\n        const updatedTimings = {\n            duration: duration != null ? duration : instruction.duration,\n            delay: this.currentTimeline.currentTime + (delay != null ? delay : 0) + instruction.delay,\n            easing: '',\n        };\n        const builder = new SubTimelineBuilder(this._driver, instruction.element, instruction.keyframes, instruction.preStyleProps, instruction.postStyleProps, updatedTimings, instruction.stretchStartingKeyframe);\n        this.timelines.push(builder);\n        return updatedTimings;\n    }\n    incrementTime(time) {\n        this.currentTimeline.forwardTime(this.currentTimeline.duration + time);\n    }\n    delayNextStep(delay) {\n        // negative delays are not yet supported\n        if (delay > 0) {\n            this.currentTimeline.delayNextStep(delay);\n        }\n    }\n    invokeQuery(selector, originalSelector, limit, includeSelf, optional, errors) {\n        let results = [];\n        if (includeSelf) {\n            results.push(this.element);\n        }\n        if (selector.length > 0) {\n            // only if :self is used then the selector can be empty\n            selector = selector.replace(ENTER_TOKEN_REGEX, '.' + this._enterClassName);\n            selector = selector.replace(LEAVE_TOKEN_REGEX, '.' + this._leaveClassName);\n            const multi = limit != 1;\n            let elements = this._driver.query(this.element, selector, multi);\n            if (limit !== 0) {\n                elements =\n                    limit < 0\n                        ? elements.slice(elements.length + limit, elements.length)\n                        : elements.slice(0, limit);\n            }\n            results.push(...elements);\n        }\n        if (!optional && results.length == 0) {\n            errors.push(invalidQuery(originalSelector));\n        }\n        return results;\n    }\n}\nclass TimelineBuilder {\n    _driver;\n    element;\n    startTime;\n    _elementTimelineStylesLookup;\n    duration = 0;\n    easing = null;\n    _previousKeyframe = new Map();\n    _currentKeyframe = new Map();\n    _keyframes = new Map();\n    _styleSummary = new Map();\n    _localTimelineStyles = new Map();\n    _globalTimelineStyles;\n    _pendingStyles = new Map();\n    _backFill = new Map();\n    _currentEmptyStepKeyframe = null;\n    constructor(_driver, element, startTime, _elementTimelineStylesLookup) {\n        this._driver = _driver;\n        this.element = element;\n        this.startTime = startTime;\n        this._elementTimelineStylesLookup = _elementTimelineStylesLookup;\n        if (!this._elementTimelineStylesLookup) {\n            this._elementTimelineStylesLookup = new Map();\n        }\n        this._globalTimelineStyles = this._elementTimelineStylesLookup.get(element);\n        if (!this._globalTimelineStyles) {\n            this._globalTimelineStyles = this._localTimelineStyles;\n            this._elementTimelineStylesLookup.set(element, this._localTimelineStyles);\n        }\n        this._loadKeyframe();\n    }\n    containsAnimation() {\n        switch (this._keyframes.size) {\n            case 0:\n                return false;\n            case 1:\n                return this.hasCurrentStyleProperties();\n            default:\n                return true;\n        }\n    }\n    hasCurrentStyleProperties() {\n        return this._currentKeyframe.size > 0;\n    }\n    get currentTime() {\n        return this.startTime + this.duration;\n    }\n    delayNextStep(delay) {\n        // in the event that a style() step is placed right before a stagger()\n        // and that style() step is the very first style() value in the animation\n        // then we need to make a copy of the keyframe [0, copy, 1] so that the delay\n        // properly applies the style() values to work with the stagger...\n        const hasPreStyleStep = this._keyframes.size === 1 && this._pendingStyles.size;\n        if (this.duration || hasPreStyleStep) {\n            this.forwardTime(this.currentTime + delay);\n            if (hasPreStyleStep) {\n                this.snapshotCurrentStyles();\n            }\n        }\n        else {\n            this.startTime += delay;\n        }\n    }\n    fork(element, currentTime) {\n        this.applyStylesToKeyframe();\n        return new TimelineBuilder(this._driver, element, currentTime || this.currentTime, this._elementTimelineStylesLookup);\n    }\n    _loadKeyframe() {\n        if (this._currentKeyframe) {\n            this._previousKeyframe = this._currentKeyframe;\n        }\n        this._currentKeyframe = this._keyframes.get(this.duration);\n        if (!this._currentKeyframe) {\n            this._currentKeyframe = new Map();\n            this._keyframes.set(this.duration, this._currentKeyframe);\n        }\n    }\n    forwardFrame() {\n        this.duration += ONE_FRAME_IN_MILLISECONDS;\n        this._loadKeyframe();\n    }\n    forwardTime(time) {\n        this.applyStylesToKeyframe();\n        this.duration = time;\n        this._loadKeyframe();\n    }\n    _updateStyle(prop, value) {\n        this._localTimelineStyles.set(prop, value);\n        this._globalTimelineStyles.set(prop, value);\n        this._styleSummary.set(prop, { time: this.currentTime, value });\n    }\n    allowOnlyTimelineStyles() {\n        return this._currentEmptyStepKeyframe !== this._currentKeyframe;\n    }\n    applyEmptyStep(easing) {\n        if (easing) {\n            this._previousKeyframe.set('easing', easing);\n        }\n        // special case for animate(duration):\n        // all missing styles are filled with a `*` value then\n        // if any destination styles are filled in later on the same\n        // keyframe then they will override the overridden styles\n        // We use `_globalTimelineStyles` here because there may be\n        // styles in previous keyframes that are not present in this timeline\n        for (let [prop, value] of this._globalTimelineStyles) {\n            this._backFill.set(prop, value || AUTO_STYLE);\n            this._currentKeyframe.set(prop, AUTO_STYLE);\n        }\n        this._currentEmptyStepKeyframe = this._currentKeyframe;\n    }\n    setStyles(input, easing, errors, options) {\n        if (easing) {\n            this._previousKeyframe.set('easing', easing);\n        }\n        const params = (options && options.params) || {};\n        const styles = flattenStyles(input, this._globalTimelineStyles);\n        for (let [prop, value] of styles) {\n            const val = interpolateParams(value, params, errors);\n            this._pendingStyles.set(prop, val);\n            if (!this._localTimelineStyles.has(prop)) {\n                this._backFill.set(prop, this._globalTimelineStyles.get(prop) ?? AUTO_STYLE);\n            }\n            this._updateStyle(prop, val);\n        }\n    }\n    applyStylesToKeyframe() {\n        if (this._pendingStyles.size == 0)\n            return;\n        this._pendingStyles.forEach((val, prop) => {\n            this._currentKeyframe.set(prop, val);\n        });\n        this._pendingStyles.clear();\n        this._localTimelineStyles.forEach((val, prop) => {\n            if (!this._currentKeyframe.has(prop)) {\n                this._currentKeyframe.set(prop, val);\n            }\n        });\n    }\n    snapshotCurrentStyles() {\n        for (let [prop, val] of this._localTimelineStyles) {\n            this._pendingStyles.set(prop, val);\n            this._updateStyle(prop, val);\n        }\n    }\n    getFinalKeyframe() {\n        return this._keyframes.get(this.duration);\n    }\n    get properties() {\n        const properties = [];\n        for (let prop in this._currentKeyframe) {\n            properties.push(prop);\n        }\n        return properties;\n    }\n    mergeTimelineCollectedStyles(timeline) {\n        timeline._styleSummary.forEach((details1, prop) => {\n            const details0 = this._styleSummary.get(prop);\n            if (!details0 || details1.time > details0.time) {\n                this._updateStyle(prop, details1.value);\n            }\n        });\n    }\n    buildKeyframes() {\n        this.applyStylesToKeyframe();\n        const preStyleProps = new Set();\n        const postStyleProps = new Set();\n        const isEmpty = this._keyframes.size === 1 && this.duration === 0;\n        let finalKeyframes = [];\n        this._keyframes.forEach((keyframe, time) => {\n            const finalKeyframe = new Map([...this._backFill, ...keyframe]);\n            finalKeyframe.forEach((value, prop) => {\n                if (value === _PRE_STYLE) {\n                    preStyleProps.add(prop);\n                }\n                else if (value === AUTO_STYLE) {\n                    postStyleProps.add(prop);\n                }\n            });\n            if (!isEmpty) {\n                finalKeyframe.set('offset', time / this.duration);\n            }\n            finalKeyframes.push(finalKeyframe);\n        });\n        const preProps = [...preStyleProps.values()];\n        const postProps = [...postStyleProps.values()];\n        // special case for a 0-second animation (which is designed just to place styles onscreen)\n        if (isEmpty) {\n            const kf0 = finalKeyframes[0];\n            const kf1 = new Map(kf0);\n            kf0.set('offset', 0);\n            kf1.set('offset', 1);\n            finalKeyframes = [kf0, kf1];\n        }\n        return createTimelineInstruction(this.element, finalKeyframes, preProps, postProps, this.duration, this.startTime, this.easing, false);\n    }\n}\nclass SubTimelineBuilder extends TimelineBuilder {\n    keyframes;\n    preStyleProps;\n    postStyleProps;\n    _stretchStartingKeyframe;\n    timings;\n    constructor(driver, element, keyframes, preStyleProps, postStyleProps, timings, _stretchStartingKeyframe = false) {\n        super(driver, element, timings.delay);\n        this.keyframes = keyframes;\n        this.preStyleProps = preStyleProps;\n        this.postStyleProps = postStyleProps;\n        this._stretchStartingKeyframe = _stretchStartingKeyframe;\n        this.timings = { duration: timings.duration, delay: timings.delay, easing: timings.easing };\n    }\n    containsAnimation() {\n        return this.keyframes.length > 1;\n    }\n    buildKeyframes() {\n        let keyframes = this.keyframes;\n        let { delay, duration, easing } = this.timings;\n        if (this._stretchStartingKeyframe && delay) {\n            const newKeyframes = [];\n            const totalTime = duration + delay;\n            const startingGap = delay / totalTime;\n            // the original starting keyframe now starts once the delay is done\n            const newFirstKeyframe = new Map(keyframes[0]);\n            newFirstKeyframe.set('offset', 0);\n            newKeyframes.push(newFirstKeyframe);\n            const oldFirstKeyframe = new Map(keyframes[0]);\n            oldFirstKeyframe.set('offset', roundOffset(startingGap));\n            newKeyframes.push(oldFirstKeyframe);\n            /*\n              When the keyframe is stretched then it means that the delay before the animation\n              starts is gone. Instead the first keyframe is placed at the start of the animation\n              and it is then copied to where it starts when the original delay is over. This basically\n              means nothing animates during that delay, but the styles are still rendered. For this\n              to work the original offset values that exist in the original keyframes must be \"warped\"\n              so that they can take the new keyframe + delay into account.\n      \n              delay=1000, duration=1000, keyframes = 0 .5 1\n      \n              turns into\n      \n              delay=0, duration=2000, keyframes = 0 .33 .66 1\n             */\n            // offsets between 1 ... n -1 are all warped by the keyframe stretch\n            const limit = keyframes.length - 1;\n            for (let i = 1; i <= limit; i++) {\n                let kf = new Map(keyframes[i]);\n                const oldOffset = kf.get('offset');\n                const timeAtKeyframe = delay + oldOffset * duration;\n                kf.set('offset', roundOffset(timeAtKeyframe / totalTime));\n                newKeyframes.push(kf);\n            }\n            // the new starting keyframe should be added at the start\n            duration = totalTime;\n            delay = 0;\n            easing = '';\n            keyframes = newKeyframes;\n        }\n        return createTimelineInstruction(this.element, keyframes, this.preStyleProps, this.postStyleProps, duration, delay, easing, true);\n    }\n}\nfunction roundOffset(offset, decimalPoints = 3) {\n    const mult = Math.pow(10, decimalPoints - 1);\n    return Math.round(offset * mult) / mult;\n}\nfunction flattenStyles(input, allStyles) {\n    const styles = new Map();\n    let allProperties;\n    input.forEach((token) => {\n        if (token === '*') {\n            allProperties ??= allStyles.keys();\n            for (let prop of allProperties) {\n                styles.set(prop, AUTO_STYLE);\n            }\n        }\n        else {\n            for (let [prop, val] of token) {\n                styles.set(prop, val);\n            }\n        }\n    });\n    return styles;\n}\n\nfunction createTransitionInstruction(element, triggerName, fromState, toState, isRemovalTransition, fromStyles, toStyles, timelines, queriedElements, preStyleProps, postStyleProps, totalTime, errors) {\n    return {\n        type: 0 /* AnimationTransitionInstructionType.TransitionAnimation */,\n        element,\n        triggerName,\n        isRemovalTransition,\n        fromState,\n        fromStyles,\n        toState,\n        toStyles,\n        timelines,\n        queriedElements,\n        preStyleProps,\n        postStyleProps,\n        totalTime,\n        errors,\n    };\n}\n\nconst EMPTY_OBJECT = {};\nclass AnimationTransitionFactory {\n    _triggerName;\n    ast;\n    _stateStyles;\n    constructor(_triggerName, ast, _stateStyles) {\n        this._triggerName = _triggerName;\n        this.ast = ast;\n        this._stateStyles = _stateStyles;\n    }\n    match(currentState, nextState, element, params) {\n        return oneOrMoreTransitionsMatch(this.ast.matchers, currentState, nextState, element, params);\n    }\n    buildStyles(stateName, params, errors) {\n        let styler = this._stateStyles.get('*');\n        if (stateName !== undefined) {\n            styler = this._stateStyles.get(stateName?.toString()) || styler;\n        }\n        return styler ? styler.buildStyles(params, errors) : new Map();\n    }\n    build(driver, element, currentState, nextState, enterClassName, leaveClassName, currentOptions, nextOptions, subInstructions, skipAstBuild) {\n        const errors = [];\n        const transitionAnimationParams = (this.ast.options && this.ast.options.params) || EMPTY_OBJECT;\n        const currentAnimationParams = (currentOptions && currentOptions.params) || EMPTY_OBJECT;\n        const currentStateStyles = this.buildStyles(currentState, currentAnimationParams, errors);\n        const nextAnimationParams = (nextOptions && nextOptions.params) || EMPTY_OBJECT;\n        const nextStateStyles = this.buildStyles(nextState, nextAnimationParams, errors);\n        const queriedElements = new Set();\n        const preStyleMap = new Map();\n        const postStyleMap = new Map();\n        const isRemoval = nextState === 'void';\n        const animationOptions = {\n            params: applyParamDefaults(nextAnimationParams, transitionAnimationParams),\n            delay: this.ast.options?.delay,\n        };\n        const timelines = skipAstBuild\n            ? []\n            : buildAnimationTimelines(driver, element, this.ast.animation, enterClassName, leaveClassName, currentStateStyles, nextStateStyles, animationOptions, subInstructions, errors);\n        let totalTime = 0;\n        timelines.forEach((tl) => {\n            totalTime = Math.max(tl.duration + tl.delay, totalTime);\n        });\n        if (errors.length) {\n            return createTransitionInstruction(element, this._triggerName, currentState, nextState, isRemoval, currentStateStyles, nextStateStyles, [], [], preStyleMap, postStyleMap, totalTime, errors);\n        }\n        timelines.forEach((tl) => {\n            const elm = tl.element;\n            const preProps = getOrSetDefaultValue(preStyleMap, elm, new Set());\n            tl.preStyleProps.forEach((prop) => preProps.add(prop));\n            const postProps = getOrSetDefaultValue(postStyleMap, elm, new Set());\n            tl.postStyleProps.forEach((prop) => postProps.add(prop));\n            if (elm !== element) {\n                queriedElements.add(elm);\n            }\n        });\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            checkNonAnimatableInTimelines(timelines, this._triggerName, driver);\n        }\n        return createTransitionInstruction(element, this._triggerName, currentState, nextState, isRemoval, currentStateStyles, nextStateStyles, timelines, [...queriedElements.values()], preStyleMap, postStyleMap, totalTime);\n    }\n}\n/**\n * Checks inside a set of timelines if they try to animate a css property which is not considered\n * animatable, in that case it prints a warning on the console.\n * Besides that the function doesn't have any other effect.\n *\n * Note: this check is done here after the timelines are built instead of doing on a lower level so\n * that we can make sure that the warning appears only once per instruction (we can aggregate here\n * all the issues instead of finding them separately).\n *\n * @param timelines The built timelines for the current instruction.\n * @param triggerName The name of the trigger for the current instruction.\n * @param driver Animation driver used to perform the check.\n *\n */\nfunction checkNonAnimatableInTimelines(timelines, triggerName, driver) {\n    if (!driver.validateAnimatableStyleProperty) {\n        return;\n    }\n    const allowedNonAnimatableProps = new Set([\n        // 'easing' is a utility/synthetic prop we use to represent\n        // easing functions, it represents a property of the animation\n        // which is not animatable but different values can be used\n        // in different steps\n        'easing',\n    ]);\n    const invalidNonAnimatableProps = new Set();\n    timelines.forEach(({ keyframes }) => {\n        const nonAnimatablePropsInitialValues = new Map();\n        keyframes.forEach((keyframe) => {\n            const entriesToCheck = Array.from(keyframe.entries()).filter(([prop]) => !allowedNonAnimatableProps.has(prop));\n            for (const [prop, value] of entriesToCheck) {\n                if (!driver.validateAnimatableStyleProperty(prop)) {\n                    if (nonAnimatablePropsInitialValues.has(prop) && !invalidNonAnimatableProps.has(prop)) {\n                        const propInitialValue = nonAnimatablePropsInitialValues.get(prop);\n                        if (propInitialValue !== value) {\n                            invalidNonAnimatableProps.add(prop);\n                        }\n                    }\n                    else {\n                        nonAnimatablePropsInitialValues.set(prop, value);\n                    }\n                }\n            }\n        });\n    });\n    if (invalidNonAnimatableProps.size > 0) {\n        console.warn(`Warning: The animation trigger \"${triggerName}\" is attempting to animate the following` +\n            ' not animatable properties: ' +\n            Array.from(invalidNonAnimatableProps).join(', ') +\n            '\\n' +\n            '(to check the list of all animatable properties visit https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_animated_properties)');\n    }\n}\nfunction oneOrMoreTransitionsMatch(matchFns, currentState, nextState, element, params) {\n    return matchFns.some((fn) => fn(currentState, nextState, element, params));\n}\nfunction applyParamDefaults(userParams, defaults) {\n    const result = { ...defaults };\n    Object.entries(userParams).forEach(([key, value]) => {\n        if (value != null) {\n            result[key] = value;\n        }\n    });\n    return result;\n}\nclass AnimationStateStyles {\n    styles;\n    defaultParams;\n    normalizer;\n    constructor(styles, defaultParams, normalizer) {\n        this.styles = styles;\n        this.defaultParams = defaultParams;\n        this.normalizer = normalizer;\n    }\n    buildStyles(params, errors) {\n        const finalStyles = new Map();\n        const combinedParams = applyParamDefaults(params, this.defaultParams);\n        this.styles.styles.forEach((value) => {\n            if (typeof value !== 'string') {\n                value.forEach((val, prop) => {\n                    if (val) {\n                        val = interpolateParams(val, combinedParams, errors);\n                    }\n                    const normalizedProp = this.normalizer.normalizePropertyName(prop, errors);\n                    val = this.normalizer.normalizeStyleValue(prop, normalizedProp, val, errors);\n                    finalStyles.set(prop, val);\n                });\n            }\n        });\n        return finalStyles;\n    }\n}\n\nfunction buildTrigger(name, ast, normalizer) {\n    return new AnimationTrigger(name, ast, normalizer);\n}\nclass AnimationTrigger {\n    name;\n    ast;\n    _normalizer;\n    transitionFactories = [];\n    fallbackTransition;\n    states = new Map();\n    constructor(name, ast, _normalizer) {\n        this.name = name;\n        this.ast = ast;\n        this._normalizer = _normalizer;\n        ast.states.forEach((ast) => {\n            const defaultParams = (ast.options && ast.options.params) || {};\n            this.states.set(ast.name, new AnimationStateStyles(ast.style, defaultParams, _normalizer));\n        });\n        balanceProperties(this.states, 'true', '1');\n        balanceProperties(this.states, 'false', '0');\n        ast.transitions.forEach((ast) => {\n            this.transitionFactories.push(new AnimationTransitionFactory(name, ast, this.states));\n        });\n        this.fallbackTransition = createFallbackTransition(name, this.states);\n    }\n    get containsQueries() {\n        return this.ast.queryCount > 0;\n    }\n    matchTransition(currentState, nextState, element, params) {\n        const entry = this.transitionFactories.find((f) => f.match(currentState, nextState, element, params));\n        return entry || null;\n    }\n    matchStyles(currentState, params, errors) {\n        return this.fallbackTransition.buildStyles(currentState, params, errors);\n    }\n}\nfunction createFallbackTransition(triggerName, states, normalizer) {\n    const matchers = [(fromState, toState) => true];\n    const animation = { type: AnimationMetadataType.Sequence, steps: [], options: null };\n    const transition = {\n        type: AnimationMetadataType.Transition,\n        animation,\n        matchers,\n        options: null,\n        queryCount: 0,\n        depCount: 0,\n    };\n    return new AnimationTransitionFactory(triggerName, transition, states);\n}\nfunction balanceProperties(stateMap, key1, key2) {\n    if (stateMap.has(key1)) {\n        if (!stateMap.has(key2)) {\n            stateMap.set(key2, stateMap.get(key1));\n        }\n    }\n    else if (stateMap.has(key2)) {\n        stateMap.set(key1, stateMap.get(key2));\n    }\n}\n\nconst EMPTY_INSTRUCTION_MAP = /* @__PURE__ */ new ElementInstructionMap();\nclass TimelineAnimationEngine {\n    bodyNode;\n    _driver;\n    _normalizer;\n    _animations = new Map();\n    _playersById = new Map();\n    players = [];\n    constructor(bodyNode, _driver, _normalizer) {\n        this.bodyNode = bodyNode;\n        this._driver = _driver;\n        this._normalizer = _normalizer;\n    }\n    register(id, metadata) {\n        const errors = [];\n        const warnings = [];\n        const ast = buildAnimationAst(this._driver, metadata, errors, warnings);\n        if (errors.length) {\n            throw registerFailed(errors);\n        }\n        else {\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                if (warnings.length) {\n                    warnRegister(warnings);\n                }\n            }\n            this._animations.set(id, ast);\n        }\n    }\n    _buildPlayer(i, preStyles, postStyles) {\n        const element = i.element;\n        const keyframes = normalizeKeyframes(this._normalizer, i.keyframes, preStyles, postStyles);\n        return this._driver.animate(element, keyframes, i.duration, i.delay, i.easing, [], true);\n    }\n    create(id, element, options = {}) {\n        const errors = [];\n        const ast = this._animations.get(id);\n        let instructions;\n        const autoStylesMap = new Map();\n        if (ast) {\n            instructions = buildAnimationTimelines(this._driver, element, ast, ENTER_CLASSNAME, LEAVE_CLASSNAME, new Map(), new Map(), options, EMPTY_INSTRUCTION_MAP, errors);\n            instructions.forEach((inst) => {\n                const styles = getOrSetDefaultValue(autoStylesMap, inst.element, new Map());\n                inst.postStyleProps.forEach((prop) => styles.set(prop, null));\n            });\n        }\n        else {\n            errors.push(missingOrDestroyedAnimation());\n            instructions = [];\n        }\n        if (errors.length) {\n            throw createAnimationFailed(errors);\n        }\n        autoStylesMap.forEach((styles, element) => {\n            styles.forEach((_, prop) => {\n                styles.set(prop, this._driver.computeStyle(element, prop, AUTO_STYLE));\n            });\n        });\n        const players = instructions.map((i) => {\n            const styles = autoStylesMap.get(i.element);\n            return this._buildPlayer(i, new Map(), styles);\n        });\n        const player = optimizeGroupPlayer(players);\n        this._playersById.set(id, player);\n        player.onDestroy(() => this.destroy(id));\n        this.players.push(player);\n        return player;\n    }\n    destroy(id) {\n        const player = this._getPlayer(id);\n        player.destroy();\n        this._playersById.delete(id);\n        const index = this.players.indexOf(player);\n        if (index >= 0) {\n            this.players.splice(index, 1);\n        }\n    }\n    _getPlayer(id) {\n        const player = this._playersById.get(id);\n        if (!player) {\n            throw missingPlayer(id);\n        }\n        return player;\n    }\n    listen(id, element, eventName, callback) {\n        // triggerName, fromState, toState are all ignored for timeline animations\n        const baseEvent = makeAnimationEvent(element, '', '', '');\n        listenOnPlayer(this._getPlayer(id), eventName, baseEvent, callback);\n        return () => { };\n    }\n    command(id, element, command, args) {\n        if (command == 'register') {\n            this.register(id, args[0]);\n            return;\n        }\n        if (command == 'create') {\n            const options = (args[0] || {});\n            this.create(id, element, options);\n            return;\n        }\n        const player = this._getPlayer(id);\n        switch (command) {\n            case 'play':\n                player.play();\n                break;\n            case 'pause':\n                player.pause();\n                break;\n            case 'reset':\n                player.reset();\n                break;\n            case 'restart':\n                player.restart();\n                break;\n            case 'finish':\n                player.finish();\n                break;\n            case 'init':\n                player.init();\n                break;\n            case 'setPosition':\n                player.setPosition(parseFloat(args[0]));\n                break;\n            case 'destroy':\n                this.destroy(id);\n                break;\n        }\n    }\n}\n\nconst QUEUED_CLASSNAME = 'ng-animate-queued';\nconst QUEUED_SELECTOR = '.ng-animate-queued';\nconst DISABLED_CLASSNAME = 'ng-animate-disabled';\nconst DISABLED_SELECTOR = '.ng-animate-disabled';\nconst STAR_CLASSNAME = 'ng-star-inserted';\nconst STAR_SELECTOR = '.ng-star-inserted';\nconst EMPTY_PLAYER_ARRAY = [];\nconst NULL_REMOVAL_STATE = {\n    namespaceId: '',\n    setForRemoval: false,\n    setForMove: false,\n    hasAnimation: false,\n    removedBeforeQueried: false,\n};\nconst NULL_REMOVED_QUERIED_STATE = {\n    namespaceId: '',\n    setForMove: false,\n    setForRemoval: false,\n    hasAnimation: false,\n    removedBeforeQueried: true,\n};\nconst REMOVAL_FLAG = '__ng_removed';\nclass StateValue {\n    namespaceId;\n    value;\n    options;\n    get params() {\n        return this.options.params;\n    }\n    constructor(input, namespaceId = '') {\n        this.namespaceId = namespaceId;\n        const isObj = input && input.hasOwnProperty('value');\n        const value = isObj ? input['value'] : input;\n        this.value = normalizeTriggerValue(value);\n        if (isObj) {\n            // we drop the value property from options.\n            const { value, ...options } = input;\n            this.options = options;\n        }\n        else {\n            this.options = {};\n        }\n        if (!this.options.params) {\n            this.options.params = {};\n        }\n    }\n    absorbOptions(options) {\n        const newParams = options.params;\n        if (newParams) {\n            const oldParams = this.options.params;\n            Object.keys(newParams).forEach((prop) => {\n                if (oldParams[prop] == null) {\n                    oldParams[prop] = newParams[prop];\n                }\n            });\n        }\n    }\n}\nconst VOID_VALUE = 'void';\nconst DEFAULT_STATE_VALUE = /* @__PURE__ */ new StateValue(VOID_VALUE);\nclass AnimationTransitionNamespace {\n    id;\n    hostElement;\n    _engine;\n    players = [];\n    _triggers = new Map();\n    _queue = [];\n    _elementListeners = new Map();\n    _hostClassName;\n    constructor(id, hostElement, _engine) {\n        this.id = id;\n        this.hostElement = hostElement;\n        this._engine = _engine;\n        this._hostClassName = 'ng-tns-' + id;\n        addClass(hostElement, this._hostClassName);\n    }\n    listen(element, name, phase, callback) {\n        if (!this._triggers.has(name)) {\n            throw missingTrigger(phase, name);\n        }\n        if (phase == null || phase.length == 0) {\n            throw missingEvent(name);\n        }\n        if (!isTriggerEventValid(phase)) {\n            throw unsupportedTriggerEvent(phase, name);\n        }\n        const listeners = getOrSetDefaultValue(this._elementListeners, element, []);\n        const data = { name, phase, callback };\n        listeners.push(data);\n        const triggersWithStates = getOrSetDefaultValue(this._engine.statesByElement, element, new Map());\n        if (!triggersWithStates.has(name)) {\n            addClass(element, NG_TRIGGER_CLASSNAME);\n            addClass(element, NG_TRIGGER_CLASSNAME + '-' + name);\n            triggersWithStates.set(name, DEFAULT_STATE_VALUE);\n        }\n        return () => {\n            // the event listener is removed AFTER the flush has occurred such\n            // that leave animations callbacks can fire (otherwise if the node\n            // is removed in between then the listeners would be deregistered)\n            this._engine.afterFlush(() => {\n                const index = listeners.indexOf(data);\n                if (index >= 0) {\n                    listeners.splice(index, 1);\n                }\n                if (!this._triggers.has(name)) {\n                    triggersWithStates.delete(name);\n                }\n            });\n        };\n    }\n    register(name, ast) {\n        if (this._triggers.has(name)) {\n            // throw\n            return false;\n        }\n        else {\n            this._triggers.set(name, ast);\n            return true;\n        }\n    }\n    _getTrigger(name) {\n        const trigger = this._triggers.get(name);\n        if (!trigger) {\n            throw unregisteredTrigger(name);\n        }\n        return trigger;\n    }\n    trigger(element, triggerName, value, defaultToFallback = true) {\n        const trigger = this._getTrigger(triggerName);\n        const player = new TransitionAnimationPlayer(this.id, triggerName, element);\n        let triggersWithStates = this._engine.statesByElement.get(element);\n        if (!triggersWithStates) {\n            addClass(element, NG_TRIGGER_CLASSNAME);\n            addClass(element, NG_TRIGGER_CLASSNAME + '-' + triggerName);\n            this._engine.statesByElement.set(element, (triggersWithStates = new Map()));\n        }\n        let fromState = triggersWithStates.get(triggerName);\n        const toState = new StateValue(value, this.id);\n        const isObj = value && value.hasOwnProperty('value');\n        if (!isObj && fromState) {\n            toState.absorbOptions(fromState.options);\n        }\n        triggersWithStates.set(triggerName, toState);\n        if (!fromState) {\n            fromState = DEFAULT_STATE_VALUE;\n        }\n        const isRemoval = toState.value === VOID_VALUE;\n        // normally this isn't reached by here, however, if an object expression\n        // is passed in then it may be a new object each time. Comparing the value\n        // is important since that will stay the same despite there being a new object.\n        // The removal arc here is special cased because the same element is triggered\n        // twice in the event that it contains animations on the outer/inner portions\n        // of the host container\n        if (!isRemoval && fromState.value === toState.value) {\n            // this means that despite the value not changing, some inner params\n            // have changed which means that the animation final styles need to be applied\n            if (!objEquals(fromState.params, toState.params)) {\n                const errors = [];\n                const fromStyles = trigger.matchStyles(fromState.value, fromState.params, errors);\n                const toStyles = trigger.matchStyles(toState.value, toState.params, errors);\n                if (errors.length) {\n                    this._engine.reportError(errors);\n                }\n                else {\n                    this._engine.afterFlush(() => {\n                        eraseStyles(element, fromStyles);\n                        setStyles(element, toStyles);\n                    });\n                }\n            }\n            return;\n        }\n        const playersOnElement = getOrSetDefaultValue(this._engine.playersByElement, element, []);\n        playersOnElement.forEach((player) => {\n            // only remove the player if it is queued on the EXACT same trigger/namespace\n            // we only also deal with queued players here because if the animation has\n            // started then we want to keep the player alive until the flush happens\n            // (which is where the previousPlayers are passed into the new player)\n            if (player.namespaceId == this.id && player.triggerName == triggerName && player.queued) {\n                player.destroy();\n            }\n        });\n        let transition = trigger.matchTransition(fromState.value, toState.value, element, toState.params);\n        let isFallbackTransition = false;\n        if (!transition) {\n            if (!defaultToFallback)\n                return;\n            transition = trigger.fallbackTransition;\n            isFallbackTransition = true;\n        }\n        this._engine.totalQueuedPlayers++;\n        this._queue.push({\n            element,\n            triggerName,\n            transition,\n            fromState,\n            toState,\n            player,\n            isFallbackTransition,\n        });\n        if (!isFallbackTransition) {\n            addClass(element, QUEUED_CLASSNAME);\n            player.onStart(() => {\n                removeClass(element, QUEUED_CLASSNAME);\n            });\n        }\n        player.onDone(() => {\n            let index = this.players.indexOf(player);\n            if (index >= 0) {\n                this.players.splice(index, 1);\n            }\n            const players = this._engine.playersByElement.get(element);\n            if (players) {\n                let index = players.indexOf(player);\n                if (index >= 0) {\n                    players.splice(index, 1);\n                }\n            }\n        });\n        this.players.push(player);\n        playersOnElement.push(player);\n        return player;\n    }\n    deregister(name) {\n        this._triggers.delete(name);\n        this._engine.statesByElement.forEach((stateMap) => stateMap.delete(name));\n        this._elementListeners.forEach((listeners, element) => {\n            this._elementListeners.set(element, listeners.filter((entry) => {\n                return entry.name != name;\n            }));\n        });\n    }\n    clearElementCache(element) {\n        this._engine.statesByElement.delete(element);\n        this._elementListeners.delete(element);\n        const elementPlayers = this._engine.playersByElement.get(element);\n        if (elementPlayers) {\n            elementPlayers.forEach((player) => player.destroy());\n            this._engine.playersByElement.delete(element);\n        }\n    }\n    _signalRemovalForInnerTriggers(rootElement, context) {\n        const elements = this._engine.driver.query(rootElement, NG_TRIGGER_SELECTOR, true);\n        // emulate a leave animation for all inner nodes within this node.\n        // If there are no animations found for any of the nodes then clear the cache\n        // for the element.\n        elements.forEach((elm) => {\n            // this means that an inner remove() operation has already kicked off\n            // the animation on this element...\n            if (elm[REMOVAL_FLAG])\n                return;\n            const namespaces = this._engine.fetchNamespacesByElement(elm);\n            if (namespaces.size) {\n                namespaces.forEach((ns) => ns.triggerLeaveAnimation(elm, context, false, true));\n            }\n            else {\n                this.clearElementCache(elm);\n            }\n        });\n        // If the child elements were removed along with the parent, their animations might not\n        // have completed. Clear all the elements from the cache so we don't end up with a memory leak.\n        this._engine.afterFlushAnimationsDone(() => elements.forEach((elm) => this.clearElementCache(elm)));\n    }\n    triggerLeaveAnimation(element, context, destroyAfterComplete, defaultToFallback) {\n        const triggerStates = this._engine.statesByElement.get(element);\n        const previousTriggersValues = new Map();\n        if (triggerStates) {\n            const players = [];\n            triggerStates.forEach((state, triggerName) => {\n                previousTriggersValues.set(triggerName, state.value);\n                // this check is here in the event that an element is removed\n                // twice (both on the host level and the component level)\n                if (this._triggers.has(triggerName)) {\n                    const player = this.trigger(element, triggerName, VOID_VALUE, defaultToFallback);\n                    if (player) {\n                        players.push(player);\n                    }\n                }\n            });\n            if (players.length) {\n                this._engine.markElementAsRemoved(this.id, element, true, context, previousTriggersValues);\n                if (destroyAfterComplete) {\n                    optimizeGroupPlayer(players).onDone(() => this._engine.processLeaveNode(element));\n                }\n                return true;\n            }\n        }\n        return false;\n    }\n    prepareLeaveAnimationListeners(element) {\n        const listeners = this._elementListeners.get(element);\n        const elementStates = this._engine.statesByElement.get(element);\n        // if this statement fails then it means that the element was picked up\n        // by an earlier flush (or there are no listeners at all to track the leave).\n        if (listeners && elementStates) {\n            const visitedTriggers = new Set();\n            listeners.forEach((listener) => {\n                const triggerName = listener.name;\n                if (visitedTriggers.has(triggerName))\n                    return;\n                visitedTriggers.add(triggerName);\n                const trigger = this._triggers.get(triggerName);\n                const transition = trigger.fallbackTransition;\n                const fromState = elementStates.get(triggerName) || DEFAULT_STATE_VALUE;\n                const toState = new StateValue(VOID_VALUE);\n                const player = new TransitionAnimationPlayer(this.id, triggerName, element);\n                this._engine.totalQueuedPlayers++;\n                this._queue.push({\n                    element,\n                    triggerName,\n                    transition,\n                    fromState,\n                    toState,\n                    player,\n                    isFallbackTransition: true,\n                });\n            });\n        }\n    }\n    removeNode(element, context) {\n        const engine = this._engine;\n        if (element.childElementCount) {\n            this._signalRemovalForInnerTriggers(element, context);\n        }\n        // this means that a * => VOID animation was detected and kicked off\n        if (this.triggerLeaveAnimation(element, context, true))\n            return;\n        // find the player that is animating and make sure that the\n        // removal is delayed until that player has completed\n        let containsPotentialParentTransition = false;\n        if (engine.totalAnimations) {\n            const currentPlayers = engine.players.length\n                ? engine.playersByQueriedElement.get(element)\n                : [];\n            // when this `if statement` does not continue forward it means that\n            // a previous animation query has selected the current element and\n            // is animating it. In this situation want to continue forwards and\n            // allow the element to be queued up for animation later.\n            if (currentPlayers && currentPlayers.length) {\n                containsPotentialParentTransition = true;\n            }\n            else {\n                let parent = element;\n                while ((parent = parent.parentNode)) {\n                    const triggers = engine.statesByElement.get(parent);\n                    if (triggers) {\n                        containsPotentialParentTransition = true;\n                        break;\n                    }\n                }\n            }\n        }\n        // at this stage we know that the element will either get removed\n        // during flush or will be picked up by a parent query. Either way\n        // we need to fire the listeners for this element when it DOES get\n        // removed (once the query parent animation is done or after flush)\n        this.prepareLeaveAnimationListeners(element);\n        // whether or not a parent has an animation we need to delay the deferral of the leave\n        // operation until we have more information (which we do after flush() has been called)\n        if (containsPotentialParentTransition) {\n            engine.markElementAsRemoved(this.id, element, false, context);\n        }\n        else {\n            const removalFlag = element[REMOVAL_FLAG];\n            if (!removalFlag || removalFlag === NULL_REMOVAL_STATE) {\n                // we do this after the flush has occurred such\n                // that the callbacks can be fired\n                engine.afterFlush(() => this.clearElementCache(element));\n                engine.destroyInnerAnimations(element);\n                engine._onRemovalComplete(element, context);\n            }\n        }\n    }\n    insertNode(element, parent) {\n        addClass(element, this._hostClassName);\n    }\n    drainQueuedTransitions(microtaskId) {\n        const instructions = [];\n        this._queue.forEach((entry) => {\n            const player = entry.player;\n            if (player.destroyed)\n                return;\n            const element = entry.element;\n            const listeners = this._elementListeners.get(element);\n            if (listeners) {\n                listeners.forEach((listener) => {\n                    if (listener.name == entry.triggerName) {\n                        const baseEvent = makeAnimationEvent(element, entry.triggerName, entry.fromState.value, entry.toState.value);\n                        baseEvent['_data'] = microtaskId;\n                        listenOnPlayer(entry.player, listener.phase, baseEvent, listener.callback);\n                    }\n                });\n            }\n            if (player.markedForDestroy) {\n                this._engine.afterFlush(() => {\n                    // now we can destroy the element properly since the event listeners have\n                    // been bound to the player\n                    player.destroy();\n                });\n            }\n            else {\n                instructions.push(entry);\n            }\n        });\n        this._queue = [];\n        return instructions.sort((a, b) => {\n            // if depCount == 0 them move to front\n            // otherwise if a contains b then move back\n            const d0 = a.transition.ast.depCount;\n            const d1 = b.transition.ast.depCount;\n            if (d0 == 0 || d1 == 0) {\n                return d0 - d1;\n            }\n            return this._engine.driver.containsElement(a.element, b.element) ? 1 : -1;\n        });\n    }\n    destroy(context) {\n        this.players.forEach((p) => p.destroy());\n        this._signalRemovalForInnerTriggers(this.hostElement, context);\n    }\n}\nclass TransitionAnimationEngine {\n    bodyNode;\n    driver;\n    _normalizer;\n    players = [];\n    newHostElements = new Map();\n    playersByElement = new Map();\n    playersByQueriedElement = new Map();\n    statesByElement = new Map();\n    disabledNodes = new Set();\n    totalAnimations = 0;\n    totalQueuedPlayers = 0;\n    _namespaceLookup = {};\n    _namespaceList = [];\n    _flushFns = [];\n    _whenQuietFns = [];\n    namespacesByHostElement = new Map();\n    collectedEnterElements = [];\n    collectedLeaveElements = [];\n    // this method is designed to be overridden by the code that uses this engine\n    onRemovalComplete = (element, context) => { };\n    /** @internal */\n    _onRemovalComplete(element, context) {\n        this.onRemovalComplete(element, context);\n    }\n    constructor(bodyNode, driver, _normalizer) {\n        this.bodyNode = bodyNode;\n        this.driver = driver;\n        this._normalizer = _normalizer;\n    }\n    get queuedPlayers() {\n        const players = [];\n        this._namespaceList.forEach((ns) => {\n            ns.players.forEach((player) => {\n                if (player.queued) {\n                    players.push(player);\n                }\n            });\n        });\n        return players;\n    }\n    createNamespace(namespaceId, hostElement) {\n        const ns = new AnimationTransitionNamespace(namespaceId, hostElement, this);\n        if (this.bodyNode && this.driver.containsElement(this.bodyNode, hostElement)) {\n            this._balanceNamespaceList(ns, hostElement);\n        }\n        else {\n            // defer this later until flush during when the host element has\n            // been inserted so that we know exactly where to place it in\n            // the namespace list\n            this.newHostElements.set(hostElement, ns);\n            // given that this host element is a part of the animation code, it\n            // may or may not be inserted by a parent node that is of an\n            // animation renderer type. If this happens then we can still have\n            // access to this item when we query for :enter nodes. If the parent\n            // is a renderer then the set data-structure will normalize the entry\n            this.collectEnterElement(hostElement);\n        }\n        return (this._namespaceLookup[namespaceId] = ns);\n    }\n    _balanceNamespaceList(ns, hostElement) {\n        const namespaceList = this._namespaceList;\n        const namespacesByHostElement = this.namespacesByHostElement;\n        const limit = namespaceList.length - 1;\n        if (limit >= 0) {\n            let found = false;\n            // Find the closest ancestor with an existing namespace so we can then insert `ns` after it,\n            // establishing a top-down ordering of namespaces in `this._namespaceList`.\n            let ancestor = this.driver.getParentElement(hostElement);\n            while (ancestor) {\n                const ancestorNs = namespacesByHostElement.get(ancestor);\n                if (ancestorNs) {\n                    // An animation namespace has been registered for this ancestor, so we insert `ns`\n                    // right after it to establish top-down ordering of animation namespaces.\n                    const index = namespaceList.indexOf(ancestorNs);\n                    namespaceList.splice(index + 1, 0, ns);\n                    found = true;\n                    break;\n                }\n                ancestor = this.driver.getParentElement(ancestor);\n            }\n            if (!found) {\n                // No namespace exists that is an ancestor of `ns`, so `ns` is inserted at the front to\n                // ensure that any existing descendants are ordered after `ns`, retaining the desired\n                // top-down ordering.\n                namespaceList.unshift(ns);\n            }\n        }\n        else {\n            namespaceList.push(ns);\n        }\n        namespacesByHostElement.set(hostElement, ns);\n        return ns;\n    }\n    register(namespaceId, hostElement) {\n        let ns = this._namespaceLookup[namespaceId];\n        if (!ns) {\n            ns = this.createNamespace(namespaceId, hostElement);\n        }\n        return ns;\n    }\n    registerTrigger(namespaceId, name, trigger) {\n        let ns = this._namespaceLookup[namespaceId];\n        if (ns && ns.register(name, trigger)) {\n            this.totalAnimations++;\n        }\n    }\n    destroy(namespaceId, context) {\n        if (!namespaceId)\n            return;\n        this.afterFlush(() => { });\n        this.afterFlushAnimationsDone(() => {\n            const ns = this._fetchNamespace(namespaceId);\n            this.namespacesByHostElement.delete(ns.hostElement);\n            const index = this._namespaceList.indexOf(ns);\n            if (index >= 0) {\n                this._namespaceList.splice(index, 1);\n            }\n            ns.destroy(context);\n            delete this._namespaceLookup[namespaceId];\n        });\n    }\n    _fetchNamespace(id) {\n        return this._namespaceLookup[id];\n    }\n    fetchNamespacesByElement(element) {\n        // normally there should only be one namespace per element, however\n        // if @triggers are placed on both the component element and then\n        // its host element (within the component code) then there will be\n        // two namespaces returned. We use a set here to simply deduplicate\n        // the namespaces in case (for the reason described above) there are multiple triggers\n        const namespaces = new Set();\n        const elementStates = this.statesByElement.get(element);\n        if (elementStates) {\n            for (let stateValue of elementStates.values()) {\n                if (stateValue.namespaceId) {\n                    const ns = this._fetchNamespace(stateValue.namespaceId);\n                    if (ns) {\n                        namespaces.add(ns);\n                    }\n                }\n            }\n        }\n        return namespaces;\n    }\n    trigger(namespaceId, element, name, value) {\n        if (isElementNode(element)) {\n            const ns = this._fetchNamespace(namespaceId);\n            if (ns) {\n                ns.trigger(element, name, value);\n                return true;\n            }\n        }\n        return false;\n    }\n    insertNode(namespaceId, element, parent, insertBefore) {\n        if (!isElementNode(element))\n            return;\n        // special case for when an element is removed and reinserted (move operation)\n        // when this occurs we do not want to use the element for deletion later\n        const details = element[REMOVAL_FLAG];\n        if (details && details.setForRemoval) {\n            details.setForRemoval = false;\n            details.setForMove = true;\n            const index = this.collectedLeaveElements.indexOf(element);\n            if (index >= 0) {\n                this.collectedLeaveElements.splice(index, 1);\n            }\n        }\n        // in the event that the namespaceId is blank then the caller\n        // code does not contain any animation code in it, but it is\n        // just being called so that the node is marked as being inserted\n        if (namespaceId) {\n            const ns = this._fetchNamespace(namespaceId);\n            // This if-statement is a workaround for router issue #21947.\n            // The router sometimes hits a race condition where while a route\n            // is being instantiated a new navigation arrives, triggering leave\n            // animation of DOM that has not been fully initialized, until this\n            // is resolved, we need to handle the scenario when DOM is not in a\n            // consistent state during the animation.\n            if (ns) {\n                ns.insertNode(element, parent);\n            }\n        }\n        // only *directives and host elements are inserted before\n        if (insertBefore) {\n            this.collectEnterElement(element);\n        }\n    }\n    collectEnterElement(element) {\n        this.collectedEnterElements.push(element);\n    }\n    markElementAsDisabled(element, value) {\n        if (value) {\n            if (!this.disabledNodes.has(element)) {\n                this.disabledNodes.add(element);\n                addClass(element, DISABLED_CLASSNAME);\n            }\n        }\n        else if (this.disabledNodes.has(element)) {\n            this.disabledNodes.delete(element);\n            removeClass(element, DISABLED_CLASSNAME);\n        }\n    }\n    removeNode(namespaceId, element, context) {\n        if (isElementNode(element)) {\n            const ns = namespaceId ? this._fetchNamespace(namespaceId) : null;\n            if (ns) {\n                ns.removeNode(element, context);\n            }\n            else {\n                this.markElementAsRemoved(namespaceId, element, false, context);\n            }\n            const hostNS = this.namespacesByHostElement.get(element);\n            if (hostNS && hostNS.id !== namespaceId) {\n                hostNS.removeNode(element, context);\n            }\n        }\n        else {\n            this._onRemovalComplete(element, context);\n        }\n    }\n    markElementAsRemoved(namespaceId, element, hasAnimation, context, previousTriggersValues) {\n        this.collectedLeaveElements.push(element);\n        element[REMOVAL_FLAG] = {\n            namespaceId,\n            setForRemoval: context,\n            hasAnimation,\n            removedBeforeQueried: false,\n            previousTriggersValues,\n        };\n    }\n    listen(namespaceId, element, name, phase, callback) {\n        if (isElementNode(element)) {\n            return this._fetchNamespace(namespaceId).listen(element, name, phase, callback);\n        }\n        return () => { };\n    }\n    _buildInstruction(entry, subTimelines, enterClassName, leaveClassName, skipBuildAst) {\n        return entry.transition.build(this.driver, entry.element, entry.fromState.value, entry.toState.value, enterClassName, leaveClassName, entry.fromState.options, entry.toState.options, subTimelines, skipBuildAst);\n    }\n    destroyInnerAnimations(containerElement) {\n        let elements = this.driver.query(containerElement, NG_TRIGGER_SELECTOR, true);\n        elements.forEach((element) => this.destroyActiveAnimationsForElement(element));\n        if (this.playersByQueriedElement.size == 0)\n            return;\n        elements = this.driver.query(containerElement, NG_ANIMATING_SELECTOR, true);\n        elements.forEach((element) => this.finishActiveQueriedAnimationOnElement(element));\n    }\n    destroyActiveAnimationsForElement(element) {\n        const players = this.playersByElement.get(element);\n        if (players) {\n            players.forEach((player) => {\n                // special case for when an element is set for destruction, but hasn't started.\n                // in this situation we want to delay the destruction until the flush occurs\n                // so that any event listeners attached to the player are triggered.\n                if (player.queued) {\n                    player.markedForDestroy = true;\n                }\n                else {\n                    player.destroy();\n                }\n            });\n        }\n    }\n    finishActiveQueriedAnimationOnElement(element) {\n        const players = this.playersByQueriedElement.get(element);\n        if (players) {\n            players.forEach((player) => player.finish());\n        }\n    }\n    whenRenderingDone() {\n        return new Promise((resolve) => {\n            if (this.players.length) {\n                return optimizeGroupPlayer(this.players).onDone(() => resolve());\n            }\n            else {\n                resolve();\n            }\n        });\n    }\n    processLeaveNode(element) {\n        const details = element[REMOVAL_FLAG];\n        if (details && details.setForRemoval) {\n            // this will prevent it from removing it twice\n            element[REMOVAL_FLAG] = NULL_REMOVAL_STATE;\n            if (details.namespaceId) {\n                this.destroyInnerAnimations(element);\n                const ns = this._fetchNamespace(details.namespaceId);\n                if (ns) {\n                    ns.clearElementCache(element);\n                }\n            }\n            this._onRemovalComplete(element, details.setForRemoval);\n        }\n        if (element.classList?.contains(DISABLED_CLASSNAME)) {\n            this.markElementAsDisabled(element, false);\n        }\n        this.driver.query(element, DISABLED_SELECTOR, true).forEach((node) => {\n            this.markElementAsDisabled(node, false);\n        });\n    }\n    flush(microtaskId = -1) {\n        let players = [];\n        if (this.newHostElements.size) {\n            this.newHostElements.forEach((ns, element) => this._balanceNamespaceList(ns, element));\n            this.newHostElements.clear();\n        }\n        if (this.totalAnimations && this.collectedEnterElements.length) {\n            for (let i = 0; i < this.collectedEnterElements.length; i++) {\n                const elm = this.collectedEnterElements[i];\n                addClass(elm, STAR_CLASSNAME);\n            }\n        }\n        if (this._namespaceList.length &&\n            (this.totalQueuedPlayers || this.collectedLeaveElements.length)) {\n            const cleanupFns = [];\n            try {\n                players = this._flushAnimations(cleanupFns, microtaskId);\n            }\n            finally {\n                for (let i = 0; i < cleanupFns.length; i++) {\n                    cleanupFns[i]();\n                }\n            }\n        }\n        else {\n            for (let i = 0; i < this.collectedLeaveElements.length; i++) {\n                const element = this.collectedLeaveElements[i];\n                this.processLeaveNode(element);\n            }\n        }\n        this.totalQueuedPlayers = 0;\n        this.collectedEnterElements.length = 0;\n        this.collectedLeaveElements.length = 0;\n        this._flushFns.forEach((fn) => fn());\n        this._flushFns = [];\n        if (this._whenQuietFns.length) {\n            // we move these over to a variable so that\n            // if any new callbacks are registered in another\n            // flush they do not populate the existing set\n            const quietFns = this._whenQuietFns;\n            this._whenQuietFns = [];\n            if (players.length) {\n                optimizeGroupPlayer(players).onDone(() => {\n                    quietFns.forEach((fn) => fn());\n                });\n            }\n            else {\n                quietFns.forEach((fn) => fn());\n            }\n        }\n    }\n    reportError(errors) {\n        throw triggerTransitionsFailed(errors);\n    }\n    _flushAnimations(cleanupFns, microtaskId) {\n        const subTimelines = new ElementInstructionMap();\n        const skippedPlayers = [];\n        const skippedPlayersMap = new Map();\n        const queuedInstructions = [];\n        const queriedElements = new Map();\n        const allPreStyleElements = new Map();\n        const allPostStyleElements = new Map();\n        const disabledElementsSet = new Set();\n        this.disabledNodes.forEach((node) => {\n            disabledElementsSet.add(node);\n            const nodesThatAreDisabled = this.driver.query(node, QUEUED_SELECTOR, true);\n            for (let i = 0; i < nodesThatAreDisabled.length; i++) {\n                disabledElementsSet.add(nodesThatAreDisabled[i]);\n            }\n        });\n        const bodyNode = this.bodyNode;\n        const allTriggerElements = Array.from(this.statesByElement.keys());\n        const enterNodeMap = buildRootMap(allTriggerElements, this.collectedEnterElements);\n        // this must occur before the instructions are built below such that\n        // the :enter queries match the elements (since the timeline queries\n        // are fired during instruction building).\n        const enterNodeMapIds = new Map();\n        let i = 0;\n        enterNodeMap.forEach((nodes, root) => {\n            const className = ENTER_CLASSNAME + i++;\n            enterNodeMapIds.set(root, className);\n            nodes.forEach((node) => addClass(node, className));\n        });\n        const allLeaveNodes = [];\n        const mergedLeaveNodes = new Set();\n        const leaveNodesWithoutAnimations = new Set();\n        for (let i = 0; i < this.collectedLeaveElements.length; i++) {\n            const element = this.collectedLeaveElements[i];\n            const details = element[REMOVAL_FLAG];\n            if (details && details.setForRemoval) {\n                allLeaveNodes.push(element);\n                mergedLeaveNodes.add(element);\n                if (details.hasAnimation) {\n                    this.driver\n                        .query(element, STAR_SELECTOR, true)\n                        .forEach((elm) => mergedLeaveNodes.add(elm));\n                }\n                else {\n                    leaveNodesWithoutAnimations.add(element);\n                }\n            }\n        }\n        const leaveNodeMapIds = new Map();\n        const leaveNodeMap = buildRootMap(allTriggerElements, Array.from(mergedLeaveNodes));\n        leaveNodeMap.forEach((nodes, root) => {\n            const className = LEAVE_CLASSNAME + i++;\n            leaveNodeMapIds.set(root, className);\n            nodes.forEach((node) => addClass(node, className));\n        });\n        cleanupFns.push(() => {\n            enterNodeMap.forEach((nodes, root) => {\n                const className = enterNodeMapIds.get(root);\n                nodes.forEach((node) => removeClass(node, className));\n            });\n            leaveNodeMap.forEach((nodes, root) => {\n                const className = leaveNodeMapIds.get(root);\n                nodes.forEach((node) => removeClass(node, className));\n            });\n            allLeaveNodes.forEach((element) => {\n                this.processLeaveNode(element);\n            });\n        });\n        const allPlayers = [];\n        const erroneousTransitions = [];\n        for (let i = this._namespaceList.length - 1; i >= 0; i--) {\n            const ns = this._namespaceList[i];\n            ns.drainQueuedTransitions(microtaskId).forEach((entry) => {\n                const player = entry.player;\n                const element = entry.element;\n                allPlayers.push(player);\n                if (this.collectedEnterElements.length) {\n                    const details = element[REMOVAL_FLAG];\n                    // animations for move operations (elements being removed and reinserted,\n                    // e.g. when the order of an *ngFor list changes) are currently not supported\n                    if (details && details.setForMove) {\n                        if (details.previousTriggersValues &&\n                            details.previousTriggersValues.has(entry.triggerName)) {\n                            const previousValue = details.previousTriggersValues.get(entry.triggerName);\n                            // we need to restore the previous trigger value since the element has\n                            // only been moved and hasn't actually left the DOM\n                            const triggersWithStates = this.statesByElement.get(entry.element);\n                            if (triggersWithStates && triggersWithStates.has(entry.triggerName)) {\n                                const state = triggersWithStates.get(entry.triggerName);\n                                state.value = previousValue;\n                                triggersWithStates.set(entry.triggerName, state);\n                            }\n                        }\n                        player.destroy();\n                        return;\n                    }\n                }\n                const nodeIsOrphaned = !bodyNode || !this.driver.containsElement(bodyNode, element);\n                const leaveClassName = leaveNodeMapIds.get(element);\n                const enterClassName = enterNodeMapIds.get(element);\n                const instruction = this._buildInstruction(entry, subTimelines, enterClassName, leaveClassName, nodeIsOrphaned);\n                if (instruction.errors && instruction.errors.length) {\n                    erroneousTransitions.push(instruction);\n                    return;\n                }\n                // even though the element may not be in the DOM, it may still\n                // be added at a later point (due to the mechanics of content\n                // projection and/or dynamic component insertion) therefore it's\n                // important to still style the element.\n                if (nodeIsOrphaned) {\n                    player.onStart(() => eraseStyles(element, instruction.fromStyles));\n                    player.onDestroy(() => setStyles(element, instruction.toStyles));\n                    skippedPlayers.push(player);\n                    return;\n                }\n                // if an unmatched transition is queued and ready to go\n                // then it SHOULD NOT render an animation and cancel the\n                // previously running animations.\n                if (entry.isFallbackTransition) {\n                    player.onStart(() => eraseStyles(element, instruction.fromStyles));\n                    player.onDestroy(() => setStyles(element, instruction.toStyles));\n                    skippedPlayers.push(player);\n                    return;\n                }\n                // this means that if a parent animation uses this animation as a sub-trigger\n                // then it will instruct the timeline builder not to add a player delay, but\n                // instead stretch the first keyframe gap until the animation starts. This is\n                // important in order to prevent extra initialization styles from being\n                // required by the user for the animation.\n                const timelines = [];\n                instruction.timelines.forEach((tl) => {\n                    tl.stretchStartingKeyframe = true;\n                    if (!this.disabledNodes.has(tl.element)) {\n                        timelines.push(tl);\n                    }\n                });\n                instruction.timelines = timelines;\n                subTimelines.append(element, instruction.timelines);\n                const tuple = { instruction, player, element };\n                queuedInstructions.push(tuple);\n                instruction.queriedElements.forEach((element) => getOrSetDefaultValue(queriedElements, element, []).push(player));\n                instruction.preStyleProps.forEach((stringMap, element) => {\n                    if (stringMap.size) {\n                        let setVal = allPreStyleElements.get(element);\n                        if (!setVal) {\n                            allPreStyleElements.set(element, (setVal = new Set()));\n                        }\n                        stringMap.forEach((_, prop) => setVal.add(prop));\n                    }\n                });\n                instruction.postStyleProps.forEach((stringMap, element) => {\n                    let setVal = allPostStyleElements.get(element);\n                    if (!setVal) {\n                        allPostStyleElements.set(element, (setVal = new Set()));\n                    }\n                    stringMap.forEach((_, prop) => setVal.add(prop));\n                });\n            });\n        }\n        if (erroneousTransitions.length) {\n            const errors = [];\n            erroneousTransitions.forEach((instruction) => {\n                errors.push(transitionFailed(instruction.triggerName, instruction.errors));\n            });\n            allPlayers.forEach((player) => player.destroy());\n            this.reportError(errors);\n        }\n        const allPreviousPlayersMap = new Map();\n        // this map tells us which element in the DOM tree is contained by\n        // which animation. Further down this map will get populated once\n        // the players are built and in doing so we can use it to efficiently\n        // figure out if a sub player is skipped due to a parent player having priority.\n        const animationElementMap = new Map();\n        queuedInstructions.forEach((entry) => {\n            const element = entry.element;\n            if (subTimelines.has(element)) {\n                animationElementMap.set(element, element);\n                this._beforeAnimationBuild(entry.player.namespaceId, entry.instruction, allPreviousPlayersMap);\n            }\n        });\n        skippedPlayers.forEach((player) => {\n            const element = player.element;\n            const previousPlayers = this._getPreviousPlayers(element, false, player.namespaceId, player.triggerName, null);\n            previousPlayers.forEach((prevPlayer) => {\n                getOrSetDefaultValue(allPreviousPlayersMap, element, []).push(prevPlayer);\n                prevPlayer.destroy();\n            });\n        });\n        // this is a special case for nodes that will be removed either by\n        // having their own leave animations or by being queried in a container\n        // that will be removed once a parent animation is complete. The idea\n        // here is that * styles must be identical to ! styles because of\n        // backwards compatibility (* is also filled in by default in many places).\n        // Otherwise * styles will return an empty value or \"auto\" since the element\n        // passed to getComputedStyle will not be visible (since * === destination)\n        const replaceNodes = allLeaveNodes.filter((node) => {\n            return replacePostStylesAsPre(node, allPreStyleElements, allPostStyleElements);\n        });\n        // POST STAGE: fill the * styles\n        const postStylesMap = new Map();\n        const allLeaveQueriedNodes = cloakAndComputeStyles(postStylesMap, this.driver, leaveNodesWithoutAnimations, allPostStyleElements, AUTO_STYLE);\n        allLeaveQueriedNodes.forEach((node) => {\n            if (replacePostStylesAsPre(node, allPreStyleElements, allPostStyleElements)) {\n                replaceNodes.push(node);\n            }\n        });\n        // PRE STAGE: fill the ! styles\n        const preStylesMap = new Map();\n        enterNodeMap.forEach((nodes, root) => {\n            cloakAndComputeStyles(preStylesMap, this.driver, new Set(nodes), allPreStyleElements, _PRE_STYLE);\n        });\n        replaceNodes.forEach((node) => {\n            const post = postStylesMap.get(node);\n            const pre = preStylesMap.get(node);\n            postStylesMap.set(node, new Map([...(post?.entries() ?? []), ...(pre?.entries() ?? [])]));\n        });\n        const rootPlayers = [];\n        const subPlayers = [];\n        const NO_PARENT_ANIMATION_ELEMENT_DETECTED = {};\n        queuedInstructions.forEach((entry) => {\n            const { element, player, instruction } = entry;\n            // this means that it was never consumed by a parent animation which\n            // means that it is independent and therefore should be set for animation\n            if (subTimelines.has(element)) {\n                if (disabledElementsSet.has(element)) {\n                    player.onDestroy(() => setStyles(element, instruction.toStyles));\n                    player.disabled = true;\n                    player.overrideTotalTime(instruction.totalTime);\n                    skippedPlayers.push(player);\n                    return;\n                }\n                // this will flow up the DOM and query the map to figure out\n                // if a parent animation has priority over it. In the situation\n                // that a parent is detected then it will cancel the loop. If\n                // nothing is detected, or it takes a few hops to find a parent,\n                // then it will fill in the missing nodes and signal them as having\n                // a detected parent (or a NO_PARENT value via a special constant).\n                let parentWithAnimation = NO_PARENT_ANIMATION_ELEMENT_DETECTED;\n                if (animationElementMap.size > 1) {\n                    let elm = element;\n                    const parentsToAdd = [];\n                    while ((elm = elm.parentNode)) {\n                        const detectedParent = animationElementMap.get(elm);\n                        if (detectedParent) {\n                            parentWithAnimation = detectedParent;\n                            break;\n                        }\n                        parentsToAdd.push(elm);\n                    }\n                    parentsToAdd.forEach((parent) => animationElementMap.set(parent, parentWithAnimation));\n                }\n                const innerPlayer = this._buildAnimation(player.namespaceId, instruction, allPreviousPlayersMap, skippedPlayersMap, preStylesMap, postStylesMap);\n                player.setRealPlayer(innerPlayer);\n                if (parentWithAnimation === NO_PARENT_ANIMATION_ELEMENT_DETECTED) {\n                    rootPlayers.push(player);\n                }\n                else {\n                    const parentPlayers = this.playersByElement.get(parentWithAnimation);\n                    if (parentPlayers && parentPlayers.length) {\n                        player.parentPlayer = optimizeGroupPlayer(parentPlayers);\n                    }\n                    skippedPlayers.push(player);\n                }\n            }\n            else {\n                eraseStyles(element, instruction.fromStyles);\n                player.onDestroy(() => setStyles(element, instruction.toStyles));\n                // there still might be a ancestor player animating this\n                // element therefore we will still add it as a sub player\n                // even if its animation may be disabled\n                subPlayers.push(player);\n                if (disabledElementsSet.has(element)) {\n                    skippedPlayers.push(player);\n                }\n            }\n        });\n        // find all of the sub players' corresponding inner animation players\n        subPlayers.forEach((player) => {\n            // even if no players are found for a sub animation it\n            // will still complete itself after the next tick since it's Noop\n            const playersForElement = skippedPlayersMap.get(player.element);\n            if (playersForElement && playersForElement.length) {\n                const innerPlayer = optimizeGroupPlayer(playersForElement);\n                player.setRealPlayer(innerPlayer);\n            }\n        });\n        // the reason why we don't actually play the animation is\n        // because all that a skipped player is designed to do is to\n        // fire the start/done transition callback events\n        skippedPlayers.forEach((player) => {\n            if (player.parentPlayer) {\n                player.syncPlayerEvents(player.parentPlayer);\n            }\n            else {\n                player.destroy();\n            }\n        });\n        // run through all of the queued removals and see if they\n        // were picked up by a query. If not then perform the removal\n        // operation right away unless a parent animation is ongoing.\n        for (let i = 0; i < allLeaveNodes.length; i++) {\n            const element = allLeaveNodes[i];\n            const details = element[REMOVAL_FLAG];\n            removeClass(element, LEAVE_CLASSNAME);\n            // this means the element has a removal animation that is being\n            // taken care of and therefore the inner elements will hang around\n            // until that animation is over (or the parent queried animation)\n            if (details && details.hasAnimation)\n                continue;\n            let players = [];\n            // if this element is queried or if it contains queried children\n            // then we want for the element not to be removed from the page\n            // until the queried animations have finished\n            if (queriedElements.size) {\n                let queriedPlayerResults = queriedElements.get(element);\n                if (queriedPlayerResults && queriedPlayerResults.length) {\n                    players.push(...queriedPlayerResults);\n                }\n                let queriedInnerElements = this.driver.query(element, NG_ANIMATING_SELECTOR, true);\n                for (let j = 0; j < queriedInnerElements.length; j++) {\n                    let queriedPlayers = queriedElements.get(queriedInnerElements[j]);\n                    if (queriedPlayers && queriedPlayers.length) {\n                        players.push(...queriedPlayers);\n                    }\n                }\n            }\n            const activePlayers = players.filter((p) => !p.destroyed);\n            if (activePlayers.length) {\n                removeNodesAfterAnimationDone(this, element, activePlayers);\n            }\n            else {\n                this.processLeaveNode(element);\n            }\n        }\n        // this is required so the cleanup method doesn't remove them\n        allLeaveNodes.length = 0;\n        rootPlayers.forEach((player) => {\n            this.players.push(player);\n            player.onDone(() => {\n                player.destroy();\n                const index = this.players.indexOf(player);\n                this.players.splice(index, 1);\n            });\n            player.play();\n        });\n        return rootPlayers;\n    }\n    afterFlush(callback) {\n        this._flushFns.push(callback);\n    }\n    afterFlushAnimationsDone(callback) {\n        this._whenQuietFns.push(callback);\n    }\n    _getPreviousPlayers(element, isQueriedElement, namespaceId, triggerName, toStateValue) {\n        let players = [];\n        if (isQueriedElement) {\n            const queriedElementPlayers = this.playersByQueriedElement.get(element);\n            if (queriedElementPlayers) {\n                players = queriedElementPlayers;\n            }\n        }\n        else {\n            const elementPlayers = this.playersByElement.get(element);\n            if (elementPlayers) {\n                const isRemovalAnimation = !toStateValue || toStateValue == VOID_VALUE;\n                elementPlayers.forEach((player) => {\n                    if (player.queued)\n                        return;\n                    if (!isRemovalAnimation && player.triggerName != triggerName)\n                        return;\n                    players.push(player);\n                });\n            }\n        }\n        if (namespaceId || triggerName) {\n            players = players.filter((player) => {\n                if (namespaceId && namespaceId != player.namespaceId)\n                    return false;\n                if (triggerName && triggerName != player.triggerName)\n                    return false;\n                return true;\n            });\n        }\n        return players;\n    }\n    _beforeAnimationBuild(namespaceId, instruction, allPreviousPlayersMap) {\n        const triggerName = instruction.triggerName;\n        const rootElement = instruction.element;\n        // when a removal animation occurs, ALL previous players are collected\n        // and destroyed (even if they are outside of the current namespace)\n        const targetNameSpaceId = instruction.isRemovalTransition\n            ? undefined\n            : namespaceId;\n        const targetTriggerName = instruction.isRemovalTransition\n            ? undefined\n            : triggerName;\n        for (const timelineInstruction of instruction.timelines) {\n            const element = timelineInstruction.element;\n            const isQueriedElement = element !== rootElement;\n            const players = getOrSetDefaultValue(allPreviousPlayersMap, element, []);\n            const previousPlayers = this._getPreviousPlayers(element, isQueriedElement, targetNameSpaceId, targetTriggerName, instruction.toState);\n            previousPlayers.forEach((player) => {\n                const realPlayer = player.getRealPlayer();\n                if (realPlayer.beforeDestroy) {\n                    realPlayer.beforeDestroy();\n                }\n                player.destroy();\n                players.push(player);\n            });\n        }\n        // this needs to be done so that the PRE/POST styles can be\n        // computed properly without interfering with the previous animation\n        eraseStyles(rootElement, instruction.fromStyles);\n    }\n    _buildAnimation(namespaceId, instruction, allPreviousPlayersMap, skippedPlayersMap, preStylesMap, postStylesMap) {\n        const triggerName = instruction.triggerName;\n        const rootElement = instruction.element;\n        // we first run this so that the previous animation player\n        // data can be passed into the successive animation players\n        const allQueriedPlayers = [];\n        const allConsumedElements = new Set();\n        const allSubElements = new Set();\n        const allNewPlayers = instruction.timelines.map((timelineInstruction) => {\n            const element = timelineInstruction.element;\n            allConsumedElements.add(element);\n            // FIXME (matsko): make sure to-be-removed animations are removed properly\n            const details = element[REMOVAL_FLAG];\n            if (details && details.removedBeforeQueried)\n                return new NoopAnimationPlayer(timelineInstruction.duration, timelineInstruction.delay);\n            const isQueriedElement = element !== rootElement;\n            const previousPlayers = flattenGroupPlayers((allPreviousPlayersMap.get(element) || EMPTY_PLAYER_ARRAY).map((p) => p.getRealPlayer())).filter((p) => {\n                // the `element` is not apart of the AnimationPlayer definition, but\n                // Mock/WebAnimations\n                // use the element within their implementation. This will be added in Angular5 to\n                // AnimationPlayer\n                const pp = p;\n                return pp.element ? pp.element === element : false;\n            });\n            const preStyles = preStylesMap.get(element);\n            const postStyles = postStylesMap.get(element);\n            const keyframes = normalizeKeyframes(this._normalizer, timelineInstruction.keyframes, preStyles, postStyles);\n            const player = this._buildPlayer(timelineInstruction, keyframes, previousPlayers);\n            // this means that this particular player belongs to a sub trigger. It is\n            // important that we match this player up with the corresponding (@trigger.listener)\n            if (timelineInstruction.subTimeline && skippedPlayersMap) {\n                allSubElements.add(element);\n            }\n            if (isQueriedElement) {\n                const wrappedPlayer = new TransitionAnimationPlayer(namespaceId, triggerName, element);\n                wrappedPlayer.setRealPlayer(player);\n                allQueriedPlayers.push(wrappedPlayer);\n            }\n            return player;\n        });\n        allQueriedPlayers.forEach((player) => {\n            getOrSetDefaultValue(this.playersByQueriedElement, player.element, []).push(player);\n            player.onDone(() => deleteOrUnsetInMap(this.playersByQueriedElement, player.element, player));\n        });\n        allConsumedElements.forEach((element) => addClass(element, NG_ANIMATING_CLASSNAME));\n        const player = optimizeGroupPlayer(allNewPlayers);\n        player.onDestroy(() => {\n            allConsumedElements.forEach((element) => removeClass(element, NG_ANIMATING_CLASSNAME));\n            setStyles(rootElement, instruction.toStyles);\n        });\n        // this basically makes all of the callbacks for sub element animations\n        // be dependent on the upper players for when they finish\n        allSubElements.forEach((element) => {\n            getOrSetDefaultValue(skippedPlayersMap, element, []).push(player);\n        });\n        return player;\n    }\n    _buildPlayer(instruction, keyframes, previousPlayers) {\n        if (keyframes.length > 0) {\n            return this.driver.animate(instruction.element, keyframes, instruction.duration, instruction.delay, instruction.easing, previousPlayers);\n        }\n        // special case for when an empty transition|definition is provided\n        // ... there is no point in rendering an empty animation\n        return new NoopAnimationPlayer(instruction.duration, instruction.delay);\n    }\n}\nclass TransitionAnimationPlayer {\n    namespaceId;\n    triggerName;\n    element;\n    _player = new NoopAnimationPlayer();\n    _containsRealPlayer = false;\n    _queuedCallbacks = new Map();\n    destroyed = false;\n    parentPlayer = null;\n    markedForDestroy = false;\n    disabled = false;\n    queued = true;\n    totalTime = 0;\n    constructor(namespaceId, triggerName, element) {\n        this.namespaceId = namespaceId;\n        this.triggerName = triggerName;\n        this.element = element;\n    }\n    setRealPlayer(player) {\n        if (this._containsRealPlayer)\n            return;\n        this._player = player;\n        this._queuedCallbacks.forEach((callbacks, phase) => {\n            callbacks.forEach((callback) => listenOnPlayer(player, phase, undefined, callback));\n        });\n        this._queuedCallbacks.clear();\n        this._containsRealPlayer = true;\n        this.overrideTotalTime(player.totalTime);\n        this.queued = false;\n    }\n    getRealPlayer() {\n        return this._player;\n    }\n    overrideTotalTime(totalTime) {\n        this.totalTime = totalTime;\n    }\n    syncPlayerEvents(player) {\n        const p = this._player;\n        if (p.triggerCallback) {\n            player.onStart(() => p.triggerCallback('start'));\n        }\n        player.onDone(() => this.finish());\n        player.onDestroy(() => this.destroy());\n    }\n    _queueEvent(name, callback) {\n        getOrSetDefaultValue(this._queuedCallbacks, name, []).push(callback);\n    }\n    onDone(fn) {\n        if (this.queued) {\n            this._queueEvent('done', fn);\n        }\n        this._player.onDone(fn);\n    }\n    onStart(fn) {\n        if (this.queued) {\n            this._queueEvent('start', fn);\n        }\n        this._player.onStart(fn);\n    }\n    onDestroy(fn) {\n        if (this.queued) {\n            this._queueEvent('destroy', fn);\n        }\n        this._player.onDestroy(fn);\n    }\n    init() {\n        this._player.init();\n    }\n    hasStarted() {\n        return this.queued ? false : this._player.hasStarted();\n    }\n    play() {\n        !this.queued && this._player.play();\n    }\n    pause() {\n        !this.queued && this._player.pause();\n    }\n    restart() {\n        !this.queued && this._player.restart();\n    }\n    finish() {\n        this._player.finish();\n    }\n    destroy() {\n        this.destroyed = true;\n        this._player.destroy();\n    }\n    reset() {\n        !this.queued && this._player.reset();\n    }\n    setPosition(p) {\n        if (!this.queued) {\n            this._player.setPosition(p);\n        }\n    }\n    getPosition() {\n        return this.queued ? 0 : this._player.getPosition();\n    }\n    /** @internal */\n    triggerCallback(phaseName) {\n        const p = this._player;\n        if (p.triggerCallback) {\n            p.triggerCallback(phaseName);\n        }\n    }\n}\nfunction deleteOrUnsetInMap(map, key, value) {\n    let currentValues = map.get(key);\n    if (currentValues) {\n        if (currentValues.length) {\n            const index = currentValues.indexOf(value);\n            currentValues.splice(index, 1);\n        }\n        if (currentValues.length == 0) {\n            map.delete(key);\n        }\n    }\n    return currentValues;\n}\nfunction normalizeTriggerValue(value) {\n    // we use `!= null` here because it's the most simple\n    // way to test against a \"falsy\" value without mixing\n    // in empty strings or a zero value. DO NOT OPTIMIZE.\n    return value != null ? value : null;\n}\nfunction isElementNode(node) {\n    return node && node['nodeType'] === 1;\n}\nfunction isTriggerEventValid(eventName) {\n    return eventName == 'start' || eventName == 'done';\n}\nfunction cloakElement(element, value) {\n    const oldValue = element.style.display;\n    element.style.display = value != null ? value : 'none';\n    return oldValue;\n}\nfunction cloakAndComputeStyles(valuesMap, driver, elements, elementPropsMap, defaultStyle) {\n    const cloakVals = [];\n    elements.forEach((element) => cloakVals.push(cloakElement(element)));\n    const failedElements = [];\n    elementPropsMap.forEach((props, element) => {\n        const styles = new Map();\n        props.forEach((prop) => {\n            const value = driver.computeStyle(element, prop, defaultStyle);\n            styles.set(prop, value);\n            // there is no easy way to detect this because a sub element could be removed\n            // by a parent animation element being detached.\n            if (!value || value.length == 0) {\n                element[REMOVAL_FLAG] = NULL_REMOVED_QUERIED_STATE;\n                failedElements.push(element);\n            }\n        });\n        valuesMap.set(element, styles);\n    });\n    // we use a index variable here since Set.forEach(a, i) does not return\n    // an index value for the closure (but instead just the value)\n    let i = 0;\n    elements.forEach((element) => cloakElement(element, cloakVals[i++]));\n    return failedElements;\n}\n/*\nSince the Angular renderer code will return a collection of inserted\nnodes in all areas of a DOM tree, it's up to this algorithm to figure\nout which nodes are roots for each animation @trigger.\n\nBy placing each inserted node into a Set and traversing upwards, it\nis possible to find the @trigger elements and well any direct *star\ninsertion nodes, if a @trigger root is found then the enter element\nis placed into the Map[@trigger] spot.\n */\nfunction buildRootMap(roots, nodes) {\n    const rootMap = new Map();\n    roots.forEach((root) => rootMap.set(root, []));\n    if (nodes.length == 0)\n        return rootMap;\n    const NULL_NODE = 1;\n    const nodeSet = new Set(nodes);\n    const localRootMap = new Map();\n    function getRoot(node) {\n        if (!node)\n            return NULL_NODE;\n        let root = localRootMap.get(node);\n        if (root)\n            return root;\n        const parent = node.parentNode;\n        if (rootMap.has(parent)) {\n            // ngIf inside @trigger\n            root = parent;\n        }\n        else if (nodeSet.has(parent)) {\n            // ngIf inside ngIf\n            root = NULL_NODE;\n        }\n        else {\n            // recurse upwards\n            root = getRoot(parent);\n        }\n        localRootMap.set(node, root);\n        return root;\n    }\n    nodes.forEach((node) => {\n        const root = getRoot(node);\n        if (root !== NULL_NODE) {\n            rootMap.get(root).push(node);\n        }\n    });\n    return rootMap;\n}\nfunction addClass(element, className) {\n    element.classList?.add(className);\n}\nfunction removeClass(element, className) {\n    element.classList?.remove(className);\n}\nfunction removeNodesAfterAnimationDone(engine, element, players) {\n    optimizeGroupPlayer(players).onDone(() => engine.processLeaveNode(element));\n}\nfunction flattenGroupPlayers(players) {\n    const finalPlayers = [];\n    _flattenGroupPlayersRecur(players, finalPlayers);\n    return finalPlayers;\n}\nfunction _flattenGroupPlayersRecur(players, finalPlayers) {\n    for (let i = 0; i < players.length; i++) {\n        const player = players[i];\n        if (player instanceof AnimationGroupPlayer) {\n            _flattenGroupPlayersRecur(player.players, finalPlayers);\n        }\n        else {\n            finalPlayers.push(player);\n        }\n    }\n}\nfunction objEquals(a, b) {\n    const k1 = Object.keys(a);\n    const k2 = Object.keys(b);\n    if (k1.length != k2.length)\n        return false;\n    for (let i = 0; i < k1.length; i++) {\n        const prop = k1[i];\n        if (!b.hasOwnProperty(prop) || a[prop] !== b[prop])\n            return false;\n    }\n    return true;\n}\nfunction replacePostStylesAsPre(element, allPreStyleElements, allPostStyleElements) {\n    const postEntry = allPostStyleElements.get(element);\n    if (!postEntry)\n        return false;\n    let preEntry = allPreStyleElements.get(element);\n    if (preEntry) {\n        postEntry.forEach((data) => preEntry.add(data));\n    }\n    else {\n        allPreStyleElements.set(element, postEntry);\n    }\n    allPostStyleElements.delete(element);\n    return true;\n}\n\nclass AnimationEngine {\n    _driver;\n    _normalizer;\n    _transitionEngine;\n    _timelineEngine;\n    _triggerCache = {};\n    // this method is designed to be overridden by the code that uses this engine\n    onRemovalComplete = (element, context) => { };\n    constructor(doc, _driver, _normalizer) {\n        this._driver = _driver;\n        this._normalizer = _normalizer;\n        this._transitionEngine = new TransitionAnimationEngine(doc.body, _driver, _normalizer);\n        this._timelineEngine = new TimelineAnimationEngine(doc.body, _driver, _normalizer);\n        this._transitionEngine.onRemovalComplete = (element, context) => this.onRemovalComplete(element, context);\n    }\n    registerTrigger(componentId, namespaceId, hostElement, name, metadata) {\n        const cacheKey = componentId + '-' + name;\n        let trigger = this._triggerCache[cacheKey];\n        if (!trigger) {\n            const errors = [];\n            const warnings = [];\n            const ast = buildAnimationAst(this._driver, metadata, errors, warnings);\n            if (errors.length) {\n                throw triggerBuildFailed(name, errors);\n            }\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                if (warnings.length) {\n                    warnTriggerBuild(name, warnings);\n                }\n            }\n            trigger = buildTrigger(name, ast, this._normalizer);\n            this._triggerCache[cacheKey] = trigger;\n        }\n        this._transitionEngine.registerTrigger(namespaceId, name, trigger);\n    }\n    register(namespaceId, hostElement) {\n        this._transitionEngine.register(namespaceId, hostElement);\n    }\n    destroy(namespaceId, context) {\n        this._transitionEngine.destroy(namespaceId, context);\n    }\n    onInsert(namespaceId, element, parent, insertBefore) {\n        this._transitionEngine.insertNode(namespaceId, element, parent, insertBefore);\n    }\n    onRemove(namespaceId, element, context) {\n        this._transitionEngine.removeNode(namespaceId, element, context);\n    }\n    disableAnimations(element, disable) {\n        this._transitionEngine.markElementAsDisabled(element, disable);\n    }\n    process(namespaceId, element, property, value) {\n        if (property.charAt(0) == '@') {\n            const [id, action] = parseTimelineCommand(property);\n            const args = value;\n            this._timelineEngine.command(id, element, action, args);\n        }\n        else {\n            this._transitionEngine.trigger(namespaceId, element, property, value);\n        }\n    }\n    listen(namespaceId, element, eventName, eventPhase, callback) {\n        // @@listen\n        if (eventName.charAt(0) == '@') {\n            const [id, action] = parseTimelineCommand(eventName);\n            return this._timelineEngine.listen(id, element, action, callback);\n        }\n        return this._transitionEngine.listen(namespaceId, element, eventName, eventPhase, callback);\n    }\n    flush(microtaskId = -1) {\n        this._transitionEngine.flush(microtaskId);\n    }\n    get players() {\n        return [...this._transitionEngine.players, ...this._timelineEngine.players];\n    }\n    whenRenderingDone() {\n        return this._transitionEngine.whenRenderingDone();\n    }\n    afterFlushAnimationsDone(cb) {\n        this._transitionEngine.afterFlushAnimationsDone(cb);\n    }\n}\n\n/**\n * Returns an instance of `SpecialCasedStyles` if and when any special (non animateable) styles are\n * detected.\n *\n * In CSS there exist properties that cannot be animated within a keyframe animation\n * (whether it be via CSS keyframes or web-animations) and the animation implementation\n * will ignore them. This function is designed to detect those special cased styles and\n * return a container that will be executed at the start and end of the animation.\n *\n * @returns an instance of `SpecialCasedStyles` if any special styles are detected otherwise `null`\n */\nfunction packageNonAnimatableStyles(element, styles) {\n    let startStyles = null;\n    let endStyles = null;\n    if (Array.isArray(styles) && styles.length) {\n        startStyles = filterNonAnimatableStyles(styles[0]);\n        if (styles.length > 1) {\n            endStyles = filterNonAnimatableStyles(styles[styles.length - 1]);\n        }\n    }\n    else if (styles instanceof Map) {\n        startStyles = filterNonAnimatableStyles(styles);\n    }\n    return startStyles || endStyles ? new SpecialCasedStyles(element, startStyles, endStyles) : null;\n}\n/**\n * Designed to be executed during a keyframe-based animation to apply any special-cased styles.\n *\n * When started (when the `start()` method is run) then the provided `startStyles`\n * will be applied. When finished (when the `finish()` method is called) the\n * `endStyles` will be applied as well any any starting styles. Finally when\n * `destroy()` is called then all styles will be removed.\n */\nclass SpecialCasedStyles {\n    _element;\n    _startStyles;\n    _endStyles;\n    static initialStylesByElement = /* @__PURE__ */ new WeakMap();\n    _state = 0 /* SpecialCasedStylesState.Pending */;\n    _initialStyles;\n    constructor(_element, _startStyles, _endStyles) {\n        this._element = _element;\n        this._startStyles = _startStyles;\n        this._endStyles = _endStyles;\n        let initialStyles = SpecialCasedStyles.initialStylesByElement.get(_element);\n        if (!initialStyles) {\n            SpecialCasedStyles.initialStylesByElement.set(_element, (initialStyles = new Map()));\n        }\n        this._initialStyles = initialStyles;\n    }\n    start() {\n        if (this._state < 1 /* SpecialCasedStylesState.Started */) {\n            if (this._startStyles) {\n                setStyles(this._element, this._startStyles, this._initialStyles);\n            }\n            this._state = 1 /* SpecialCasedStylesState.Started */;\n        }\n    }\n    finish() {\n        this.start();\n        if (this._state < 2 /* SpecialCasedStylesState.Finished */) {\n            setStyles(this._element, this._initialStyles);\n            if (this._endStyles) {\n                setStyles(this._element, this._endStyles);\n                this._endStyles = null;\n            }\n            this._state = 1 /* SpecialCasedStylesState.Started */;\n        }\n    }\n    destroy() {\n        this.finish();\n        if (this._state < 3 /* SpecialCasedStylesState.Destroyed */) {\n            SpecialCasedStyles.initialStylesByElement.delete(this._element);\n            if (this._startStyles) {\n                eraseStyles(this._element, this._startStyles);\n                this._endStyles = null;\n            }\n            if (this._endStyles) {\n                eraseStyles(this._element, this._endStyles);\n                this._endStyles = null;\n            }\n            setStyles(this._element, this._initialStyles);\n            this._state = 3 /* SpecialCasedStylesState.Destroyed */;\n        }\n    }\n}\nfunction filterNonAnimatableStyles(styles) {\n    let result = null;\n    styles.forEach((val, prop) => {\n        if (isNonAnimatableStyle(prop)) {\n            result = result || new Map();\n            result.set(prop, val);\n        }\n    });\n    return result;\n}\nfunction isNonAnimatableStyle(prop) {\n    return prop === 'display' || prop === 'position';\n}\n\nclass WebAnimationsPlayer {\n    element;\n    keyframes;\n    options;\n    _specialStyles;\n    _onDoneFns = [];\n    _onStartFns = [];\n    _onDestroyFns = [];\n    _duration;\n    _delay;\n    _initialized = false;\n    _finished = false;\n    _started = false;\n    _destroyed = false;\n    _finalKeyframe;\n    // the following original fns are persistent copies of the _onStartFns and _onDoneFns\n    // and are used to reset the fns to their original values upon reset()\n    // (since the _onStartFns and _onDoneFns get deleted after they are called)\n    _originalOnDoneFns = [];\n    _originalOnStartFns = [];\n    // using non-null assertion because it's re(set) by init();\n    domPlayer;\n    time = 0;\n    parentPlayer = null;\n    currentSnapshot = new Map();\n    constructor(element, keyframes, options, _specialStyles) {\n        this.element = element;\n        this.keyframes = keyframes;\n        this.options = options;\n        this._specialStyles = _specialStyles;\n        this._duration = options['duration'];\n        this._delay = options['delay'] || 0;\n        this.time = this._duration + this._delay;\n    }\n    _onFinish() {\n        if (!this._finished) {\n            this._finished = true;\n            this._onDoneFns.forEach((fn) => fn());\n            this._onDoneFns = [];\n        }\n    }\n    init() {\n        this._buildPlayer();\n        this._preparePlayerBeforeStart();\n    }\n    _buildPlayer() {\n        if (this._initialized)\n            return;\n        this._initialized = true;\n        const keyframes = this.keyframes;\n        // @ts-expect-error overwriting a readonly property\n        this.domPlayer = this._triggerWebAnimation(this.element, keyframes, this.options);\n        this._finalKeyframe = keyframes.length ? keyframes[keyframes.length - 1] : new Map();\n        const onFinish = () => this._onFinish();\n        this.domPlayer.addEventListener('finish', onFinish);\n        this.onDestroy(() => {\n            // We must remove the `finish` event listener once an animation has completed all its\n            // iterations. This action is necessary to prevent a memory leak since the listener captures\n            // `this`, creating a closure that prevents `this` from being garbage collected.\n            this.domPlayer.removeEventListener('finish', onFinish);\n        });\n    }\n    _preparePlayerBeforeStart() {\n        // this is required so that the player doesn't start to animate right away\n        if (this._delay) {\n            this._resetDomPlayerState();\n        }\n        else {\n            this.domPlayer.pause();\n        }\n    }\n    _convertKeyframesToObject(keyframes) {\n        const kfs = [];\n        keyframes.forEach((frame) => {\n            kfs.push(Object.fromEntries(frame));\n        });\n        return kfs;\n    }\n    /** @internal */\n    _triggerWebAnimation(element, keyframes, options) {\n        return element.animate(this._convertKeyframesToObject(keyframes), options);\n    }\n    onStart(fn) {\n        this._originalOnStartFns.push(fn);\n        this._onStartFns.push(fn);\n    }\n    onDone(fn) {\n        this._originalOnDoneFns.push(fn);\n        this._onDoneFns.push(fn);\n    }\n    onDestroy(fn) {\n        this._onDestroyFns.push(fn);\n    }\n    play() {\n        this._buildPlayer();\n        if (!this.hasStarted()) {\n            this._onStartFns.forEach((fn) => fn());\n            this._onStartFns = [];\n            this._started = true;\n            if (this._specialStyles) {\n                this._specialStyles.start();\n            }\n        }\n        this.domPlayer.play();\n    }\n    pause() {\n        this.init();\n        this.domPlayer.pause();\n    }\n    finish() {\n        this.init();\n        if (this._specialStyles) {\n            this._specialStyles.finish();\n        }\n        this._onFinish();\n        this.domPlayer.finish();\n    }\n    reset() {\n        this._resetDomPlayerState();\n        this._destroyed = false;\n        this._finished = false;\n        this._started = false;\n        this._onStartFns = this._originalOnStartFns;\n        this._onDoneFns = this._originalOnDoneFns;\n    }\n    _resetDomPlayerState() {\n        if (this.domPlayer) {\n            this.domPlayer.cancel();\n        }\n    }\n    restart() {\n        this.reset();\n        this.play();\n    }\n    hasStarted() {\n        return this._started;\n    }\n    destroy() {\n        if (!this._destroyed) {\n            this._destroyed = true;\n            this._resetDomPlayerState();\n            this._onFinish();\n            if (this._specialStyles) {\n                this._specialStyles.destroy();\n            }\n            this._onDestroyFns.forEach((fn) => fn());\n            this._onDestroyFns = [];\n        }\n    }\n    setPosition(p) {\n        if (this.domPlayer === undefined) {\n            this.init();\n        }\n        this.domPlayer.currentTime = p * this.time;\n    }\n    getPosition() {\n        // tsc is complaining with TS2362 without the conversion to number\n        return +(this.domPlayer.currentTime ?? 0) / this.time;\n    }\n    get totalTime() {\n        return this._delay + this._duration;\n    }\n    beforeDestroy() {\n        const styles = new Map();\n        if (this.hasStarted()) {\n            // note: this code is invoked only when the `play` function was called prior to this\n            // (thus `hasStarted` returns true), this implies that the code that initializes\n            // `_finalKeyframe` has also been executed and the non-null assertion can be safely used here\n            const finalKeyframe = this._finalKeyframe;\n            finalKeyframe.forEach((val, prop) => {\n                if (prop !== 'offset') {\n                    styles.set(prop, this._finished ? val : computeStyle(this.element, prop));\n                }\n            });\n        }\n        this.currentSnapshot = styles;\n    }\n    /** @internal */\n    triggerCallback(phaseName) {\n        const methods = phaseName === 'start' ? this._onStartFns : this._onDoneFns;\n        methods.forEach((fn) => fn());\n        methods.length = 0;\n    }\n}\n\nclass WebAnimationsDriver {\n    validateStyleProperty(prop) {\n        // Perform actual validation in dev mode only, in prod mode this check is a noop.\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            return validateStyleProperty(prop);\n        }\n        return true;\n    }\n    validateAnimatableStyleProperty(prop) {\n        // Perform actual validation in dev mode only, in prod mode this check is a noop.\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            const cssProp = camelCaseToDashCase(prop);\n            return validateWebAnimatableStyleProperty(cssProp);\n        }\n        return true;\n    }\n    containsElement(elm1, elm2) {\n        return containsElement(elm1, elm2);\n    }\n    getParentElement(element) {\n        return getParentElement(element);\n    }\n    query(element, selector, multi) {\n        return invokeQuery(element, selector, multi);\n    }\n    computeStyle(element, prop, defaultValue) {\n        return computeStyle(element, prop);\n    }\n    animate(element, keyframes, duration, delay, easing, previousPlayers = []) {\n        const fill = delay == 0 ? 'both' : 'forwards';\n        const playerOptions = { duration, delay, fill };\n        // we check for this to avoid having a null|undefined value be present\n        // for the easing (which results in an error for certain browsers #9752)\n        if (easing) {\n            playerOptions['easing'] = easing;\n        }\n        const previousStyles = new Map();\n        const previousWebAnimationPlayers = (previousPlayers.filter((player) => player instanceof WebAnimationsPlayer));\n        if (allowPreviousPlayerStylesMerge(duration, delay)) {\n            previousWebAnimationPlayers.forEach((player) => {\n                player.currentSnapshot.forEach((val, prop) => previousStyles.set(prop, val));\n            });\n        }\n        let _keyframes = normalizeKeyframes$1(keyframes).map((styles) => new Map(styles));\n        _keyframes = balancePreviousStylesIntoKeyframes(element, _keyframes, previousStyles);\n        const specialStyles = packageNonAnimatableStyles(element, _keyframes);\n        return new WebAnimationsPlayer(element, _keyframes, playerOptions, specialStyles);\n    }\n}\n\nfunction createEngine(type, doc) {\n    // TODO: find a way to make this tree shakable.\n    if (type === 'noop') {\n        return new AnimationEngine(doc, new NoopAnimationDriver(), new NoopAnimationStyleNormalizer());\n    }\n    return new AnimationEngine(doc, new WebAnimationsDriver(), new WebAnimationsStyleNormalizer());\n}\n\nclass Animation {\n    _driver;\n    _animationAst;\n    constructor(_driver, input) {\n        this._driver = _driver;\n        const errors = [];\n        const warnings = [];\n        const ast = buildAnimationAst(_driver, input, errors, warnings);\n        if (errors.length) {\n            throw validationFailed(errors);\n        }\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (warnings.length) {\n                warnValidation(warnings);\n            }\n        }\n        this._animationAst = ast;\n    }\n    buildTimelines(element, startingStyles, destinationStyles, options, subInstructions) {\n        const start = Array.isArray(startingStyles)\n            ? normalizeStyles(startingStyles)\n            : startingStyles;\n        const dest = Array.isArray(destinationStyles)\n            ? normalizeStyles(destinationStyles)\n            : destinationStyles;\n        const errors = [];\n        subInstructions = subInstructions || new ElementInstructionMap();\n        const result = buildAnimationTimelines(this._driver, element, this._animationAst, ENTER_CLASSNAME, LEAVE_CLASSNAME, start, dest, options, subInstructions, errors);\n        if (errors.length) {\n            throw buildingFailed(errors);\n        }\n        return result;\n    }\n}\n\nconst ANIMATION_PREFIX = '@';\nconst DISABLE_ANIMATIONS_FLAG = '@.disabled';\nclass BaseAnimationRenderer {\n    namespaceId;\n    delegate;\n    engine;\n    _onDestroy;\n    // We need to explicitly type this property because of an api-extractor bug\n    // See https://github.com/microsoft/rushstack/issues/4390\n    ɵtype = 0 /* AnimationRendererType.Regular */;\n    constructor(namespaceId, delegate, engine, _onDestroy) {\n        this.namespaceId = namespaceId;\n        this.delegate = delegate;\n        this.engine = engine;\n        this._onDestroy = _onDestroy;\n    }\n    get data() {\n        return this.delegate.data;\n    }\n    destroyNode(node) {\n        this.delegate.destroyNode?.(node);\n    }\n    destroy() {\n        this.engine.destroy(this.namespaceId, this.delegate);\n        this.engine.afterFlushAnimationsDone(() => {\n            // Call the renderer destroy method after the animations has finished as otherwise\n            // styles will be removed too early which will cause an unstyled animation.\n            queueMicrotask(() => {\n                this.delegate.destroy();\n            });\n        });\n        this._onDestroy?.();\n    }\n    createElement(name, namespace) {\n        return this.delegate.createElement(name, namespace);\n    }\n    createComment(value) {\n        return this.delegate.createComment(value);\n    }\n    createText(value) {\n        return this.delegate.createText(value);\n    }\n    appendChild(parent, newChild) {\n        this.delegate.appendChild(parent, newChild);\n        this.engine.onInsert(this.namespaceId, newChild, parent, false);\n    }\n    insertBefore(parent, newChild, refChild, isMove = true) {\n        this.delegate.insertBefore(parent, newChild, refChild);\n        // If `isMove` true than we should animate this insert.\n        this.engine.onInsert(this.namespaceId, newChild, parent, isMove);\n    }\n    removeChild(parent, oldChild, isHostElement) {\n        // Prior to the changes in #57203, this method wasn't being called at all by `core` if the child\n        // doesn't have a parent. There appears to be some animation-specific downstream logic that\n        // depends on the null check happening before the animation engine. This check keeps the old\n        // behavior while allowing `core` to not have to check for the parent element anymore.\n        if (this.parentNode(oldChild)) {\n            this.engine.onRemove(this.namespaceId, oldChild, this.delegate);\n        }\n    }\n    selectRootElement(selectorOrNode, preserveContent) {\n        return this.delegate.selectRootElement(selectorOrNode, preserveContent);\n    }\n    parentNode(node) {\n        return this.delegate.parentNode(node);\n    }\n    nextSibling(node) {\n        return this.delegate.nextSibling(node);\n    }\n    setAttribute(el, name, value, namespace) {\n        this.delegate.setAttribute(el, name, value, namespace);\n    }\n    removeAttribute(el, name, namespace) {\n        this.delegate.removeAttribute(el, name, namespace);\n    }\n    addClass(el, name) {\n        this.delegate.addClass(el, name);\n    }\n    removeClass(el, name) {\n        this.delegate.removeClass(el, name);\n    }\n    setStyle(el, style, value, flags) {\n        this.delegate.setStyle(el, style, value, flags);\n    }\n    removeStyle(el, style, flags) {\n        this.delegate.removeStyle(el, style, flags);\n    }\n    setProperty(el, name, value) {\n        if (name.charAt(0) == ANIMATION_PREFIX && name == DISABLE_ANIMATIONS_FLAG) {\n            this.disableAnimations(el, !!value);\n        }\n        else {\n            this.delegate.setProperty(el, name, value);\n        }\n    }\n    setValue(node, value) {\n        this.delegate.setValue(node, value);\n    }\n    listen(target, eventName, callback, options) {\n        return this.delegate.listen(target, eventName, callback, options);\n    }\n    disableAnimations(element, value) {\n        this.engine.disableAnimations(element, value);\n    }\n}\nclass AnimationRenderer extends BaseAnimationRenderer {\n    factory;\n    constructor(factory, namespaceId, delegate, engine, onDestroy) {\n        super(namespaceId, delegate, engine, onDestroy);\n        this.factory = factory;\n        this.namespaceId = namespaceId;\n    }\n    setProperty(el, name, value) {\n        if (name.charAt(0) == ANIMATION_PREFIX) {\n            if (name.charAt(1) == '.' && name == DISABLE_ANIMATIONS_FLAG) {\n                value = value === undefined ? true : !!value;\n                this.disableAnimations(el, value);\n            }\n            else {\n                this.engine.process(this.namespaceId, el, name.slice(1), value);\n            }\n        }\n        else {\n            this.delegate.setProperty(el, name, value);\n        }\n    }\n    listen(target, eventName, callback, options) {\n        if (eventName.charAt(0) == ANIMATION_PREFIX) {\n            const element = resolveElementFromTarget(target);\n            let name = eventName.slice(1);\n            let phase = '';\n            // @listener.phase is for trigger animation callbacks\n            // @@listener is for animation builder callbacks\n            if (name.charAt(0) != ANIMATION_PREFIX) {\n                [name, phase] = parseTriggerCallbackName(name);\n            }\n            return this.engine.listen(this.namespaceId, element, name, phase, (event) => {\n                const countId = event['_data'] || -1;\n                this.factory.scheduleListenerCallback(countId, callback, event);\n            });\n        }\n        return this.delegate.listen(target, eventName, callback, options);\n    }\n}\nfunction resolveElementFromTarget(target) {\n    switch (target) {\n        case 'body':\n            return document.body;\n        case 'document':\n            return document;\n        case 'window':\n            return window;\n        default:\n            return target;\n    }\n}\nfunction parseTriggerCallbackName(triggerName) {\n    const dotIndex = triggerName.indexOf('.');\n    const trigger = triggerName.substring(0, dotIndex);\n    const phase = triggerName.slice(dotIndex + 1);\n    return [trigger, phase];\n}\n\nclass AnimationRendererFactory {\n    delegate;\n    engine;\n    _zone;\n    _currentId = 0;\n    _microtaskId = 1;\n    _animationCallbacksBuffer = [];\n    _rendererCache = new Map();\n    _cdRecurDepth = 0;\n    constructor(delegate, engine, _zone) {\n        this.delegate = delegate;\n        this.engine = engine;\n        this._zone = _zone;\n        engine.onRemovalComplete = (element, delegate) => {\n            delegate?.removeChild(null, element);\n        };\n    }\n    createRenderer(hostElement, type) {\n        const EMPTY_NAMESPACE_ID = '';\n        // cache the delegates to find out which cached delegate can\n        // be used by which cached renderer\n        const delegate = this.delegate.createRenderer(hostElement, type);\n        if (!hostElement || !type?.data?.['animation']) {\n            const cache = this._rendererCache;\n            let renderer = cache.get(delegate);\n            if (!renderer) {\n                // Ensure that the renderer is removed from the cache on destroy\n                // since it may contain references to detached DOM nodes.\n                const onRendererDestroy = () => cache.delete(delegate);\n                renderer = new BaseAnimationRenderer(EMPTY_NAMESPACE_ID, delegate, this.engine, onRendererDestroy);\n                // only cache this result when the base renderer is used\n                cache.set(delegate, renderer);\n            }\n            return renderer;\n        }\n        const componentId = type.id;\n        const namespaceId = type.id + '-' + this._currentId;\n        this._currentId++;\n        this.engine.register(namespaceId, hostElement);\n        const registerTrigger = (trigger) => {\n            if (Array.isArray(trigger)) {\n                trigger.forEach(registerTrigger);\n            }\n            else {\n                this.engine.registerTrigger(componentId, namespaceId, hostElement, trigger.name, trigger);\n            }\n        };\n        const animationTriggers = type.data['animation'];\n        animationTriggers.forEach(registerTrigger);\n        return new AnimationRenderer(this, namespaceId, delegate, this.engine);\n    }\n    begin() {\n        this._cdRecurDepth++;\n        if (this.delegate.begin) {\n            this.delegate.begin();\n        }\n    }\n    _scheduleCountTask() {\n        queueMicrotask(() => {\n            this._microtaskId++;\n        });\n    }\n    /** @internal */\n    scheduleListenerCallback(count, fn, data) {\n        if (count >= 0 && count < this._microtaskId) {\n            this._zone.run(() => fn(data));\n            return;\n        }\n        const animationCallbacksBuffer = this._animationCallbacksBuffer;\n        if (animationCallbacksBuffer.length == 0) {\n            queueMicrotask(() => {\n                this._zone.run(() => {\n                    animationCallbacksBuffer.forEach((tuple) => {\n                        const [fn, data] = tuple;\n                        fn(data);\n                    });\n                    this._animationCallbacksBuffer = [];\n                });\n            });\n        }\n        animationCallbacksBuffer.push([fn, data]);\n    }\n    end() {\n        this._cdRecurDepth--;\n        // this is to prevent animations from running twice when an inner\n        // component does CD when a parent component instead has inserted it\n        if (this._cdRecurDepth == 0) {\n            this._zone.runOutsideAngular(() => {\n                this._scheduleCountTask();\n                this.engine.flush(this._microtaskId);\n            });\n        }\n        if (this.delegate.end) {\n            this.delegate.end();\n        }\n    }\n    whenRenderingDone() {\n        return this.engine.whenRenderingDone();\n    }\n    /**\n     * Used during HMR to clear any cached data about a component.\n     * @param componentId ID of the component that is being replaced.\n     */\n    componentReplaced(componentId) {\n        // Flush the engine since the renderer destruction waits for animations to be done.\n        this.engine.flush();\n        this.delegate.componentReplaced?.(componentId);\n    }\n}\n\nexport { AnimationDriver, NoopAnimationDriver, Animation as ɵAnimation, AnimationEngine as ɵAnimationEngine, AnimationRenderer as ɵAnimationRenderer, AnimationRendererFactory as ɵAnimationRendererFactory, AnimationStyleNormalizer as ɵAnimationStyleNormalizer, BaseAnimationRenderer as ɵBaseAnimationRenderer, ENTER_CLASSNAME as ɵENTER_CLASSNAME, LEAVE_CLASSNAME as ɵLEAVE_CLASSNAME, NoopAnimationStyleNormalizer as ɵNoopAnimationStyleNormalizer, TransitionAnimationPlayer as ɵTransitionAnimationPlayer, WebAnimationsDriver as ɵWebAnimationsDriver, WebAnimationsPlayer as ɵWebAnimationsPlayer, WebAnimationsStyleNormalizer as ɵWebAnimationsStyleNormalizer, allowPreviousPlayerStylesMerge as ɵallowPreviousPlayerStylesMerge, camelCaseToDashCase as ɵcamelCaseToDashCase, containsElement as ɵcontainsElement, createEngine as ɵcreateEngine, getParentElement as ɵgetParentElement, invokeQuery as ɵinvokeQuery, normalizeKeyframes$1 as ɵnormalizeKeyframes, validateStyleProperty as ɵvalidateStyleProperty, validateWebAnimatableStyleProperty as ɵvalidateWebAnimatableStyleProperty };\n\n","/**\n * @license Angular v20.1.7\n * (c) 2010-2025 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport * as i0 from '@angular/core';\nimport { Injectable, Inject, ANIMATION_MODULE_TYPE, RendererFactory2, NgZone, NgModule, ɵperformanceMarkFeature as _performanceMarkFeature } from '@angular/core';\nexport { ANIMATION_MODULE_TYPE } from '@angular/core';\nimport * as i1 from '@angular/animations/browser';\nimport { ɵAnimationEngine as _AnimationEngine, AnimationDriver, NoopAnimationDriver, ɵWebAnimationsDriver as _WebAnimationsDriver, ɵAnimationStyleNormalizer as _AnimationStyleNormalizer, ɵWebAnimationsStyleNormalizer as _WebAnimationsStyleNormalizer, ɵAnimationRendererFactory as _AnimationRendererFactory } from '@angular/animations/browser';\nimport { DOCUMENT } from '@angular/common';\nimport { DomRendererFactory2 } from './dom_renderer.mjs';\nimport { BrowserModule } from './browser.mjs';\n\nclass InjectableAnimationEngine extends _AnimationEngine {\n    // The `ApplicationRef` is injected here explicitly to force the dependency ordering.\n    // Since the `ApplicationRef` should be created earlier before the `AnimationEngine`, they\n    // both have `ngOnDestroy` hooks and `flush()` must be called after all views are destroyed.\n    constructor(doc, driver, normalizer) {\n        super(doc, driver, normalizer);\n    }\n    ngOnDestroy() {\n        this.flush();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: InjectableAnimationEngine, deps: [{ token: DOCUMENT }, { token: i1.AnimationDriver }, { token: i1.ɵAnimationStyleNormalizer }], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: InjectableAnimationEngine });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: InjectableAnimationEngine, decorators: [{\n            type: Injectable\n        }], ctorParameters: () => [{ type: Document, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i1.AnimationDriver }, { type: i1.ɵAnimationStyleNormalizer }] });\nfunction instantiateDefaultStyleNormalizer() {\n    return new _WebAnimationsStyleNormalizer();\n}\nfunction instantiateRendererFactory(renderer, engine, zone) {\n    return new _AnimationRendererFactory(renderer, engine, zone);\n}\nconst SHARED_ANIMATION_PROVIDERS = [\n    { provide: _AnimationStyleNormalizer, useFactory: instantiateDefaultStyleNormalizer },\n    { provide: _AnimationEngine, useClass: InjectableAnimationEngine },\n    {\n        provide: RendererFactory2,\n        useFactory: instantiateRendererFactory,\n        deps: [DomRendererFactory2, _AnimationEngine, NgZone],\n    },\n];\n/**\n * Separate providers from the actual module so that we can do a local modification in Google3 to\n * include them in the BrowserTestingModule.\n */\nconst BROWSER_NOOP_ANIMATIONS_PROVIDERS = [\n    { provide: AnimationDriver, useClass: NoopAnimationDriver },\n    { provide: ANIMATION_MODULE_TYPE, useValue: 'NoopAnimations' },\n    ...SHARED_ANIMATION_PROVIDERS,\n];\n/**\n * Separate providers from the actual module so that we can do a local modification in Google3 to\n * include them in the BrowserModule.\n */\nconst BROWSER_ANIMATIONS_PROVIDERS = [\n    // Note: the `ngServerMode` happen inside factories to give the variable time to initialize.\n    {\n        provide: AnimationDriver,\n        useFactory: () => typeof ngServerMode !== 'undefined' && ngServerMode\n            ? new NoopAnimationDriver()\n            : new _WebAnimationsDriver(),\n    },\n    {\n        provide: ANIMATION_MODULE_TYPE,\n        useFactory: () => typeof ngServerMode !== 'undefined' && ngServerMode ? 'NoopAnimations' : 'BrowserAnimations',\n    },\n    ...SHARED_ANIMATION_PROVIDERS,\n];\n\n/**\n * Exports `BrowserModule` with additional dependency-injection providers\n * for use with animations. See [Animations](guide/animations).\n * @publicApi\n */\nclass BrowserAnimationsModule {\n    /**\n     * Configures the module based on the specified object.\n     *\n     * @param config Object used to configure the behavior of the `BrowserAnimationsModule`.\n     * @see {@link BrowserAnimationsModuleConfig}\n     *\n     * @usageNotes\n     * When registering the `BrowserAnimationsModule`, you can use the `withConfig`\n     * function as follows:\n     * ```ts\n     * @NgModule({\n     *   imports: [BrowserAnimationsModule.withConfig(config)]\n     * })\n     * class MyNgModule {}\n     * ```\n     */\n    static withConfig(config) {\n        return {\n            ngModule: BrowserAnimationsModule,\n            providers: config.disableAnimations\n                ? BROWSER_NOOP_ANIMATIONS_PROVIDERS\n                : BROWSER_ANIMATIONS_PROVIDERS,\n        };\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: BrowserAnimationsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.1.7\", ngImport: i0, type: BrowserAnimationsModule, exports: [BrowserModule] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: BrowserAnimationsModule, providers: BROWSER_ANIMATIONS_PROVIDERS, imports: [BrowserModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: BrowserAnimationsModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [BrowserModule],\n                    providers: BROWSER_ANIMATIONS_PROVIDERS,\n                }]\n        }] });\n/**\n * Returns the set of dependency-injection providers\n * to enable animations in an application. See [animations guide](guide/animations)\n * to learn more about animations in Angular.\n *\n * @usageNotes\n *\n * The function is useful when you want to enable animations in an application\n * bootstrapped using the `bootstrapApplication` function. In this scenario there\n * is no need to import the `BrowserAnimationsModule` NgModule at all, just add\n * providers returned by this function to the `providers` list as show below.\n *\n * ```ts\n * bootstrapApplication(RootComponent, {\n *   providers: [\n *     provideAnimations()\n *   ]\n * });\n * ```\n *\n * @publicApi\n */\nfunction provideAnimations() {\n    _performanceMarkFeature('NgEagerAnimations');\n    // Return a copy to prevent changes to the original array in case any in-place\n    // alterations are performed to the `provideAnimations` call results in app code.\n    return [...BROWSER_ANIMATIONS_PROVIDERS];\n}\n/**\n * A null player that must be imported to allow disabling of animations.\n * @publicApi\n */\nclass NoopAnimationsModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: NoopAnimationsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.1.7\", ngImport: i0, type: NoopAnimationsModule, exports: [BrowserModule] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: NoopAnimationsModule, providers: BROWSER_NOOP_ANIMATIONS_PROVIDERS, imports: [BrowserModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: NoopAnimationsModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [BrowserModule],\n                    providers: BROWSER_NOOP_ANIMATIONS_PROVIDERS,\n                }]\n        }] });\n/**\n * Returns the set of dependency-injection providers\n * to disable animations in an application. See [animations guide](guide/animations)\n * to learn more about animations in Angular.\n *\n * @usageNotes\n *\n * The function is useful when you want to bootstrap an application using\n * the `bootstrapApplication` function, but you need to disable animations\n * (for example, when running tests).\n *\n * ```ts\n * bootstrapApplication(RootComponent, {\n *   providers: [\n *     provideNoopAnimations()\n *   ]\n * });\n * ```\n *\n * @publicApi\n */\nfunction provideNoopAnimations() {\n    // Return a copy to prevent changes to the original array in case any in-place\n    // alterations are performed to the `provideNoopAnimations` call results in app code.\n    return [...BROWSER_NOOP_ANIMATIONS_PROVIDERS];\n}\n\nexport { BrowserAnimationsModule, NoopAnimationsModule, provideAnimations, provideNoopAnimations, InjectableAnimationEngine as ɵInjectableAnimationEngine };\n\n","/* angular:styles/component:scss;a12c62d9a766beaa9d06541a410868cf610928d74b618254721f94c910c3656a;C:\\Users\\donmi\\Downloads\\test\\frontend\\src\\app\\components\\data-generation\\data-generation.component.ts */\n.page-container {\n  min-height: 100vh;\n  padding: 0;\n}\n.hero-section {\n  background:\n    linear-gradient(\n      135deg,\n      rgba(255, 255, 255, 0.1) 0%,\n      rgba(255, 255, 255, 0.05) 100%);\n  -webkit-backdrop-filter: blur(20px);\n  backdrop-filter: blur(20px);\n  border-radius: 24px;\n  padding: 48px;\n  margin-bottom: 32px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  position: relative;\n  overflow: hidden;\n}\n.hero-section::before {\n  content: \"\";\n  position: absolute;\n  top: -50%;\n  right: -50%;\n  width: 200%;\n  height: 200%;\n  background:\n    radial-gradient(\n      circle,\n      rgba(255, 255, 255, 0.1) 0%,\n      transparent 70%);\n  animation: float 6s ease-in-out infinite;\n}\n@keyframes float {\n  0%, 100% {\n    transform: translateY(0px) rotate(0deg);\n  }\n  50% {\n    transform: translateY(-20px) rotate(180deg);\n  }\n}\n.hero-content {\n  flex: 1;\n  z-index: 1;\n}\n.hero-title {\n  color: white;\n  font-size: 48px;\n  font-weight: 700;\n  margin: 0 0 16px 0;\n  display: flex;\n  align-items: center;\n  gap: 16px;\n  text-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n}\n.hero-icon {\n  font-size: 48px;\n  width: 48px;\n  height: 48px;\n  color: #ff6b6b;\n}\n.hero-subtitle {\n  color: rgba(255, 255, 255, 0.9);\n  font-size: 20px;\n  margin: 0;\n  line-height: 1.6;\n  max-width: 600px;\n}\n.hero-visual {\n  position: relative;\n  z-index: 1;\n}\n.floating-card {\n  width: 120px;\n  height: 120px;\n  background:\n    linear-gradient(\n      135deg,\n      #ff6b6b,\n      #feca57);\n  border-radius: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0 20px 40px rgba(0, 0, 0, 0.2);\n  animation: float 4s ease-in-out infinite;\n}\n.floating-card mat-icon {\n  font-size: 48px;\n  width: 48px;\n  height: 48px;\n  color: white;\n}\n.form-container {\n  margin-bottom: 48px;\n}\n.main-card {\n  background: rgba(255, 255, 255, 0.95);\n  -webkit-backdrop-filter: blur(20px);\n  backdrop-filter: blur(20px);\n  border-radius: 24px;\n  box-shadow: 0 20px 60px rgba(0, 0, 0, 0.1);\n  border: 1px solid rgba(255, 255, 255, 0.2);\n  overflow: hidden;\n}\n.card-header {\n  background:\n    linear-gradient(\n      135deg,\n      #667eea 0%,\n      #764ba2 100%);\n  color: white;\n  padding: 32px;\n  text-align: center;\n}\n.header-icon {\n  width: 64px;\n  height: 64px;\n  background: rgba(255, 255, 255, 0.2);\n  border-radius: 16px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 0 auto 16px;\n}\n.header-icon mat-icon {\n  font-size: 32px;\n  width: 32px;\n  height: 32px;\n  color: white;\n}\n.card-header mat-card-title {\n  font-size: 32px;\n  font-weight: 700;\n  margin: 0 0 8px 0;\n}\n.card-header mat-card-subtitle {\n  font-size: 16px;\n  opacity: 0.9;\n  margin: 0;\n}\n.card-content {\n  padding: 48px;\n}\n.generation-form {\n  max-width: 600px;\n  margin: 0 auto;\n}\n.form-section {\n  margin-bottom: 32px;\n}\n.section-label {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  font-size: 18px;\n  font-weight: 600;\n  color: #333;\n  margin-bottom: 16px;\n}\n.section-label mat-icon {\n  color: #667eea;\n}\n.input-group {\n  margin-bottom: 16px;\n}\n.full-width {\n  width: 100%;\n}\n.quick-selection {\n  margin-top: 16px;\n}\n.amount-chip {\n  cursor: pointer;\n  transition: all 0.3s ease;\n  margin: 4px;\n}\n.amount-chip:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n}\n.amount-chip.selected {\n  background: #667eea !important;\n  color: white !important;\n}\n.validation-messages {\n  margin-top: 8px;\n}\n.error-message {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  color: #f44336;\n  font-size: 14px;\n  margin: 4px 0;\n}\n.error-message mat-icon {\n  font-size: 16px;\n  width: 16px;\n  height: 16px;\n}\n.submit-section {\n  text-align: center;\n  margin: 32px 0;\n}\n.submit-button {\n  padding: 16px 48px;\n  font-size: 18px;\n  font-weight: 600;\n  border-radius: 50px;\n  box-shadow: 0 8px 25px rgba(102, 126, 234, 0.3);\n  transition: all 0.3s ease;\n}\n.submit-button:hover:not(:disabled) {\n  transform: translateY(-2px);\n  box-shadow: 0 12px 35px rgba(102, 126, 234, 0.4);\n}\n.performance-button {\n  padding: 16px 32px;\n  font-size: 16px;\n  font-weight: 500;\n  border-radius: 50px;\n  margin-left: 16px;\n  transition: all 0.3s ease;\n}\n.performance-button:hover:not(:disabled) {\n  transform: translateY(-2px);\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n}\n.submit-button mat-icon {\n  margin-right: 8px;\n}\n.progress-section {\n  background: rgba(102, 126, 234, 0.1);\n  border-radius: 16px;\n  padding: 24px;\n  margin: 24px 0;\n  text-align: center;\n}\n.progress-header {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 12px;\n  margin-bottom: 16px;\n  color: #667eea;\n  font-weight: 600;\n}\n.progress-icon {\n  animation: spin 2s linear infinite;\n}\n@keyframes spin {\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n}\n.progress-bar {\n  height: 8px;\n  border-radius: 4px;\n}\n.progress-text {\n  color: #666;\n  margin: 16px 0 0 0;\n  font-size: 14px;\n}\n.results-section {\n  background: rgba(76, 175, 80, 0.1);\n  border-radius: 16px;\n  padding: 24px;\n  margin: 24px 0;\n  border-left: 4px solid #4caf50;\n}\n.result-header {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  margin-bottom: 20px;\n}\n.result-icon {\n  font-size: 32px;\n  width: 32px;\n  height: 32px;\n}\n.result-icon.success {\n  color: #4caf50;\n}\n.result-icon.error {\n  color: #f44336;\n}\n.result-header h3 {\n  margin: 0;\n  color: #333;\n  font-size: 24px;\n}\n.result-content {\n  margin-bottom: 20px;\n}\n.result-item {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 12px 0;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n}\n.result-item:last-child {\n  border-bottom: none;\n}\n.label {\n  font-weight: 600;\n  color: #666;\n}\n.value {\n  font-weight: 500;\n  color: #333;\n}\n.value.success {\n  color: #4caf50;\n}\n.value.error {\n  color: #f44336;\n}\n.value.highlight {\n  color: #667eea;\n  font-weight: 700;\n}\n.file-path {\n  font-family: \"Courier New\", monospace;\n  background: rgba(0, 0, 0, 0.05);\n  padding: 4px 8px;\n  border-radius: 4px;\n  font-size: 12px;\n}\n.success-actions {\n  display: flex;\n  gap: 16px;\n  justify-content: center;\n  flex-wrap: wrap;\n}\n.action-button {\n  border-radius: 25px;\n  padding: 8px 24px;\n  transition: all 0.3s ease;\n}\n.action-button:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n}\n.info-section {\n  margin-top: 48px;\n}\n.info-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n  gap: 24px;\n}\n.info-card {\n  background: rgba(255, 255, 255, 0.9);\n  -webkit-backdrop-filter: blur(20px);\n  backdrop-filter: blur(20px);\n  border-radius: 16px;\n  border: 1px solid rgba(255, 255, 255, 0.2);\n  transition: all 0.3s ease;\n}\n.info-card:hover {\n  transform: translateY(-4px);\n  box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);\n}\n.info-card mat-card-header {\n  padding: 24px 24px 16px;\n}\n.info-icon {\n  color: #667eea;\n  font-size: 32px;\n  width: 32px;\n  height: 32px;\n}\n.info-card mat-card-title {\n  color: #333;\n  font-size: 20px;\n  font-weight: 600;\n}\n.info-card mat-card-content {\n  padding: 0 24px 24px;\n}\n.info-card p {\n  color: #666;\n  line-height: 1.6;\n  margin: 0;\n}\n@media (max-width: 768px) {\n  .hero-section {\n    flex-direction: column;\n    text-align: center;\n    padding: 32px 24px;\n  }\n  .hero-title {\n    font-size: 32px;\n  }\n  .hero-subtitle {\n    font-size: 16px;\n  }\n  .floating-card {\n    width: 80px;\n    height: 80px;\n    margin-top: 24px;\n  }\n  .floating-card mat-icon {\n    font-size: 32px;\n    width: 32px;\n    height: 32px;\n  }\n  .card-content {\n    padding: 24px;\n  }\n  .info-grid {\n    grid-template-columns: 1fr;\n  }\n}\n/*# sourceMappingURL=data-generation.component.css.map */\n","import * as i0 from '@angular/core';\nimport { InjectionToken, inject, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, Directive, NgModule } from '@angular/core';\nimport { M as MatCommonModule } from './common-module-cKSwHniA.mjs';\nimport '@angular/cdk/a11y';\nimport '@angular/cdk/bidi';\n\n/** Injection token that can be used to provide the default options the card module. */\nconst MAT_CARD_CONFIG = new InjectionToken('MAT_CARD_CONFIG');\n/**\n * Material Design card component. Cards contain content and actions about a single subject.\n * See https://material.io/design/components/cards.html\n *\n * MatCard provides no behaviors, instead serving as a purely visual treatment.\n */\nclass MatCard {\n    appearance;\n    constructor() {\n        const config = inject(MAT_CARD_CONFIG, { optional: true });\n        this.appearance = config?.appearance || 'raised';\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatCard, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatCard, isStandalone: true, selector: \"mat-card\", inputs: { appearance: \"appearance\" }, host: { properties: { \"class.mat-mdc-card-outlined\": \"appearance === \\\"outlined\\\"\", \"class.mdc-card--outlined\": \"appearance === \\\"outlined\\\"\", \"class.mat-mdc-card-filled\": \"appearance === \\\"filled\\\"\", \"class.mdc-card--filled\": \"appearance === \\\"filled\\\"\" }, classAttribute: \"mat-mdc-card mdc-card\" }, exportAs: [\"matCard\"], ngImport: i0, template: \"<ng-content></ng-content>\\n\", styles: [\".mat-mdc-card{display:flex;flex-direction:column;box-sizing:border-box;position:relative;border-style:solid;border-width:0;background-color:var(--mat-card-elevated-container-color, var(--mat-sys-surface-container-low));border-color:var(--mat-card-elevated-container-color, var(--mat-sys-surface-container-low));border-radius:var(--mat-card-elevated-container-shape, var(--mat-sys-corner-medium));box-shadow:var(--mat-card-elevated-container-elevation, var(--mat-sys-level1))}.mat-mdc-card::after{position:absolute;top:0;left:0;width:100%;height:100%;border:solid 1px rgba(0,0,0,0);content:\\\"\\\";display:block;pointer-events:none;box-sizing:border-box;border-radius:var(--mat-card-elevated-container-shape, var(--mat-sys-corner-medium))}.mat-mdc-card-outlined{background-color:var(--mat-card-outlined-container-color, var(--mat-sys-surface));border-radius:var(--mat-card-outlined-container-shape, var(--mat-sys-corner-medium));border-width:var(--mat-card-outlined-outline-width, 1px);border-color:var(--mat-card-outlined-outline-color, var(--mat-sys-outline-variant));box-shadow:var(--mat-card-outlined-container-elevation, var(--mat-sys-level0))}.mat-mdc-card-outlined::after{border:none}.mat-mdc-card-filled{background-color:var(--mat-card-filled-container-color, var(--mat-sys-surface-container-highest));border-radius:var(--mat-card-filled-container-shape, var(--mat-sys-corner-medium));box-shadow:var(--mat-card-filled-container-elevation, var(--mat-sys-level0))}.mdc-card__media{position:relative;box-sizing:border-box;background-repeat:no-repeat;background-position:center;background-size:cover}.mdc-card__media::before{display:block;content:\\\"\\\"}.mdc-card__media:first-child{border-top-left-radius:inherit;border-top-right-radius:inherit}.mdc-card__media:last-child{border-bottom-left-radius:inherit;border-bottom-right-radius:inherit}.mat-mdc-card-actions{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;min-height:52px;padding:8px}.mat-mdc-card-title{font-family:var(--mat-card-title-text-font, var(--mat-sys-title-large-font));line-height:var(--mat-card-title-text-line-height, var(--mat-sys-title-large-line-height));font-size:var(--mat-card-title-text-size, var(--mat-sys-title-large-size));letter-spacing:var(--mat-card-title-text-tracking, var(--mat-sys-title-large-tracking));font-weight:var(--mat-card-title-text-weight, var(--mat-sys-title-large-weight))}.mat-mdc-card-subtitle{color:var(--mat-card-subtitle-text-color, var(--mat-sys-on-surface));font-family:var(--mat-card-subtitle-text-font, var(--mat-sys-title-medium-font));line-height:var(--mat-card-subtitle-text-line-height, var(--mat-sys-title-medium-line-height));font-size:var(--mat-card-subtitle-text-size, var(--mat-sys-title-medium-size));letter-spacing:var(--mat-card-subtitle-text-tracking, var(--mat-sys-title-medium-tracking));font-weight:var(--mat-card-subtitle-text-weight, var(--mat-sys-title-medium-weight))}.mat-mdc-card-title,.mat-mdc-card-subtitle{display:block;margin:0}.mat-mdc-card-avatar~.mat-mdc-card-header-text .mat-mdc-card-title,.mat-mdc-card-avatar~.mat-mdc-card-header-text .mat-mdc-card-subtitle{padding:16px 16px 0}.mat-mdc-card-header{display:flex;padding:16px 16px 0}.mat-mdc-card-content{display:block;padding:0 16px}.mat-mdc-card-content:first-child{padding-top:16px}.mat-mdc-card-content:last-child{padding-bottom:16px}.mat-mdc-card-title-group{display:flex;justify-content:space-between;width:100%}.mat-mdc-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;margin-bottom:16px;object-fit:cover}.mat-mdc-card-avatar~.mat-mdc-card-header-text .mat-mdc-card-subtitle,.mat-mdc-card-avatar~.mat-mdc-card-header-text .mat-mdc-card-title{line-height:normal}.mat-mdc-card-sm-image{width:80px;height:80px}.mat-mdc-card-md-image{width:112px;height:112px}.mat-mdc-card-lg-image{width:152px;height:152px}.mat-mdc-card-xl-image{width:240px;height:240px}.mat-mdc-card-subtitle~.mat-mdc-card-title,.mat-mdc-card-title~.mat-mdc-card-subtitle,.mat-mdc-card-header .mat-mdc-card-header-text .mat-mdc-card-title,.mat-mdc-card-header .mat-mdc-card-header-text .mat-mdc-card-subtitle,.mat-mdc-card-title-group .mat-mdc-card-title,.mat-mdc-card-title-group .mat-mdc-card-subtitle{padding-top:0}.mat-mdc-card-content>:last-child:not(.mat-mdc-card-footer){margin-bottom:0}.mat-mdc-card-actions-align-end{justify-content:flex-end}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatCard, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-card', host: {\n                        'class': 'mat-mdc-card mdc-card',\n                        '[class.mat-mdc-card-outlined]': 'appearance === \"outlined\"',\n                        '[class.mdc-card--outlined]': 'appearance === \"outlined\"',\n                        '[class.mat-mdc-card-filled]': 'appearance === \"filled\"',\n                        '[class.mdc-card--filled]': 'appearance === \"filled\"',\n                    }, exportAs: 'matCard', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-content></ng-content>\\n\", styles: [\".mat-mdc-card{display:flex;flex-direction:column;box-sizing:border-box;position:relative;border-style:solid;border-width:0;background-color:var(--mat-card-elevated-container-color, var(--mat-sys-surface-container-low));border-color:var(--mat-card-elevated-container-color, var(--mat-sys-surface-container-low));border-radius:var(--mat-card-elevated-container-shape, var(--mat-sys-corner-medium));box-shadow:var(--mat-card-elevated-container-elevation, var(--mat-sys-level1))}.mat-mdc-card::after{position:absolute;top:0;left:0;width:100%;height:100%;border:solid 1px rgba(0,0,0,0);content:\\\"\\\";display:block;pointer-events:none;box-sizing:border-box;border-radius:var(--mat-card-elevated-container-shape, var(--mat-sys-corner-medium))}.mat-mdc-card-outlined{background-color:var(--mat-card-outlined-container-color, var(--mat-sys-surface));border-radius:var(--mat-card-outlined-container-shape, var(--mat-sys-corner-medium));border-width:var(--mat-card-outlined-outline-width, 1px);border-color:var(--mat-card-outlined-outline-color, var(--mat-sys-outline-variant));box-shadow:var(--mat-card-outlined-container-elevation, var(--mat-sys-level0))}.mat-mdc-card-outlined::after{border:none}.mat-mdc-card-filled{background-color:var(--mat-card-filled-container-color, var(--mat-sys-surface-container-highest));border-radius:var(--mat-card-filled-container-shape, var(--mat-sys-corner-medium));box-shadow:var(--mat-card-filled-container-elevation, var(--mat-sys-level0))}.mdc-card__media{position:relative;box-sizing:border-box;background-repeat:no-repeat;background-position:center;background-size:cover}.mdc-card__media::before{display:block;content:\\\"\\\"}.mdc-card__media:first-child{border-top-left-radius:inherit;border-top-right-radius:inherit}.mdc-card__media:last-child{border-bottom-left-radius:inherit;border-bottom-right-radius:inherit}.mat-mdc-card-actions{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;min-height:52px;padding:8px}.mat-mdc-card-title{font-family:var(--mat-card-title-text-font, var(--mat-sys-title-large-font));line-height:var(--mat-card-title-text-line-height, var(--mat-sys-title-large-line-height));font-size:var(--mat-card-title-text-size, var(--mat-sys-title-large-size));letter-spacing:var(--mat-card-title-text-tracking, var(--mat-sys-title-large-tracking));font-weight:var(--mat-card-title-text-weight, var(--mat-sys-title-large-weight))}.mat-mdc-card-subtitle{color:var(--mat-card-subtitle-text-color, var(--mat-sys-on-surface));font-family:var(--mat-card-subtitle-text-font, var(--mat-sys-title-medium-font));line-height:var(--mat-card-subtitle-text-line-height, var(--mat-sys-title-medium-line-height));font-size:var(--mat-card-subtitle-text-size, var(--mat-sys-title-medium-size));letter-spacing:var(--mat-card-subtitle-text-tracking, var(--mat-sys-title-medium-tracking));font-weight:var(--mat-card-subtitle-text-weight, var(--mat-sys-title-medium-weight))}.mat-mdc-card-title,.mat-mdc-card-subtitle{display:block;margin:0}.mat-mdc-card-avatar~.mat-mdc-card-header-text .mat-mdc-card-title,.mat-mdc-card-avatar~.mat-mdc-card-header-text .mat-mdc-card-subtitle{padding:16px 16px 0}.mat-mdc-card-header{display:flex;padding:16px 16px 0}.mat-mdc-card-content{display:block;padding:0 16px}.mat-mdc-card-content:first-child{padding-top:16px}.mat-mdc-card-content:last-child{padding-bottom:16px}.mat-mdc-card-title-group{display:flex;justify-content:space-between;width:100%}.mat-mdc-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;margin-bottom:16px;object-fit:cover}.mat-mdc-card-avatar~.mat-mdc-card-header-text .mat-mdc-card-subtitle,.mat-mdc-card-avatar~.mat-mdc-card-header-text .mat-mdc-card-title{line-height:normal}.mat-mdc-card-sm-image{width:80px;height:80px}.mat-mdc-card-md-image{width:112px;height:112px}.mat-mdc-card-lg-image{width:152px;height:152px}.mat-mdc-card-xl-image{width:240px;height:240px}.mat-mdc-card-subtitle~.mat-mdc-card-title,.mat-mdc-card-title~.mat-mdc-card-subtitle,.mat-mdc-card-header .mat-mdc-card-header-text .mat-mdc-card-title,.mat-mdc-card-header .mat-mdc-card-header-text .mat-mdc-card-subtitle,.mat-mdc-card-title-group .mat-mdc-card-title,.mat-mdc-card-title-group .mat-mdc-card-subtitle{padding-top:0}.mat-mdc-card-content>:last-child:not(.mat-mdc-card-footer){margin-bottom:0}.mat-mdc-card-actions-align-end{justify-content:flex-end}\\n\"] }]\n        }], ctorParameters: () => [], propDecorators: { appearance: [{\n                type: Input\n            }] } });\n// TODO(jelbourn): add `MatActionCard`, which is a card that acts like a button (and has a ripple).\n// Supported in MDC with `.mdc-card__primary-action`. Will require additional a11y docs for users.\n/**\n * Title of a card, intended for use within `<mat-card>`. This component is an optional\n * convenience for one variety of card title; any custom title element may be used in its place.\n *\n * MatCardTitle provides no behaviors, instead serving as a purely visual treatment.\n */\nclass MatCardTitle {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatCardTitle, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatCardTitle, isStandalone: true, selector: \"mat-card-title, [mat-card-title], [matCardTitle]\", host: { classAttribute: \"mat-mdc-card-title\" }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatCardTitle, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `mat-card-title, [mat-card-title], [matCardTitle]`,\n                    host: { 'class': 'mat-mdc-card-title' },\n                }]\n        }] });\n/**\n * Container intended to be used within the `<mat-card>` component. Can contain exactly one\n * `<mat-card-title>`, one `<mat-card-subtitle>` and one content image of any size\n * (e.g. `<img matCardLgImage>`).\n */\nclass MatCardTitleGroup {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatCardTitleGroup, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatCardTitleGroup, isStandalone: true, selector: \"mat-card-title-group\", host: { classAttribute: \"mat-mdc-card-title-group\" }, ngImport: i0, template: \"<div>\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content select=\\\"[mat-card-image], [matCardImage],\\n                    [mat-card-sm-image], [matCardImageSmall],\\n                    [mat-card-md-image], [matCardImageMedium],\\n                    [mat-card-lg-image], [matCardImageLarge],\\n                    [mat-card-xl-image], [matCardImageXLarge]\\\"></ng-content>\\n<ng-content></ng-content>\\n\", changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatCardTitleGroup, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-card-title-group', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, host: { 'class': 'mat-mdc-card-title-group' }, template: \"<div>\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content select=\\\"[mat-card-image], [matCardImage],\\n                    [mat-card-sm-image], [matCardImageSmall],\\n                    [mat-card-md-image], [matCardImageMedium],\\n                    [mat-card-lg-image], [matCardImageLarge],\\n                    [mat-card-xl-image], [matCardImageXLarge]\\\"></ng-content>\\n<ng-content></ng-content>\\n\" }]\n        }] });\n/**\n * Content of a card, intended for use within `<mat-card>`. This component is an optional\n * convenience for use with other convenience elements, such as `<mat-card-title>`; any custom\n * content block element may be used in its place.\n *\n * MatCardContent provides no behaviors, instead serving as a purely visual treatment.\n */\nclass MatCardContent {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatCardContent, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatCardContent, isStandalone: true, selector: \"mat-card-content\", host: { classAttribute: \"mat-mdc-card-content\" }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatCardContent, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-card-content',\n                    host: { 'class': 'mat-mdc-card-content' },\n                }]\n        }] });\n/**\n * Sub-title of a card, intended for use within `<mat-card>` beneath a `<mat-card-title>`. This\n * component is an optional convenience for use with other convenience elements, such as\n * `<mat-card-title>`.\n *\n * MatCardSubtitle provides no behaviors, instead serving as a purely visual treatment.\n */\nclass MatCardSubtitle {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatCardSubtitle, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatCardSubtitle, isStandalone: true, selector: \"mat-card-subtitle, [mat-card-subtitle], [matCardSubtitle]\", host: { classAttribute: \"mat-mdc-card-subtitle\" }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatCardSubtitle, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `mat-card-subtitle, [mat-card-subtitle], [matCardSubtitle]`,\n                    host: { 'class': 'mat-mdc-card-subtitle' },\n                }]\n        }] });\n/**\n * Bottom area of a card that contains action buttons, intended for use within `<mat-card>`.\n * This component is an optional convenience for use with other convenience elements, such as\n * `<mat-card-content>`; any custom action block element may be used in its place.\n *\n * MatCardActions provides no behaviors, instead serving as a purely visual treatment.\n */\nclass MatCardActions {\n    // TODO(jelbourn): deprecate `align` in favor of `actionPosition` or `actionAlignment`\n    // as to not conflict with the native `align` attribute.\n    /** Position of the actions inside the card. */\n    align = 'start';\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatCardActions, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatCardActions, isStandalone: true, selector: \"mat-card-actions\", inputs: { align: \"align\" }, host: { properties: { \"class.mat-mdc-card-actions-align-end\": \"align === \\\"end\\\"\" }, classAttribute: \"mat-mdc-card-actions mdc-card__actions\" }, exportAs: [\"matCardActions\"], ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatCardActions, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-card-actions',\n                    exportAs: 'matCardActions',\n                    host: {\n                        'class': 'mat-mdc-card-actions mdc-card__actions',\n                        '[class.mat-mdc-card-actions-align-end]': 'align === \"end\"',\n                    },\n                }]\n        }], propDecorators: { align: [{\n                type: Input\n            }] } });\n/**\n * Header region of a card, intended for use within `<mat-card>`. This header captures\n * a card title, subtitle, and avatar.  This component is an optional convenience for use with\n * other convenience elements, such as `<mat-card-footer>`; any custom header block element may be\n * used in its place.\n *\n * MatCardHeader provides no behaviors, instead serving as a purely visual treatment.\n */\nclass MatCardHeader {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatCardHeader, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatCardHeader, isStandalone: true, selector: \"mat-card-header\", host: { classAttribute: \"mat-mdc-card-header\" }, ngImport: i0, template: \"<ng-content select=\\\"[mat-card-avatar], [matCardAvatar]\\\"></ng-content>\\n<div class=\\\"mat-mdc-card-header-text\\\">\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content></ng-content>\\n\", changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatCardHeader, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-card-header', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, host: { 'class': 'mat-mdc-card-header' }, template: \"<ng-content select=\\\"[mat-card-avatar], [matCardAvatar]\\\"></ng-content>\\n<div class=\\\"mat-mdc-card-header-text\\\">\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content></ng-content>\\n\" }]\n        }] });\n/**\n * Footer area a card, intended for use within `<mat-card>`.\n * This component is an optional convenience for use with other convenience elements, such as\n * `<mat-card-content>`; any custom footer block element may be used in its place.\n *\n * MatCardFooter provides no behaviors, instead serving as a purely visual treatment.\n */\nclass MatCardFooter {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatCardFooter, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatCardFooter, isStandalone: true, selector: \"mat-card-footer\", host: { classAttribute: \"mat-mdc-card-footer\" }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatCardFooter, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-card-footer',\n                    host: { 'class': 'mat-mdc-card-footer' },\n                }]\n        }] });\n// TODO(jelbourn): deprecate the \"image\" selectors to replace with \"media\".\n// TODO(jelbourn): support `.mdc-card__media-content`.\n/**\n * Primary image content for a card, intended for use within `<mat-card>`. Can be applied to\n * any media element, such as `<img>` or `<picture>`.\n *\n * This component is an optional convenience for use with other convenience elements, such as\n * `<mat-card-content>`; any custom media element may be used in its place.\n *\n * MatCardImage provides no behaviors, instead serving as a purely visual treatment.\n */\nclass MatCardImage {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatCardImage, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatCardImage, isStandalone: true, selector: \"[mat-card-image], [matCardImage]\", host: { classAttribute: \"mat-mdc-card-image mdc-card__media\" }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatCardImage, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-card-image], [matCardImage]',\n                    host: { 'class': 'mat-mdc-card-image mdc-card__media' },\n                }]\n        }] });\n/** Same as `MatCardImage`, but small. */\nclass MatCardSmImage {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatCardSmImage, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatCardSmImage, isStandalone: true, selector: \"[mat-card-sm-image], [matCardImageSmall]\", host: { classAttribute: \"mat-mdc-card-sm-image mdc-card__media\" }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatCardSmImage, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-card-sm-image], [matCardImageSmall]',\n                    host: { 'class': 'mat-mdc-card-sm-image mdc-card__media' },\n                }]\n        }] });\n/** Same as `MatCardImage`, but medium. */\nclass MatCardMdImage {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatCardMdImage, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatCardMdImage, isStandalone: true, selector: \"[mat-card-md-image], [matCardImageMedium]\", host: { classAttribute: \"mat-mdc-card-md-image mdc-card__media\" }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatCardMdImage, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-card-md-image], [matCardImageMedium]',\n                    host: { 'class': 'mat-mdc-card-md-image mdc-card__media' },\n                }]\n        }] });\n/** Same as `MatCardImage`, but large. */\nclass MatCardLgImage {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatCardLgImage, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatCardLgImage, isStandalone: true, selector: \"[mat-card-lg-image], [matCardImageLarge]\", host: { classAttribute: \"mat-mdc-card-lg-image mdc-card__media\" }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatCardLgImage, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-card-lg-image], [matCardImageLarge]',\n                    host: { 'class': 'mat-mdc-card-lg-image mdc-card__media' },\n                }]\n        }] });\n/** Same as `MatCardImage`, but extra-large. */\nclass MatCardXlImage {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatCardXlImage, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatCardXlImage, isStandalone: true, selector: \"[mat-card-xl-image], [matCardImageXLarge]\", host: { classAttribute: \"mat-mdc-card-xl-image mdc-card__media\" }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatCardXlImage, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-card-xl-image], [matCardImageXLarge]',\n                    host: { 'class': 'mat-mdc-card-xl-image mdc-card__media' },\n                }]\n        }] });\n/**\n * Avatar image content for a card, intended for use within `<mat-card>`. Can be applied to\n * any media element, such as `<img>` or `<picture>`.\n *\n * This component is an optional convenience for use with other convenience elements, such as\n * `<mat-card-title>`; any custom media element may be used in its place.\n *\n * MatCardAvatar provides no behaviors, instead serving as a purely visual treatment.\n */\nclass MatCardAvatar {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatCardAvatar, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatCardAvatar, isStandalone: true, selector: \"[mat-card-avatar], [matCardAvatar]\", host: { classAttribute: \"mat-mdc-card-avatar\" }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatCardAvatar, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-card-avatar], [matCardAvatar]',\n                    host: { 'class': 'mat-mdc-card-avatar' },\n                }]\n        }] });\n\nconst CARD_DIRECTIVES = [\n    MatCard,\n    MatCardActions,\n    MatCardAvatar,\n    MatCardContent,\n    MatCardFooter,\n    MatCardHeader,\n    MatCardImage,\n    MatCardLgImage,\n    MatCardMdImage,\n    MatCardSmImage,\n    MatCardSubtitle,\n    MatCardTitle,\n    MatCardTitleGroup,\n    MatCardXlImage,\n];\nclass MatCardModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatCardModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.0\", ngImport: i0, type: MatCardModule, imports: [MatCommonModule, MatCard,\n            MatCardActions,\n            MatCardAvatar,\n            MatCardContent,\n            MatCardFooter,\n            MatCardHeader,\n            MatCardImage,\n            MatCardLgImage,\n            MatCardMdImage,\n            MatCardSmImage,\n            MatCardSubtitle,\n            MatCardTitle,\n            MatCardTitleGroup,\n            MatCardXlImage], exports: [MatCard,\n            MatCardActions,\n            MatCardAvatar,\n            MatCardContent,\n            MatCardFooter,\n            MatCardHeader,\n            MatCardImage,\n            MatCardLgImage,\n            MatCardMdImage,\n            MatCardSmImage,\n            MatCardSubtitle,\n            MatCardTitle,\n            MatCardTitleGroup,\n            MatCardXlImage, MatCommonModule] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatCardModule, imports: [MatCommonModule, MatCommonModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatCardModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule, ...CARD_DIRECTIVES],\n                    exports: [CARD_DIRECTIVES, MatCommonModule],\n                }]\n        }] });\n\nexport { MAT_CARD_CONFIG, MatCard, MatCardActions, MatCardAvatar, MatCardContent, MatCardFooter, MatCardHeader, MatCardImage, MatCardLgImage, MatCardMdImage, MatCardModule, MatCardSmImage, MatCardSubtitle, MatCardTitle, MatCardTitleGroup, MatCardXlImage };\n\n","import * as i0 from '@angular/core';\nimport { inject, NgZone, RendererFactory2, Injectable } from '@angular/core';\nimport { Subject, Observable } from 'rxjs';\nimport { filter, shareReplay, takeUntil } from 'rxjs/operators';\n\n/**\n * Handler that logs \"ResizeObserver loop limit exceeded\" errors.\n * These errors are not shown in the Chrome console, so we log them to ensure developers are aware.\n * @param e The error\n */\nconst loopLimitExceededErrorHandler = (e) => {\n    if (e instanceof ErrorEvent && e.message === 'ResizeObserver loop limit exceeded') {\n        console.error(`${e.message}. This could indicate a performance issue with your app. See https://github.com/WICG/resize-observer/blob/master/explainer.md#error-handling`);\n    }\n};\n/**\n * A shared ResizeObserver to be used for a particular box type (content-box, border-box, or\n * device-pixel-content-box)\n */\nclass SingleBoxSharedResizeObserver {\n    _box;\n    /** Stream that emits when the shared observer is destroyed. */\n    _destroyed = new Subject();\n    /** Stream of all events from the ResizeObserver. */\n    _resizeSubject = new Subject();\n    /** ResizeObserver used to observe element resize events. */\n    _resizeObserver;\n    /** A map of elements to streams of their resize events. */\n    _elementObservables = new Map();\n    constructor(\n    /** The box type to observe for resizes. */\n    _box) {\n        this._box = _box;\n        if (typeof ResizeObserver !== 'undefined') {\n            this._resizeObserver = new ResizeObserver(entries => this._resizeSubject.next(entries));\n        }\n    }\n    /**\n     * Gets a stream of resize events for the given element.\n     * @param target The element to observe.\n     * @return The stream of resize events for the element.\n     */\n    observe(target) {\n        if (!this._elementObservables.has(target)) {\n            this._elementObservables.set(target, new Observable(observer => {\n                const subscription = this._resizeSubject.subscribe(observer);\n                this._resizeObserver?.observe(target, { box: this._box });\n                return () => {\n                    this._resizeObserver?.unobserve(target);\n                    subscription.unsubscribe();\n                    this._elementObservables.delete(target);\n                };\n            }).pipe(filter(entries => entries.some(entry => entry.target === target)), \n            // Share a replay of the last event so that subsequent calls to observe the same element\n            // receive initial sizing info like the first one. Also enable ref counting so the\n            // element will be automatically unobserved when there are no more subscriptions.\n            shareReplay({ bufferSize: 1, refCount: true }), takeUntil(this._destroyed)));\n        }\n        return this._elementObservables.get(target);\n    }\n    /** Destroys this instance. */\n    destroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._resizeSubject.complete();\n        this._elementObservables.clear();\n    }\n}\n/**\n * Allows observing resize events on multiple elements using a shared set of ResizeObserver.\n * Sharing a ResizeObserver instance is recommended for better performance (see\n * https://github.com/WICG/resize-observer/issues/59).\n *\n * Rather than share a single `ResizeObserver`, this class creates one `ResizeObserver` per type\n * of observed box ('content-box', 'border-box', and 'device-pixel-content-box'). This avoids\n * later calls to `observe` with a different box type from influencing the events dispatched to\n * earlier calls.\n */\nclass SharedResizeObserver {\n    _cleanupErrorListener;\n    /** Map of box type to shared resize observer. */\n    _observers = new Map();\n    /** The Angular zone. */\n    _ngZone = inject(NgZone);\n    constructor() {\n        if (typeof ResizeObserver !== 'undefined' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            this._ngZone.runOutsideAngular(() => {\n                const renderer = inject(RendererFactory2).createRenderer(null, null);\n                this._cleanupErrorListener = renderer.listen('window', 'error', loopLimitExceededErrorHandler);\n            });\n        }\n    }\n    ngOnDestroy() {\n        for (const [, observer] of this._observers) {\n            observer.destroy();\n        }\n        this._observers.clear();\n        this._cleanupErrorListener?.();\n    }\n    /**\n     * Gets a stream of resize events for the given target element and box type.\n     * @param target The element to observe for resizes.\n     * @param options Options to pass to the `ResizeObserver`\n     * @return The stream of resize events for the element.\n     */\n    observe(target, options) {\n        const box = options?.box || 'content-box';\n        if (!this._observers.has(box)) {\n            this._observers.set(box, new SingleBoxSharedResizeObserver(box));\n        }\n        return this._observers.get(box).observe(target);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: SharedResizeObserver, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: SharedResizeObserver, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: SharedResizeObserver, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }], ctorParameters: () => [] });\n\nexport { SharedResizeObserver };\n\n","import { _IdGenerator } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Platform } from '@angular/cdk/platform';\nimport { NgTemplateOutlet } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Directive, InjectionToken, inject, Input, ElementRef, NgZone, Renderer2, Component, ChangeDetectionStrategy, ViewEncapsulation, ViewChild, ChangeDetectorRef, viewChild, computed, contentChild, signal, effect, afterRenderEffect, ContentChild, ContentChildren } from '@angular/core';\nimport { Subscription, Subject, merge } from 'rxjs';\nimport { startWith, map, pairwise, filter, takeUntil } from 'rxjs/operators';\nimport { SharedResizeObserver } from '@angular/cdk/observers/private';\nimport { _ as _animationsDisabled } from './animation-ChQ1vjiF.mjs';\n\n/** The floating label for a `mat-form-field`. */\nclass MatLabel {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatLabel, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatLabel, isStandalone: true, selector: \"mat-label\", ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatLabel, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-label',\n                }]\n        }] });\n\n/**\n * Injection token that can be used to reference instances of `MatError`. It serves as\n * alternative token to the actual `MatError` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_ERROR = new InjectionToken('MatError');\n/** Single error message to be shown underneath the form-field. */\nclass MatError {\n    id = inject(_IdGenerator).getId('mat-mdc-error-');\n    constructor() { }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatError, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatError, isStandalone: true, selector: \"mat-error, [matError]\", inputs: { id: \"id\" }, host: { properties: { \"id\": \"id\" }, classAttribute: \"mat-mdc-form-field-error mat-mdc-form-field-bottom-align\" }, providers: [{ provide: MAT_ERROR, useExisting: MatError }], ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatError, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-error, [matError]',\n                    host: {\n                        'class': 'mat-mdc-form-field-error mat-mdc-form-field-bottom-align',\n                        '[id]': 'id',\n                    },\n                    providers: [{ provide: MAT_ERROR, useExisting: MatError }],\n                }]\n        }], ctorParameters: () => [], propDecorators: { id: [{\n                type: Input\n            }] } });\n\n/** Hint text to be shown underneath the form field control. */\nclass MatHint {\n    /** Whether to align the hint label at the start or end of the line. */\n    align = 'start';\n    /** Unique ID for the hint. Used for the aria-describedby on the form field control. */\n    id = inject(_IdGenerator).getId('mat-mdc-hint-');\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatHint, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatHint, isStandalone: true, selector: \"mat-hint\", inputs: { align: \"align\", id: \"id\" }, host: { properties: { \"class.mat-mdc-form-field-hint-end\": \"align === \\\"end\\\"\", \"id\": \"id\", \"attr.align\": \"null\" }, classAttribute: \"mat-mdc-form-field-hint mat-mdc-form-field-bottom-align\" }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatHint, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-hint',\n                    host: {\n                        'class': 'mat-mdc-form-field-hint mat-mdc-form-field-bottom-align',\n                        '[class.mat-mdc-form-field-hint-end]': 'align === \"end\"',\n                        '[id]': 'id',\n                        // Remove align attribute to prevent it from interfering with layout.\n                        '[attr.align]': 'null',\n                    },\n                }]\n        }], propDecorators: { align: [{\n                type: Input\n            }], id: [{\n                type: Input\n            }] } });\n\n/**\n * Injection token that can be used to reference instances of `MatPrefix`. It serves as\n * alternative token to the actual `MatPrefix` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_PREFIX = new InjectionToken('MatPrefix');\n/** Prefix to be placed in front of the form field. */\nclass MatPrefix {\n    set _isTextSelector(value) {\n        this._isText = true;\n    }\n    _isText = false;\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatPrefix, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatPrefix, isStandalone: true, selector: \"[matPrefix], [matIconPrefix], [matTextPrefix]\", inputs: { _isTextSelector: [\"matTextPrefix\", \"_isTextSelector\"] }, providers: [{ provide: MAT_PREFIX, useExisting: MatPrefix }], ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatPrefix, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matPrefix], [matIconPrefix], [matTextPrefix]',\n                    providers: [{ provide: MAT_PREFIX, useExisting: MatPrefix }],\n                }]\n        }], propDecorators: { _isTextSelector: [{\n                type: Input,\n                args: ['matTextPrefix']\n            }] } });\n\n/**\n * Injection token that can be used to reference instances of `MatSuffix`. It serves as\n * alternative token to the actual `MatSuffix` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_SUFFIX = new InjectionToken('MatSuffix');\n/** Suffix to be placed at the end of the form field. */\nclass MatSuffix {\n    set _isTextSelector(value) {\n        this._isText = true;\n    }\n    _isText = false;\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatSuffix, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatSuffix, isStandalone: true, selector: \"[matSuffix], [matIconSuffix], [matTextSuffix]\", inputs: { _isTextSelector: [\"matTextSuffix\", \"_isTextSelector\"] }, providers: [{ provide: MAT_SUFFIX, useExisting: MatSuffix }], ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatSuffix, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matSuffix], [matIconSuffix], [matTextSuffix]',\n                    providers: [{ provide: MAT_SUFFIX, useExisting: MatSuffix }],\n                }]\n        }], propDecorators: { _isTextSelector: [{\n                type: Input,\n                args: ['matTextSuffix']\n            }] } });\n\n/** An injion token for the parent form-field. */\nconst FLOATING_LABEL_PARENT = new InjectionToken('FloatingLabelParent');\n/**\n * Internal directive that maintains a MDC floating label. This directive does not\n * use the `MDCFloatingLabelFoundation` class, as it is not worth the size cost of\n * including it just to measure the label width and toggle some classes.\n *\n * The use of a directive allows us to conditionally render a floating label in the\n * template without having to manually manage instantiation and destruction of the\n * floating label component based on.\n *\n * The component is responsible for setting up the floating label styles, measuring label\n * width for the outline notch, and providing inputs that can be used to toggle the\n * label's floating or required state.\n */\nclass MatFormFieldFloatingLabel {\n    _elementRef = inject(ElementRef);\n    /** Whether the label is floating. */\n    get floating() {\n        return this._floating;\n    }\n    set floating(value) {\n        this._floating = value;\n        if (this.monitorResize) {\n            this._handleResize();\n        }\n    }\n    _floating = false;\n    /** Whether to monitor for resize events on the floating label. */\n    get monitorResize() {\n        return this._monitorResize;\n    }\n    set monitorResize(value) {\n        this._monitorResize = value;\n        if (this._monitorResize) {\n            this._subscribeToResize();\n        }\n        else {\n            this._resizeSubscription.unsubscribe();\n        }\n    }\n    _monitorResize = false;\n    /** The shared ResizeObserver. */\n    _resizeObserver = inject(SharedResizeObserver);\n    /** The Angular zone. */\n    _ngZone = inject(NgZone);\n    /** The parent form-field. */\n    _parent = inject(FLOATING_LABEL_PARENT);\n    /** The current resize event subscription. */\n    _resizeSubscription = new Subscription();\n    constructor() { }\n    ngOnDestroy() {\n        this._resizeSubscription.unsubscribe();\n    }\n    /** Gets the width of the label. Used for the outline notch. */\n    getWidth() {\n        return estimateScrollWidth(this._elementRef.nativeElement);\n    }\n    /** Gets the HTML element for the floating label. */\n    get element() {\n        return this._elementRef.nativeElement;\n    }\n    /** Handles resize events from the ResizeObserver. */\n    _handleResize() {\n        // In the case where the label grows in size, the following sequence of events occurs:\n        // 1. The label grows by 1px triggering the ResizeObserver\n        // 2. The notch is expanded to accommodate the entire label\n        // 3. The label expands to its full width, triggering the ResizeObserver again\n        //\n        // This is expected, but If we allow this to all happen within the same macro task it causes an\n        // error: `ResizeObserver loop limit exceeded`. Therefore we push the notch resize out until\n        // the next macro task.\n        setTimeout(() => this._parent._handleLabelResized());\n    }\n    /** Subscribes to resize events. */\n    _subscribeToResize() {\n        this._resizeSubscription.unsubscribe();\n        this._ngZone.runOutsideAngular(() => {\n            this._resizeSubscription = this._resizeObserver\n                .observe(this._elementRef.nativeElement, { box: 'border-box' })\n                .subscribe(() => this._handleResize());\n        });\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatFormFieldFloatingLabel, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatFormFieldFloatingLabel, isStandalone: true, selector: \"label[matFormFieldFloatingLabel]\", inputs: { floating: \"floating\", monitorResize: \"monitorResize\" }, host: { properties: { \"class.mdc-floating-label--float-above\": \"floating\" }, classAttribute: \"mdc-floating-label mat-mdc-floating-label\" }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatFormFieldFloatingLabel, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'label[matFormFieldFloatingLabel]',\n                    host: {\n                        'class': 'mdc-floating-label mat-mdc-floating-label',\n                        '[class.mdc-floating-label--float-above]': 'floating',\n                    },\n                }]\n        }], ctorParameters: () => [], propDecorators: { floating: [{\n                type: Input\n            }], monitorResize: [{\n                type: Input\n            }] } });\n/**\n * Estimates the scroll width of an element.\n * via https://github.com/material-components/material-components-web/blob/c0a11ef0d000a098fd0c372be8f12d6a99302855/packages/mdc-dom/ponyfill.ts\n */\nfunction estimateScrollWidth(element) {\n    // Check the offsetParent. If the element inherits display: none from any\n    // parent, the offsetParent property will be null (see\n    // https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetParent).\n    // This check ensures we only clone the node when necessary.\n    const htmlEl = element;\n    if (htmlEl.offsetParent !== null) {\n        return htmlEl.scrollWidth;\n    }\n    const clone = htmlEl.cloneNode(true);\n    clone.style.setProperty('position', 'absolute');\n    clone.style.setProperty('transform', 'translate(-9999px, -9999px)');\n    document.documentElement.appendChild(clone);\n    const scrollWidth = clone.scrollWidth;\n    clone.remove();\n    return scrollWidth;\n}\n\n/** Class added when the line ripple is active. */\nconst ACTIVATE_CLASS = 'mdc-line-ripple--active';\n/** Class added when the line ripple is being deactivated. */\nconst DEACTIVATING_CLASS = 'mdc-line-ripple--deactivating';\n/**\n * Internal directive that creates an instance of the MDC line-ripple component. Using a\n * directive allows us to conditionally render a line-ripple in the template without having\n * to manually create and destroy the `MDCLineRipple` component whenever the condition changes.\n *\n * The directive sets up the styles for the line-ripple and provides an API for activating\n * and deactivating the line-ripple.\n */\nclass MatFormFieldLineRipple {\n    _elementRef = inject(ElementRef);\n    _cleanupTransitionEnd;\n    constructor() {\n        const ngZone = inject(NgZone);\n        const renderer = inject(Renderer2);\n        ngZone.runOutsideAngular(() => {\n            this._cleanupTransitionEnd = renderer.listen(this._elementRef.nativeElement, 'transitionend', this._handleTransitionEnd);\n        });\n    }\n    activate() {\n        const classList = this._elementRef.nativeElement.classList;\n        classList.remove(DEACTIVATING_CLASS);\n        classList.add(ACTIVATE_CLASS);\n    }\n    deactivate() {\n        this._elementRef.nativeElement.classList.add(DEACTIVATING_CLASS);\n    }\n    _handleTransitionEnd = (event) => {\n        const classList = this._elementRef.nativeElement.classList;\n        const isDeactivating = classList.contains(DEACTIVATING_CLASS);\n        if (event.propertyName === 'opacity' && isDeactivating) {\n            classList.remove(ACTIVATE_CLASS, DEACTIVATING_CLASS);\n        }\n    };\n    ngOnDestroy() {\n        this._cleanupTransitionEnd();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatFormFieldLineRipple, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatFormFieldLineRipple, isStandalone: true, selector: \"div[matFormFieldLineRipple]\", host: { classAttribute: \"mdc-line-ripple\" }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatFormFieldLineRipple, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'div[matFormFieldLineRipple]',\n                    host: {\n                        'class': 'mdc-line-ripple',\n                    },\n                }]\n        }], ctorParameters: () => [] });\n\n/**\n * Internal component that creates an instance of the MDC notched-outline component.\n *\n * The component sets up the HTML structure and styles for the notched-outline. It provides\n * inputs to toggle the notch state and width.\n */\nclass MatFormFieldNotchedOutline {\n    _elementRef = inject(ElementRef);\n    _ngZone = inject(NgZone);\n    /** Whether the notch should be opened. */\n    open = false;\n    _notch;\n    ngAfterViewInit() {\n        const element = this._elementRef.nativeElement;\n        const label = element.querySelector('.mdc-floating-label');\n        if (label) {\n            element.classList.add('mdc-notched-outline--upgraded');\n            if (typeof requestAnimationFrame === 'function') {\n                label.style.transitionDuration = '0s';\n                this._ngZone.runOutsideAngular(() => {\n                    requestAnimationFrame(() => (label.style.transitionDuration = ''));\n                });\n            }\n        }\n        else {\n            element.classList.add('mdc-notched-outline--no-label');\n        }\n    }\n    _setNotchWidth(labelWidth) {\n        const notch = this._notch.nativeElement;\n        if (!this.open || !labelWidth) {\n            notch.style.width = '';\n        }\n        else {\n            const NOTCH_ELEMENT_PADDING = 8;\n            const NOTCH_ELEMENT_BORDER = 1;\n            notch.style.width = `calc(${labelWidth}px * var(--mat-mdc-form-field-floating-label-scale, 0.75) + ${NOTCH_ELEMENT_PADDING + NOTCH_ELEMENT_BORDER}px)`;\n        }\n    }\n    _setMaxWidth(prefixAndSuffixWidth) {\n        // Set this only on the notch to avoid style recalculations in other parts of the form field.\n        this._notch.nativeElement.style.setProperty('--mat-form-field-notch-max-width', `calc(100% - ${prefixAndSuffixWidth}px)`);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatFormFieldNotchedOutline, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatFormFieldNotchedOutline, isStandalone: true, selector: \"div[matFormFieldNotchedOutline]\", inputs: { open: [\"matFormFieldNotchedOutlineOpen\", \"open\"] }, host: { properties: { \"class.mdc-notched-outline--notched\": \"open\" }, classAttribute: \"mdc-notched-outline\" }, viewQueries: [{ propertyName: \"_notch\", first: true, predicate: [\"notch\"], descendants: true }], ngImport: i0, template: \"<div class=\\\"mat-mdc-notch-piece mdc-notched-outline__leading\\\"></div>\\n<div class=\\\"mat-mdc-notch-piece mdc-notched-outline__notch\\\" #notch>\\n  <ng-content></ng-content>\\n</div>\\n<div class=\\\"mat-mdc-notch-piece mdc-notched-outline__trailing\\\"></div>\\n\", changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatFormFieldNotchedOutline, decorators: [{\n            type: Component,\n            args: [{ selector: 'div[matFormFieldNotchedOutline]', host: {\n                        'class': 'mdc-notched-outline',\n                        // Besides updating the notch state through the MDC component, we toggle this class through\n                        // a host binding in order to ensure that the notched-outline renders correctly on the server.\n                        '[class.mdc-notched-outline--notched]': 'open',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: \"<div class=\\\"mat-mdc-notch-piece mdc-notched-outline__leading\\\"></div>\\n<div class=\\\"mat-mdc-notch-piece mdc-notched-outline__notch\\\" #notch>\\n  <ng-content></ng-content>\\n</div>\\n<div class=\\\"mat-mdc-notch-piece mdc-notched-outline__trailing\\\"></div>\\n\" }]\n        }], propDecorators: { open: [{\n                type: Input,\n                args: ['matFormFieldNotchedOutlineOpen']\n            }], _notch: [{\n                type: ViewChild,\n                args: ['notch']\n            }] } });\n\n/** An interface which allows a control to work inside of a `MatFormField`. */\nclass MatFormFieldControl {\n    /** The value of the control. */\n    value;\n    /**\n     * Stream that emits whenever the state of the control changes such that the parent `MatFormField`\n     * needs to run change detection.\n     */\n    stateChanges;\n    /** The element ID for this control. */\n    id;\n    /** The placeholder for this control. */\n    placeholder;\n    /** Gets the AbstractControlDirective for this control. */\n    ngControl;\n    /** Whether the control is focused. */\n    focused;\n    /** Whether the control is empty. */\n    empty;\n    /** Whether the `MatFormField` label should try to float. */\n    shouldLabelFloat;\n    /** Whether the control is required. */\n    required;\n    /** Whether the control is disabled. */\n    disabled;\n    /** Whether the control is in an error state. */\n    errorState;\n    /**\n     * An optional name for the control type that can be used to distinguish `mat-form-field` elements\n     * based on their control type. The form field will add a class,\n     * `mat-form-field-type-{{controlType}}` to its root element.\n     */\n    controlType;\n    /**\n     * Whether the input is currently in an autofilled state. If property is not present on the\n     * control it is assumed to be false.\n     */\n    autofilled;\n    /**\n     * Value of `aria-describedby` that should be merged with the described-by ids\n     * which are set by the form-field.\n     */\n    userAriaDescribedBy;\n    /**\n     * Whether to automatically assign the ID of the form field as the `for` attribute\n     * on the `<label>` inside the form field. Set this to true to prevent the form\n     * field from associating the label with non-native elements.\n     */\n    disableAutomaticLabeling;\n    /** Gets the list of element IDs that currently describe this control. */\n    describedByIds;\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatFormFieldControl, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatFormFieldControl, isStandalone: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatFormFieldControl, decorators: [{\n            type: Directive\n        }] });\n\n/** @docs-private */\nfunction getMatFormFieldPlaceholderConflictError() {\n    return Error('Placeholder attribute and child element were both specified.');\n}\n/** @docs-private */\nfunction getMatFormFieldDuplicatedHintError(align) {\n    return Error(`A hint was already declared for 'align=\"${align}\"'.`);\n}\n/** @docs-private */\nfunction getMatFormFieldMissingControlError() {\n    return Error('mat-form-field must contain a MatFormFieldControl.');\n}\n\n/**\n * Injection token that can be used to inject an instances of `MatFormField`. It serves\n * as alternative token to the actual `MatFormField` class which would cause unnecessary\n * retention of the `MatFormField` class and its component metadata.\n */\nconst MAT_FORM_FIELD = new InjectionToken('MatFormField');\n/**\n * Injection token that can be used to configure the\n * default options for all form field within an app.\n */\nconst MAT_FORM_FIELD_DEFAULT_OPTIONS = new InjectionToken('MAT_FORM_FIELD_DEFAULT_OPTIONS');\n/** Default appearance used by the form field. */\nconst DEFAULT_APPEARANCE = 'fill';\n/**\n * Whether the label for form fields should by default float `always`,\n * `never`, or `auto`.\n */\nconst DEFAULT_FLOAT_LABEL = 'auto';\n/** Default way that the subscript element height is set. */\nconst DEFAULT_SUBSCRIPT_SIZING = 'fixed';\n/**\n * Default transform for docked floating labels in a MDC text-field. This value has been\n * extracted from the MDC text-field styles because we programmatically modify the docked\n * label transform, but do not want to accidentally discard the default label transform.\n */\nconst FLOATING_LABEL_DEFAULT_DOCKED_TRANSFORM = `translateY(-50%)`;\n/** Container for form controls that applies Material Design styling and behavior. */\nclass MatFormField {\n    _elementRef = inject(ElementRef);\n    _changeDetectorRef = inject(ChangeDetectorRef);\n    _platform = inject(Platform);\n    _idGenerator = inject(_IdGenerator);\n    _ngZone = inject(NgZone);\n    _defaults = inject(MAT_FORM_FIELD_DEFAULT_OPTIONS, {\n        optional: true,\n    });\n    _currentDirection;\n    _textField;\n    _iconPrefixContainer;\n    _textPrefixContainer;\n    _iconSuffixContainer;\n    _textSuffixContainer;\n    _floatingLabel;\n    _notchedOutline;\n    _lineRipple;\n    _iconPrefixContainerSignal = viewChild('iconPrefixContainer');\n    _textPrefixContainerSignal = viewChild('textPrefixContainer');\n    _iconSuffixContainerSignal = viewChild('iconSuffixContainer');\n    _textSuffixContainerSignal = viewChild('textSuffixContainer');\n    _prefixSuffixContainers = computed(() => {\n        return [\n            this._iconPrefixContainerSignal(),\n            this._textPrefixContainerSignal(),\n            this._iconSuffixContainerSignal(),\n            this._textSuffixContainerSignal(),\n        ]\n            .map(container => container?.nativeElement)\n            .filter(e => e !== undefined);\n    });\n    _formFieldControl;\n    _prefixChildren;\n    _suffixChildren;\n    _errorChildren;\n    _hintChildren;\n    _labelChild = contentChild(MatLabel);\n    /** Whether the required marker should be hidden. */\n    get hideRequiredMarker() {\n        return this._hideRequiredMarker;\n    }\n    set hideRequiredMarker(value) {\n        this._hideRequiredMarker = coerceBooleanProperty(value);\n    }\n    _hideRequiredMarker = false;\n    /**\n     * Theme color of the form field. This API is supported in M2 themes only, it\n     * has no effect in M3 themes. For color customization in M3, see https://material.angular.dev/components/form-field/styling.\n     *\n     * For information on applying color variants in M3, see\n     * https://material.angular.dev/guide/material-2-theming#optional-add-backwards-compatibility-styles-for-color-variants\n     */\n    color = 'primary';\n    /** Whether the label should always float or float as the user types. */\n    get floatLabel() {\n        return this._floatLabel || this._defaults?.floatLabel || DEFAULT_FLOAT_LABEL;\n    }\n    set floatLabel(value) {\n        if (value !== this._floatLabel) {\n            this._floatLabel = value;\n            // For backwards compatibility. Custom form field controls or directives might set\n            // the \"floatLabel\" input and expect the form field view to be updated automatically.\n            // e.g. autocomplete trigger. Ideally we'd get rid of this and the consumers would just\n            // emit the \"stateChanges\" observable. TODO(devversion): consider removing.\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    _floatLabel;\n    /** The form field appearance style. */\n    get appearance() {\n        return this._appearanceSignal();\n    }\n    set appearance(value) {\n        const newAppearance = value || this._defaults?.appearance || DEFAULT_APPEARANCE;\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (newAppearance !== 'fill' && newAppearance !== 'outline') {\n                throw new Error(`MatFormField: Invalid appearance \"${newAppearance}\", valid values are \"fill\" or \"outline\".`);\n            }\n        }\n        this._appearanceSignal.set(newAppearance);\n    }\n    _appearanceSignal = signal(DEFAULT_APPEARANCE);\n    /**\n     * Whether the form field should reserve space for one line of hint/error text (default)\n     * or to have the spacing grow from 0px as needed based on the size of the hint/error content.\n     * Note that when using dynamic sizing, layout shifts will occur when hint/error text changes.\n     */\n    get subscriptSizing() {\n        return this._subscriptSizing || this._defaults?.subscriptSizing || DEFAULT_SUBSCRIPT_SIZING;\n    }\n    set subscriptSizing(value) {\n        this._subscriptSizing = value || this._defaults?.subscriptSizing || DEFAULT_SUBSCRIPT_SIZING;\n    }\n    _subscriptSizing = null;\n    /** Text for the form field hint. */\n    get hintLabel() {\n        return this._hintLabel;\n    }\n    set hintLabel(value) {\n        this._hintLabel = value;\n        this._processHints();\n    }\n    _hintLabel = '';\n    _hasIconPrefix = false;\n    _hasTextPrefix = false;\n    _hasIconSuffix = false;\n    _hasTextSuffix = false;\n    // Unique id for the internal form field label.\n    _labelId = this._idGenerator.getId('mat-mdc-form-field-label-');\n    // Unique id for the hint label.\n    _hintLabelId = this._idGenerator.getId('mat-mdc-hint-');\n    // Ids obtained from the error and hint fields\n    _describedByIds;\n    /** Gets the current form field control */\n    get _control() {\n        return this._explicitFormFieldControl || this._formFieldControl;\n    }\n    set _control(value) {\n        this._explicitFormFieldControl = value;\n    }\n    _destroyed = new Subject();\n    _isFocused = null;\n    _explicitFormFieldControl;\n    _previousControl = null;\n    _previousControlValidatorFn = null;\n    _stateChanges;\n    _valueChanges;\n    _describedByChanges;\n    _outlineLabelOffsetResizeObserver = null;\n    _animationsDisabled = _animationsDisabled();\n    constructor() {\n        const defaults = this._defaults;\n        const dir = inject(Directionality);\n        if (defaults) {\n            if (defaults.appearance) {\n                this.appearance = defaults.appearance;\n            }\n            this._hideRequiredMarker = Boolean(defaults?.hideRequiredMarker);\n            if (defaults.color) {\n                this.color = defaults.color;\n            }\n        }\n        // We need this value inside a `afterRenderEffect`, however at the time of writing, reading the\n        // signal directly causes a memory leak (see https://github.com/angular/angular/issues/62980).\n        // TODO(crisbeto): clean this up once the framework issue is resolved.\n        effect(() => (this._currentDirection = dir.valueSignal()));\n        this._syncOutlineLabelOffset();\n    }\n    ngAfterViewInit() {\n        // Initial focus state sync. This happens rarely, but we want to account for\n        // it in case the form field control has \"focused\" set to true on init.\n        this._updateFocusState();\n        if (!this._animationsDisabled) {\n            this._ngZone.runOutsideAngular(() => {\n                // Enable animations after a certain amount of time so that they don't run on init.\n                setTimeout(() => {\n                    this._elementRef.nativeElement.classList.add('mat-form-field-animations-enabled');\n                }, 300);\n            });\n        }\n        // Because the above changes a value used in the template after it was checked, we need\n        // to trigger CD or the change might not be reflected if there is no other CD scheduled.\n        this._changeDetectorRef.detectChanges();\n    }\n    ngAfterContentInit() {\n        this._assertFormFieldControl();\n        this._initializeSubscript();\n        this._initializePrefixAndSuffix();\n    }\n    ngAfterContentChecked() {\n        this._assertFormFieldControl();\n        // if form field was being used with an input in first place and then replaced by other\n        // component such as select.\n        if (this._control !== this._previousControl) {\n            this._initializeControl(this._previousControl);\n            // keep a reference for last validator we had.\n            if (this._control.ngControl && this._control.ngControl.control) {\n                this._previousControlValidatorFn = this._control.ngControl.control.validator;\n            }\n            this._previousControl = this._control;\n        }\n        // make sure the the control has been initialized.\n        if (this._control.ngControl && this._control.ngControl.control) {\n            // get the validators for current control.\n            const validatorFn = this._control.ngControl.control.validator;\n            // if our current validatorFn isn't equal to it might be we are CD behind, marking the\n            // component will allow us to catch up.\n            if (validatorFn !== this._previousControlValidatorFn) {\n                this._changeDetectorRef.markForCheck();\n            }\n        }\n    }\n    ngOnDestroy() {\n        this._outlineLabelOffsetResizeObserver?.disconnect();\n        this._stateChanges?.unsubscribe();\n        this._valueChanges?.unsubscribe();\n        this._describedByChanges?.unsubscribe();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Gets the id of the label element. If no label is present, returns `null`.\n     */\n    getLabelId = computed(() => (this._hasFloatingLabel() ? this._labelId : null));\n    /**\n     * Gets an ElementRef for the element that a overlay attached to the form field\n     * should be positioned relative to.\n     */\n    getConnectedOverlayOrigin() {\n        return this._textField || this._elementRef;\n    }\n    /** Animates the placeholder up and locks it in position. */\n    _animateAndLockLabel() {\n        // This is for backwards compatibility only. Consumers of the form field might use\n        // this method. e.g. the autocomplete trigger. This method has been added to the non-MDC\n        // form field because setting \"floatLabel\" to \"always\" caused the label to float without\n        // animation. This is different in MDC where the label always animates, so this method\n        // is no longer necessary. There doesn't seem any benefit in adding logic to allow changing\n        // the floating label state without animations. The non-MDC implementation was inconsistent\n        // because it always animates if \"floatLabel\" is set away from \"always\".\n        // TODO(devversion): consider removing this method when releasing the MDC form field.\n        if (this._hasFloatingLabel()) {\n            this.floatLabel = 'always';\n        }\n    }\n    /** Initializes the registered form field control. */\n    _initializeControl(previousControl) {\n        const control = this._control;\n        const classPrefix = 'mat-mdc-form-field-type-';\n        if (previousControl) {\n            this._elementRef.nativeElement.classList.remove(classPrefix + previousControl.controlType);\n        }\n        if (control.controlType) {\n            this._elementRef.nativeElement.classList.add(classPrefix + control.controlType);\n        }\n        // Subscribe to changes in the child control state in order to update the form field UI.\n        this._stateChanges?.unsubscribe();\n        this._stateChanges = control.stateChanges.subscribe(() => {\n            this._updateFocusState();\n            this._changeDetectorRef.markForCheck();\n        });\n        // Updating the `aria-describedby` touches the DOM. Only do it if it actually needs to change.\n        this._describedByChanges?.unsubscribe();\n        this._describedByChanges = control.stateChanges\n            .pipe(startWith([undefined, undefined]), map(() => [control.errorState, control.userAriaDescribedBy]), pairwise(), filter(([[prevErrorState, prevDescribedBy], [currentErrorState, currentDescribedBy]]) => {\n            return prevErrorState !== currentErrorState || prevDescribedBy !== currentDescribedBy;\n        }))\n            .subscribe(() => this._syncDescribedByIds());\n        this._valueChanges?.unsubscribe();\n        // Run change detection if the value changes.\n        if (control.ngControl && control.ngControl.valueChanges) {\n            this._valueChanges = control.ngControl.valueChanges\n                .pipe(takeUntil(this._destroyed))\n                .subscribe(() => this._changeDetectorRef.markForCheck());\n        }\n    }\n    _checkPrefixAndSuffixTypes() {\n        this._hasIconPrefix = !!this._prefixChildren.find(p => !p._isText);\n        this._hasTextPrefix = !!this._prefixChildren.find(p => p._isText);\n        this._hasIconSuffix = !!this._suffixChildren.find(s => !s._isText);\n        this._hasTextSuffix = !!this._suffixChildren.find(s => s._isText);\n    }\n    /** Initializes the prefix and suffix containers. */\n    _initializePrefixAndSuffix() {\n        this._checkPrefixAndSuffixTypes();\n        // Mark the form field as dirty whenever the prefix or suffix children change. This\n        // is necessary because we conditionally display the prefix/suffix containers based\n        // on whether there is projected content.\n        merge(this._prefixChildren.changes, this._suffixChildren.changes).subscribe(() => {\n            this._checkPrefixAndSuffixTypes();\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n    /**\n     * Initializes the subscript by validating hints and synchronizing \"aria-describedby\" ids\n     * with the custom form field control. Also subscribes to hint and error changes in order\n     * to be able to validate and synchronize ids on change.\n     */\n    _initializeSubscript() {\n        // Re-validate when the number of hints changes.\n        this._hintChildren.changes.subscribe(() => {\n            this._processHints();\n            this._changeDetectorRef.markForCheck();\n        });\n        // Update the aria-described by when the number of errors changes.\n        this._errorChildren.changes.subscribe(() => {\n            this._syncDescribedByIds();\n            this._changeDetectorRef.markForCheck();\n        });\n        // Initial mat-hint validation and subscript describedByIds sync.\n        this._validateHints();\n        this._syncDescribedByIds();\n    }\n    /** Throws an error if the form field's control is missing. */\n    _assertFormFieldControl() {\n        if (!this._control && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatFormFieldMissingControlError();\n        }\n    }\n    _updateFocusState() {\n        const controlFocused = this._control.focused;\n        // Usually the MDC foundation would call \"activateFocus\" and \"deactivateFocus\" whenever\n        // certain DOM events are emitted. This is not possible in our implementation of the\n        // form field because we support abstract form field controls which are not necessarily\n        // of type input, nor do we have a reference to a native form field control element. Instead\n        // we handle the focus by checking if the abstract form field control focused state changes.\n        if (controlFocused && !this._isFocused) {\n            this._isFocused = true;\n            this._lineRipple?.activate();\n        }\n        else if (!controlFocused && (this._isFocused || this._isFocused === null)) {\n            this._isFocused = false;\n            this._lineRipple?.deactivate();\n        }\n        this._elementRef.nativeElement.classList.toggle('mat-focused', controlFocused);\n        this._textField?.nativeElement.classList.toggle('mdc-text-field--focused', controlFocused);\n    }\n    /**\n     * The floating label in the docked state needs to account for prefixes. The horizontal offset\n     * is calculated whenever the appearance changes to `outline`, the prefixes change, or when the\n     * form field is added to the DOM. This method sets up all subscriptions which are needed to\n     * trigger the label offset update.\n     */\n    _syncOutlineLabelOffset() {\n        afterRenderEffect({\n            earlyRead: () => {\n                if (this._appearanceSignal() !== 'outline') {\n                    this._outlineLabelOffsetResizeObserver?.disconnect();\n                    return null;\n                }\n                // Setup a resize observer to monitor changes to the size of the prefix / suffix and\n                // readjust the label offset.\n                if (globalThis.ResizeObserver) {\n                    this._outlineLabelOffsetResizeObserver ||= new globalThis.ResizeObserver(() => {\n                        this._writeOutlinedLabelStyles(this._getOutlinedLabelOffset());\n                    });\n                    for (const el of this._prefixSuffixContainers()) {\n                        this._outlineLabelOffsetResizeObserver.observe(el, { box: 'border-box' });\n                    }\n                }\n                return this._getOutlinedLabelOffset();\n            },\n            write: labelStyles => this._writeOutlinedLabelStyles(labelStyles()),\n        });\n    }\n    /** Whether the floating label should always float or not. */\n    _shouldAlwaysFloat() {\n        return this.floatLabel === 'always';\n    }\n    _hasOutline() {\n        return this.appearance === 'outline';\n    }\n    /**\n     * Whether the label should display in the infix. Labels in the outline appearance are\n     * displayed as part of the notched-outline and are horizontally offset to account for\n     * form field prefix content. This won't work in server side rendering since we cannot\n     * measure the width of the prefix container. To make the docked label appear as if the\n     * right offset has been calculated, we forcibly render the label inside the infix. Since\n     * the label is part of the infix, the label cannot overflow the prefix content.\n     */\n    _forceDisplayInfixLabel() {\n        return !this._platform.isBrowser && this._prefixChildren.length && !this._shouldLabelFloat();\n    }\n    _hasFloatingLabel = computed(() => !!this._labelChild());\n    _shouldLabelFloat() {\n        if (!this._hasFloatingLabel()) {\n            return false;\n        }\n        return this._control.shouldLabelFloat || this._shouldAlwaysFloat();\n    }\n    /**\n     * Determines whether a class from the AbstractControlDirective\n     * should be forwarded to the host element.\n     */\n    _shouldForward(prop) {\n        const control = this._control ? this._control.ngControl : null;\n        return control && control[prop];\n    }\n    /** Gets the type of subscript message to render (error or hint). */\n    _getSubscriptMessageType() {\n        return this._errorChildren && this._errorChildren.length > 0 && this._control.errorState\n            ? 'error'\n            : 'hint';\n    }\n    /** Handle label resize events. */\n    _handleLabelResized() {\n        this._refreshOutlineNotchWidth();\n    }\n    /** Refreshes the width of the outline-notch, if present. */\n    _refreshOutlineNotchWidth() {\n        if (!this._hasOutline() || !this._floatingLabel || !this._shouldLabelFloat()) {\n            this._notchedOutline?._setNotchWidth(0);\n        }\n        else {\n            this._notchedOutline?._setNotchWidth(this._floatingLabel.getWidth());\n        }\n    }\n    /** Does any extra processing that is required when handling the hints. */\n    _processHints() {\n        this._validateHints();\n        this._syncDescribedByIds();\n    }\n    /**\n     * Ensure that there is a maximum of one of each \"mat-hint\" alignment specified. The hint\n     * label specified set through the input is being considered as \"start\" aligned.\n     *\n     * This method is a noop if Angular runs in production mode.\n     */\n    _validateHints() {\n        if (this._hintChildren && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            let startHint;\n            let endHint;\n            this._hintChildren.forEach((hint) => {\n                if (hint.align === 'start') {\n                    if (startHint || this.hintLabel) {\n                        throw getMatFormFieldDuplicatedHintError('start');\n                    }\n                    startHint = hint;\n                }\n                else if (hint.align === 'end') {\n                    if (endHint) {\n                        throw getMatFormFieldDuplicatedHintError('end');\n                    }\n                    endHint = hint;\n                }\n            });\n        }\n    }\n    /**\n     * Sets the list of element IDs that describe the child control. This allows the control to update\n     * its `aria-describedby` attribute accordingly.\n     */\n    _syncDescribedByIds() {\n        if (this._control) {\n            let ids = [];\n            // TODO(wagnermaciel): Remove the type check when we find the root cause of this bug.\n            if (this._control.userAriaDescribedBy &&\n                typeof this._control.userAriaDescribedBy === 'string') {\n                ids.push(...this._control.userAriaDescribedBy.split(' '));\n            }\n            if (this._getSubscriptMessageType() === 'hint') {\n                const startHint = this._hintChildren\n                    ? this._hintChildren.find(hint => hint.align === 'start')\n                    : null;\n                const endHint = this._hintChildren\n                    ? this._hintChildren.find(hint => hint.align === 'end')\n                    : null;\n                if (startHint) {\n                    ids.push(startHint.id);\n                }\n                else if (this._hintLabel) {\n                    ids.push(this._hintLabelId);\n                }\n                if (endHint) {\n                    ids.push(endHint.id);\n                }\n            }\n            else if (this._errorChildren) {\n                ids.push(...this._errorChildren.map(error => error.id));\n            }\n            const existingDescribedBy = this._control.describedByIds;\n            let toAssign;\n            // In some cases there might be some `aria-describedby` IDs that were assigned directly,\n            // like by the `AriaDescriber` (see #30011). Attempt to preserve them by taking the previous\n            // attribute value and filtering out the IDs that came from the previous `setDescribedByIds`\n            // call. Note the `|| ids` here allows us to avoid duplicating IDs on the first render.\n            if (existingDescribedBy) {\n                const exclude = this._describedByIds || ids;\n                toAssign = ids.concat(existingDescribedBy.filter(id => id && !exclude.includes(id)));\n            }\n            else {\n                toAssign = ids;\n            }\n            this._control.setDescribedByIds(toAssign);\n            this._describedByIds = ids;\n        }\n    }\n    /**\n     * Calculates the horizontal offset of the label in the outline appearance. In the outline\n     * appearance, the notched-outline and label are not relative to the infix container because\n     * the outline intends to surround prefixes, suffixes and the infix. This means that the\n     * floating label by default overlaps prefixes in the docked state. To avoid this, we need to\n     * horizontally offset the label by the width of the prefix container. The MDC text-field does\n     * not need to do this because they use a fixed width for prefixes. Hence, they can simply\n     * incorporate the horizontal offset into their default text-field styles.\n     */\n    _getOutlinedLabelOffset() {\n        if (!this._hasOutline() || !this._floatingLabel) {\n            return null;\n        }\n        // If no prefix is displayed, reset the outline label offset from potential\n        // previous label offset updates.\n        if (!this._iconPrefixContainer && !this._textPrefixContainer) {\n            return ['', null];\n        }\n        // If the form field is not attached to the DOM yet (e.g. in a tab), we defer\n        // the label offset update until the zone stabilizes.\n        if (!this._isAttachedToDom()) {\n            return null;\n        }\n        const iconPrefixContainer = this._iconPrefixContainer?.nativeElement;\n        const textPrefixContainer = this._textPrefixContainer?.nativeElement;\n        const iconSuffixContainer = this._iconSuffixContainer?.nativeElement;\n        const textSuffixContainer = this._textSuffixContainer?.nativeElement;\n        const iconPrefixContainerWidth = iconPrefixContainer?.getBoundingClientRect().width ?? 0;\n        const textPrefixContainerWidth = textPrefixContainer?.getBoundingClientRect().width ?? 0;\n        const iconSuffixContainerWidth = iconSuffixContainer?.getBoundingClientRect().width ?? 0;\n        const textSuffixContainerWidth = textSuffixContainer?.getBoundingClientRect().width ?? 0;\n        // If the directionality is RTL, the x-axis transform needs to be inverted. This\n        // is because `transformX` does not change based on the page directionality.\n        const negate = this._currentDirection === 'rtl' ? '-1' : '1';\n        const prefixWidth = `${iconPrefixContainerWidth + textPrefixContainerWidth}px`;\n        const labelOffset = `var(--mat-mdc-form-field-label-offset-x, 0px)`;\n        const labelHorizontalOffset = `calc(${negate} * (${prefixWidth} + ${labelOffset}))`;\n        // Update the translateX of the floating label to account for the prefix container,\n        // but allow the CSS to override this setting via a CSS variable when the label is\n        // floating.\n        const floatingLabelTransform = 'var(--mat-mdc-form-field-label-transform, ' +\n            `${FLOATING_LABEL_DEFAULT_DOCKED_TRANSFORM} translateX(${labelHorizontalOffset}))`;\n        // Prevent the label from overlapping the suffix when in resting position.\n        const notchedOutlineWidth = iconPrefixContainerWidth +\n            textPrefixContainerWidth +\n            iconSuffixContainerWidth +\n            textSuffixContainerWidth;\n        return [floatingLabelTransform, notchedOutlineWidth];\n    }\n    /** Writes the styles produced by `_getOutlineLabelOffset` synchronously to the DOM. */\n    _writeOutlinedLabelStyles(styles) {\n        if (styles !== null) {\n            const [floatingLabelTransform, notchedOutlineWidth] = styles;\n            if (this._floatingLabel) {\n                this._floatingLabel.element.style.transform = floatingLabelTransform;\n            }\n            if (notchedOutlineWidth !== null) {\n                this._notchedOutline?._setMaxWidth(notchedOutlineWidth);\n            }\n        }\n    }\n    /** Checks whether the form field is attached to the DOM. */\n    _isAttachedToDom() {\n        const element = this._elementRef.nativeElement;\n        if (element.getRootNode) {\n            const rootNode = element.getRootNode();\n            // If the element is inside the DOM the root node will be either the document\n            // or the closest shadow root, otherwise it'll be the element itself.\n            return rootNode && rootNode !== element;\n        }\n        // Otherwise fall back to checking if it's in the document. This doesn't account for\n        // shadow DOM, however browser that support shadow DOM should support `getRootNode` as well.\n        return document.documentElement.contains(element);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatFormField, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"20.0.0\", type: MatFormField, isStandalone: true, selector: \"mat-form-field\", inputs: { hideRequiredMarker: \"hideRequiredMarker\", color: \"color\", floatLabel: \"floatLabel\", appearance: \"appearance\", subscriptSizing: \"subscriptSizing\", hintLabel: \"hintLabel\" }, host: { properties: { \"class.mat-mdc-form-field-label-always-float\": \"_shouldAlwaysFloat()\", \"class.mat-mdc-form-field-has-icon-prefix\": \"_hasIconPrefix\", \"class.mat-mdc-form-field-has-icon-suffix\": \"_hasIconSuffix\", \"class.mat-form-field-invalid\": \"_control.errorState\", \"class.mat-form-field-disabled\": \"_control.disabled\", \"class.mat-form-field-autofilled\": \"_control.autofilled\", \"class.mat-form-field-appearance-fill\": \"appearance == \\\"fill\\\"\", \"class.mat-form-field-appearance-outline\": \"appearance == \\\"outline\\\"\", \"class.mat-form-field-hide-placeholder\": \"_hasFloatingLabel() && !_shouldLabelFloat()\", \"class.mat-primary\": \"color !== \\\"accent\\\" && color !== \\\"warn\\\"\", \"class.mat-accent\": \"color === \\\"accent\\\"\", \"class.mat-warn\": \"color === \\\"warn\\\"\", \"class.ng-untouched\": \"_shouldForward(\\\"untouched\\\")\", \"class.ng-touched\": \"_shouldForward(\\\"touched\\\")\", \"class.ng-pristine\": \"_shouldForward(\\\"pristine\\\")\", \"class.ng-dirty\": \"_shouldForward(\\\"dirty\\\")\", \"class.ng-valid\": \"_shouldForward(\\\"valid\\\")\", \"class.ng-invalid\": \"_shouldForward(\\\"invalid\\\")\", \"class.ng-pending\": \"_shouldForward(\\\"pending\\\")\" }, classAttribute: \"mat-mdc-form-field\" }, providers: [\n            { provide: MAT_FORM_FIELD, useExisting: MatFormField },\n            { provide: FLOATING_LABEL_PARENT, useExisting: MatFormField },\n        ], queries: [{ propertyName: \"_labelChild\", first: true, predicate: MatLabel, descendants: true, isSignal: true }, { propertyName: \"_formFieldControl\", first: true, predicate: MatFormFieldControl, descendants: true }, { propertyName: \"_prefixChildren\", predicate: MAT_PREFIX, descendants: true }, { propertyName: \"_suffixChildren\", predicate: MAT_SUFFIX, descendants: true }, { propertyName: \"_errorChildren\", predicate: MAT_ERROR, descendants: true }, { propertyName: \"_hintChildren\", predicate: MatHint, descendants: true }], viewQueries: [{ propertyName: \"_iconPrefixContainerSignal\", first: true, predicate: [\"iconPrefixContainer\"], descendants: true, isSignal: true }, { propertyName: \"_textPrefixContainerSignal\", first: true, predicate: [\"textPrefixContainer\"], descendants: true, isSignal: true }, { propertyName: \"_iconSuffixContainerSignal\", first: true, predicate: [\"iconSuffixContainer\"], descendants: true, isSignal: true }, { propertyName: \"_textSuffixContainerSignal\", first: true, predicate: [\"textSuffixContainer\"], descendants: true, isSignal: true }, { propertyName: \"_textField\", first: true, predicate: [\"textField\"], descendants: true }, { propertyName: \"_iconPrefixContainer\", first: true, predicate: [\"iconPrefixContainer\"], descendants: true }, { propertyName: \"_textPrefixContainer\", first: true, predicate: [\"textPrefixContainer\"], descendants: true }, { propertyName: \"_iconSuffixContainer\", first: true, predicate: [\"iconSuffixContainer\"], descendants: true }, { propertyName: \"_textSuffixContainer\", first: true, predicate: [\"textSuffixContainer\"], descendants: true }, { propertyName: \"_floatingLabel\", first: true, predicate: MatFormFieldFloatingLabel, descendants: true }, { propertyName: \"_notchedOutline\", first: true, predicate: MatFormFieldNotchedOutline, descendants: true }, { propertyName: \"_lineRipple\", first: true, predicate: MatFormFieldLineRipple, descendants: true }], exportAs: [\"matFormField\"], ngImport: i0, template: \"<ng-template #labelTemplate>\\n  <!--\\n    MDC recommends that the text-field is a `<label>` element. This rather complicates the\\n    setup because it would require every form-field control to explicitly set `aria-labelledby`.\\n    This is because the `<label>` itself contains more than the actual label (e.g. prefix, suffix\\n    or other projected content), and screen readers could potentially read out undesired content.\\n    Excluding elements from being printed out requires them to be marked with `aria-hidden`, or\\n    the form control is set to a scoped element for the label (using `aria-labelledby`). Both of\\n    these options seem to complicate the setup because we know exactly what content is rendered\\n    as part of the label, and we don't want to spend resources on walking through projected content\\n    to set `aria-hidden`. Nor do we want to set `aria-labelledby` on every form control if we could\\n    simply link the label to the control using the label `for` attribute.\\n  -->\\n  @if (_hasFloatingLabel()) {\\n    <label\\n      matFormFieldFloatingLabel\\n      [floating]=\\\"_shouldLabelFloat()\\\"\\n      [monitorResize]=\\\"_hasOutline()\\\"\\n      [id]=\\\"_labelId\\\"\\n      [attr.for]=\\\"_control.disableAutomaticLabeling ? null : _control.id\\\"\\n    >\\n      <ng-content select=\\\"mat-label\\\"></ng-content>\\n      <!--\\n        We set the required marker as a separate element, in order to make it easier to target if\\n        apps want to override it and to be able to set `aria-hidden` so that screen readers don't\\n        pick it up.\\n       -->\\n      @if (!hideRequiredMarker && _control.required) {\\n        <span\\n          aria-hidden=\\\"true\\\"\\n          class=\\\"mat-mdc-form-field-required-marker mdc-floating-label--required\\\"\\n        ></span>\\n      }\\n    </label>\\n  }\\n</ng-template>\\n\\n<div\\n  class=\\\"mat-mdc-text-field-wrapper mdc-text-field\\\"\\n  #textField\\n  [class.mdc-text-field--filled]=\\\"!_hasOutline()\\\"\\n  [class.mdc-text-field--outlined]=\\\"_hasOutline()\\\"\\n  [class.mdc-text-field--no-label]=\\\"!_hasFloatingLabel()\\\"\\n  [class.mdc-text-field--disabled]=\\\"_control.disabled\\\"\\n  [class.mdc-text-field--invalid]=\\\"_control.errorState\\\"\\n  (click)=\\\"_control.onContainerClick($event)\\\"\\n>\\n  @if (!_hasOutline() && !_control.disabled) {\\n    <div class=\\\"mat-mdc-form-field-focus-overlay\\\"></div>\\n  }\\n  <div class=\\\"mat-mdc-form-field-flex\\\">\\n    @if (_hasOutline()) {\\n      <div matFormFieldNotchedOutline [matFormFieldNotchedOutlineOpen]=\\\"_shouldLabelFloat()\\\">\\n        @if (!_forceDisplayInfixLabel()) {\\n          <ng-template [ngTemplateOutlet]=\\\"labelTemplate\\\"></ng-template>\\n        }\\n      </div>\\n    }\\n\\n    @if (_hasIconPrefix) {\\n      <div class=\\\"mat-mdc-form-field-icon-prefix\\\" #iconPrefixContainer>\\n        <ng-content select=\\\"[matPrefix], [matIconPrefix]\\\"></ng-content>\\n      </div>\\n    }\\n\\n    @if (_hasTextPrefix) {\\n      <div class=\\\"mat-mdc-form-field-text-prefix\\\" #textPrefixContainer>\\n        <ng-content select=\\\"[matTextPrefix]\\\"></ng-content>\\n      </div>\\n    }\\n\\n    <div class=\\\"mat-mdc-form-field-infix\\\">\\n      @if (!_hasOutline() || _forceDisplayInfixLabel()) {\\n        <ng-template [ngTemplateOutlet]=\\\"labelTemplate\\\"></ng-template>\\n      }\\n\\n      <ng-content></ng-content>\\n    </div>\\n\\n    @if (_hasTextSuffix) {\\n      <div class=\\\"mat-mdc-form-field-text-suffix\\\" #textSuffixContainer>\\n        <ng-content select=\\\"[matTextSuffix]\\\"></ng-content>\\n      </div>\\n    }\\n\\n    @if (_hasIconSuffix) {\\n      <div class=\\\"mat-mdc-form-field-icon-suffix\\\" #iconSuffixContainer>\\n        <ng-content select=\\\"[matSuffix], [matIconSuffix]\\\"></ng-content>\\n      </div>\\n    }\\n  </div>\\n\\n  @if (!_hasOutline()) {\\n    <div matFormFieldLineRipple></div>\\n  }\\n</div>\\n\\n<div\\n    class=\\\"mat-mdc-form-field-subscript-wrapper mat-mdc-form-field-bottom-align\\\"\\n    [class.mat-mdc-form-field-subscript-dynamic-size]=\\\"subscriptSizing === 'dynamic'\\\"\\n>\\n  @let subscriptMessageType = _getSubscriptMessageType();\\n\\n  <!-- \\n    Use a single permanent wrapper for both hints and errors so aria-live works correctly,\\n    as having it appear post render will not consistently work. We also do not want to add\\n    additional divs as it causes styling regressions.\\n    -->\\n  <div aria-atomic=\\\"true\\\" aria-live=\\\"polite\\\" \\n      [class.mat-mdc-form-field-error-wrapper]=\\\"subscriptMessageType === 'error'\\\"\\n      [class.mat-mdc-form-field-hint-wrapper]=\\\"subscriptMessageType === 'hint'\\\"\\n    >\\n    @switch (subscriptMessageType) {\\n      @case ('error') {\\n        <ng-content select=\\\"mat-error, [matError]\\\"></ng-content>\\n      }\\n\\n      @case ('hint') {\\n        @if (hintLabel) {\\n          <mat-hint [id]=\\\"_hintLabelId\\\">{{hintLabel}}</mat-hint>\\n        }\\n        <ng-content select=\\\"mat-hint:not([align='end'])\\\"></ng-content>\\n        <div class=\\\"mat-mdc-form-field-hint-spacer\\\"></div>\\n        <ng-content select=\\\"mat-hint[align='end']\\\"></ng-content>\\n      }\\n    }\\n  </div>\\n</div>\\n\", styles: [\".mdc-text-field{display:inline-flex;align-items:baseline;padding:0 16px;position:relative;box-sizing:border-box;overflow:hidden;will-change:opacity,transform,color;border-top-left-radius:4px;border-top-right-radius:4px;border-bottom-right-radius:0;border-bottom-left-radius:0}.mdc-text-field__input{width:100%;min-width:0;border:none;border-radius:0;background:none;padding:0;-moz-appearance:none;-webkit-appearance:none;height:28px}.mdc-text-field__input::-webkit-calendar-picker-indicator,.mdc-text-field__input::-webkit-search-cancel-button{display:none}.mdc-text-field__input::-ms-clear{display:none}.mdc-text-field__input:focus{outline:none}.mdc-text-field__input:invalid{box-shadow:none}.mdc-text-field__input::placeholder{opacity:0}.mdc-text-field__input::-moz-placeholder{opacity:0}.mdc-text-field__input::-webkit-input-placeholder{opacity:0}.mdc-text-field__input:-ms-input-placeholder{opacity:0}.mdc-text-field--no-label .mdc-text-field__input::placeholder,.mdc-text-field--focused .mdc-text-field__input::placeholder{opacity:1}.mdc-text-field--no-label .mdc-text-field__input::-moz-placeholder,.mdc-text-field--focused .mdc-text-field__input::-moz-placeholder{opacity:1}.mdc-text-field--no-label .mdc-text-field__input::-webkit-input-placeholder,.mdc-text-field--focused .mdc-text-field__input::-webkit-input-placeholder{opacity:1}.mdc-text-field--no-label .mdc-text-field__input:-ms-input-placeholder,.mdc-text-field--focused .mdc-text-field__input:-ms-input-placeholder{opacity:1}.mdc-text-field--disabled:not(.mdc-text-field--no-label) .mdc-text-field__input.mat-mdc-input-disabled-interactive::placeholder{opacity:0}.mdc-text-field--disabled:not(.mdc-text-field--no-label) .mdc-text-field__input.mat-mdc-input-disabled-interactive::-moz-placeholder{opacity:0}.mdc-text-field--disabled:not(.mdc-text-field--no-label) .mdc-text-field__input.mat-mdc-input-disabled-interactive::-webkit-input-placeholder{opacity:0}.mdc-text-field--disabled:not(.mdc-text-field--no-label) .mdc-text-field__input.mat-mdc-input-disabled-interactive:-ms-input-placeholder{opacity:0}.mdc-text-field--outlined .mdc-text-field__input,.mdc-text-field--filled.mdc-text-field--no-label .mdc-text-field__input{height:100%}.mdc-text-field--outlined .mdc-text-field__input{display:flex;border:none !important;background-color:rgba(0,0,0,0)}.mdc-text-field--disabled .mdc-text-field__input{pointer-events:auto}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-text-field__input{color:var(--mat-form-field-filled-input-text-color, var(--mat-sys-on-surface));caret-color:var(--mat-form-field-filled-caret-color, var(--mat-sys-primary))}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-text-field__input::placeholder{color:var(--mat-form-field-filled-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-text-field__input::-moz-placeholder{color:var(--mat-form-field-filled-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-text-field__input::-webkit-input-placeholder{color:var(--mat-form-field-filled-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-text-field__input:-ms-input-placeholder{color:var(--mat-form-field-filled-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-text-field__input{color:var(--mat-form-field-outlined-input-text-color, var(--mat-sys-on-surface));caret-color:var(--mat-form-field-outlined-caret-color, var(--mat-sys-primary))}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-text-field__input::placeholder{color:var(--mat-form-field-outlined-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-text-field__input::-moz-placeholder{color:var(--mat-form-field-outlined-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-text-field__input::-webkit-input-placeholder{color:var(--mat-form-field-outlined-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-text-field__input:-ms-input-placeholder{color:var(--mat-form-field-outlined-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--filled.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-text-field__input{caret-color:var(--mat-form-field-filled-error-caret-color, var(--mat-sys-error))}.mdc-text-field--outlined.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-text-field__input{caret-color:var(--mat-form-field-outlined-error-caret-color, var(--mat-sys-error))}.mdc-text-field--filled.mdc-text-field--disabled .mdc-text-field__input{color:var(--mat-form-field-filled-disabled-input-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-text-field--outlined.mdc-text-field--disabled .mdc-text-field__input{color:var(--mat-form-field-outlined-disabled-input-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}@media(forced-colors: active){.mdc-text-field--disabled .mdc-text-field__input{background-color:Window}}.mdc-text-field--filled{height:56px;border-bottom-right-radius:0;border-bottom-left-radius:0;border-top-left-radius:var(--mat-form-field-filled-container-shape, var(--mat-sys-corner-extra-small));border-top-right-radius:var(--mat-form-field-filled-container-shape, var(--mat-sys-corner-extra-small))}.mdc-text-field--filled:not(.mdc-text-field--disabled){background-color:var(--mat-form-field-filled-container-color, var(--mat-sys-surface-variant))}.mdc-text-field--filled.mdc-text-field--disabled{background-color:var(--mat-form-field-filled-disabled-container-color, color-mix(in srgb, var(--mat-sys-on-surface) 4%, transparent))}.mdc-text-field--outlined{height:56px;overflow:visible;padding-right:max(16px,var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small)));padding-left:max(16px,var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small)) + 4px)}[dir=rtl] .mdc-text-field--outlined{padding-right:max(16px,var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small)) + 4px);padding-left:max(16px,var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small)))}.mdc-floating-label{position:absolute;left:0;transform-origin:left top;line-height:1.15rem;text-align:left;text-overflow:ellipsis;white-space:nowrap;cursor:text;overflow:hidden;will-change:transform}[dir=rtl] .mdc-floating-label{right:0;left:auto;transform-origin:right top;text-align:right}.mdc-text-field .mdc-floating-label{top:50%;transform:translateY(-50%);pointer-events:none}.mdc-notched-outline .mdc-floating-label{display:inline-block;position:relative;max-width:100%}.mdc-text-field--outlined .mdc-floating-label{left:4px;right:auto}[dir=rtl] .mdc-text-field--outlined .mdc-floating-label{left:auto;right:4px}.mdc-text-field--filled .mdc-floating-label{left:16px;right:auto}[dir=rtl] .mdc-text-field--filled .mdc-floating-label{left:auto;right:16px}.mdc-text-field--disabled .mdc-floating-label{cursor:default}@media(forced-colors: active){.mdc-text-field--disabled .mdc-floating-label{z-index:1}}.mdc-text-field--filled.mdc-text-field--no-label .mdc-floating-label{display:none}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-floating-label{color:var(--mat-form-field-filled-label-text-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-floating-label{color:var(--mat-form-field-filled-focus-label-text-color, var(--mat-sys-primary))}.mdc-text-field--filled:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-floating-label{color:var(--mat-form-field-filled-hover-label-text-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--filled.mdc-text-field--disabled .mdc-floating-label{color:var(--mat-form-field-filled-disabled-label-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--invalid .mdc-floating-label{color:var(--mat-form-field-filled-error-label-text-color, var(--mat-sys-error))}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--invalid.mdc-text-field--focused .mdc-floating-label{color:var(--mat-form-field-filled-error-focus-label-text-color, var(--mat-sys-error))}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--invalid:not(.mdc-text-field--disabled):hover .mdc-floating-label{color:var(--mat-form-field-filled-error-hover-label-text-color, var(--mat-sys-on-error-container))}.mdc-text-field--filled .mdc-floating-label{font-family:var(--mat-form-field-filled-label-text-font, var(--mat-sys-body-large-font));font-size:var(--mat-form-field-filled-label-text-size, var(--mat-sys-body-large-size));font-weight:var(--mat-form-field-filled-label-text-weight, var(--mat-sys-body-large-weight));letter-spacing:var(--mat-form-field-filled-label-text-tracking, var(--mat-sys-body-large-tracking))}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-floating-label{color:var(--mat-form-field-outlined-label-text-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-floating-label{color:var(--mat-form-field-outlined-focus-label-text-color, var(--mat-sys-primary))}.mdc-text-field--outlined:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-floating-label{color:var(--mat-form-field-outlined-hover-label-text-color, var(--mat-sys-on-surface))}.mdc-text-field--outlined.mdc-text-field--disabled .mdc-floating-label{color:var(--mat-form-field-outlined-disabled-label-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--invalid .mdc-floating-label{color:var(--mat-form-field-outlined-error-label-text-color, var(--mat-sys-error))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--invalid.mdc-text-field--focused .mdc-floating-label{color:var(--mat-form-field-outlined-error-focus-label-text-color, var(--mat-sys-error))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--invalid:not(.mdc-text-field--disabled):hover .mdc-floating-label{color:var(--mat-form-field-outlined-error-hover-label-text-color, var(--mat-sys-on-error-container))}.mdc-text-field--outlined .mdc-floating-label{font-family:var(--mat-form-field-outlined-label-text-font, var(--mat-sys-body-large-font));font-size:var(--mat-form-field-outlined-label-text-size, var(--mat-sys-body-large-size));font-weight:var(--mat-form-field-outlined-label-text-weight, var(--mat-sys-body-large-weight));letter-spacing:var(--mat-form-field-outlined-label-text-tracking, var(--mat-sys-body-large-tracking))}.mdc-floating-label--float-above{cursor:auto;transform:translateY(-106%) scale(0.75)}.mdc-text-field--filled .mdc-floating-label--float-above{transform:translateY(-106%) scale(0.75)}.mdc-text-field--outlined .mdc-floating-label--float-above{transform:translateY(-37.25px) scale(1);font-size:.75rem}.mdc-notched-outline .mdc-floating-label--float-above{text-overflow:clip}.mdc-notched-outline--upgraded .mdc-floating-label--float-above{max-width:133.3333333333%}.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{transform:translateY(-34.75px) scale(0.75)}.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{font-size:1rem}.mdc-floating-label--required:not(.mdc-floating-label--hide-required-marker)::after{margin-left:1px;margin-right:0;content:\\\"*\\\"}[dir=rtl] .mdc-floating-label--required:not(.mdc-floating-label--hide-required-marker)::after{margin-left:0;margin-right:1px}.mdc-notched-outline{display:flex;position:absolute;top:0;right:0;left:0;box-sizing:border-box;width:100%;max-width:100%;height:100%;text-align:left;pointer-events:none}[dir=rtl] .mdc-notched-outline{text-align:right}.mdc-text-field--outlined .mdc-notched-outline{z-index:1}.mat-mdc-notch-piece{box-sizing:border-box;height:100%;pointer-events:none;border-top:1px solid;border-bottom:1px solid}.mdc-text-field--focused .mat-mdc-notch-piece{border-width:2px}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mat-mdc-notch-piece{border-color:var(--mat-form-field-outlined-outline-color, var(--mat-sys-outline));border-width:var(--mat-form-field-outlined-outline-width, 1px)}.mdc-text-field--outlined:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mat-mdc-notch-piece{border-color:var(--mat-form-field-outlined-hover-outline-color, var(--mat-sys-on-surface))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mat-mdc-notch-piece{border-color:var(--mat-form-field-outlined-focus-outline-color, var(--mat-sys-primary))}.mdc-text-field--outlined.mdc-text-field--disabled .mat-mdc-notch-piece{border-color:var(--mat-form-field-outlined-disabled-outline-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--invalid .mat-mdc-notch-piece{border-color:var(--mat-form-field-outlined-error-outline-color, var(--mat-sys-error))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--invalid:not(.mdc-text-field--focused):hover .mdc-notched-outline .mat-mdc-notch-piece{border-color:var(--mat-form-field-outlined-error-hover-outline-color, var(--mat-sys-on-error-container))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--invalid.mdc-text-field--focused .mat-mdc-notch-piece{border-color:var(--mat-form-field-outlined-error-focus-outline-color, var(--mat-sys-error))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline .mat-mdc-notch-piece{border-width:var(--mat-form-field-outlined-focus-outline-width, 2px)}.mdc-notched-outline__leading{border-left:1px solid;border-right:none;border-top-right-radius:0;border-bottom-right-radius:0;border-top-left-radius:var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small));border-bottom-left-radius:var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small))}.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__leading{width:max(12px,var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small)))}[dir=rtl] .mdc-notched-outline__leading{border-left:none;border-right:1px solid;border-bottom-left-radius:0;border-top-left-radius:0;border-top-right-radius:var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small));border-bottom-right-radius:var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small))}.mdc-notched-outline__trailing{flex-grow:1;border-left:none;border-right:1px solid;border-top-left-radius:0;border-bottom-left-radius:0;border-top-right-radius:var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small));border-bottom-right-radius:var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small))}[dir=rtl] .mdc-notched-outline__trailing{border-left:1px solid;border-right:none;border-top-right-radius:0;border-bottom-right-radius:0;border-top-left-radius:var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small));border-bottom-left-radius:var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small))}.mdc-notched-outline__notch{flex:0 0 auto;width:auto}.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__notch{max-width:min(var(--mat-form-field-notch-max-width, 100%),calc(100% - max(12px, var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small))) * 2))}.mdc-text-field--outlined .mdc-notched-outline--notched .mdc-notched-outline__notch{max-width:min(100%,calc(100% - max(12px, var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small))) * 2))}.mdc-text-field--outlined .mdc-notched-outline--notched .mdc-notched-outline__notch{padding-top:1px}.mdc-text-field--focused.mdc-text-field--outlined .mdc-notched-outline--notched .mdc-notched-outline__notch{padding-top:2px}.mdc-notched-outline--notched .mdc-notched-outline__notch{padding-left:0;padding-right:8px;border-top:none}[dir=rtl] .mdc-notched-outline--notched .mdc-notched-outline__notch{padding-left:8px;padding-right:0}.mdc-notched-outline--no-label .mdc-notched-outline__notch{display:none}.mdc-line-ripple::before,.mdc-line-ripple::after{position:absolute;bottom:0;left:0;width:100%;border-bottom-style:solid;content:\\\"\\\"}.mdc-line-ripple::before{z-index:1;border-bottom-width:var(--mat-form-field-filled-active-indicator-height, 1px)}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-line-ripple::before{border-bottom-color:var(--mat-form-field-filled-active-indicator-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--filled:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-line-ripple::before{border-bottom-color:var(--mat-form-field-filled-hover-active-indicator-color, var(--mat-sys-on-surface))}.mdc-text-field--filled.mdc-text-field--disabled .mdc-line-ripple::before{border-bottom-color:var(--mat-form-field-filled-disabled-active-indicator-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--invalid .mdc-line-ripple::before{border-bottom-color:var(--mat-form-field-filled-error-active-indicator-color, var(--mat-sys-error))}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--invalid:not(.mdc-text-field--focused):hover .mdc-line-ripple::before{border-bottom-color:var(--mat-form-field-filled-error-hover-active-indicator-color, var(--mat-sys-on-error-container))}.mdc-line-ripple::after{transform:scaleX(0);opacity:0;z-index:2}.mdc-text-field--filled .mdc-line-ripple::after{border-bottom-width:var(--mat-form-field-filled-focus-active-indicator-height, 2px)}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-line-ripple::after{border-bottom-color:var(--mat-form-field-filled-focus-active-indicator-color, var(--mat-sys-primary))}.mdc-text-field--filled.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-line-ripple::after{border-bottom-color:var(--mat-form-field-filled-error-focus-active-indicator-color, var(--mat-sys-error))}.mdc-line-ripple--active::after{transform:scaleX(1);opacity:1}.mdc-line-ripple--deactivating::after{opacity:0}.mdc-text-field--disabled{pointer-events:none}.mat-mdc-form-field-textarea-control{vertical-align:middle;resize:vertical;box-sizing:border-box;height:auto;margin:0;padding:0;border:none;overflow:auto}.mat-mdc-form-field-input-control.mat-mdc-form-field-input-control{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font:inherit;letter-spacing:inherit;text-decoration:inherit;text-transform:inherit;border:none}.mat-mdc-form-field .mat-mdc-floating-label.mdc-floating-label{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;line-height:normal;pointer-events:all;will-change:auto}.mat-mdc-form-field:not(.mat-form-field-disabled) .mat-mdc-floating-label.mdc-floating-label{cursor:inherit}.mdc-text-field--no-label:not(.mdc-text-field--textarea) .mat-mdc-form-field-input-control.mdc-text-field__input,.mat-mdc-text-field-wrapper .mat-mdc-form-field-input-control{height:auto}.mat-mdc-text-field-wrapper .mat-mdc-form-field-input-control.mdc-text-field__input[type=color]{height:23px}.mat-mdc-text-field-wrapper{height:auto;flex:auto;will-change:auto}.mat-mdc-form-field-has-icon-prefix .mat-mdc-text-field-wrapper{padding-left:0;--mat-mdc-form-field-label-offset-x: -16px}.mat-mdc-form-field-has-icon-suffix .mat-mdc-text-field-wrapper{padding-right:0}[dir=rtl] .mat-mdc-text-field-wrapper{padding-left:16px;padding-right:16px}[dir=rtl] .mat-mdc-form-field-has-icon-suffix .mat-mdc-text-field-wrapper{padding-left:0}[dir=rtl] .mat-mdc-form-field-has-icon-prefix .mat-mdc-text-field-wrapper{padding-right:0}.mat-form-field-disabled .mdc-text-field__input::placeholder{color:var(--mat-form-field-disabled-input-text-placeholder-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-form-field-disabled .mdc-text-field__input::-moz-placeholder{color:var(--mat-form-field-disabled-input-text-placeholder-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-form-field-disabled .mdc-text-field__input::-webkit-input-placeholder{color:var(--mat-form-field-disabled-input-text-placeholder-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-form-field-disabled .mdc-text-field__input:-ms-input-placeholder{color:var(--mat-form-field-disabled-input-text-placeholder-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-mdc-form-field-label-always-float .mdc-text-field__input::placeholder{transition-delay:40ms;transition-duration:110ms;opacity:1}.mat-mdc-text-field-wrapper .mat-mdc-form-field-infix .mat-mdc-floating-label{left:auto;right:auto}.mat-mdc-text-field-wrapper.mdc-text-field--outlined .mdc-text-field__input{display:inline-block}.mat-mdc-form-field .mat-mdc-text-field-wrapper.mdc-text-field .mdc-notched-outline__notch{padding-top:0}.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field .mdc-notched-outline__notch{border-left:1px solid rgba(0,0,0,0)}[dir=rtl] .mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field .mdc-notched-outline__notch{border-left:none;border-right:1px solid rgba(0,0,0,0)}.mat-mdc-form-field-infix{min-height:var(--mat-form-field-container-height, 56px);padding-top:var(--mat-form-field-filled-with-label-container-padding-top, 24px);padding-bottom:var(--mat-form-field-filled-with-label-container-padding-bottom, 8px)}.mdc-text-field--outlined .mat-mdc-form-field-infix,.mdc-text-field--no-label .mat-mdc-form-field-infix{padding-top:var(--mat-form-field-container-vertical-padding, 16px);padding-bottom:var(--mat-form-field-container-vertical-padding, 16px)}.mat-mdc-text-field-wrapper .mat-mdc-form-field-flex .mat-mdc-floating-label{top:calc(var(--mat-form-field-container-height, 56px)/2)}.mdc-text-field--filled .mat-mdc-floating-label{display:var(--mat-form-field-filled-label-display, block)}.mat-mdc-text-field-wrapper.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{--mat-mdc-form-field-label-transform: translateY(calc(calc(6.75px + var(--mat-form-field-container-height, 56px) / 2) * -1)) scale(var(--mat-mdc-form-field-floating-label-scale, 0.75));transform:var(--mat-mdc-form-field-label-transform)}@keyframes _mat-form-field-subscript-animation{from{opacity:0;transform:translateY(-5px)}to{opacity:1;transform:translateY(0)}}.mat-mdc-form-field-subscript-wrapper{box-sizing:border-box;width:100%;position:relative}.mat-mdc-form-field-hint-wrapper,.mat-mdc-form-field-error-wrapper{position:absolute;top:0;left:0;right:0;padding:0 16px;opacity:1;transform:translateY(0);animation:_mat-form-field-subscript-animation 0ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-mdc-form-field-subscript-dynamic-size .mat-mdc-form-field-hint-wrapper,.mat-mdc-form-field-subscript-dynamic-size .mat-mdc-form-field-error-wrapper{position:static}.mat-mdc-form-field-bottom-align::before{content:\\\"\\\";display:inline-block;height:16px}.mat-mdc-form-field-bottom-align.mat-mdc-form-field-subscript-dynamic-size::before{content:unset}.mat-mdc-form-field-hint-end{order:1}.mat-mdc-form-field-hint-wrapper{display:flex}.mat-mdc-form-field-hint-spacer{flex:1 0 1em}.mat-mdc-form-field-error{display:block;color:var(--mat-form-field-error-text-color, var(--mat-sys-error))}.mat-mdc-form-field-subscript-wrapper,.mat-mdc-form-field-bottom-align::before{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:var(--mat-form-field-subscript-text-font, var(--mat-sys-body-small-font));line-height:var(--mat-form-field-subscript-text-line-height, var(--mat-sys-body-small-line-height));font-size:var(--mat-form-field-subscript-text-size, var(--mat-sys-body-small-size));letter-spacing:var(--mat-form-field-subscript-text-tracking, var(--mat-sys-body-small-tracking));font-weight:var(--mat-form-field-subscript-text-weight, var(--mat-sys-body-small-weight))}.mat-mdc-form-field-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;opacity:0;pointer-events:none;background-color:var(--mat-form-field-state-layer-color, var(--mat-sys-on-surface))}.mat-mdc-text-field-wrapper:hover .mat-mdc-form-field-focus-overlay{opacity:var(--mat-form-field-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-form-field.mat-focused .mat-mdc-form-field-focus-overlay{opacity:var(--mat-form-field-focus-state-layer-opacity, 0)}select.mat-mdc-form-field-input-control{-moz-appearance:none;-webkit-appearance:none;background-color:rgba(0,0,0,0);display:inline-flex;box-sizing:border-box}select.mat-mdc-form-field-input-control:not(:disabled){cursor:pointer}select.mat-mdc-form-field-input-control:not(.mat-mdc-native-select-inline) option{color:var(--mat-form-field-select-option-text-color, var(--mat-sys-neutral10))}select.mat-mdc-form-field-input-control:not(.mat-mdc-native-select-inline) option:disabled{color:var(--mat-form-field-select-disabled-option-text-color, color-mix(in srgb, var(--mat-sys-neutral10) 38%, transparent))}.mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid rgba(0,0,0,0);border-right:5px solid rgba(0,0,0,0);border-top:5px solid;position:absolute;right:0;top:50%;margin-top:-2.5px;pointer-events:none;color:var(--mat-form-field-enabled-select-arrow-color, var(--mat-sys-on-surface-variant))}[dir=rtl] .mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-infix::after{right:auto;left:0}.mat-mdc-form-field-type-mat-native-select.mat-focused .mat-mdc-form-field-infix::after{color:var(--mat-form-field-focus-select-arrow-color, var(--mat-sys-primary))}.mat-mdc-form-field-type-mat-native-select.mat-form-field-disabled .mat-mdc-form-field-infix::after{color:var(--mat-form-field-disabled-select-arrow-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-input-control{padding-right:15px}[dir=rtl] .mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-input-control{padding-right:0;padding-left:15px}@media(forced-colors: active){.mat-form-field-appearance-fill .mat-mdc-text-field-wrapper{outline:solid 1px}}@media(forced-colors: active){.mat-form-field-appearance-fill.mat-form-field-disabled .mat-mdc-text-field-wrapper{outline-color:GrayText}}@media(forced-colors: active){.mat-form-field-appearance-fill.mat-focused .mat-mdc-text-field-wrapper{outline:dashed 3px}}@media(forced-colors: active){.mat-mdc-form-field.mat-focused .mdc-notched-outline{border:dashed 3px}}.mat-mdc-form-field-input-control[type=date],.mat-mdc-form-field-input-control[type=datetime],.mat-mdc-form-field-input-control[type=datetime-local],.mat-mdc-form-field-input-control[type=month],.mat-mdc-form-field-input-control[type=week],.mat-mdc-form-field-input-control[type=time]{line-height:1}.mat-mdc-form-field-input-control::-webkit-datetime-edit{line-height:1;padding:0;margin-bottom:-2px}.mat-mdc-form-field{--mat-mdc-form-field-floating-label-scale: 0.75;display:inline-flex;flex-direction:column;min-width:0;text-align:left;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:var(--mat-form-field-container-text-font, var(--mat-sys-body-large-font));line-height:var(--mat-form-field-container-text-line-height, var(--mat-sys-body-large-line-height));font-size:var(--mat-form-field-container-text-size, var(--mat-sys-body-large-size));letter-spacing:var(--mat-form-field-container-text-tracking, var(--mat-sys-body-large-tracking));font-weight:var(--mat-form-field-container-text-weight, var(--mat-sys-body-large-weight))}.mat-mdc-form-field .mdc-text-field--outlined .mdc-floating-label--float-above{font-size:calc(var(--mat-form-field-outlined-label-text-populated-size)*var(--mat-mdc-form-field-floating-label-scale))}.mat-mdc-form-field .mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{font-size:var(--mat-form-field-outlined-label-text-populated-size)}[dir=rtl] .mat-mdc-form-field{text-align:right}.mat-mdc-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-mdc-text-field-wrapper{width:100%;z-index:0}.mat-mdc-form-field-icon-prefix,.mat-mdc-form-field-icon-suffix{align-self:center;line-height:0;pointer-events:auto;position:relative;z-index:1}.mat-mdc-form-field-icon-prefix>.mat-icon,.mat-mdc-form-field-icon-suffix>.mat-icon{padding:0 12px;box-sizing:content-box}.mat-mdc-form-field-icon-prefix{color:var(--mat-form-field-leading-icon-color, var(--mat-sys-on-surface-variant))}.mat-form-field-disabled .mat-mdc-form-field-icon-prefix{color:var(--mat-form-field-disabled-leading-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-mdc-form-field-icon-suffix{color:var(--mat-form-field-trailing-icon-color, var(--mat-sys-on-surface-variant))}.mat-form-field-disabled .mat-mdc-form-field-icon-suffix{color:var(--mat-form-field-disabled-trailing-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-form-field-invalid .mat-mdc-form-field-icon-suffix{color:var(--mat-form-field-error-trailing-icon-color, var(--mat-sys-error))}.mat-form-field-invalid:not(.mat-focused):not(.mat-form-field-disabled) .mat-mdc-text-field-wrapper:hover .mat-mdc-form-field-icon-suffix{color:var(--mat-form-field-error-hover-trailing-icon-color, var(--mat-sys-on-error-container))}.mat-form-field-invalid.mat-focused .mat-mdc-text-field-wrapper .mat-mdc-form-field-icon-suffix{color:var(--mat-form-field-error-focus-trailing-icon-color, var(--mat-sys-error))}.mat-mdc-form-field-icon-prefix,[dir=rtl] .mat-mdc-form-field-icon-suffix{padding:0 4px 0 0}.mat-mdc-form-field-icon-suffix,[dir=rtl] .mat-mdc-form-field-icon-prefix{padding:0 0 0 4px}.mat-mdc-form-field-subscript-wrapper .mat-icon,.mat-mdc-form-field label .mat-icon{width:1em;height:1em;font-size:inherit}.mat-mdc-form-field-infix{flex:auto;min-width:0;width:180px;position:relative;box-sizing:border-box}.mat-mdc-form-field-infix:has(textarea[cols]){width:auto}.mat-mdc-form-field .mdc-notched-outline__notch{margin-left:-1px;-webkit-clip-path:inset(-9em -999em -9em 1px);clip-path:inset(-9em -999em -9em 1px)}[dir=rtl] .mat-mdc-form-field .mdc-notched-outline__notch{margin-left:0;margin-right:-1px;-webkit-clip-path:inset(-9em 1px -9em -999em);clip-path:inset(-9em 1px -9em -999em)}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-floating-label{transition:transform 150ms cubic-bezier(0.4, 0, 0.2, 1),color 150ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-text-field__input{transition:opacity 150ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-text-field__input::placeholder{transition:opacity 67ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-text-field__input::-moz-placeholder{transition:opacity 67ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-text-field__input::-webkit-input-placeholder{transition:opacity 67ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-text-field__input:-ms-input-placeholder{transition:opacity 67ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--no-label .mdc-text-field__input::placeholder,.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--focused .mdc-text-field__input::placeholder{transition-delay:40ms;transition-duration:110ms}.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--no-label .mdc-text-field__input::-moz-placeholder,.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--focused .mdc-text-field__input::-moz-placeholder{transition-delay:40ms;transition-duration:110ms}.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--no-label .mdc-text-field__input::-webkit-input-placeholder,.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--focused .mdc-text-field__input::-webkit-input-placeholder{transition-delay:40ms;transition-duration:110ms}.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--no-label .mdc-text-field__input:-ms-input-placeholder,.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--focused .mdc-text-field__input:-ms-input-placeholder{transition-delay:40ms;transition-duration:110ms}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-text-field--filled:not(.mdc-ripple-upgraded):focus .mdc-text-field__ripple::before{transition-duration:75ms}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-line-ripple::after{transition:transform 180ms cubic-bezier(0.4, 0, 0.2, 1),opacity 180ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field.mat-form-field-animations-enabled .mat-mdc-form-field-hint-wrapper,.mat-mdc-form-field.mat-form-field-animations-enabled .mat-mdc-form-field-error-wrapper{animation-duration:300ms}.mdc-notched-outline .mdc-floating-label{max-width:calc(100% + 1px)}.mdc-notched-outline--upgraded .mdc-floating-label--float-above{max-width:calc(133.3333333333% + 1px)}\\n\"], dependencies: [{ kind: \"directive\", type: MatFormFieldFloatingLabel, selector: \"label[matFormFieldFloatingLabel]\", inputs: [\"floating\", \"monitorResize\"] }, { kind: \"component\", type: MatFormFieldNotchedOutline, selector: \"div[matFormFieldNotchedOutline]\", inputs: [\"matFormFieldNotchedOutlineOpen\"] }, { kind: \"directive\", type: NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: MatFormFieldLineRipple, selector: \"div[matFormFieldLineRipple]\" }, { kind: \"directive\", type: MatHint, selector: \"mat-hint\", inputs: [\"align\", \"id\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatFormField, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-form-field', exportAs: 'matFormField', host: {\n                        'class': 'mat-mdc-form-field',\n                        '[class.mat-mdc-form-field-label-always-float]': '_shouldAlwaysFloat()',\n                        '[class.mat-mdc-form-field-has-icon-prefix]': '_hasIconPrefix',\n                        '[class.mat-mdc-form-field-has-icon-suffix]': '_hasIconSuffix',\n                        // Note that these classes reuse the same names as the non-MDC version, because they can be\n                        // considered a public API since custom form controls may use them to style themselves.\n                        // See https://github.com/angular/components/pull/20502#discussion_r486124901.\n                        '[class.mat-form-field-invalid]': '_control.errorState',\n                        '[class.mat-form-field-disabled]': '_control.disabled',\n                        '[class.mat-form-field-autofilled]': '_control.autofilled',\n                        '[class.mat-form-field-appearance-fill]': 'appearance == \"fill\"',\n                        '[class.mat-form-field-appearance-outline]': 'appearance == \"outline\"',\n                        '[class.mat-form-field-hide-placeholder]': '_hasFloatingLabel() && !_shouldLabelFloat()',\n                        '[class.mat-primary]': 'color !== \"accent\" && color !== \"warn\"',\n                        '[class.mat-accent]': 'color === \"accent\"',\n                        '[class.mat-warn]': 'color === \"warn\"',\n                        '[class.ng-untouched]': '_shouldForward(\"untouched\")',\n                        '[class.ng-touched]': '_shouldForward(\"touched\")',\n                        '[class.ng-pristine]': '_shouldForward(\"pristine\")',\n                        '[class.ng-dirty]': '_shouldForward(\"dirty\")',\n                        '[class.ng-valid]': '_shouldForward(\"valid\")',\n                        '[class.ng-invalid]': '_shouldForward(\"invalid\")',\n                        '[class.ng-pending]': '_shouldForward(\"pending\")',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, providers: [\n                        { provide: MAT_FORM_FIELD, useExisting: MatFormField },\n                        { provide: FLOATING_LABEL_PARENT, useExisting: MatFormField },\n                    ], imports: [\n                        MatFormFieldFloatingLabel,\n                        MatFormFieldNotchedOutline,\n                        NgTemplateOutlet,\n                        MatFormFieldLineRipple,\n                        MatHint,\n                    ], template: \"<ng-template #labelTemplate>\\n  <!--\\n    MDC recommends that the text-field is a `<label>` element. This rather complicates the\\n    setup because it would require every form-field control to explicitly set `aria-labelledby`.\\n    This is because the `<label>` itself contains more than the actual label (e.g. prefix, suffix\\n    or other projected content), and screen readers could potentially read out undesired content.\\n    Excluding elements from being printed out requires them to be marked with `aria-hidden`, or\\n    the form control is set to a scoped element for the label (using `aria-labelledby`). Both of\\n    these options seem to complicate the setup because we know exactly what content is rendered\\n    as part of the label, and we don't want to spend resources on walking through projected content\\n    to set `aria-hidden`. Nor do we want to set `aria-labelledby` on every form control if we could\\n    simply link the label to the control using the label `for` attribute.\\n  -->\\n  @if (_hasFloatingLabel()) {\\n    <label\\n      matFormFieldFloatingLabel\\n      [floating]=\\\"_shouldLabelFloat()\\\"\\n      [monitorResize]=\\\"_hasOutline()\\\"\\n      [id]=\\\"_labelId\\\"\\n      [attr.for]=\\\"_control.disableAutomaticLabeling ? null : _control.id\\\"\\n    >\\n      <ng-content select=\\\"mat-label\\\"></ng-content>\\n      <!--\\n        We set the required marker as a separate element, in order to make it easier to target if\\n        apps want to override it and to be able to set `aria-hidden` so that screen readers don't\\n        pick it up.\\n       -->\\n      @if (!hideRequiredMarker && _control.required) {\\n        <span\\n          aria-hidden=\\\"true\\\"\\n          class=\\\"mat-mdc-form-field-required-marker mdc-floating-label--required\\\"\\n        ></span>\\n      }\\n    </label>\\n  }\\n</ng-template>\\n\\n<div\\n  class=\\\"mat-mdc-text-field-wrapper mdc-text-field\\\"\\n  #textField\\n  [class.mdc-text-field--filled]=\\\"!_hasOutline()\\\"\\n  [class.mdc-text-field--outlined]=\\\"_hasOutline()\\\"\\n  [class.mdc-text-field--no-label]=\\\"!_hasFloatingLabel()\\\"\\n  [class.mdc-text-field--disabled]=\\\"_control.disabled\\\"\\n  [class.mdc-text-field--invalid]=\\\"_control.errorState\\\"\\n  (click)=\\\"_control.onContainerClick($event)\\\"\\n>\\n  @if (!_hasOutline() && !_control.disabled) {\\n    <div class=\\\"mat-mdc-form-field-focus-overlay\\\"></div>\\n  }\\n  <div class=\\\"mat-mdc-form-field-flex\\\">\\n    @if (_hasOutline()) {\\n      <div matFormFieldNotchedOutline [matFormFieldNotchedOutlineOpen]=\\\"_shouldLabelFloat()\\\">\\n        @if (!_forceDisplayInfixLabel()) {\\n          <ng-template [ngTemplateOutlet]=\\\"labelTemplate\\\"></ng-template>\\n        }\\n      </div>\\n    }\\n\\n    @if (_hasIconPrefix) {\\n      <div class=\\\"mat-mdc-form-field-icon-prefix\\\" #iconPrefixContainer>\\n        <ng-content select=\\\"[matPrefix], [matIconPrefix]\\\"></ng-content>\\n      </div>\\n    }\\n\\n    @if (_hasTextPrefix) {\\n      <div class=\\\"mat-mdc-form-field-text-prefix\\\" #textPrefixContainer>\\n        <ng-content select=\\\"[matTextPrefix]\\\"></ng-content>\\n      </div>\\n    }\\n\\n    <div class=\\\"mat-mdc-form-field-infix\\\">\\n      @if (!_hasOutline() || _forceDisplayInfixLabel()) {\\n        <ng-template [ngTemplateOutlet]=\\\"labelTemplate\\\"></ng-template>\\n      }\\n\\n      <ng-content></ng-content>\\n    </div>\\n\\n    @if (_hasTextSuffix) {\\n      <div class=\\\"mat-mdc-form-field-text-suffix\\\" #textSuffixContainer>\\n        <ng-content select=\\\"[matTextSuffix]\\\"></ng-content>\\n      </div>\\n    }\\n\\n    @if (_hasIconSuffix) {\\n      <div class=\\\"mat-mdc-form-field-icon-suffix\\\" #iconSuffixContainer>\\n        <ng-content select=\\\"[matSuffix], [matIconSuffix]\\\"></ng-content>\\n      </div>\\n    }\\n  </div>\\n\\n  @if (!_hasOutline()) {\\n    <div matFormFieldLineRipple></div>\\n  }\\n</div>\\n\\n<div\\n    class=\\\"mat-mdc-form-field-subscript-wrapper mat-mdc-form-field-bottom-align\\\"\\n    [class.mat-mdc-form-field-subscript-dynamic-size]=\\\"subscriptSizing === 'dynamic'\\\"\\n>\\n  @let subscriptMessageType = _getSubscriptMessageType();\\n\\n  <!-- \\n    Use a single permanent wrapper for both hints and errors so aria-live works correctly,\\n    as having it appear post render will not consistently work. We also do not want to add\\n    additional divs as it causes styling regressions.\\n    -->\\n  <div aria-atomic=\\\"true\\\" aria-live=\\\"polite\\\" \\n      [class.mat-mdc-form-field-error-wrapper]=\\\"subscriptMessageType === 'error'\\\"\\n      [class.mat-mdc-form-field-hint-wrapper]=\\\"subscriptMessageType === 'hint'\\\"\\n    >\\n    @switch (subscriptMessageType) {\\n      @case ('error') {\\n        <ng-content select=\\\"mat-error, [matError]\\\"></ng-content>\\n      }\\n\\n      @case ('hint') {\\n        @if (hintLabel) {\\n          <mat-hint [id]=\\\"_hintLabelId\\\">{{hintLabel}}</mat-hint>\\n        }\\n        <ng-content select=\\\"mat-hint:not([align='end'])\\\"></ng-content>\\n        <div class=\\\"mat-mdc-form-field-hint-spacer\\\"></div>\\n        <ng-content select=\\\"mat-hint[align='end']\\\"></ng-content>\\n      }\\n    }\\n  </div>\\n</div>\\n\", styles: [\".mdc-text-field{display:inline-flex;align-items:baseline;padding:0 16px;position:relative;box-sizing:border-box;overflow:hidden;will-change:opacity,transform,color;border-top-left-radius:4px;border-top-right-radius:4px;border-bottom-right-radius:0;border-bottom-left-radius:0}.mdc-text-field__input{width:100%;min-width:0;border:none;border-radius:0;background:none;padding:0;-moz-appearance:none;-webkit-appearance:none;height:28px}.mdc-text-field__input::-webkit-calendar-picker-indicator,.mdc-text-field__input::-webkit-search-cancel-button{display:none}.mdc-text-field__input::-ms-clear{display:none}.mdc-text-field__input:focus{outline:none}.mdc-text-field__input:invalid{box-shadow:none}.mdc-text-field__input::placeholder{opacity:0}.mdc-text-field__input::-moz-placeholder{opacity:0}.mdc-text-field__input::-webkit-input-placeholder{opacity:0}.mdc-text-field__input:-ms-input-placeholder{opacity:0}.mdc-text-field--no-label .mdc-text-field__input::placeholder,.mdc-text-field--focused .mdc-text-field__input::placeholder{opacity:1}.mdc-text-field--no-label .mdc-text-field__input::-moz-placeholder,.mdc-text-field--focused .mdc-text-field__input::-moz-placeholder{opacity:1}.mdc-text-field--no-label .mdc-text-field__input::-webkit-input-placeholder,.mdc-text-field--focused .mdc-text-field__input::-webkit-input-placeholder{opacity:1}.mdc-text-field--no-label .mdc-text-field__input:-ms-input-placeholder,.mdc-text-field--focused .mdc-text-field__input:-ms-input-placeholder{opacity:1}.mdc-text-field--disabled:not(.mdc-text-field--no-label) .mdc-text-field__input.mat-mdc-input-disabled-interactive::placeholder{opacity:0}.mdc-text-field--disabled:not(.mdc-text-field--no-label) .mdc-text-field__input.mat-mdc-input-disabled-interactive::-moz-placeholder{opacity:0}.mdc-text-field--disabled:not(.mdc-text-field--no-label) .mdc-text-field__input.mat-mdc-input-disabled-interactive::-webkit-input-placeholder{opacity:0}.mdc-text-field--disabled:not(.mdc-text-field--no-label) .mdc-text-field__input.mat-mdc-input-disabled-interactive:-ms-input-placeholder{opacity:0}.mdc-text-field--outlined .mdc-text-field__input,.mdc-text-field--filled.mdc-text-field--no-label .mdc-text-field__input{height:100%}.mdc-text-field--outlined .mdc-text-field__input{display:flex;border:none !important;background-color:rgba(0,0,0,0)}.mdc-text-field--disabled .mdc-text-field__input{pointer-events:auto}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-text-field__input{color:var(--mat-form-field-filled-input-text-color, var(--mat-sys-on-surface));caret-color:var(--mat-form-field-filled-caret-color, var(--mat-sys-primary))}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-text-field__input::placeholder{color:var(--mat-form-field-filled-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-text-field__input::-moz-placeholder{color:var(--mat-form-field-filled-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-text-field__input::-webkit-input-placeholder{color:var(--mat-form-field-filled-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-text-field__input:-ms-input-placeholder{color:var(--mat-form-field-filled-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-text-field__input{color:var(--mat-form-field-outlined-input-text-color, var(--mat-sys-on-surface));caret-color:var(--mat-form-field-outlined-caret-color, var(--mat-sys-primary))}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-text-field__input::placeholder{color:var(--mat-form-field-outlined-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-text-field__input::-moz-placeholder{color:var(--mat-form-field-outlined-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-text-field__input::-webkit-input-placeholder{color:var(--mat-form-field-outlined-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-text-field__input:-ms-input-placeholder{color:var(--mat-form-field-outlined-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--filled.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-text-field__input{caret-color:var(--mat-form-field-filled-error-caret-color, var(--mat-sys-error))}.mdc-text-field--outlined.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-text-field__input{caret-color:var(--mat-form-field-outlined-error-caret-color, var(--mat-sys-error))}.mdc-text-field--filled.mdc-text-field--disabled .mdc-text-field__input{color:var(--mat-form-field-filled-disabled-input-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-text-field--outlined.mdc-text-field--disabled .mdc-text-field__input{color:var(--mat-form-field-outlined-disabled-input-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}@media(forced-colors: active){.mdc-text-field--disabled .mdc-text-field__input{background-color:Window}}.mdc-text-field--filled{height:56px;border-bottom-right-radius:0;border-bottom-left-radius:0;border-top-left-radius:var(--mat-form-field-filled-container-shape, var(--mat-sys-corner-extra-small));border-top-right-radius:var(--mat-form-field-filled-container-shape, var(--mat-sys-corner-extra-small))}.mdc-text-field--filled:not(.mdc-text-field--disabled){background-color:var(--mat-form-field-filled-container-color, var(--mat-sys-surface-variant))}.mdc-text-field--filled.mdc-text-field--disabled{background-color:var(--mat-form-field-filled-disabled-container-color, color-mix(in srgb, var(--mat-sys-on-surface) 4%, transparent))}.mdc-text-field--outlined{height:56px;overflow:visible;padding-right:max(16px,var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small)));padding-left:max(16px,var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small)) + 4px)}[dir=rtl] .mdc-text-field--outlined{padding-right:max(16px,var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small)) + 4px);padding-left:max(16px,var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small)))}.mdc-floating-label{position:absolute;left:0;transform-origin:left top;line-height:1.15rem;text-align:left;text-overflow:ellipsis;white-space:nowrap;cursor:text;overflow:hidden;will-change:transform}[dir=rtl] .mdc-floating-label{right:0;left:auto;transform-origin:right top;text-align:right}.mdc-text-field .mdc-floating-label{top:50%;transform:translateY(-50%);pointer-events:none}.mdc-notched-outline .mdc-floating-label{display:inline-block;position:relative;max-width:100%}.mdc-text-field--outlined .mdc-floating-label{left:4px;right:auto}[dir=rtl] .mdc-text-field--outlined .mdc-floating-label{left:auto;right:4px}.mdc-text-field--filled .mdc-floating-label{left:16px;right:auto}[dir=rtl] .mdc-text-field--filled .mdc-floating-label{left:auto;right:16px}.mdc-text-field--disabled .mdc-floating-label{cursor:default}@media(forced-colors: active){.mdc-text-field--disabled .mdc-floating-label{z-index:1}}.mdc-text-field--filled.mdc-text-field--no-label .mdc-floating-label{display:none}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-floating-label{color:var(--mat-form-field-filled-label-text-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-floating-label{color:var(--mat-form-field-filled-focus-label-text-color, var(--mat-sys-primary))}.mdc-text-field--filled:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-floating-label{color:var(--mat-form-field-filled-hover-label-text-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--filled.mdc-text-field--disabled .mdc-floating-label{color:var(--mat-form-field-filled-disabled-label-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--invalid .mdc-floating-label{color:var(--mat-form-field-filled-error-label-text-color, var(--mat-sys-error))}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--invalid.mdc-text-field--focused .mdc-floating-label{color:var(--mat-form-field-filled-error-focus-label-text-color, var(--mat-sys-error))}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--invalid:not(.mdc-text-field--disabled):hover .mdc-floating-label{color:var(--mat-form-field-filled-error-hover-label-text-color, var(--mat-sys-on-error-container))}.mdc-text-field--filled .mdc-floating-label{font-family:var(--mat-form-field-filled-label-text-font, var(--mat-sys-body-large-font));font-size:var(--mat-form-field-filled-label-text-size, var(--mat-sys-body-large-size));font-weight:var(--mat-form-field-filled-label-text-weight, var(--mat-sys-body-large-weight));letter-spacing:var(--mat-form-field-filled-label-text-tracking, var(--mat-sys-body-large-tracking))}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-floating-label{color:var(--mat-form-field-outlined-label-text-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-floating-label{color:var(--mat-form-field-outlined-focus-label-text-color, var(--mat-sys-primary))}.mdc-text-field--outlined:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-floating-label{color:var(--mat-form-field-outlined-hover-label-text-color, var(--mat-sys-on-surface))}.mdc-text-field--outlined.mdc-text-field--disabled .mdc-floating-label{color:var(--mat-form-field-outlined-disabled-label-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--invalid .mdc-floating-label{color:var(--mat-form-field-outlined-error-label-text-color, var(--mat-sys-error))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--invalid.mdc-text-field--focused .mdc-floating-label{color:var(--mat-form-field-outlined-error-focus-label-text-color, var(--mat-sys-error))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--invalid:not(.mdc-text-field--disabled):hover .mdc-floating-label{color:var(--mat-form-field-outlined-error-hover-label-text-color, var(--mat-sys-on-error-container))}.mdc-text-field--outlined .mdc-floating-label{font-family:var(--mat-form-field-outlined-label-text-font, var(--mat-sys-body-large-font));font-size:var(--mat-form-field-outlined-label-text-size, var(--mat-sys-body-large-size));font-weight:var(--mat-form-field-outlined-label-text-weight, var(--mat-sys-body-large-weight));letter-spacing:var(--mat-form-field-outlined-label-text-tracking, var(--mat-sys-body-large-tracking))}.mdc-floating-label--float-above{cursor:auto;transform:translateY(-106%) scale(0.75)}.mdc-text-field--filled .mdc-floating-label--float-above{transform:translateY(-106%) scale(0.75)}.mdc-text-field--outlined .mdc-floating-label--float-above{transform:translateY(-37.25px) scale(1);font-size:.75rem}.mdc-notched-outline .mdc-floating-label--float-above{text-overflow:clip}.mdc-notched-outline--upgraded .mdc-floating-label--float-above{max-width:133.3333333333%}.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{transform:translateY(-34.75px) scale(0.75)}.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{font-size:1rem}.mdc-floating-label--required:not(.mdc-floating-label--hide-required-marker)::after{margin-left:1px;margin-right:0;content:\\\"*\\\"}[dir=rtl] .mdc-floating-label--required:not(.mdc-floating-label--hide-required-marker)::after{margin-left:0;margin-right:1px}.mdc-notched-outline{display:flex;position:absolute;top:0;right:0;left:0;box-sizing:border-box;width:100%;max-width:100%;height:100%;text-align:left;pointer-events:none}[dir=rtl] .mdc-notched-outline{text-align:right}.mdc-text-field--outlined .mdc-notched-outline{z-index:1}.mat-mdc-notch-piece{box-sizing:border-box;height:100%;pointer-events:none;border-top:1px solid;border-bottom:1px solid}.mdc-text-field--focused .mat-mdc-notch-piece{border-width:2px}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mat-mdc-notch-piece{border-color:var(--mat-form-field-outlined-outline-color, var(--mat-sys-outline));border-width:var(--mat-form-field-outlined-outline-width, 1px)}.mdc-text-field--outlined:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mat-mdc-notch-piece{border-color:var(--mat-form-field-outlined-hover-outline-color, var(--mat-sys-on-surface))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mat-mdc-notch-piece{border-color:var(--mat-form-field-outlined-focus-outline-color, var(--mat-sys-primary))}.mdc-text-field--outlined.mdc-text-field--disabled .mat-mdc-notch-piece{border-color:var(--mat-form-field-outlined-disabled-outline-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--invalid .mat-mdc-notch-piece{border-color:var(--mat-form-field-outlined-error-outline-color, var(--mat-sys-error))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--invalid:not(.mdc-text-field--focused):hover .mdc-notched-outline .mat-mdc-notch-piece{border-color:var(--mat-form-field-outlined-error-hover-outline-color, var(--mat-sys-on-error-container))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--invalid.mdc-text-field--focused .mat-mdc-notch-piece{border-color:var(--mat-form-field-outlined-error-focus-outline-color, var(--mat-sys-error))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline .mat-mdc-notch-piece{border-width:var(--mat-form-field-outlined-focus-outline-width, 2px)}.mdc-notched-outline__leading{border-left:1px solid;border-right:none;border-top-right-radius:0;border-bottom-right-radius:0;border-top-left-radius:var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small));border-bottom-left-radius:var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small))}.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__leading{width:max(12px,var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small)))}[dir=rtl] .mdc-notched-outline__leading{border-left:none;border-right:1px solid;border-bottom-left-radius:0;border-top-left-radius:0;border-top-right-radius:var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small));border-bottom-right-radius:var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small))}.mdc-notched-outline__trailing{flex-grow:1;border-left:none;border-right:1px solid;border-top-left-radius:0;border-bottom-left-radius:0;border-top-right-radius:var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small));border-bottom-right-radius:var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small))}[dir=rtl] .mdc-notched-outline__trailing{border-left:1px solid;border-right:none;border-top-right-radius:0;border-bottom-right-radius:0;border-top-left-radius:var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small));border-bottom-left-radius:var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small))}.mdc-notched-outline__notch{flex:0 0 auto;width:auto}.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__notch{max-width:min(var(--mat-form-field-notch-max-width, 100%),calc(100% - max(12px, var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small))) * 2))}.mdc-text-field--outlined .mdc-notched-outline--notched .mdc-notched-outline__notch{max-width:min(100%,calc(100% - max(12px, var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small))) * 2))}.mdc-text-field--outlined .mdc-notched-outline--notched .mdc-notched-outline__notch{padding-top:1px}.mdc-text-field--focused.mdc-text-field--outlined .mdc-notched-outline--notched .mdc-notched-outline__notch{padding-top:2px}.mdc-notched-outline--notched .mdc-notched-outline__notch{padding-left:0;padding-right:8px;border-top:none}[dir=rtl] .mdc-notched-outline--notched .mdc-notched-outline__notch{padding-left:8px;padding-right:0}.mdc-notched-outline--no-label .mdc-notched-outline__notch{display:none}.mdc-line-ripple::before,.mdc-line-ripple::after{position:absolute;bottom:0;left:0;width:100%;border-bottom-style:solid;content:\\\"\\\"}.mdc-line-ripple::before{z-index:1;border-bottom-width:var(--mat-form-field-filled-active-indicator-height, 1px)}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-line-ripple::before{border-bottom-color:var(--mat-form-field-filled-active-indicator-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--filled:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-line-ripple::before{border-bottom-color:var(--mat-form-field-filled-hover-active-indicator-color, var(--mat-sys-on-surface))}.mdc-text-field--filled.mdc-text-field--disabled .mdc-line-ripple::before{border-bottom-color:var(--mat-form-field-filled-disabled-active-indicator-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--invalid .mdc-line-ripple::before{border-bottom-color:var(--mat-form-field-filled-error-active-indicator-color, var(--mat-sys-error))}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--invalid:not(.mdc-text-field--focused):hover .mdc-line-ripple::before{border-bottom-color:var(--mat-form-field-filled-error-hover-active-indicator-color, var(--mat-sys-on-error-container))}.mdc-line-ripple::after{transform:scaleX(0);opacity:0;z-index:2}.mdc-text-field--filled .mdc-line-ripple::after{border-bottom-width:var(--mat-form-field-filled-focus-active-indicator-height, 2px)}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-line-ripple::after{border-bottom-color:var(--mat-form-field-filled-focus-active-indicator-color, var(--mat-sys-primary))}.mdc-text-field--filled.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-line-ripple::after{border-bottom-color:var(--mat-form-field-filled-error-focus-active-indicator-color, var(--mat-sys-error))}.mdc-line-ripple--active::after{transform:scaleX(1);opacity:1}.mdc-line-ripple--deactivating::after{opacity:0}.mdc-text-field--disabled{pointer-events:none}.mat-mdc-form-field-textarea-control{vertical-align:middle;resize:vertical;box-sizing:border-box;height:auto;margin:0;padding:0;border:none;overflow:auto}.mat-mdc-form-field-input-control.mat-mdc-form-field-input-control{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font:inherit;letter-spacing:inherit;text-decoration:inherit;text-transform:inherit;border:none}.mat-mdc-form-field .mat-mdc-floating-label.mdc-floating-label{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;line-height:normal;pointer-events:all;will-change:auto}.mat-mdc-form-field:not(.mat-form-field-disabled) .mat-mdc-floating-label.mdc-floating-label{cursor:inherit}.mdc-text-field--no-label:not(.mdc-text-field--textarea) .mat-mdc-form-field-input-control.mdc-text-field__input,.mat-mdc-text-field-wrapper .mat-mdc-form-field-input-control{height:auto}.mat-mdc-text-field-wrapper .mat-mdc-form-field-input-control.mdc-text-field__input[type=color]{height:23px}.mat-mdc-text-field-wrapper{height:auto;flex:auto;will-change:auto}.mat-mdc-form-field-has-icon-prefix .mat-mdc-text-field-wrapper{padding-left:0;--mat-mdc-form-field-label-offset-x: -16px}.mat-mdc-form-field-has-icon-suffix .mat-mdc-text-field-wrapper{padding-right:0}[dir=rtl] .mat-mdc-text-field-wrapper{padding-left:16px;padding-right:16px}[dir=rtl] .mat-mdc-form-field-has-icon-suffix .mat-mdc-text-field-wrapper{padding-left:0}[dir=rtl] .mat-mdc-form-field-has-icon-prefix .mat-mdc-text-field-wrapper{padding-right:0}.mat-form-field-disabled .mdc-text-field__input::placeholder{color:var(--mat-form-field-disabled-input-text-placeholder-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-form-field-disabled .mdc-text-field__input::-moz-placeholder{color:var(--mat-form-field-disabled-input-text-placeholder-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-form-field-disabled .mdc-text-field__input::-webkit-input-placeholder{color:var(--mat-form-field-disabled-input-text-placeholder-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-form-field-disabled .mdc-text-field__input:-ms-input-placeholder{color:var(--mat-form-field-disabled-input-text-placeholder-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-mdc-form-field-label-always-float .mdc-text-field__input::placeholder{transition-delay:40ms;transition-duration:110ms;opacity:1}.mat-mdc-text-field-wrapper .mat-mdc-form-field-infix .mat-mdc-floating-label{left:auto;right:auto}.mat-mdc-text-field-wrapper.mdc-text-field--outlined .mdc-text-field__input{display:inline-block}.mat-mdc-form-field .mat-mdc-text-field-wrapper.mdc-text-field .mdc-notched-outline__notch{padding-top:0}.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field .mdc-notched-outline__notch{border-left:1px solid rgba(0,0,0,0)}[dir=rtl] .mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field .mdc-notched-outline__notch{border-left:none;border-right:1px solid rgba(0,0,0,0)}.mat-mdc-form-field-infix{min-height:var(--mat-form-field-container-height, 56px);padding-top:var(--mat-form-field-filled-with-label-container-padding-top, 24px);padding-bottom:var(--mat-form-field-filled-with-label-container-padding-bottom, 8px)}.mdc-text-field--outlined .mat-mdc-form-field-infix,.mdc-text-field--no-label .mat-mdc-form-field-infix{padding-top:var(--mat-form-field-container-vertical-padding, 16px);padding-bottom:var(--mat-form-field-container-vertical-padding, 16px)}.mat-mdc-text-field-wrapper .mat-mdc-form-field-flex .mat-mdc-floating-label{top:calc(var(--mat-form-field-container-height, 56px)/2)}.mdc-text-field--filled .mat-mdc-floating-label{display:var(--mat-form-field-filled-label-display, block)}.mat-mdc-text-field-wrapper.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{--mat-mdc-form-field-label-transform: translateY(calc(calc(6.75px + var(--mat-form-field-container-height, 56px) / 2) * -1)) scale(var(--mat-mdc-form-field-floating-label-scale, 0.75));transform:var(--mat-mdc-form-field-label-transform)}@keyframes _mat-form-field-subscript-animation{from{opacity:0;transform:translateY(-5px)}to{opacity:1;transform:translateY(0)}}.mat-mdc-form-field-subscript-wrapper{box-sizing:border-box;width:100%;position:relative}.mat-mdc-form-field-hint-wrapper,.mat-mdc-form-field-error-wrapper{position:absolute;top:0;left:0;right:0;padding:0 16px;opacity:1;transform:translateY(0);animation:_mat-form-field-subscript-animation 0ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-mdc-form-field-subscript-dynamic-size .mat-mdc-form-field-hint-wrapper,.mat-mdc-form-field-subscript-dynamic-size .mat-mdc-form-field-error-wrapper{position:static}.mat-mdc-form-field-bottom-align::before{content:\\\"\\\";display:inline-block;height:16px}.mat-mdc-form-field-bottom-align.mat-mdc-form-field-subscript-dynamic-size::before{content:unset}.mat-mdc-form-field-hint-end{order:1}.mat-mdc-form-field-hint-wrapper{display:flex}.mat-mdc-form-field-hint-spacer{flex:1 0 1em}.mat-mdc-form-field-error{display:block;color:var(--mat-form-field-error-text-color, var(--mat-sys-error))}.mat-mdc-form-field-subscript-wrapper,.mat-mdc-form-field-bottom-align::before{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:var(--mat-form-field-subscript-text-font, var(--mat-sys-body-small-font));line-height:var(--mat-form-field-subscript-text-line-height, var(--mat-sys-body-small-line-height));font-size:var(--mat-form-field-subscript-text-size, var(--mat-sys-body-small-size));letter-spacing:var(--mat-form-field-subscript-text-tracking, var(--mat-sys-body-small-tracking));font-weight:var(--mat-form-field-subscript-text-weight, var(--mat-sys-body-small-weight))}.mat-mdc-form-field-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;opacity:0;pointer-events:none;background-color:var(--mat-form-field-state-layer-color, var(--mat-sys-on-surface))}.mat-mdc-text-field-wrapper:hover .mat-mdc-form-field-focus-overlay{opacity:var(--mat-form-field-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-form-field.mat-focused .mat-mdc-form-field-focus-overlay{opacity:var(--mat-form-field-focus-state-layer-opacity, 0)}select.mat-mdc-form-field-input-control{-moz-appearance:none;-webkit-appearance:none;background-color:rgba(0,0,0,0);display:inline-flex;box-sizing:border-box}select.mat-mdc-form-field-input-control:not(:disabled){cursor:pointer}select.mat-mdc-form-field-input-control:not(.mat-mdc-native-select-inline) option{color:var(--mat-form-field-select-option-text-color, var(--mat-sys-neutral10))}select.mat-mdc-form-field-input-control:not(.mat-mdc-native-select-inline) option:disabled{color:var(--mat-form-field-select-disabled-option-text-color, color-mix(in srgb, var(--mat-sys-neutral10) 38%, transparent))}.mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid rgba(0,0,0,0);border-right:5px solid rgba(0,0,0,0);border-top:5px solid;position:absolute;right:0;top:50%;margin-top:-2.5px;pointer-events:none;color:var(--mat-form-field-enabled-select-arrow-color, var(--mat-sys-on-surface-variant))}[dir=rtl] .mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-infix::after{right:auto;left:0}.mat-mdc-form-field-type-mat-native-select.mat-focused .mat-mdc-form-field-infix::after{color:var(--mat-form-field-focus-select-arrow-color, var(--mat-sys-primary))}.mat-mdc-form-field-type-mat-native-select.mat-form-field-disabled .mat-mdc-form-field-infix::after{color:var(--mat-form-field-disabled-select-arrow-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-input-control{padding-right:15px}[dir=rtl] .mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-input-control{padding-right:0;padding-left:15px}@media(forced-colors: active){.mat-form-field-appearance-fill .mat-mdc-text-field-wrapper{outline:solid 1px}}@media(forced-colors: active){.mat-form-field-appearance-fill.mat-form-field-disabled .mat-mdc-text-field-wrapper{outline-color:GrayText}}@media(forced-colors: active){.mat-form-field-appearance-fill.mat-focused .mat-mdc-text-field-wrapper{outline:dashed 3px}}@media(forced-colors: active){.mat-mdc-form-field.mat-focused .mdc-notched-outline{border:dashed 3px}}.mat-mdc-form-field-input-control[type=date],.mat-mdc-form-field-input-control[type=datetime],.mat-mdc-form-field-input-control[type=datetime-local],.mat-mdc-form-field-input-control[type=month],.mat-mdc-form-field-input-control[type=week],.mat-mdc-form-field-input-control[type=time]{line-height:1}.mat-mdc-form-field-input-control::-webkit-datetime-edit{line-height:1;padding:0;margin-bottom:-2px}.mat-mdc-form-field{--mat-mdc-form-field-floating-label-scale: 0.75;display:inline-flex;flex-direction:column;min-width:0;text-align:left;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:var(--mat-form-field-container-text-font, var(--mat-sys-body-large-font));line-height:var(--mat-form-field-container-text-line-height, var(--mat-sys-body-large-line-height));font-size:var(--mat-form-field-container-text-size, var(--mat-sys-body-large-size));letter-spacing:var(--mat-form-field-container-text-tracking, var(--mat-sys-body-large-tracking));font-weight:var(--mat-form-field-container-text-weight, var(--mat-sys-body-large-weight))}.mat-mdc-form-field .mdc-text-field--outlined .mdc-floating-label--float-above{font-size:calc(var(--mat-form-field-outlined-label-text-populated-size)*var(--mat-mdc-form-field-floating-label-scale))}.mat-mdc-form-field .mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{font-size:var(--mat-form-field-outlined-label-text-populated-size)}[dir=rtl] .mat-mdc-form-field{text-align:right}.mat-mdc-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-mdc-text-field-wrapper{width:100%;z-index:0}.mat-mdc-form-field-icon-prefix,.mat-mdc-form-field-icon-suffix{align-self:center;line-height:0;pointer-events:auto;position:relative;z-index:1}.mat-mdc-form-field-icon-prefix>.mat-icon,.mat-mdc-form-field-icon-suffix>.mat-icon{padding:0 12px;box-sizing:content-box}.mat-mdc-form-field-icon-prefix{color:var(--mat-form-field-leading-icon-color, var(--mat-sys-on-surface-variant))}.mat-form-field-disabled .mat-mdc-form-field-icon-prefix{color:var(--mat-form-field-disabled-leading-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-mdc-form-field-icon-suffix{color:var(--mat-form-field-trailing-icon-color, var(--mat-sys-on-surface-variant))}.mat-form-field-disabled .mat-mdc-form-field-icon-suffix{color:var(--mat-form-field-disabled-trailing-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-form-field-invalid .mat-mdc-form-field-icon-suffix{color:var(--mat-form-field-error-trailing-icon-color, var(--mat-sys-error))}.mat-form-field-invalid:not(.mat-focused):not(.mat-form-field-disabled) .mat-mdc-text-field-wrapper:hover .mat-mdc-form-field-icon-suffix{color:var(--mat-form-field-error-hover-trailing-icon-color, var(--mat-sys-on-error-container))}.mat-form-field-invalid.mat-focused .mat-mdc-text-field-wrapper .mat-mdc-form-field-icon-suffix{color:var(--mat-form-field-error-focus-trailing-icon-color, var(--mat-sys-error))}.mat-mdc-form-field-icon-prefix,[dir=rtl] .mat-mdc-form-field-icon-suffix{padding:0 4px 0 0}.mat-mdc-form-field-icon-suffix,[dir=rtl] .mat-mdc-form-field-icon-prefix{padding:0 0 0 4px}.mat-mdc-form-field-subscript-wrapper .mat-icon,.mat-mdc-form-field label .mat-icon{width:1em;height:1em;font-size:inherit}.mat-mdc-form-field-infix{flex:auto;min-width:0;width:180px;position:relative;box-sizing:border-box}.mat-mdc-form-field-infix:has(textarea[cols]){width:auto}.mat-mdc-form-field .mdc-notched-outline__notch{margin-left:-1px;-webkit-clip-path:inset(-9em -999em -9em 1px);clip-path:inset(-9em -999em -9em 1px)}[dir=rtl] .mat-mdc-form-field .mdc-notched-outline__notch{margin-left:0;margin-right:-1px;-webkit-clip-path:inset(-9em 1px -9em -999em);clip-path:inset(-9em 1px -9em -999em)}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-floating-label{transition:transform 150ms cubic-bezier(0.4, 0, 0.2, 1),color 150ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-text-field__input{transition:opacity 150ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-text-field__input::placeholder{transition:opacity 67ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-text-field__input::-moz-placeholder{transition:opacity 67ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-text-field__input::-webkit-input-placeholder{transition:opacity 67ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-text-field__input:-ms-input-placeholder{transition:opacity 67ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--no-label .mdc-text-field__input::placeholder,.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--focused .mdc-text-field__input::placeholder{transition-delay:40ms;transition-duration:110ms}.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--no-label .mdc-text-field__input::-moz-placeholder,.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--focused .mdc-text-field__input::-moz-placeholder{transition-delay:40ms;transition-duration:110ms}.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--no-label .mdc-text-field__input::-webkit-input-placeholder,.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--focused .mdc-text-field__input::-webkit-input-placeholder{transition-delay:40ms;transition-duration:110ms}.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--no-label .mdc-text-field__input:-ms-input-placeholder,.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--focused .mdc-text-field__input:-ms-input-placeholder{transition-delay:40ms;transition-duration:110ms}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-text-field--filled:not(.mdc-ripple-upgraded):focus .mdc-text-field__ripple::before{transition-duration:75ms}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-line-ripple::after{transition:transform 180ms cubic-bezier(0.4, 0, 0.2, 1),opacity 180ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field.mat-form-field-animations-enabled .mat-mdc-form-field-hint-wrapper,.mat-mdc-form-field.mat-form-field-animations-enabled .mat-mdc-form-field-error-wrapper{animation-duration:300ms}.mdc-notched-outline .mdc-floating-label{max-width:calc(100% + 1px)}.mdc-notched-outline--upgraded .mdc-floating-label--float-above{max-width:calc(133.3333333333% + 1px)}\\n\"] }]\n        }], ctorParameters: () => [], propDecorators: { _textField: [{\n                type: ViewChild,\n                args: ['textField']\n            }], _iconPrefixContainer: [{\n                type: ViewChild,\n                args: ['iconPrefixContainer']\n            }], _textPrefixContainer: [{\n                type: ViewChild,\n                args: ['textPrefixContainer']\n            }], _iconSuffixContainer: [{\n                type: ViewChild,\n                args: ['iconSuffixContainer']\n            }], _textSuffixContainer: [{\n                type: ViewChild,\n                args: ['textSuffixContainer']\n            }], _floatingLabel: [{\n                type: ViewChild,\n                args: [MatFormFieldFloatingLabel]\n            }], _notchedOutline: [{\n                type: ViewChild,\n                args: [MatFormFieldNotchedOutline]\n            }], _lineRipple: [{\n                type: ViewChild,\n                args: [MatFormFieldLineRipple]\n            }], _formFieldControl: [{\n                type: ContentChild,\n                args: [MatFormFieldControl]\n            }], _prefixChildren: [{\n                type: ContentChildren,\n                args: [MAT_PREFIX, { descendants: true }]\n            }], _suffixChildren: [{\n                type: ContentChildren,\n                args: [MAT_SUFFIX, { descendants: true }]\n            }], _errorChildren: [{\n                type: ContentChildren,\n                args: [MAT_ERROR, { descendants: true }]\n            }], _hintChildren: [{\n                type: ContentChildren,\n                args: [MatHint, { descendants: true }]\n            }], hideRequiredMarker: [{\n                type: Input\n            }], color: [{\n                type: Input\n            }], floatLabel: [{\n                type: Input\n            }], appearance: [{\n                type: Input\n            }], subscriptSizing: [{\n                type: Input\n            }], hintLabel: [{\n                type: Input\n            }] } });\n\nexport { MatLabel as M, MAT_ERROR as a, MatError as b, MatHint as c, MAT_PREFIX as d, MatPrefix as e, MAT_SUFFIX as f, MatSuffix as g, MAT_FORM_FIELD as h, MAT_FORM_FIELD_DEFAULT_OPTIONS as i, MatFormField as j, MatFormFieldControl as k, getMatFormFieldPlaceholderConflictError as l, getMatFormFieldDuplicatedHintError as m, getMatFormFieldMissingControlError as n };\n\n","import { ObserversModule } from '@angular/cdk/observers';\nimport * as i0 from '@angular/core';\nimport { NgModule } from '@angular/core';\nimport { j as MatFormField, M as MatLabel, b as MatError, c as MatHint, e as MatPrefix, g as MatSuffix } from './form-field-C_dE1cl0.mjs';\nimport { M as MatCommonModule } from './common-module-cKSwHniA.mjs';\n\nclass MatFormFieldModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatFormFieldModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.0\", ngImport: i0, type: MatFormFieldModule, imports: [MatCommonModule,\n            ObserversModule,\n            MatFormField,\n            MatLabel,\n            MatError,\n            MatHint,\n            MatPrefix,\n            MatSuffix], exports: [MatFormField, MatLabel, MatHint, MatError, MatPrefix, MatSuffix, MatCommonModule] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatFormFieldModule, imports: [MatCommonModule,\n            ObserversModule,\n            MatFormField, MatCommonModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatFormFieldModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        MatCommonModule,\n                        ObserversModule,\n                        MatFormField,\n                        MatLabel,\n                        MatError,\n                        MatHint,\n                        MatPrefix,\n                        MatSuffix,\n                    ],\n                    exports: [MatFormField, MatLabel, MatHint, MatError, MatPrefix, MatSuffix, MatCommonModule],\n                }]\n        }] });\n\nexport { MatFormFieldModule as M };\n\n","export { a as MAT_ERROR, h as MAT_FORM_FIELD, i as MAT_FORM_FIELD_DEFAULT_OPTIONS, d as MAT_PREFIX, f as MAT_SUFFIX, b as MatError, j as MatFormField, k as MatFormFieldControl, c as MatHint, M as MatLabel, e as MatPrefix, g as MatSuffix, m as getMatFormFieldDuplicatedHintError, n as getMatFormFieldMissingControlError, l as getMatFormFieldPlaceholderConflictError } from './form-field-C_dE1cl0.mjs';\nexport { M as MatFormFieldModule } from './module-ko3UutPV.mjs';\nimport '@angular/cdk/a11y';\nimport '@angular/cdk/bidi';\nimport '@angular/cdk/coercion';\nimport '@angular/cdk/platform';\nimport '@angular/common';\nimport '@angular/core';\nimport 'rxjs';\nimport 'rxjs/operators';\nimport '@angular/cdk/observers/private';\nimport './animation-ChQ1vjiF.mjs';\nimport '@angular/cdk/layout';\nimport '@angular/cdk/observers';\nimport './common-module-cKSwHniA.mjs';\n\n/**\n * Animations used by the MatFormField.\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nconst matFormFieldAnimations = {\n    // Represents:\n    // trigger('transitionMessages', [\n    //   // TODO(mmalerba): Use angular animations for label animation as well.\n    //   state('enter', style({opacity: 1, transform: 'translateY(0%)'})),\n    //   transition('void => enter', [\n    //     style({opacity: 0, transform: 'translateY(-5px)'}),\n    //     animate('300ms cubic-bezier(0.55, 0, 0.55, 0.2)'),\n    //   ]),\n    // ])\n    /** Animation that transitions the form field's error and hint messages. */\n    transitionMessages: {\n        type: 7,\n        name: 'transitionMessages',\n        definitions: [\n            {\n                type: 0,\n                name: 'enter',\n                styles: {\n                    type: 6,\n                    styles: { opacity: 1, transform: 'translateY(0%)' },\n                    offset: null,\n                },\n            },\n            {\n                type: 1,\n                expr: 'void => enter',\n                animation: [\n                    { type: 6, styles: { opacity: 0, transform: 'translateY(-5px)' }, offset: null },\n                    { type: 4, styles: null, timings: '300ms cubic-bezier(0.55, 0, 0.55, 0.2)' },\n                ],\n                options: null,\n            },\n        ],\n        options: {},\n    },\n};\n\nexport { matFormFieldAnimations };\n\n","import * as i0 from '@angular/core';\nimport { Component, ChangeDetectionStrategy, ViewEncapsulation, inject, NgZone, RendererFactory2, Injectable, ElementRef, EventEmitter, Directive, Output, Renderer2, DOCUMENT, booleanAttribute, Input, NgModule } from '@angular/core';\nimport { EMPTY, Subject } from 'rxjs';\nimport { P as Platform } from './platform-DNDzkVcI.mjs';\nimport { _ as _CdkPrivateStyleLoader } from './style-loader-B2sGQXxD.mjs';\nimport { a as coerceElement, c as coerceNumberProperty } from './element-x4z00URv.mjs';\nimport { auditTime } from 'rxjs/operators';\nimport '@angular/common';\n\n/** Component used to load the structural styles of the text field. */\nclass _CdkTextFieldStyleLoader {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: _CdkTextFieldStyleLoader, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"20.0.0\", type: _CdkTextFieldStyleLoader, isStandalone: true, selector: \"ng-component\", host: { attributes: { \"cdk-text-field-style-loader\": \"\" } }, ngImport: i0, template: '', isInline: true, styles: [\"textarea.cdk-textarea-autosize{resize:none}textarea.cdk-textarea-autosize-measuring{padding:2px 0 !important;box-sizing:content-box !important;height:auto !important;overflow:hidden !important}textarea.cdk-textarea-autosize-measuring-firefox{padding:2px 0 !important;box-sizing:content-box !important;height:0 !important}@keyframes cdk-text-field-autofill-start{/*!*/}@keyframes cdk-text-field-autofill-end{/*!*/}.cdk-text-field-autofill-monitored:-webkit-autofill{animation:cdk-text-field-autofill-start 0s 1ms}.cdk-text-field-autofill-monitored:not(:-webkit-autofill){animation:cdk-text-field-autofill-end 0s 1ms}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: _CdkTextFieldStyleLoader, decorators: [{\n            type: Component,\n            args: [{ template: '', changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, host: { 'cdk-text-field-style-loader': '' }, styles: [\"textarea.cdk-textarea-autosize{resize:none}textarea.cdk-textarea-autosize-measuring{padding:2px 0 !important;box-sizing:content-box !important;height:auto !important;overflow:hidden !important}textarea.cdk-textarea-autosize-measuring-firefox{padding:2px 0 !important;box-sizing:content-box !important;height:0 !important}@keyframes cdk-text-field-autofill-start{/*!*/}@keyframes cdk-text-field-autofill-end{/*!*/}.cdk-text-field-autofill-monitored:-webkit-autofill{animation:cdk-text-field-autofill-start 0s 1ms}.cdk-text-field-autofill-monitored:not(:-webkit-autofill){animation:cdk-text-field-autofill-end 0s 1ms}\\n\"] }]\n        }] });\n\n/** Options to pass to the animationstart listener. */\nconst listenerOptions = { passive: true };\n/**\n * An injectable service that can be used to monitor the autofill state of an input.\n * Based on the following blog post:\n * https://medium.com/@brunn/detecting-autofilled-fields-in-javascript-aed598d25da7\n */\nclass AutofillMonitor {\n    _platform = inject(Platform);\n    _ngZone = inject(NgZone);\n    _renderer = inject(RendererFactory2).createRenderer(null, null);\n    _styleLoader = inject(_CdkPrivateStyleLoader);\n    _monitoredElements = new Map();\n    constructor() { }\n    monitor(elementOrRef) {\n        if (!this._platform.isBrowser) {\n            return EMPTY;\n        }\n        this._styleLoader.load(_CdkTextFieldStyleLoader);\n        const element = coerceElement(elementOrRef);\n        const info = this._monitoredElements.get(element);\n        if (info) {\n            return info.subject;\n        }\n        const subject = new Subject();\n        const cssClass = 'cdk-text-field-autofilled';\n        const listener = (event) => {\n            // Animation events fire on initial element render, we check for the presence of the autofill\n            // CSS class to make sure this is a real change in state, not just the initial render before\n            // we fire off events.\n            if (event.animationName === 'cdk-text-field-autofill-start' &&\n                !element.classList.contains(cssClass)) {\n                element.classList.add(cssClass);\n                this._ngZone.run(() => subject.next({ target: event.target, isAutofilled: true }));\n            }\n            else if (event.animationName === 'cdk-text-field-autofill-end' &&\n                element.classList.contains(cssClass)) {\n                element.classList.remove(cssClass);\n                this._ngZone.run(() => subject.next({ target: event.target, isAutofilled: false }));\n            }\n        };\n        const unlisten = this._ngZone.runOutsideAngular(() => {\n            element.classList.add('cdk-text-field-autofill-monitored');\n            return this._renderer.listen(element, 'animationstart', listener, listenerOptions);\n        });\n        this._monitoredElements.set(element, { subject, unlisten });\n        return subject;\n    }\n    stopMonitoring(elementOrRef) {\n        const element = coerceElement(elementOrRef);\n        const info = this._monitoredElements.get(element);\n        if (info) {\n            info.unlisten();\n            info.subject.complete();\n            element.classList.remove('cdk-text-field-autofill-monitored');\n            element.classList.remove('cdk-text-field-autofilled');\n            this._monitoredElements.delete(element);\n        }\n    }\n    ngOnDestroy() {\n        this._monitoredElements.forEach((_info, element) => this.stopMonitoring(element));\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: AutofillMonitor, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: AutofillMonitor, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: AutofillMonitor, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [] });\n/** A directive that can be used to monitor the autofill state of an input. */\nclass CdkAutofill {\n    _elementRef = inject(ElementRef);\n    _autofillMonitor = inject(AutofillMonitor);\n    /** Emits when the autofill state of the element changes. */\n    cdkAutofill = new EventEmitter();\n    constructor() { }\n    ngOnInit() {\n        this._autofillMonitor\n            .monitor(this._elementRef)\n            .subscribe(event => this.cdkAutofill.emit(event));\n    }\n    ngOnDestroy() {\n        this._autofillMonitor.stopMonitoring(this._elementRef);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkAutofill, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: CdkAutofill, isStandalone: true, selector: \"[cdkAutofill]\", outputs: { cdkAutofill: \"cdkAutofill\" }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkAutofill, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkAutofill]',\n                }]\n        }], ctorParameters: () => [], propDecorators: { cdkAutofill: [{\n                type: Output\n            }] } });\n\n/** Directive to automatically resize a textarea to fit its content. */\nclass CdkTextareaAutosize {\n    _elementRef = inject(ElementRef);\n    _platform = inject(Platform);\n    _ngZone = inject(NgZone);\n    _renderer = inject(Renderer2);\n    _resizeEvents = new Subject();\n    /** Keep track of the previous textarea value to avoid resizing when the value hasn't changed. */\n    _previousValue;\n    _initialHeight;\n    _destroyed = new Subject();\n    _listenerCleanups;\n    _minRows;\n    _maxRows;\n    _enabled = true;\n    /**\n     * Value of minRows as of last resize. If the minRows has decreased, the\n     * height of the textarea needs to be recomputed to reflect the new minimum. The maxHeight\n     * does not have the same problem because it does not affect the textarea's scrollHeight.\n     */\n    _previousMinRows = -1;\n    _textareaElement;\n    /** Minimum amount of rows in the textarea. */\n    get minRows() {\n        return this._minRows;\n    }\n    set minRows(value) {\n        this._minRows = coerceNumberProperty(value);\n        this._setMinHeight();\n    }\n    /** Maximum amount of rows in the textarea. */\n    get maxRows() {\n        return this._maxRows;\n    }\n    set maxRows(value) {\n        this._maxRows = coerceNumberProperty(value);\n        this._setMaxHeight();\n    }\n    /** Whether autosizing is enabled or not */\n    get enabled() {\n        return this._enabled;\n    }\n    set enabled(value) {\n        // Only act if the actual value changed. This specifically helps to not run\n        // resizeToFitContent too early (i.e. before ngAfterViewInit)\n        if (this._enabled !== value) {\n            (this._enabled = value) ? this.resizeToFitContent(true) : this.reset();\n        }\n    }\n    get placeholder() {\n        return this._textareaElement.placeholder;\n    }\n    set placeholder(value) {\n        this._cachedPlaceholderHeight = undefined;\n        if (value) {\n            this._textareaElement.setAttribute('placeholder', value);\n        }\n        else {\n            this._textareaElement.removeAttribute('placeholder');\n        }\n        this._cacheTextareaPlaceholderHeight();\n    }\n    /** Cached height of a textarea with a single row. */\n    _cachedLineHeight;\n    /** Cached height of a textarea with only the placeholder. */\n    _cachedPlaceholderHeight;\n    /** Cached scroll top of a textarea */\n    _cachedScrollTop;\n    /** Used to reference correct document/window */\n    _document = inject(DOCUMENT);\n    _hasFocus;\n    _isViewInited = false;\n    constructor() {\n        const styleLoader = inject(_CdkPrivateStyleLoader);\n        styleLoader.load(_CdkTextFieldStyleLoader);\n        this._textareaElement = this._elementRef.nativeElement;\n    }\n    /** Sets the minimum height of the textarea as determined by minRows. */\n    _setMinHeight() {\n        const minHeight = this.minRows && this._cachedLineHeight ? `${this.minRows * this._cachedLineHeight}px` : null;\n        if (minHeight) {\n            this._textareaElement.style.minHeight = minHeight;\n        }\n    }\n    /** Sets the maximum height of the textarea as determined by maxRows. */\n    _setMaxHeight() {\n        const maxHeight = this.maxRows && this._cachedLineHeight ? `${this.maxRows * this._cachedLineHeight}px` : null;\n        if (maxHeight) {\n            this._textareaElement.style.maxHeight = maxHeight;\n        }\n    }\n    ngAfterViewInit() {\n        if (this._platform.isBrowser) {\n            // Remember the height which we started with in case autosizing is disabled\n            this._initialHeight = this._textareaElement.style.height;\n            this.resizeToFitContent();\n            this._ngZone.runOutsideAngular(() => {\n                this._listenerCleanups = [\n                    this._renderer.listen('window', 'resize', () => this._resizeEvents.next()),\n                    this._renderer.listen(this._textareaElement, 'focus', this._handleFocusEvent),\n                    this._renderer.listen(this._textareaElement, 'blur', this._handleFocusEvent),\n                ];\n                this._resizeEvents.pipe(auditTime(16)).subscribe(() => {\n                    // Clear the cached heights since the styles can change\n                    // when the window is resized (e.g. by media queries).\n                    this._cachedLineHeight = this._cachedPlaceholderHeight = undefined;\n                    this.resizeToFitContent(true);\n                });\n            });\n            this._isViewInited = true;\n            this.resizeToFitContent(true);\n        }\n    }\n    ngOnDestroy() {\n        this._listenerCleanups?.forEach(cleanup => cleanup());\n        this._resizeEvents.complete();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Cache the height of a single-row textarea if it has not already been cached.\n     *\n     * We need to know how large a single \"row\" of a textarea is in order to apply minRows and\n     * maxRows. For the initial version, we will assume that the height of a single line in the\n     * textarea does not ever change.\n     */\n    _cacheTextareaLineHeight() {\n        if (this._cachedLineHeight) {\n            return;\n        }\n        // Use a clone element because we have to override some styles.\n        const textareaClone = this._textareaElement.cloneNode(false);\n        const cloneStyles = textareaClone.style;\n        textareaClone.rows = 1;\n        // Use `position: absolute` so that this doesn't cause a browser layout and use\n        // `visibility: hidden` so that nothing is rendered. Clear any other styles that\n        // would affect the height.\n        cloneStyles.position = 'absolute';\n        cloneStyles.visibility = 'hidden';\n        cloneStyles.border = 'none';\n        cloneStyles.padding = '0';\n        cloneStyles.height = '';\n        cloneStyles.minHeight = '';\n        cloneStyles.maxHeight = '';\n        // App styles might be messing with the height through the positioning properties.\n        cloneStyles.top = cloneStyles.bottom = cloneStyles.left = cloneStyles.right = 'auto';\n        // In Firefox it happens that textarea elements are always bigger than the specified amount\n        // of rows. This is because Firefox tries to add extra space for the horizontal scrollbar.\n        // As a workaround that removes the extra space for the scrollbar, we can just set overflow\n        // to hidden. This ensures that there is no invalid calculation of the line height.\n        // See Firefox bug report: https://bugzilla.mozilla.org/show_bug.cgi?id=33654\n        cloneStyles.overflow = 'hidden';\n        this._textareaElement.parentNode.appendChild(textareaClone);\n        this._cachedLineHeight = textareaClone.clientHeight;\n        textareaClone.remove();\n        // Min and max heights have to be re-calculated if the cached line height changes\n        this._setMinHeight();\n        this._setMaxHeight();\n    }\n    _measureScrollHeight() {\n        const element = this._textareaElement;\n        const previousMargin = element.style.marginBottom || '';\n        const isFirefox = this._platform.FIREFOX;\n        const needsMarginFiller = isFirefox && this._hasFocus;\n        const measuringClass = isFirefox\n            ? 'cdk-textarea-autosize-measuring-firefox'\n            : 'cdk-textarea-autosize-measuring';\n        // In some cases the page might move around while we're measuring the `textarea` on Firefox. We\n        // work around it by assigning a temporary margin with the same height as the `textarea` so that\n        // it occupies the same amount of space. See #23233.\n        if (needsMarginFiller) {\n            element.style.marginBottom = `${element.clientHeight}px`;\n        }\n        // Reset the textarea height to auto in order to shrink back to its default size.\n        // Also temporarily force overflow:hidden, so scroll bars do not interfere with calculations.\n        element.classList.add(measuringClass);\n        // The measuring class includes a 2px padding to workaround an issue with Chrome,\n        // so we account for that extra space here by subtracting 4 (2px top + 2px bottom).\n        const scrollHeight = element.scrollHeight - 4;\n        element.classList.remove(measuringClass);\n        if (needsMarginFiller) {\n            element.style.marginBottom = previousMargin;\n        }\n        return scrollHeight;\n    }\n    _cacheTextareaPlaceholderHeight() {\n        if (!this._isViewInited || this._cachedPlaceholderHeight != undefined) {\n            return;\n        }\n        if (!this.placeholder) {\n            this._cachedPlaceholderHeight = 0;\n            return;\n        }\n        const value = this._textareaElement.value;\n        this._textareaElement.value = this._textareaElement.placeholder;\n        this._cachedPlaceholderHeight = this._measureScrollHeight();\n        this._textareaElement.value = value;\n    }\n    /** Handles `focus` and `blur` events. */\n    _handleFocusEvent = (event) => {\n        this._hasFocus = event.type === 'focus';\n    };\n    ngDoCheck() {\n        if (this._platform.isBrowser) {\n            this.resizeToFitContent();\n        }\n    }\n    /**\n     * Resize the textarea to fit its content.\n     * @param force Whether to force a height recalculation. By default the height will be\n     *    recalculated only if the value changed since the last call.\n     */\n    resizeToFitContent(force = false) {\n        // If autosizing is disabled, just skip everything else\n        if (!this._enabled) {\n            return;\n        }\n        this._cacheTextareaLineHeight();\n        this._cacheTextareaPlaceholderHeight();\n        this._cachedScrollTop = this._textareaElement.scrollTop;\n        // If we haven't determined the line-height yet, we know we're still hidden and there's no point\n        // in checking the height of the textarea.\n        if (!this._cachedLineHeight) {\n            return;\n        }\n        const textarea = this._elementRef.nativeElement;\n        const value = textarea.value;\n        // Only resize if the value or minRows have changed since these calculations can be expensive.\n        if (!force && this._minRows === this._previousMinRows && value === this._previousValue) {\n            return;\n        }\n        const scrollHeight = this._measureScrollHeight();\n        const height = Math.max(scrollHeight, this._cachedPlaceholderHeight || 0);\n        // Use the scrollHeight to know how large the textarea *would* be if fit its entire value.\n        textarea.style.height = `${height}px`;\n        this._ngZone.runOutsideAngular(() => {\n            if (typeof requestAnimationFrame !== 'undefined') {\n                requestAnimationFrame(() => this._scrollToCaretPosition(textarea));\n            }\n            else {\n                setTimeout(() => this._scrollToCaretPosition(textarea));\n            }\n        });\n        this._previousValue = value;\n        this._previousMinRows = this._minRows;\n    }\n    /**\n     * Resets the textarea to its original size\n     */\n    reset() {\n        // Do not try to change the textarea, if the initialHeight has not been determined yet\n        // This might potentially remove styles when reset() is called before ngAfterViewInit\n        if (this._initialHeight !== undefined) {\n            this._textareaElement.style.height = this._initialHeight;\n        }\n    }\n    _noopInputHandler() {\n        // no-op handler that ensures we're running change detection on input events.\n    }\n    /**\n     * Scrolls a textarea to the caret position. On Firefox resizing the textarea will\n     * prevent it from scrolling to the caret position. We need to re-set the selection\n     * in order for it to scroll to the proper position.\n     */\n    _scrollToCaretPosition(textarea) {\n        const { selectionStart, selectionEnd } = textarea;\n        // IE will throw an \"Unspecified error\" if we try to set the selection range after the\n        // element has been removed from the DOM. Assert that the directive hasn't been destroyed\n        // between the time we requested the animation frame and when it was executed.\n        // Also note that we have to assert that the textarea is focused before we set the\n        // selection range. Setting the selection range on a non-focused textarea will cause\n        // it to receive focus on IE and Edge.\n        if (!this._destroyed.isStopped && this._hasFocus) {\n            textarea.setSelectionRange(selectionStart, selectionEnd);\n            textarea.scrollTop = this._cachedScrollTop;\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkTextareaAutosize, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"20.0.0\", type: CdkTextareaAutosize, isStandalone: true, selector: \"textarea[cdkTextareaAutosize]\", inputs: { minRows: [\"cdkAutosizeMinRows\", \"minRows\"], maxRows: [\"cdkAutosizeMaxRows\", \"maxRows\"], enabled: [\"cdkTextareaAutosize\", \"enabled\", booleanAttribute], placeholder: \"placeholder\" }, host: { attributes: { \"rows\": \"1\" }, listeners: { \"input\": \"_noopInputHandler()\" }, classAttribute: \"cdk-textarea-autosize\" }, exportAs: [\"cdkTextareaAutosize\"], ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkTextareaAutosize, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'textarea[cdkTextareaAutosize]',\n                    exportAs: 'cdkTextareaAutosize',\n                    host: {\n                        'class': 'cdk-textarea-autosize',\n                        // Textarea elements that have the directive applied should have a single row by default.\n                        // Browsers normally show two rows by default and therefore this limits the minRows binding.\n                        'rows': '1',\n                        '(input)': '_noopInputHandler()',\n                    },\n                }]\n        }], ctorParameters: () => [], propDecorators: { minRows: [{\n                type: Input,\n                args: ['cdkAutosizeMinRows']\n            }], maxRows: [{\n                type: Input,\n                args: ['cdkAutosizeMaxRows']\n            }], enabled: [{\n                type: Input,\n                args: [{ alias: 'cdkTextareaAutosize', transform: booleanAttribute }]\n            }], placeholder: [{\n                type: Input\n            }] } });\n\nclass TextFieldModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: TextFieldModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.0\", ngImport: i0, type: TextFieldModule, imports: [CdkAutofill, CdkTextareaAutosize], exports: [CdkAutofill, CdkTextareaAutosize] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: TextFieldModule });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: TextFieldModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CdkAutofill, CdkTextareaAutosize],\n                    exports: [CdkAutofill, CdkTextareaAutosize],\n                }]\n        }] });\n\nexport { AutofillMonitor, CdkAutofill, CdkTextareaAutosize, TextFieldModule };\n\n","import { InjectionToken } from '@angular/core';\n\n/**\n * This token is used to inject the object whose value should be set into `MatInput`. If none is\n * provided, the native `HTMLInputElement` is used. Directives like `MatDatepickerInput` can provide\n * themselves for this token, in order to make `MatInput` delegate the getting and setting of the\n * value to them.\n */\nconst MAT_INPUT_VALUE_ACCESSOR = new InjectionToken('MAT_INPUT_VALUE_ACCESSOR');\n\nexport { MAT_INPUT_VALUE_ACCESSOR as M };\n\n","import * as i0 from '@angular/core';\nimport { Injectable } from '@angular/core';\n\n/** Error state matcher that matches when a control is invalid and dirty. */\nclass ShowOnDirtyErrorStateMatcher {\n    isErrorState(control, form) {\n        return !!(control && control.invalid && (control.dirty || (form && form.submitted)));\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: ShowOnDirtyErrorStateMatcher, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: ShowOnDirtyErrorStateMatcher });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: ShowOnDirtyErrorStateMatcher, decorators: [{\n            type: Injectable\n        }] });\n/** Provider that defines how form controls behave with regards to displaying error messages. */\nclass ErrorStateMatcher {\n    isErrorState(control, form) {\n        return !!(control && control.invalid && (control.touched || (form && form.submitted)));\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: ErrorStateMatcher, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: ErrorStateMatcher, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: ErrorStateMatcher, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\nexport { ErrorStateMatcher as E, ShowOnDirtyErrorStateMatcher as S };\n\n","/**\n * Class that tracks the error state of a component.\n * @docs-private\n */\nclass _ErrorStateTracker {\n    _defaultMatcher;\n    ngControl;\n    _parentFormGroup;\n    _parentForm;\n    _stateChanges;\n    /** Whether the tracker is currently in an error state. */\n    errorState = false;\n    /** User-defined matcher for the error state. */\n    matcher;\n    constructor(_defaultMatcher, ngControl, _parentFormGroup, _parentForm, _stateChanges) {\n        this._defaultMatcher = _defaultMatcher;\n        this.ngControl = ngControl;\n        this._parentFormGroup = _parentFormGroup;\n        this._parentForm = _parentForm;\n        this._stateChanges = _stateChanges;\n    }\n    /** Updates the error state based on the provided error state matcher. */\n    updateErrorState() {\n        const oldState = this.errorState;\n        const parent = this._parentFormGroup || this._parentForm;\n        const matcher = this.matcher || this._defaultMatcher;\n        const control = this.ngControl ? this.ngControl.control : null;\n        const newState = matcher?.isErrorState(control, parent) ?? false;\n        if (newState !== oldState) {\n            this.errorState = newState;\n            this._stateChanges.next();\n        }\n    }\n}\n\nexport { _ErrorStateTracker as _ };\n\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Platform, getSupportedInputTypes } from '@angular/cdk/platform';\nimport { AutofillMonitor, TextFieldModule } from '@angular/cdk/text-field';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, inject, ElementRef, NgZone, Renderer2, isSignal, effect, booleanAttribute, Directive, Input, NgModule } from '@angular/core';\nimport { _IdGenerator } from '@angular/cdk/a11y';\nimport { NgControl, Validators, NgForm, FormGroupDirective } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { M as MAT_INPUT_VALUE_ACCESSOR } from './input-value-accessor-D1GvPuqO.mjs';\nimport { h as MAT_FORM_FIELD, k as MatFormFieldControl } from './form-field-C_dE1cl0.mjs';\nexport { b as MatError, j as MatFormField, c as MatHint, M as MatLabel, e as MatPrefix, g as MatSuffix } from './form-field-C_dE1cl0.mjs';\nimport { E as ErrorStateMatcher } from './error-options-DCNQlTOA.mjs';\nimport { _ as _ErrorStateTracker } from './error-state-Dtb1IHM-.mjs';\nimport { M as MatFormFieldModule } from './module-ko3UutPV.mjs';\nimport { M as MatCommonModule } from './common-module-cKSwHniA.mjs';\nimport '@angular/cdk/bidi';\nimport '@angular/common';\nimport 'rxjs/operators';\nimport '@angular/cdk/observers/private';\nimport './animation-ChQ1vjiF.mjs';\nimport '@angular/cdk/layout';\nimport '@angular/cdk/observers';\n\n/** @docs-private */\nfunction getMatInputUnsupportedTypeError(type) {\n    return Error(`Input type \"${type}\" isn't supported by matInput.`);\n}\n\n// Invalid input type. Using one of these will throw an MatInputUnsupportedTypeError.\nconst MAT_INPUT_INVALID_TYPES = [\n    'button',\n    'checkbox',\n    'file',\n    'hidden',\n    'image',\n    'radio',\n    'range',\n    'reset',\n    'submit',\n];\n/** Injection token that can be used to provide the default options for the input. */\nconst MAT_INPUT_CONFIG = new InjectionToken('MAT_INPUT_CONFIG');\nclass MatInput {\n    _elementRef = inject(ElementRef);\n    _platform = inject(Platform);\n    ngControl = inject(NgControl, { optional: true, self: true });\n    _autofillMonitor = inject(AutofillMonitor);\n    _ngZone = inject(NgZone);\n    _formField = inject(MAT_FORM_FIELD, { optional: true });\n    _renderer = inject(Renderer2);\n    _uid = inject(_IdGenerator).getId('mat-input-');\n    _previousNativeValue;\n    _inputValueAccessor;\n    _signalBasedValueAccessor;\n    _previousPlaceholder;\n    _errorStateTracker;\n    _config = inject(MAT_INPUT_CONFIG, { optional: true });\n    _cleanupIosKeyup;\n    _cleanupWebkitWheel;\n    /** Whether the component is being rendered on the server. */\n    _isServer;\n    /** Whether the component is a native html select. */\n    _isNativeSelect;\n    /** Whether the component is a textarea. */\n    _isTextarea;\n    /** Whether the input is inside of a form field. */\n    _isInFormField;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    focused = false;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    stateChanges = new Subject();\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    controlType = 'mat-input';\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    autofilled = false;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n            this.stateChanges.next();\n        }\n    }\n    _disabled = false;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get id() {\n        return this._id;\n    }\n    set id(value) {\n        this._id = value || this._uid;\n    }\n    _id;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    placeholder;\n    /**\n     * Name of the input.\n     * @docs-private\n     */\n    name;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get required() {\n        return this._required ?? this.ngControl?.control?.hasValidator(Validators.required) ?? false;\n    }\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n    }\n    _required;\n    /** Input type of the element. */\n    get type() {\n        return this._type;\n    }\n    set type(value) {\n        this._type = value || 'text';\n        this._validateType();\n        // When using Angular inputs, developers are no longer able to set the properties on the native\n        // input element. To ensure that bindings for `type` work, we need to sync the setter\n        // with the native property. Textarea elements don't support the type property or attribute.\n        if (!this._isTextarea && getSupportedInputTypes().has(this._type)) {\n            this._elementRef.nativeElement.type = this._type;\n        }\n    }\n    _type = 'text';\n    /** An object used to control when error messages are shown. */\n    get errorStateMatcher() {\n        return this._errorStateTracker.matcher;\n    }\n    set errorStateMatcher(value) {\n        this._errorStateTracker.matcher = value;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    userAriaDescribedBy;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get value() {\n        return this._signalBasedValueAccessor\n            ? this._signalBasedValueAccessor.value()\n            : this._inputValueAccessor.value;\n    }\n    set value(value) {\n        if (value !== this.value) {\n            if (this._signalBasedValueAccessor) {\n                this._signalBasedValueAccessor.value.set(value);\n            }\n            else {\n                this._inputValueAccessor.value = value;\n            }\n            this.stateChanges.next();\n        }\n    }\n    /** Whether the element is readonly. */\n    get readonly() {\n        return this._readonly;\n    }\n    set readonly(value) {\n        this._readonly = coerceBooleanProperty(value);\n    }\n    _readonly = false;\n    /** Whether the input should remain interactive when it is disabled. */\n    disabledInteractive;\n    /** Whether the input is in an error state. */\n    get errorState() {\n        return this._errorStateTracker.errorState;\n    }\n    set errorState(value) {\n        this._errorStateTracker.errorState = value;\n    }\n    _neverEmptyInputTypes = [\n        'date',\n        'datetime',\n        'datetime-local',\n        'month',\n        'time',\n        'week',\n    ].filter(t => getSupportedInputTypes().has(t));\n    constructor() {\n        const parentForm = inject(NgForm, { optional: true });\n        const parentFormGroup = inject(FormGroupDirective, { optional: true });\n        const defaultErrorStateMatcher = inject(ErrorStateMatcher);\n        const accessor = inject(MAT_INPUT_VALUE_ACCESSOR, { optional: true, self: true });\n        const element = this._elementRef.nativeElement;\n        const nodeName = element.nodeName.toLowerCase();\n        if (accessor) {\n            if (isSignal(accessor.value)) {\n                this._signalBasedValueAccessor = accessor;\n            }\n            else {\n                this._inputValueAccessor = accessor;\n            }\n        }\n        else {\n            // If no input value accessor was explicitly specified, use the element as the input value\n            // accessor.\n            this._inputValueAccessor = element;\n        }\n        this._previousNativeValue = this.value;\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n        // On some versions of iOS the caret gets stuck in the wrong place when holding down the delete\n        // key. In order to get around this we need to \"jiggle\" the caret loose. Since this bug only\n        // exists on iOS, we only bother to install the listener on iOS.\n        if (this._platform.IOS) {\n            this._ngZone.runOutsideAngular(() => {\n                this._cleanupIosKeyup = this._renderer.listen(element, 'keyup', this._iOSKeyupListener);\n            });\n        }\n        this._errorStateTracker = new _ErrorStateTracker(defaultErrorStateMatcher, this.ngControl, parentFormGroup, parentForm, this.stateChanges);\n        this._isServer = !this._platform.isBrowser;\n        this._isNativeSelect = nodeName === 'select';\n        this._isTextarea = nodeName === 'textarea';\n        this._isInFormField = !!this._formField;\n        this.disabledInteractive = this._config?.disabledInteractive || false;\n        if (this._isNativeSelect) {\n            this.controlType = element.multiple\n                ? 'mat-native-select-multiple'\n                : 'mat-native-select';\n        }\n        if (this._signalBasedValueAccessor) {\n            effect(() => {\n                // Read the value so the effect can register the dependency.\n                this._signalBasedValueAccessor.value();\n                this.stateChanges.next();\n            });\n        }\n    }\n    ngAfterViewInit() {\n        if (this._platform.isBrowser) {\n            this._autofillMonitor.monitor(this._elementRef.nativeElement).subscribe(event => {\n                this.autofilled = event.isAutofilled;\n                this.stateChanges.next();\n            });\n        }\n    }\n    ngOnChanges() {\n        this.stateChanges.next();\n    }\n    ngOnDestroy() {\n        this.stateChanges.complete();\n        if (this._platform.isBrowser) {\n            this._autofillMonitor.stopMonitoring(this._elementRef.nativeElement);\n        }\n        this._cleanupIosKeyup?.();\n        this._cleanupWebkitWheel?.();\n    }\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n            // Since the input isn't a `ControlValueAccessor`, we don't have a good way of knowing when\n            // the disabled state has changed. We can't use the `ngControl.statusChanges`, because it\n            // won't fire if the input is disabled with `emitEvents = false`, despite the input becoming\n            // disabled.\n            if (this.ngControl.disabled !== null && this.ngControl.disabled !== this.disabled) {\n                this.disabled = this.ngControl.disabled;\n                this.stateChanges.next();\n            }\n        }\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this._dirtyCheckNativeValue();\n        // We need to dirty-check and set the placeholder attribute ourselves, because whether it's\n        // present or not depends on a query which is prone to \"changed after checked\" errors.\n        this._dirtyCheckPlaceholder();\n    }\n    /** Focuses the input. */\n    focus(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    /** Refreshes the error state of the input. */\n    updateErrorState() {\n        this._errorStateTracker.updateErrorState();\n    }\n    /** Callback for the cases where the focused state of the input changes. */\n    _focusChanged(isFocused) {\n        if (isFocused === this.focused) {\n            return;\n        }\n        if (!this._isNativeSelect && isFocused && this.disabled && this.disabledInteractive) {\n            const element = this._elementRef.nativeElement;\n            // Focusing an input that has text will cause all the text to be selected. Clear it since\n            // the user won't be able to change it. This is based on the internal implementation.\n            if (element.type === 'number') {\n                // setSelectionRange doesn't work on number inputs so it needs to be set briefly to text.\n                element.type = 'text';\n                element.setSelectionRange(0, 0);\n                element.type = 'number';\n            }\n            else {\n                element.setSelectionRange(0, 0);\n            }\n        }\n        this.focused = isFocused;\n        this.stateChanges.next();\n    }\n    _onInput() {\n        // This is a noop function and is used to let Angular know whenever the value changes.\n        // Angular will run a new change detection each time the `input` event has been dispatched.\n        // It's necessary that Angular recognizes the value change, because when floatingLabel\n        // is set to false and Angular forms aren't used, the placeholder won't recognize the\n        // value changes and will not disappear.\n        // Listening to the input event wouldn't be necessary when the input is using the\n        // FormsModule or ReactiveFormsModule, because Angular forms also listens to input events.\n    }\n    /** Does some manual dirty checking on the native input `value` property. */\n    _dirtyCheckNativeValue() {\n        const newValue = this._elementRef.nativeElement.value;\n        if (this._previousNativeValue !== newValue) {\n            this._previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n    /** Does some manual dirty checking on the native input `placeholder` attribute. */\n    _dirtyCheckPlaceholder() {\n        const placeholder = this._getPlaceholder();\n        if (placeholder !== this._previousPlaceholder) {\n            const element = this._elementRef.nativeElement;\n            this._previousPlaceholder = placeholder;\n            placeholder\n                ? element.setAttribute('placeholder', placeholder)\n                : element.removeAttribute('placeholder');\n        }\n    }\n    /** Gets the current placeholder of the form field. */\n    _getPlaceholder() {\n        return this.placeholder || null;\n    }\n    /** Make sure the input is a supported type. */\n    _validateType() {\n        if (MAT_INPUT_INVALID_TYPES.indexOf(this._type) > -1 &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatInputUnsupportedTypeError(this._type);\n        }\n    }\n    /** Checks whether the input type is one of the types that are never empty. */\n    _isNeverEmpty() {\n        return this._neverEmptyInputTypes.indexOf(this._type) > -1;\n    }\n    /** Checks whether the input is invalid based on the native validation. */\n    _isBadInput() {\n        // The `validity` property won't be present on platform-server.\n        let validity = this._elementRef.nativeElement.validity;\n        return validity && validity.badInput;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get empty() {\n        return (!this._isNeverEmpty() &&\n            !this._elementRef.nativeElement.value &&\n            !this._isBadInput() &&\n            !this.autofilled);\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get shouldLabelFloat() {\n        if (this._isNativeSelect) {\n            // For a single-selection `<select>`, the label should float when the selected option has\n            // a non-empty display value. For a `<select multiple>`, the label *always* floats to avoid\n            // overlapping the label with the options.\n            const selectElement = this._elementRef.nativeElement;\n            const firstOption = selectElement.options[0];\n            // On most browsers the `selectedIndex` will always be 0, however on IE and Edge it'll be\n            // -1 if the `value` is set to something, that isn't in the list of options, at a later point.\n            return (this.focused ||\n                selectElement.multiple ||\n                !this.empty ||\n                !!(selectElement.selectedIndex > -1 && firstOption && firstOption.label));\n        }\n        else {\n            return (this.focused && !this.disabled) || !this.empty;\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get describedByIds() {\n        const element = this._elementRef.nativeElement;\n        const existingDescribedBy = element.getAttribute('aria-describedby');\n        return existingDescribedBy?.split(' ') || [];\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    setDescribedByIds(ids) {\n        const element = this._elementRef.nativeElement;\n        if (ids.length) {\n            element.setAttribute('aria-describedby', ids.join(' '));\n        }\n        else {\n            element.removeAttribute('aria-describedby');\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        // Do not re-focus the input element if the element is already focused. Otherwise it can happen\n        // that someone clicks on a time input and the cursor resets to the \"hours\" field while the\n        // \"minutes\" field was actually clicked. See: https://github.com/angular/components/issues/12849\n        if (!this.focused) {\n            this.focus();\n        }\n    }\n    /** Whether the form control is a native select that is displayed inline. */\n    _isInlineSelect() {\n        const element = this._elementRef.nativeElement;\n        return this._isNativeSelect && (element.multiple || element.size > 1);\n    }\n    _iOSKeyupListener = (event) => {\n        const el = event.target;\n        // Note: We specifically check for 0, rather than `!el.selectionStart`, because the two\n        // indicate different things. If the value is 0, it means that the caret is at the start\n        // of the input, whereas a value of `null` means that the input doesn't support\n        // manipulating the selection range. Inputs that don't support setting the selection range\n        // will throw an error so we want to avoid calling `setSelectionRange` on them. See:\n        // https://html.spec.whatwg.org/multipage/input.html#do-not-apply\n        if (!el.value && el.selectionStart === 0 && el.selectionEnd === 0) {\n            // Note: Just setting `0, 0` doesn't fix the issue. Setting\n            // `1, 1` fixes it for the first time that you type text and\n            // then hold delete. Toggling to `1, 1` and then back to\n            // `0, 0` seems to completely fix it.\n            el.setSelectionRange(1, 1);\n            el.setSelectionRange(0, 0);\n        }\n    };\n    /** Gets the value to set on the `readonly` attribute. */\n    _getReadonlyAttribute() {\n        if (this._isNativeSelect) {\n            return null;\n        }\n        if (this.readonly || (this.disabled && this.disabledInteractive)) {\n            return 'true';\n        }\n        return null;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatInput, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"20.0.0\", type: MatInput, isStandalone: true, selector: \"input[matInput], textarea[matInput], select[matNativeControl],\\n      input[matNativeControl], textarea[matNativeControl]\", inputs: { disabled: \"disabled\", id: \"id\", placeholder: \"placeholder\", name: \"name\", required: \"required\", type: \"type\", errorStateMatcher: \"errorStateMatcher\", userAriaDescribedBy: [\"aria-describedby\", \"userAriaDescribedBy\"], value: \"value\", readonly: \"readonly\", disabledInteractive: [\"disabledInteractive\", \"disabledInteractive\", booleanAttribute] }, host: { listeners: { \"focus\": \"_focusChanged(true)\", \"blur\": \"_focusChanged(false)\", \"input\": \"_onInput()\" }, properties: { \"class.mat-input-server\": \"_isServer\", \"class.mat-mdc-form-field-textarea-control\": \"_isInFormField && _isTextarea\", \"class.mat-mdc-form-field-input-control\": \"_isInFormField\", \"class.mat-mdc-input-disabled-interactive\": \"disabledInteractive\", \"class.mdc-text-field__input\": \"_isInFormField\", \"class.mat-mdc-native-select-inline\": \"_isInlineSelect()\", \"id\": \"id\", \"disabled\": \"disabled && !disabledInteractive\", \"required\": \"required\", \"attr.name\": \"name || null\", \"attr.readonly\": \"_getReadonlyAttribute()\", \"attr.aria-disabled\": \"disabled && disabledInteractive ? \\\"true\\\" : null\", \"attr.aria-invalid\": \"(empty && required) ? null : errorState\", \"attr.aria-required\": \"required\", \"attr.id\": \"id\" }, classAttribute: \"mat-mdc-input-element\" }, providers: [{ provide: MatFormFieldControl, useExisting: MatInput }], exportAs: [\"matInput\"], usesOnChanges: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatInput, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `input[matInput], textarea[matInput], select[matNativeControl],\n      input[matNativeControl], textarea[matNativeControl]`,\n                    exportAs: 'matInput',\n                    host: {\n                        'class': 'mat-mdc-input-element',\n                        // The BaseMatInput parent class adds `mat-input-element`, `mat-form-field-control` and\n                        // `mat-form-field-autofill-control` to the CSS class list, but this should not be added for\n                        // this MDC equivalent input.\n                        '[class.mat-input-server]': '_isServer',\n                        '[class.mat-mdc-form-field-textarea-control]': '_isInFormField && _isTextarea',\n                        '[class.mat-mdc-form-field-input-control]': '_isInFormField',\n                        '[class.mat-mdc-input-disabled-interactive]': 'disabledInteractive',\n                        '[class.mdc-text-field__input]': '_isInFormField',\n                        '[class.mat-mdc-native-select-inline]': '_isInlineSelect()',\n                        // Native input properties that are overwritten by Angular inputs need to be synced with\n                        // the native input element. Otherwise property bindings for those don't work.\n                        '[id]': 'id',\n                        '[disabled]': 'disabled && !disabledInteractive',\n                        '[required]': 'required',\n                        '[attr.name]': 'name || null',\n                        '[attr.readonly]': '_getReadonlyAttribute()',\n                        '[attr.aria-disabled]': 'disabled && disabledInteractive ? \"true\" : null',\n                        // Only mark the input as invalid for assistive technology if it has a value since the\n                        // state usually overlaps with `aria-required` when the input is empty and can be redundant.\n                        '[attr.aria-invalid]': '(empty && required) ? null : errorState',\n                        '[attr.aria-required]': 'required',\n                        // Native input properties that are overwritten by Angular inputs need to be synced with\n                        // the native input element. Otherwise property bindings for those don't work.\n                        '[attr.id]': 'id',\n                        '(focus)': '_focusChanged(true)',\n                        '(blur)': '_focusChanged(false)',\n                        '(input)': '_onInput()',\n                    },\n                    providers: [{ provide: MatFormFieldControl, useExisting: MatInput }],\n                }]\n        }], ctorParameters: () => [], propDecorators: { disabled: [{\n                type: Input\n            }], id: [{\n                type: Input\n            }], placeholder: [{\n                type: Input\n            }], name: [{\n                type: Input\n            }], required: [{\n                type: Input\n            }], type: [{\n                type: Input\n            }], errorStateMatcher: [{\n                type: Input\n            }], userAriaDescribedBy: [{\n                type: Input,\n                args: ['aria-describedby']\n            }], value: [{\n                type: Input\n            }], readonly: [{\n                type: Input\n            }], disabledInteractive: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }] } });\n\nclass MatInputModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatInputModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.0\", ngImport: i0, type: MatInputModule, imports: [MatCommonModule, MatFormFieldModule, MatInput], exports: [MatInput, MatFormFieldModule, TextFieldModule, MatCommonModule] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatInputModule, imports: [MatCommonModule, MatFormFieldModule, MatFormFieldModule, TextFieldModule, MatCommonModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatInputModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule, MatFormFieldModule, MatInput],\n                    exports: [MatInput, MatFormFieldModule, TextFieldModule, MatCommonModule],\n                }]\n        }] });\n\nexport { MAT_INPUT_CONFIG, MAT_INPUT_VALUE_ACCESSOR, MatInput, MatInputModule, getMatInputUnsupportedTypeError };\n\n","import * as i0 from '@angular/core';\nimport { InjectionToken, inject, DOCUMENT, ElementRef, NgZone, ChangeDetectorRef, Renderer2, EventEmitter, numberAttribute, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Output, NgModule } from '@angular/core';\nimport { a as _getAnimationsState } from './animation-ChQ1vjiF.mjs';\nimport { M as MatCommonModule } from './common-module-cKSwHniA.mjs';\nimport '@angular/cdk/layout';\nimport '@angular/cdk/a11y';\nimport '@angular/cdk/bidi';\n\n/** Injection token to be used to override the default options for `mat-progress-bar`. */\nconst MAT_PROGRESS_BAR_DEFAULT_OPTIONS = new InjectionToken('MAT_PROGRESS_BAR_DEFAULT_OPTIONS');\n/**\n * Injection token used to provide the current location to `MatProgressBar`.\n * Used to handle server-side rendering and to stub out during unit tests.\n * @docs-private\n */\nconst MAT_PROGRESS_BAR_LOCATION = new InjectionToken('mat-progress-bar-location', { providedIn: 'root', factory: MAT_PROGRESS_BAR_LOCATION_FACTORY });\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nfunction MAT_PROGRESS_BAR_LOCATION_FACTORY() {\n    const _document = inject(DOCUMENT);\n    const _location = _document ? _document.location : null;\n    return {\n        // Note that this needs to be a function, rather than a property, because Angular\n        // will only resolve it once, but we want the current path on each call.\n        getPathname: () => (_location ? _location.pathname + _location.search : ''),\n    };\n}\nclass MatProgressBar {\n    _elementRef = inject(ElementRef);\n    _ngZone = inject(NgZone);\n    _changeDetectorRef = inject(ChangeDetectorRef);\n    _renderer = inject(Renderer2);\n    _cleanupTransitionEnd;\n    constructor() {\n        const animationsState = _getAnimationsState();\n        const defaults = inject(MAT_PROGRESS_BAR_DEFAULT_OPTIONS, {\n            optional: true,\n        });\n        this._isNoopAnimation = animationsState === 'di-disabled';\n        if (animationsState === 'reduced-motion') {\n            this._elementRef.nativeElement.classList.add('mat-progress-bar-reduced-motion');\n        }\n        if (defaults) {\n            if (defaults.color) {\n                this.color = this._defaultColor = defaults.color;\n            }\n            this.mode = defaults.mode || this.mode;\n        }\n    }\n    /** Flag that indicates whether NoopAnimations mode is set to true. */\n    _isNoopAnimation;\n    // TODO: should be typed as `ThemePalette` but internal apps pass in arbitrary strings.\n    /**\n     * Theme color of the progress bar. This API is supported in M2 themes only, it\n     * has no effect in M3 themes. For color customization in M3, see https://material.angular.dev/components/progress-bar/styling.\n     *\n     * For information on applying color variants in M3, see\n     * https://material.angular.dev/guide/material-2-theming#optional-add-backwards-compatibility-styles-for-color-variants\n     */\n    get color() {\n        return this._color || this._defaultColor;\n    }\n    set color(value) {\n        this._color = value;\n    }\n    _color;\n    _defaultColor = 'primary';\n    /** Value of the progress bar. Defaults to zero. Mirrored to aria-valuenow. */\n    get value() {\n        return this._value;\n    }\n    set value(v) {\n        this._value = clamp(v || 0);\n        this._changeDetectorRef.markForCheck();\n    }\n    _value = 0;\n    /** Buffer value of the progress bar. Defaults to zero. */\n    get bufferValue() {\n        return this._bufferValue || 0;\n    }\n    set bufferValue(v) {\n        this._bufferValue = clamp(v || 0);\n        this._changeDetectorRef.markForCheck();\n    }\n    _bufferValue = 0;\n    /**\n     * Event emitted when animation of the primary progress bar completes. This event will not\n     * be emitted when animations are disabled, nor will it be emitted for modes with continuous\n     * animations (indeterminate and query).\n     */\n    animationEnd = new EventEmitter();\n    /**\n     * Mode of the progress bar.\n     *\n     * Input must be one of these values: determinate, indeterminate, buffer, query, defaults to\n     * 'determinate'.\n     * Mirrored to mode attribute.\n     */\n    get mode() {\n        return this._mode;\n    }\n    set mode(value) {\n        // Note that we don't technically need a getter and a setter here,\n        // but we use it to match the behavior of the existing mat-progress-bar.\n        this._mode = value;\n        this._changeDetectorRef.markForCheck();\n    }\n    _mode = 'determinate';\n    ngAfterViewInit() {\n        // Run outside angular so change detection didn't get triggered on every transition end\n        // instead only on the animation that we care about (primary value bar's transitionend)\n        this._ngZone.runOutsideAngular(() => {\n            this._cleanupTransitionEnd = this._renderer.listen(this._elementRef.nativeElement, 'transitionend', this._transitionendHandler);\n        });\n    }\n    ngOnDestroy() {\n        this._cleanupTransitionEnd?.();\n    }\n    /** Gets the transform style that should be applied to the primary bar. */\n    _getPrimaryBarTransform() {\n        return `scaleX(${this._isIndeterminate() ? 1 : this.value / 100})`;\n    }\n    /** Gets the `flex-basis` value that should be applied to the buffer bar. */\n    _getBufferBarFlexBasis() {\n        return `${this.mode === 'buffer' ? this.bufferValue : 100}%`;\n    }\n    /** Returns whether the progress bar is indeterminate. */\n    _isIndeterminate() {\n        return this.mode === 'indeterminate' || this.mode === 'query';\n    }\n    /** Event handler for `transitionend` events. */\n    _transitionendHandler = (event) => {\n        if (this.animationEnd.observers.length === 0 ||\n            !event.target ||\n            !event.target.classList.contains('mdc-linear-progress__primary-bar')) {\n            return;\n        }\n        if (this.mode === 'determinate' || this.mode === 'buffer') {\n            this._ngZone.run(() => this.animationEnd.next({ value: this.value }));\n        }\n    };\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatProgressBar, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"20.0.0\", type: MatProgressBar, isStandalone: true, selector: \"mat-progress-bar\", inputs: { color: \"color\", value: [\"value\", \"value\", numberAttribute], bufferValue: [\"bufferValue\", \"bufferValue\", numberAttribute], mode: \"mode\" }, outputs: { animationEnd: \"animationEnd\" }, host: { attributes: { \"role\": \"progressbar\", \"aria-valuemin\": \"0\", \"aria-valuemax\": \"100\", \"tabindex\": \"-1\" }, properties: { \"attr.aria-valuenow\": \"_isIndeterminate() ? null : value\", \"attr.mode\": \"mode\", \"class\": \"\\\"mat-\\\" + color\", \"class._mat-animation-noopable\": \"_isNoopAnimation\", \"class.mdc-linear-progress--animation-ready\": \"!_isNoopAnimation\", \"class.mdc-linear-progress--indeterminate\": \"_isIndeterminate()\" }, classAttribute: \"mat-mdc-progress-bar mdc-linear-progress\" }, exportAs: [\"matProgressBar\"], ngImport: i0, template: \"<!--\\n  All children need to be hidden for screen readers in order to support ChromeVox.\\n  More context in the issue: https://github.com/angular/components/issues/22165.\\n-->\\n<div class=\\\"mdc-linear-progress__buffer\\\" aria-hidden=\\\"true\\\">\\n  <div\\n    class=\\\"mdc-linear-progress__buffer-bar\\\"\\n    [style.flex-basis]=\\\"_getBufferBarFlexBasis()\\\"></div>\\n  <!-- Remove the dots outside of buffer mode since they can cause CSP issues (see #28938) -->\\n  @if (mode === 'buffer') {\\n    <div class=\\\"mdc-linear-progress__buffer-dots\\\"></div>\\n  }\\n</div>\\n<div\\n  class=\\\"mdc-linear-progress__bar mdc-linear-progress__primary-bar\\\"\\n  aria-hidden=\\\"true\\\"\\n  [style.transform]=\\\"_getPrimaryBarTransform()\\\">\\n  <span class=\\\"mdc-linear-progress__bar-inner\\\"></span>\\n</div>\\n<div class=\\\"mdc-linear-progress__bar mdc-linear-progress__secondary-bar\\\" aria-hidden=\\\"true\\\">\\n  <span class=\\\"mdc-linear-progress__bar-inner\\\"></span>\\n</div>\\n\", styles: [\".mat-mdc-progress-bar{--mat-progress-bar-animation-multiplier: 1;display:block;text-align:start}.mat-mdc-progress-bar[mode=query]{transform:scaleX(-1)}.mat-mdc-progress-bar._mat-animation-noopable .mdc-linear-progress__buffer-dots,.mat-mdc-progress-bar._mat-animation-noopable .mdc-linear-progress__primary-bar,.mat-mdc-progress-bar._mat-animation-noopable .mdc-linear-progress__secondary-bar,.mat-mdc-progress-bar._mat-animation-noopable .mdc-linear-progress__bar-inner.mdc-linear-progress__bar-inner{animation:none}.mat-mdc-progress-bar._mat-animation-noopable .mdc-linear-progress__primary-bar,.mat-mdc-progress-bar._mat-animation-noopable .mdc-linear-progress__buffer-bar{transition:transform 1ms}.mat-progress-bar-reduced-motion{--mat-progress-bar-animation-multiplier: 2}.mdc-linear-progress{position:relative;width:100%;transform:translateZ(0);outline:1px solid rgba(0,0,0,0);overflow-x:hidden;transition:opacity 250ms 0ms cubic-bezier(0.4, 0, 0.6, 1);height:max(var(--mat-progress-bar-track-height, 4px),var(--mat-progress-bar-active-indicator-height, 4px))}@media(forced-colors: active){.mdc-linear-progress{outline-color:CanvasText}}.mdc-linear-progress__bar{position:absolute;top:0;bottom:0;margin:auto 0;width:100%;animation:none;transform-origin:top left;transition:transform 250ms 0ms cubic-bezier(0.4, 0, 0.6, 1);height:var(--mat-progress-bar-active-indicator-height, 4px)}.mdc-linear-progress--indeterminate .mdc-linear-progress__bar{transition:none}[dir=rtl] .mdc-linear-progress__bar{right:0;transform-origin:center right}.mdc-linear-progress__bar-inner{display:inline-block;position:absolute;width:100%;animation:none;border-top-style:solid;border-color:var(--mat-progress-bar-active-indicator-color, var(--mat-sys-primary));border-top-width:var(--mat-progress-bar-active-indicator-height, 4px)}.mdc-linear-progress__buffer{display:flex;position:absolute;top:0;bottom:0;margin:auto 0;width:100%;overflow:hidden;height:var(--mat-progress-bar-track-height, 4px);border-radius:var(--mat-progress-bar-track-shape, var(--mat-sys-corner-none))}.mdc-linear-progress__buffer-dots{-webkit-mask-image:url(\\\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='xMinYMin slice'%3E%3Ccircle cx='1' cy='1' r='1'/%3E%3C/svg%3E\\\");mask-image:url(\\\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='xMinYMin slice'%3E%3Ccircle cx='1' cy='1' r='1'/%3E%3C/svg%3E\\\");background-repeat:repeat-x;flex:auto;transform:rotate(180deg);animation:mdc-linear-progress-buffering calc(250ms*var(--mat-progress-bar-animation-multiplier)) infinite linear;background-color:var(--mat-progress-bar-track-color, var(--mat-sys-surface-variant))}@media(forced-colors: active){.mdc-linear-progress__buffer-dots{background-color:ButtonBorder}}[dir=rtl] .mdc-linear-progress__buffer-dots{animation:mdc-linear-progress-buffering-reverse calc(250ms*var(--mat-progress-bar-animation-multiplier)) infinite linear;transform:rotate(0)}.mdc-linear-progress__buffer-bar{flex:0 1 100%;transition:flex-basis 250ms 0ms cubic-bezier(0.4, 0, 0.6, 1);background-color:var(--mat-progress-bar-track-color, var(--mat-sys-surface-variant))}.mdc-linear-progress__primary-bar{transform:scaleX(0)}.mdc-linear-progress--indeterminate .mdc-linear-progress__primary-bar{left:-145.166611%}.mdc-linear-progress--indeterminate.mdc-linear-progress--animation-ready .mdc-linear-progress__primary-bar{animation:mdc-linear-progress-primary-indeterminate-translate calc(2s*var(--mat-progress-bar-animation-multiplier)) infinite linear}.mdc-linear-progress--indeterminate.mdc-linear-progress--animation-ready .mdc-linear-progress__primary-bar>.mdc-linear-progress__bar-inner{animation:mdc-linear-progress-primary-indeterminate-scale calc(2s*var(--mat-progress-bar-animation-multiplier)) infinite linear}[dir=rtl] .mdc-linear-progress.mdc-linear-progress--animation-ready .mdc-linear-progress__primary-bar{animation-name:mdc-linear-progress-primary-indeterminate-translate-reverse}[dir=rtl] .mdc-linear-progress.mdc-linear-progress--indeterminate .mdc-linear-progress__primary-bar{right:-145.166611%;left:auto}.mdc-linear-progress__secondary-bar{display:none}.mdc-linear-progress--indeterminate .mdc-linear-progress__secondary-bar{left:-54.888891%;display:block}.mdc-linear-progress--indeterminate.mdc-linear-progress--animation-ready .mdc-linear-progress__secondary-bar{animation:mdc-linear-progress-secondary-indeterminate-translate calc(2s*var(--mat-progress-bar-animation-multiplier)) infinite linear}.mdc-linear-progress--indeterminate.mdc-linear-progress--animation-ready .mdc-linear-progress__secondary-bar>.mdc-linear-progress__bar-inner{animation:mdc-linear-progress-secondary-indeterminate-scale calc(2s*var(--mat-progress-bar-animation-multiplier)) infinite linear}[dir=rtl] .mdc-linear-progress.mdc-linear-progress--animation-ready .mdc-linear-progress__secondary-bar{animation-name:mdc-linear-progress-secondary-indeterminate-translate-reverse}[dir=rtl] .mdc-linear-progress.mdc-linear-progress--indeterminate .mdc-linear-progress__secondary-bar{right:-54.888891%;left:auto}@keyframes mdc-linear-progress-buffering{from{transform:rotate(180deg) translateX(calc(var(--mat-progress-bar-track-height, 4px) * -2.5))}}@keyframes mdc-linear-progress-primary-indeterminate-translate{0%{transform:translateX(0)}20%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(0)}59.15%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(83.67142%)}100%{transform:translateX(200.611057%)}}@keyframes mdc-linear-progress-primary-indeterminate-scale{0%{transform:scaleX(0.08)}36.65%{animation-timing-function:cubic-bezier(0.334731, 0.12482, 0.785844, 1);transform:scaleX(0.08)}69.15%{animation-timing-function:cubic-bezier(0.06, 0.11, 0.6, 1);transform:scaleX(0.661479)}100%{transform:scaleX(0.08)}}@keyframes mdc-linear-progress-secondary-indeterminate-translate{0%{animation-timing-function:cubic-bezier(0.15, 0, 0.515058, 0.409685);transform:translateX(0)}25%{animation-timing-function:cubic-bezier(0.31033, 0.284058, 0.8, 0.733712);transform:translateX(37.651913%)}48.35%{animation-timing-function:cubic-bezier(0.4, 0.627035, 0.6, 0.902026);transform:translateX(84.386165%)}100%{transform:translateX(160.277782%)}}@keyframes mdc-linear-progress-secondary-indeterminate-scale{0%{animation-timing-function:cubic-bezier(0.205028, 0.057051, 0.57661, 0.453971);transform:scaleX(0.08)}19.15%{animation-timing-function:cubic-bezier(0.152313, 0.196432, 0.648374, 1.004315);transform:scaleX(0.457104)}44.15%{animation-timing-function:cubic-bezier(0.257759, -0.003163, 0.211762, 1.38179);transform:scaleX(0.72796)}100%{transform:scaleX(0.08)}}@keyframes mdc-linear-progress-primary-indeterminate-translate-reverse{0%{transform:translateX(0)}20%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(0)}59.15%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(-83.67142%)}100%{transform:translateX(-200.611057%)}}@keyframes mdc-linear-progress-secondary-indeterminate-translate-reverse{0%{animation-timing-function:cubic-bezier(0.15, 0, 0.515058, 0.409685);transform:translateX(0)}25%{animation-timing-function:cubic-bezier(0.31033, 0.284058, 0.8, 0.733712);transform:translateX(-37.651913%)}48.35%{animation-timing-function:cubic-bezier(0.4, 0.627035, 0.6, 0.902026);transform:translateX(-84.386165%)}100%{transform:translateX(-160.277782%)}}@keyframes mdc-linear-progress-buffering-reverse{from{transform:translateX(-10px)}}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatProgressBar, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-progress-bar', exportAs: 'matProgressBar', host: {\n                        'role': 'progressbar',\n                        'aria-valuemin': '0',\n                        'aria-valuemax': '100',\n                        // set tab index to -1 so screen readers will read the aria-label\n                        // Note: there is a known issue with JAWS that does not read progressbar aria labels on FireFox\n                        'tabindex': '-1',\n                        '[attr.aria-valuenow]': '_isIndeterminate() ? null : value',\n                        '[attr.mode]': 'mode',\n                        'class': 'mat-mdc-progress-bar mdc-linear-progress',\n                        '[class]': '\"mat-\" + color',\n                        '[class._mat-animation-noopable]': '_isNoopAnimation',\n                        '[class.mdc-linear-progress--animation-ready]': '!_isNoopAnimation',\n                        '[class.mdc-linear-progress--indeterminate]': '_isIndeterminate()',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: \"<!--\\n  All children need to be hidden for screen readers in order to support ChromeVox.\\n  More context in the issue: https://github.com/angular/components/issues/22165.\\n-->\\n<div class=\\\"mdc-linear-progress__buffer\\\" aria-hidden=\\\"true\\\">\\n  <div\\n    class=\\\"mdc-linear-progress__buffer-bar\\\"\\n    [style.flex-basis]=\\\"_getBufferBarFlexBasis()\\\"></div>\\n  <!-- Remove the dots outside of buffer mode since they can cause CSP issues (see #28938) -->\\n  @if (mode === 'buffer') {\\n    <div class=\\\"mdc-linear-progress__buffer-dots\\\"></div>\\n  }\\n</div>\\n<div\\n  class=\\\"mdc-linear-progress__bar mdc-linear-progress__primary-bar\\\"\\n  aria-hidden=\\\"true\\\"\\n  [style.transform]=\\\"_getPrimaryBarTransform()\\\">\\n  <span class=\\\"mdc-linear-progress__bar-inner\\\"></span>\\n</div>\\n<div class=\\\"mdc-linear-progress__bar mdc-linear-progress__secondary-bar\\\" aria-hidden=\\\"true\\\">\\n  <span class=\\\"mdc-linear-progress__bar-inner\\\"></span>\\n</div>\\n\", styles: [\".mat-mdc-progress-bar{--mat-progress-bar-animation-multiplier: 1;display:block;text-align:start}.mat-mdc-progress-bar[mode=query]{transform:scaleX(-1)}.mat-mdc-progress-bar._mat-animation-noopable .mdc-linear-progress__buffer-dots,.mat-mdc-progress-bar._mat-animation-noopable .mdc-linear-progress__primary-bar,.mat-mdc-progress-bar._mat-animation-noopable .mdc-linear-progress__secondary-bar,.mat-mdc-progress-bar._mat-animation-noopable .mdc-linear-progress__bar-inner.mdc-linear-progress__bar-inner{animation:none}.mat-mdc-progress-bar._mat-animation-noopable .mdc-linear-progress__primary-bar,.mat-mdc-progress-bar._mat-animation-noopable .mdc-linear-progress__buffer-bar{transition:transform 1ms}.mat-progress-bar-reduced-motion{--mat-progress-bar-animation-multiplier: 2}.mdc-linear-progress{position:relative;width:100%;transform:translateZ(0);outline:1px solid rgba(0,0,0,0);overflow-x:hidden;transition:opacity 250ms 0ms cubic-bezier(0.4, 0, 0.6, 1);height:max(var(--mat-progress-bar-track-height, 4px),var(--mat-progress-bar-active-indicator-height, 4px))}@media(forced-colors: active){.mdc-linear-progress{outline-color:CanvasText}}.mdc-linear-progress__bar{position:absolute;top:0;bottom:0;margin:auto 0;width:100%;animation:none;transform-origin:top left;transition:transform 250ms 0ms cubic-bezier(0.4, 0, 0.6, 1);height:var(--mat-progress-bar-active-indicator-height, 4px)}.mdc-linear-progress--indeterminate .mdc-linear-progress__bar{transition:none}[dir=rtl] .mdc-linear-progress__bar{right:0;transform-origin:center right}.mdc-linear-progress__bar-inner{display:inline-block;position:absolute;width:100%;animation:none;border-top-style:solid;border-color:var(--mat-progress-bar-active-indicator-color, var(--mat-sys-primary));border-top-width:var(--mat-progress-bar-active-indicator-height, 4px)}.mdc-linear-progress__buffer{display:flex;position:absolute;top:0;bottom:0;margin:auto 0;width:100%;overflow:hidden;height:var(--mat-progress-bar-track-height, 4px);border-radius:var(--mat-progress-bar-track-shape, var(--mat-sys-corner-none))}.mdc-linear-progress__buffer-dots{-webkit-mask-image:url(\\\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='xMinYMin slice'%3E%3Ccircle cx='1' cy='1' r='1'/%3E%3C/svg%3E\\\");mask-image:url(\\\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='xMinYMin slice'%3E%3Ccircle cx='1' cy='1' r='1'/%3E%3C/svg%3E\\\");background-repeat:repeat-x;flex:auto;transform:rotate(180deg);animation:mdc-linear-progress-buffering calc(250ms*var(--mat-progress-bar-animation-multiplier)) infinite linear;background-color:var(--mat-progress-bar-track-color, var(--mat-sys-surface-variant))}@media(forced-colors: active){.mdc-linear-progress__buffer-dots{background-color:ButtonBorder}}[dir=rtl] .mdc-linear-progress__buffer-dots{animation:mdc-linear-progress-buffering-reverse calc(250ms*var(--mat-progress-bar-animation-multiplier)) infinite linear;transform:rotate(0)}.mdc-linear-progress__buffer-bar{flex:0 1 100%;transition:flex-basis 250ms 0ms cubic-bezier(0.4, 0, 0.6, 1);background-color:var(--mat-progress-bar-track-color, var(--mat-sys-surface-variant))}.mdc-linear-progress__primary-bar{transform:scaleX(0)}.mdc-linear-progress--indeterminate .mdc-linear-progress__primary-bar{left:-145.166611%}.mdc-linear-progress--indeterminate.mdc-linear-progress--animation-ready .mdc-linear-progress__primary-bar{animation:mdc-linear-progress-primary-indeterminate-translate calc(2s*var(--mat-progress-bar-animation-multiplier)) infinite linear}.mdc-linear-progress--indeterminate.mdc-linear-progress--animation-ready .mdc-linear-progress__primary-bar>.mdc-linear-progress__bar-inner{animation:mdc-linear-progress-primary-indeterminate-scale calc(2s*var(--mat-progress-bar-animation-multiplier)) infinite linear}[dir=rtl] .mdc-linear-progress.mdc-linear-progress--animation-ready .mdc-linear-progress__primary-bar{animation-name:mdc-linear-progress-primary-indeterminate-translate-reverse}[dir=rtl] .mdc-linear-progress.mdc-linear-progress--indeterminate .mdc-linear-progress__primary-bar{right:-145.166611%;left:auto}.mdc-linear-progress__secondary-bar{display:none}.mdc-linear-progress--indeterminate .mdc-linear-progress__secondary-bar{left:-54.888891%;display:block}.mdc-linear-progress--indeterminate.mdc-linear-progress--animation-ready .mdc-linear-progress__secondary-bar{animation:mdc-linear-progress-secondary-indeterminate-translate calc(2s*var(--mat-progress-bar-animation-multiplier)) infinite linear}.mdc-linear-progress--indeterminate.mdc-linear-progress--animation-ready .mdc-linear-progress__secondary-bar>.mdc-linear-progress__bar-inner{animation:mdc-linear-progress-secondary-indeterminate-scale calc(2s*var(--mat-progress-bar-animation-multiplier)) infinite linear}[dir=rtl] .mdc-linear-progress.mdc-linear-progress--animation-ready .mdc-linear-progress__secondary-bar{animation-name:mdc-linear-progress-secondary-indeterminate-translate-reverse}[dir=rtl] .mdc-linear-progress.mdc-linear-progress--indeterminate .mdc-linear-progress__secondary-bar{right:-54.888891%;left:auto}@keyframes mdc-linear-progress-buffering{from{transform:rotate(180deg) translateX(calc(var(--mat-progress-bar-track-height, 4px) * -2.5))}}@keyframes mdc-linear-progress-primary-indeterminate-translate{0%{transform:translateX(0)}20%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(0)}59.15%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(83.67142%)}100%{transform:translateX(200.611057%)}}@keyframes mdc-linear-progress-primary-indeterminate-scale{0%{transform:scaleX(0.08)}36.65%{animation-timing-function:cubic-bezier(0.334731, 0.12482, 0.785844, 1);transform:scaleX(0.08)}69.15%{animation-timing-function:cubic-bezier(0.06, 0.11, 0.6, 1);transform:scaleX(0.661479)}100%{transform:scaleX(0.08)}}@keyframes mdc-linear-progress-secondary-indeterminate-translate{0%{animation-timing-function:cubic-bezier(0.15, 0, 0.515058, 0.409685);transform:translateX(0)}25%{animation-timing-function:cubic-bezier(0.31033, 0.284058, 0.8, 0.733712);transform:translateX(37.651913%)}48.35%{animation-timing-function:cubic-bezier(0.4, 0.627035, 0.6, 0.902026);transform:translateX(84.386165%)}100%{transform:translateX(160.277782%)}}@keyframes mdc-linear-progress-secondary-indeterminate-scale{0%{animation-timing-function:cubic-bezier(0.205028, 0.057051, 0.57661, 0.453971);transform:scaleX(0.08)}19.15%{animation-timing-function:cubic-bezier(0.152313, 0.196432, 0.648374, 1.004315);transform:scaleX(0.457104)}44.15%{animation-timing-function:cubic-bezier(0.257759, -0.003163, 0.211762, 1.38179);transform:scaleX(0.72796)}100%{transform:scaleX(0.08)}}@keyframes mdc-linear-progress-primary-indeterminate-translate-reverse{0%{transform:translateX(0)}20%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(0)}59.15%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(-83.67142%)}100%{transform:translateX(-200.611057%)}}@keyframes mdc-linear-progress-secondary-indeterminate-translate-reverse{0%{animation-timing-function:cubic-bezier(0.15, 0, 0.515058, 0.409685);transform:translateX(0)}25%{animation-timing-function:cubic-bezier(0.31033, 0.284058, 0.8, 0.733712);transform:translateX(-37.651913%)}48.35%{animation-timing-function:cubic-bezier(0.4, 0.627035, 0.6, 0.902026);transform:translateX(-84.386165%)}100%{transform:translateX(-160.277782%)}}@keyframes mdc-linear-progress-buffering-reverse{from{transform:translateX(-10px)}}\\n\"] }]\n        }], ctorParameters: () => [], propDecorators: { color: [{\n                type: Input\n            }], value: [{\n                type: Input,\n                args: [{ transform: numberAttribute }]\n            }], bufferValue: [{\n                type: Input,\n                args: [{ transform: numberAttribute }]\n            }], animationEnd: [{\n                type: Output\n            }], mode: [{\n                type: Input\n            }] } });\n/** Clamps a value to be between two numbers, by default 0 and 100. */\nfunction clamp(v, min = 0, max = 100) {\n    return Math.max(min, Math.min(max, v));\n}\n\nclass MatProgressBarModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatProgressBarModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.0\", ngImport: i0, type: MatProgressBarModule, imports: [MatProgressBar], exports: [MatProgressBar, MatCommonModule] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatProgressBarModule, imports: [MatCommonModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatProgressBarModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatProgressBar],\n                    exports: [MatProgressBar, MatCommonModule],\n                }]\n        }] });\n\nexport { MAT_PROGRESS_BAR_DEFAULT_OPTIONS, MAT_PROGRESS_BAR_LOCATION, MAT_PROGRESS_BAR_LOCATION_FACTORY, MatProgressBar, MatProgressBarModule };\n\n","/**\n * @license Angular v20.1.7\n * (c) 2010-2025 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { HttpHeaders, HttpParams, HttpRequest, HttpEventType, HttpErrorResponse, HttpClient, HTTP_ROOT_INTERCEPTOR_FNS, HttpResponse } from './module.mjs';\nexport { FetchBackend, HTTP_INTERCEPTORS, HttpBackend, HttpClientJsonpModule, HttpClientModule, HttpClientXsrfModule, HttpContext, HttpContextToken, HttpFeatureKind, HttpHandler, HttpHeaderResponse, HttpResponseBase, HttpStatusCode, HttpUrlEncodingCodec, HttpXhrBackend, HttpXsrfTokenExtractor, JsonpClientBackend, JsonpInterceptor, provideHttpClient, withFetch, withInterceptors, withInterceptorsFromDi, withJsonpSupport, withNoXsrfProtection, withRequestsMadeViaParent, withXsrfConfiguration, HttpInterceptorHandler as ɵHttpInterceptingHandler, HttpInterceptorHandler as ɵHttpInterceptorHandler, REQUESTS_CONTRIBUTE_TO_STABILITY as ɵREQUESTS_CONTRIBUTE_TO_STABILITY } from './module.mjs';\nimport { assertInInjectionContext, inject, Injector, ɵResourceImpl as _ResourceImpl, linkedSignal, computed, signal, ɵencapsulateResourceError as _encapsulateResourceError, ɵRuntimeError as _RuntimeError, InjectionToken, ɵperformanceMarkFeature as _performanceMarkFeature, APP_BOOTSTRAP_LISTENER, ApplicationRef, TransferState, makeStateKey, ɵtruncateMiddle as _truncateMiddle, ɵformatRuntimeError as _formatRuntimeError } from '@angular/core';\nimport { of } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport './xhr.mjs';\n\n/**\n * `httpResource` makes a reactive HTTP request and exposes the request status and response value as\n * a `WritableResource`. By default, it assumes that the backend will return JSON data. To make a\n * request that expects a different kind of data, you can use a sub-constructor of `httpResource`,\n * such as `httpResource.text`.\n *\n * @experimental 19.2\n * @initializerApiFunction\n */\nconst httpResource = (() => {\n    const jsonFn = makeHttpResourceFn('json');\n    jsonFn.arrayBuffer = makeHttpResourceFn('arraybuffer');\n    jsonFn.blob = makeHttpResourceFn('blob');\n    jsonFn.text = makeHttpResourceFn('text');\n    return jsonFn;\n})();\nfunction makeHttpResourceFn(responseType) {\n    return function httpResource(request, options) {\n        if (ngDevMode && !options?.injector) {\n            assertInInjectionContext(httpResource);\n        }\n        const injector = options?.injector ?? inject(Injector);\n        return new HttpResourceImpl(injector, () => normalizeRequest(request, responseType), options?.defaultValue, options?.parse, options?.equal);\n    };\n}\nfunction normalizeRequest(request, responseType) {\n    let unwrappedRequest = typeof request === 'function' ? request() : request;\n    if (unwrappedRequest === undefined) {\n        return undefined;\n    }\n    else if (typeof unwrappedRequest === 'string') {\n        unwrappedRequest = { url: unwrappedRequest };\n    }\n    const headers = unwrappedRequest.headers instanceof HttpHeaders\n        ? unwrappedRequest.headers\n        : new HttpHeaders(unwrappedRequest.headers);\n    const params = unwrappedRequest.params instanceof HttpParams\n        ? unwrappedRequest.params\n        : new HttpParams({ fromObject: unwrappedRequest.params });\n    return new HttpRequest(unwrappedRequest.method ?? 'GET', unwrappedRequest.url, unwrappedRequest.body ?? null, {\n        headers,\n        params,\n        reportProgress: unwrappedRequest.reportProgress,\n        withCredentials: unwrappedRequest.withCredentials,\n        keepalive: unwrappedRequest.keepalive,\n        cache: unwrappedRequest.cache,\n        priority: unwrappedRequest.priority,\n        mode: unwrappedRequest.mode,\n        redirect: unwrappedRequest.redirect,\n        responseType,\n        context: unwrappedRequest.context,\n        transferCache: unwrappedRequest.transferCache,\n        credentials: unwrappedRequest.credentials,\n        timeout: unwrappedRequest.timeout,\n    });\n}\nclass HttpResourceImpl extends _ResourceImpl {\n    client;\n    _headers = linkedSignal({\n        source: this.extRequest,\n        computation: () => undefined,\n    });\n    _progress = linkedSignal({\n        source: this.extRequest,\n        computation: () => undefined,\n    });\n    _statusCode = linkedSignal({\n        source: this.extRequest,\n        computation: () => undefined,\n    });\n    headers = computed(() => this.status() === 'resolved' || this.status() === 'error' ? this._headers() : undefined, ...(ngDevMode ? [{ debugName: \"headers\" }] : []));\n    progress = this._progress.asReadonly();\n    statusCode = this._statusCode.asReadonly();\n    constructor(injector, request, defaultValue, parse, equal) {\n        super(request, ({ params: request, abortSignal }) => {\n            let sub;\n            // Track the abort listener so it can be removed if the Observable completes (as a memory\n            // optimization).\n            const onAbort = () => sub.unsubscribe();\n            abortSignal.addEventListener('abort', onAbort);\n            // Start off stream as undefined.\n            const stream = signal({ value: undefined }, ...(ngDevMode ? [{ debugName: \"stream\" }] : []));\n            let resolve;\n            const promise = new Promise((r) => (resolve = r));\n            const send = (value) => {\n                stream.set(value);\n                resolve?.(stream);\n                resolve = undefined;\n            };\n            sub = this.client.request(request).subscribe({\n                next: (event) => {\n                    switch (event.type) {\n                        case HttpEventType.Response:\n                            this._headers.set(event.headers);\n                            this._statusCode.set(event.status);\n                            try {\n                                send({ value: parse ? parse(event.body) : event.body });\n                            }\n                            catch (error) {\n                                send({ error: _encapsulateResourceError(error) });\n                            }\n                            break;\n                        case HttpEventType.DownloadProgress:\n                            this._progress.set(event);\n                            break;\n                    }\n                },\n                error: (error) => {\n                    if (error instanceof HttpErrorResponse) {\n                        this._headers.set(error.headers);\n                        this._statusCode.set(error.status);\n                    }\n                    send({ error });\n                    abortSignal.removeEventListener('abort', onAbort);\n                },\n                complete: () => {\n                    if (resolve) {\n                        send({\n                            error: new _RuntimeError(991 /* ɵRuntimeErrorCode.RESOURCE_COMPLETED_BEFORE_PRODUCING_VALUE */, ngDevMode && 'Resource completed before producing a value'),\n                        });\n                    }\n                    abortSignal.removeEventListener('abort', onAbort);\n                },\n            });\n            return promise;\n        }, defaultValue, equal, injector);\n        this.client = injector.get(HttpClient);\n    }\n    set(value) {\n        super.set(value);\n        this._headers.set(undefined);\n        this._progress.set(undefined);\n        this._statusCode.set(undefined);\n    }\n}\n\n/**\n * If your application uses different HTTP origins to make API calls (via `HttpClient`) on the server and\n * on the client, the `HTTP_TRANSFER_CACHE_ORIGIN_MAP` token allows you to establish a mapping\n * between those origins, so that `HttpTransferCache` feature can recognize those requests as the same\n * ones and reuse the data cached on the server during hydration on the client.\n *\n * **Important note**: the `HTTP_TRANSFER_CACHE_ORIGIN_MAP` token should *only* be provided in\n * the *server* code of your application (typically in the `app.server.config.ts` script). Angular throws an\n * error if it detects that the token is defined while running on the client.\n *\n * @usageNotes\n *\n * When the same API endpoint is accessed via `http://internal-domain.com:8080` on the server and\n * via `https://external-domain.com` on the client, you can use the following configuration:\n * ```ts\n * // in app.server.config.ts\n * {\n *     provide: HTTP_TRANSFER_CACHE_ORIGIN_MAP,\n *     useValue: {\n *         'http://internal-domain.com:8080': 'https://external-domain.com'\n *     }\n * }\n * ```\n *\n * @publicApi\n */\nconst HTTP_TRANSFER_CACHE_ORIGIN_MAP = new InjectionToken(ngDevMode ? 'HTTP_TRANSFER_CACHE_ORIGIN_MAP' : '');\n/**\n * Keys within cached response data structure.\n */\nconst BODY = 'b';\nconst HEADERS = 'h';\nconst STATUS = 's';\nconst STATUS_TEXT = 'st';\nconst REQ_URL = 'u';\nconst RESPONSE_TYPE = 'rt';\nconst CACHE_OPTIONS = new InjectionToken(ngDevMode ? 'HTTP_TRANSFER_STATE_CACHE_OPTIONS' : '');\n/**\n * A list of allowed HTTP methods to cache.\n */\nconst ALLOWED_METHODS = ['GET', 'HEAD'];\nfunction transferCacheInterceptorFn(req, next) {\n    const { isCacheActive, ...globalOptions } = inject(CACHE_OPTIONS);\n    const { transferCache: requestOptions, method: requestMethod } = req;\n    // In the following situations we do not want to cache the request\n    if (!isCacheActive ||\n        requestOptions === false ||\n        // POST requests are allowed either globally or at request level\n        (requestMethod === 'POST' && !globalOptions.includePostRequests && !requestOptions) ||\n        (requestMethod !== 'POST' && !ALLOWED_METHODS.includes(requestMethod)) ||\n        // Do not cache request that require authorization when includeRequestsWithAuthHeaders is falsey\n        (!globalOptions.includeRequestsWithAuthHeaders && hasAuthHeaders(req)) ||\n        globalOptions.filter?.(req) === false) {\n        return next(req);\n    }\n    const transferState = inject(TransferState);\n    const originMap = inject(HTTP_TRANSFER_CACHE_ORIGIN_MAP, {\n        optional: true,\n    });\n    if (typeof ngServerMode !== 'undefined' && !ngServerMode && originMap) {\n        throw new _RuntimeError(2803 /* RuntimeErrorCode.HTTP_ORIGIN_MAP_USED_IN_CLIENT */, ngDevMode &&\n            'Angular detected that the `HTTP_TRANSFER_CACHE_ORIGIN_MAP` token is configured and ' +\n                'present in the client side code. Please ensure that this token is only provided in the ' +\n                'server code of the application.');\n    }\n    const requestUrl = typeof ngServerMode !== 'undefined' && ngServerMode && originMap\n        ? mapRequestOriginUrl(req.url, originMap)\n        : req.url;\n    const storeKey = makeCacheKey(req, requestUrl);\n    const response = transferState.get(storeKey, null);\n    let headersToInclude = globalOptions.includeHeaders;\n    if (typeof requestOptions === 'object' && requestOptions.includeHeaders) {\n        // Request-specific config takes precedence over the global config.\n        headersToInclude = requestOptions.includeHeaders;\n    }\n    if (response) {\n        const { [BODY]: undecodedBody, [RESPONSE_TYPE]: responseType, [HEADERS]: httpHeaders, [STATUS]: status, [STATUS_TEXT]: statusText, [REQ_URL]: url, } = response;\n        // Request found in cache. Respond using it.\n        let body = undecodedBody;\n        switch (responseType) {\n            case 'arraybuffer':\n                body = new TextEncoder().encode(undecodedBody).buffer;\n                break;\n            case 'blob':\n                body = new Blob([undecodedBody]);\n                break;\n        }\n        // We want to warn users accessing a header provided from the cache\n        // That HttpTransferCache alters the headers\n        // The warning will be logged a single time by HttpHeaders instance\n        let headers = new HttpHeaders(httpHeaders);\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            // Append extra logic in dev mode to produce a warning when a header\n            // that was not transferred to the client is accessed in the code via `get`\n            // and `has` calls.\n            headers = appendMissingHeadersDetection(req.url, headers, headersToInclude ?? []);\n        }\n        return of(new HttpResponse({\n            body,\n            headers,\n            status,\n            statusText,\n            url,\n        }));\n    }\n    const event$ = next(req);\n    if (typeof ngServerMode !== 'undefined' && ngServerMode) {\n        // Request not found in cache. Make the request and cache it if on the server.\n        return event$.pipe(tap((event) => {\n            // Only cache successful HTTP responses.\n            if (event instanceof HttpResponse) {\n                transferState.set(storeKey, {\n                    [BODY]: event.body,\n                    [HEADERS]: getFilteredHeaders(event.headers, headersToInclude),\n                    [STATUS]: event.status,\n                    [STATUS_TEXT]: event.statusText,\n                    [REQ_URL]: requestUrl,\n                    [RESPONSE_TYPE]: req.responseType,\n                });\n            }\n        }));\n    }\n    return event$;\n}\n/** @returns true when the requests contains autorization related headers. */\nfunction hasAuthHeaders(req) {\n    return req.headers.has('authorization') || req.headers.has('proxy-authorization');\n}\nfunction getFilteredHeaders(headers, includeHeaders) {\n    if (!includeHeaders) {\n        return {};\n    }\n    const headersMap = {};\n    for (const key of includeHeaders) {\n        const values = headers.getAll(key);\n        if (values !== null) {\n            headersMap[key] = values;\n        }\n    }\n    return headersMap;\n}\nfunction sortAndConcatParams(params) {\n    return [...params.keys()]\n        .sort()\n        .map((k) => `${k}=${params.getAll(k)}`)\n        .join('&');\n}\nfunction makeCacheKey(request, mappedRequestUrl) {\n    // make the params encoded same as a url so it's easy to identify\n    const { params, method, responseType } = request;\n    const encodedParams = sortAndConcatParams(params);\n    let serializedBody = request.serializeBody();\n    if (serializedBody instanceof URLSearchParams) {\n        serializedBody = sortAndConcatParams(serializedBody);\n    }\n    else if (typeof serializedBody !== 'string') {\n        serializedBody = '';\n    }\n    const key = [method, responseType, mappedRequestUrl, serializedBody, encodedParams].join('|');\n    const hash = generateHash(key);\n    return makeStateKey(hash);\n}\n/**\n * A method that returns a hash representation of a string using a variant of DJB2 hash\n * algorithm.\n *\n * This is the same hashing logic that is used to generate component ids.\n */\nfunction generateHash(value) {\n    let hash = 0;\n    for (const char of value) {\n        hash = (Math.imul(31, hash) + char.charCodeAt(0)) << 0;\n    }\n    // Force positive number hash.\n    // 2147483647 = equivalent of Integer.MAX_VALUE.\n    hash += 2147483647 + 1;\n    return hash.toString();\n}\n/**\n * Returns the DI providers needed to enable HTTP transfer cache.\n *\n * By default, when using server rendering, requests are performed twice: once on the server and\n * other one on the browser.\n *\n * When these providers are added, requests performed on the server are cached and reused during the\n * bootstrapping of the application in the browser thus avoiding duplicate requests and reducing\n * load time.\n *\n */\nfunction withHttpTransferCache(cacheOptions) {\n    return [\n        {\n            provide: CACHE_OPTIONS,\n            useFactory: () => {\n                _performanceMarkFeature('NgHttpTransferCache');\n                return { isCacheActive: true, ...cacheOptions };\n            },\n        },\n        {\n            provide: HTTP_ROOT_INTERCEPTOR_FNS,\n            useValue: transferCacheInterceptorFn,\n            multi: true,\n        },\n        {\n            provide: APP_BOOTSTRAP_LISTENER,\n            multi: true,\n            useFactory: () => {\n                const appRef = inject(ApplicationRef);\n                const cacheState = inject(CACHE_OPTIONS);\n                return () => {\n                    appRef.whenStable().then(() => {\n                        cacheState.isCacheActive = false;\n                    });\n                };\n            },\n        },\n    ];\n}\n/**\n * This function will add a proxy to an HttpHeader to intercept calls to get/has\n * and log a warning if the header entry requested has been removed\n */\nfunction appendMissingHeadersDetection(url, headers, headersToInclude) {\n    const warningProduced = new Set();\n    return new Proxy(headers, {\n        get(target, prop) {\n            const value = Reflect.get(target, prop);\n            const methods = new Set(['get', 'has', 'getAll']);\n            if (typeof value !== 'function' || !methods.has(prop)) {\n                return value;\n            }\n            return (headerName) => {\n                // We log when the key has been removed and a warning hasn't been produced for the header\n                const key = (prop + ':' + headerName).toLowerCase(); // e.g. `get:cache-control`\n                if (!headersToInclude.includes(headerName) && !warningProduced.has(key)) {\n                    warningProduced.add(key);\n                    const truncatedUrl = _truncateMiddle(url);\n                    // TODO: create Error guide for this warning\n                    console.warn(_formatRuntimeError(2802 /* RuntimeErrorCode.HEADERS_ALTERED_BY_TRANSFER_CACHE */, `Angular detected that the \\`${headerName}\\` header is accessed, but the value of the header ` +\n                        `was not transferred from the server to the client by the HttpTransferCache. ` +\n                        `To include the value of the \\`${headerName}\\` header for the \\`${truncatedUrl}\\` request, ` +\n                        `use the \\`includeHeaders\\` list. The \\`includeHeaders\\` can be defined either ` +\n                        `on a request level by adding the \\`transferCache\\` parameter, or on an application ` +\n                        `level by adding the \\`httpCacheTransfer.includeHeaders\\` argument to the ` +\n                        `\\`provideClientHydration()\\` call. `));\n                }\n                // invoking the original method\n                return value.apply(target, [headerName]);\n            };\n        },\n    });\n}\nfunction mapRequestOriginUrl(url, originMap) {\n    const origin = new URL(url, 'resolve://').origin;\n    const mappedOrigin = originMap[origin];\n    if (!mappedOrigin) {\n        return url;\n    }\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        verifyMappedOrigin(mappedOrigin);\n    }\n    return url.replace(origin, mappedOrigin);\n}\nfunction verifyMappedOrigin(url) {\n    if (new URL(url, 'resolve://').pathname !== '/') {\n        throw new _RuntimeError(2804 /* RuntimeErrorCode.HTTP_ORIGIN_MAP_CONTAINS_PATH */, 'Angular detected a URL with a path segment in the value provided for the ' +\n            `\\`HTTP_TRANSFER_CACHE_ORIGIN_MAP\\` token: ${url}. The map should only contain origins ` +\n            'without any other segments.');\n    }\n}\n\nexport { HTTP_TRANSFER_CACHE_ORIGIN_MAP, HttpClient, HttpErrorResponse, HttpEventType, HttpHeaders, HttpParams, HttpRequest, HttpResponse, httpResource, HTTP_ROOT_INTERCEPTOR_FNS as ɵHTTP_ROOT_INTERCEPTOR_FNS, withHttpTransferCache as ɵwithHttpTransferCache };\n\n","/**\n * @license Angular v20.1.7\n * (c) 2010-2025 Google LLC. https://angular.io/\n * License: MIT\n */\n\nexport { BrowserModule, bootstrapApplication, createApplication, platformBrowser, provideProtractorTestingSupport, BrowserDomAdapter as ɵBrowserDomAdapter, BrowserGetTestability as ɵBrowserGetTestability, DomEventsPlugin as ɵDomEventsPlugin, KeyEventsPlugin as ɵKeyEventsPlugin } from './browser.mjs';\nimport { ɵgetDOM as _getDOM, DOCUMENT } from '@angular/common';\nexport { ɵgetDOM } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, Inject, ɵglobal as _global, ApplicationRef, InjectionToken, ɵConsole as _Console, Optional, Injector, NgModule, forwardRef, ɵRuntimeError as _RuntimeError, ɵXSS_SECURITY_URL as _XSS_SECURITY_URL, SecurityContext, ɵallowSanitizationBypassAndThrow as _allowSanitizationBypassAndThrow, ɵunwrapSafeValue as _unwrapSafeValue, ɵ_sanitizeUrl as __sanitizeUrl, ɵ_sanitizeHtml as __sanitizeHtml, ɵbypassSanitizationTrustHtml as _bypassSanitizationTrustHtml, ɵbypassSanitizationTrustStyle as _bypassSanitizationTrustStyle, ɵbypassSanitizationTrustScript as _bypassSanitizationTrustScript, ɵbypassSanitizationTrustUrl as _bypassSanitizationTrustUrl, ɵbypassSanitizationTrustResourceUrl as _bypassSanitizationTrustResourceUrl, ɵwithI18nSupport as _withI18nSupport, ɵwithEventReplay as _withEventReplay, ɵwithIncrementalHydration as _withIncrementalHydration, makeEnvironmentProviders, ɵwithDomHydration as _withDomHydration, ENVIRONMENT_INITIALIZER, inject, NgZone, ɵZONELESS_ENABLED as _ZONELESS_ENABLED, ɵformatRuntimeError as _formatRuntimeError, Version } from '@angular/core';\nimport { EventManagerPlugin, EVENT_MANAGER_PLUGINS } from './dom_renderer.mjs';\nexport { EventManager, REMOVE_STYLES_ON_COMPONENT_DESTROY, DomRendererFactory2 as ɵDomRendererFactory2, SharedStylesHost as ɵSharedStylesHost } from './dom_renderer.mjs';\nimport { ɵwithHttpTransferCache as _withHttpTransferCache } from '@angular/common/http';\n\n/**\n * A service for managing HTML `<meta>` tags.\n *\n * Properties of the `MetaDefinition` object match the attributes of the\n * HTML `<meta>` tag. These tags define document metadata that is important for\n * things like configuring a Content Security Policy, defining browser compatibility\n * and security settings, setting HTTP Headers, defining rich content for social sharing,\n * and Search Engine Optimization (SEO).\n *\n * To identify specific `<meta>` tags in a document, use an attribute selection\n * string in the format `\"tag_attribute='value string'\"`.\n * For example, an `attrSelector` value of `\"name='description'\"` matches a tag\n * whose `name` attribute has the value `\"description\"`.\n * Selectors are used with the `querySelector()` Document method,\n * in the format `meta[{attrSelector}]`.\n *\n * @see [HTML meta tag](https://developer.mozilla.org/docs/Web/HTML/Element/meta)\n * @see [Document.querySelector()](https://developer.mozilla.org/docs/Web/API/Document/querySelector)\n *\n *\n * @publicApi\n */\nclass Meta {\n    _doc;\n    _dom;\n    constructor(_doc) {\n        this._doc = _doc;\n        this._dom = _getDOM();\n    }\n    /**\n     * Retrieves or creates a specific `<meta>` tag element in the current HTML document.\n     * In searching for an existing tag, Angular attempts to match the `name` or `property` attribute\n     * values in the provided tag definition, and verifies that all other attribute values are equal.\n     * If an existing element is found, it is returned and is not modified in any way.\n     * @param tag The definition of a `<meta>` element to match or create.\n     * @param forceCreation True to create a new element without checking whether one already exists.\n     * @returns The existing element with the same attributes and values if found,\n     * the new element if no match is found, or `null` if the tag parameter is not defined.\n     */\n    addTag(tag, forceCreation = false) {\n        if (!tag)\n            return null;\n        return this._getOrCreateElement(tag, forceCreation);\n    }\n    /**\n     * Retrieves or creates a set of `<meta>` tag elements in the current HTML document.\n     * In searching for an existing tag, Angular attempts to match the `name` or `property` attribute\n     * values in the provided tag definition, and verifies that all other attribute values are equal.\n     * @param tags An array of tag definitions to match or create.\n     * @param forceCreation True to create new elements without checking whether they already exist.\n     * @returns The matching elements if found, or the new elements.\n     */\n    addTags(tags, forceCreation = false) {\n        if (!tags)\n            return [];\n        return tags.reduce((result, tag) => {\n            if (tag) {\n                result.push(this._getOrCreateElement(tag, forceCreation));\n            }\n            return result;\n        }, []);\n    }\n    /**\n     * Retrieves a `<meta>` tag element in the current HTML document.\n     * @param attrSelector The tag attribute and value to match against, in the format\n     * `\"tag_attribute='value string'\"`.\n     * @returns The matching element, if any.\n     */\n    getTag(attrSelector) {\n        if (!attrSelector)\n            return null;\n        return this._doc.querySelector(`meta[${attrSelector}]`) || null;\n    }\n    /**\n     * Retrieves a set of `<meta>` tag elements in the current HTML document.\n     * @param attrSelector The tag attribute and value to match against, in the format\n     * `\"tag_attribute='value string'\"`.\n     * @returns The matching elements, if any.\n     */\n    getTags(attrSelector) {\n        if (!attrSelector)\n            return [];\n        const list /*NodeList*/ = this._doc.querySelectorAll(`meta[${attrSelector}]`);\n        return list ? [].slice.call(list) : [];\n    }\n    /**\n     * Modifies an existing `<meta>` tag element in the current HTML document.\n     * @param tag The tag description with which to replace the existing tag content.\n     * @param selector A tag attribute and value to match against, to identify\n     * an existing tag. A string in the format `\"tag_attribute=`value string`\"`.\n     * If not supplied, matches a tag with the same `name` or `property` attribute value as the\n     * replacement tag.\n     * @return The modified element.\n     */\n    updateTag(tag, selector) {\n        if (!tag)\n            return null;\n        selector = selector || this._parseSelector(tag);\n        const meta = this.getTag(selector);\n        if (meta) {\n            return this._setMetaElementAttributes(tag, meta);\n        }\n        return this._getOrCreateElement(tag, true);\n    }\n    /**\n     * Removes an existing `<meta>` tag element from the current HTML document.\n     * @param attrSelector A tag attribute and value to match against, to identify\n     * an existing tag. A string in the format `\"tag_attribute=`value string`\"`.\n     */\n    removeTag(attrSelector) {\n        this.removeTagElement(this.getTag(attrSelector));\n    }\n    /**\n     * Removes an existing `<meta>` tag element from the current HTML document.\n     * @param meta The tag definition to match against to identify an existing tag.\n     */\n    removeTagElement(meta) {\n        if (meta) {\n            this._dom.remove(meta);\n        }\n    }\n    _getOrCreateElement(meta, forceCreation = false) {\n        if (!forceCreation) {\n            const selector = this._parseSelector(meta);\n            // It's allowed to have multiple elements with the same name so it's not enough to\n            // just check that element with the same name already present on the page. We also need to\n            // check if element has tag attributes\n            const elem = this.getTags(selector).filter((elem) => this._containsAttributes(meta, elem))[0];\n            if (elem !== undefined)\n                return elem;\n        }\n        const element = this._dom.createElement('meta');\n        this._setMetaElementAttributes(meta, element);\n        const head = this._doc.getElementsByTagName('head')[0];\n        head.appendChild(element);\n        return element;\n    }\n    _setMetaElementAttributes(tag, el) {\n        Object.keys(tag).forEach((prop) => el.setAttribute(this._getMetaKeyMap(prop), tag[prop]));\n        return el;\n    }\n    _parseSelector(tag) {\n        const attr = tag.name ? 'name' : 'property';\n        return `${attr}=\"${tag[attr]}\"`;\n    }\n    _containsAttributes(tag, elem) {\n        return Object.keys(tag).every((key) => elem.getAttribute(this._getMetaKeyMap(key)) === tag[key]);\n    }\n    _getMetaKeyMap(prop) {\n        return META_KEYS_MAP[prop] || prop;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: Meta, deps: [{ token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: Meta, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: Meta, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }] });\n/**\n * Mapping for MetaDefinition properties with their correct meta attribute names\n */\nconst META_KEYS_MAP = {\n    httpEquiv: 'http-equiv',\n};\n\n/**\n * A service that can be used to get and set the title of a current HTML document.\n *\n * Since an Angular application can't be bootstrapped on the entire HTML document (`<html>` tag)\n * it is not possible to bind to the `text` property of the `HTMLTitleElement` elements\n * (representing the `<title>` tag). Instead, this service can be used to set and get the current\n * title value.\n *\n * @publicApi\n */\nclass Title {\n    _doc;\n    constructor(_doc) {\n        this._doc = _doc;\n    }\n    /**\n     * Get the title of the current HTML document.\n     */\n    getTitle() {\n        return this._doc.title;\n    }\n    /**\n     * Set the title of the current HTML document.\n     * @param newTitle\n     */\n    setTitle(newTitle) {\n        this._doc.title = newTitle || '';\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: Title, deps: [{ token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: Title, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: Title, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }] });\n\n/// <reference path=\"../../../goog.d.ts\" />\n/**\n * Exports the value under a given `name` in the global property `ng`. For example `ng.probe` if\n * `name` is `'probe'`.\n * @param name Name under which it will be exported. Keep in mind this will be a property of the\n * global `ng` object.\n * @param value The value to export.\n */\nfunction exportNgVar(name, value) {\n    if (typeof COMPILED === 'undefined' || !COMPILED) {\n        // Note: we can't export `ng` when using closure enhanced optimization as:\n        // - closure declares globals itself for minified names, which sometimes clobber our `ng` global\n        // - we can't declare a closure extern as the namespace `ng` is already used within Google\n        //   for typings for angularJS (via `goog.provide('ng....')`).\n        const ng = (_global['ng'] = _global['ng'] || {});\n        ng[name] = value;\n    }\n}\n\nclass ChangeDetectionPerfRecord {\n    msPerTick;\n    numTicks;\n    constructor(msPerTick, numTicks) {\n        this.msPerTick = msPerTick;\n        this.numTicks = numTicks;\n    }\n}\n/**\n * Entry point for all Angular profiling-related debug tools. This object\n * corresponds to the `ng.profiler` in the dev console.\n */\nclass AngularProfiler {\n    appRef;\n    constructor(ref) {\n        this.appRef = ref.injector.get(ApplicationRef);\n    }\n    // tslint:disable:no-console\n    /**\n     * Exercises change detection in a loop and then prints the average amount of\n     * time in milliseconds how long a single round of change detection takes for\n     * the current state of the UI. It runs a minimum of 5 rounds for a minimum\n     * of 500 milliseconds.\n     *\n     * Optionally, a user may pass a `config` parameter containing a map of\n     * options. Supported options are:\n     *\n     * `record` (boolean) - causes the profiler to record a CPU profile while\n     * it exercises the change detector. Example:\n     *\n     * ```ts\n     * ng.profiler.timeChangeDetection({record: true})\n     * ```\n     */\n    timeChangeDetection(config) {\n        const record = config && config['record'];\n        const profileName = 'Change Detection';\n        // Profiler is not available in Android browsers without dev tools opened\n        if (record && 'profile' in console && typeof console.profile === 'function') {\n            console.profile(profileName);\n        }\n        const start = performance.now();\n        let numTicks = 0;\n        while (numTicks < 5 || performance.now() - start < 500) {\n            this.appRef.tick();\n            numTicks++;\n        }\n        const end = performance.now();\n        if (record && 'profileEnd' in console && typeof console.profileEnd === 'function') {\n            console.profileEnd(profileName);\n        }\n        const msPerTick = (end - start) / numTicks;\n        console.log(`ran ${numTicks} change detection cycles`);\n        console.log(`${msPerTick.toFixed(2)} ms per check`);\n        return new ChangeDetectionPerfRecord(msPerTick, numTicks);\n    }\n}\n\nconst PROFILER_GLOBAL_NAME = 'profiler';\n/**\n * Enabled Angular debug tools that are accessible via your browser's\n * developer console.\n *\n * Usage:\n *\n * 1. Open developer console (e.g. in Chrome Ctrl + Shift + j)\n * 1. Type `ng.` (usually the console will show auto-complete suggestion)\n * 1. Try the change detection profiler `ng.profiler.timeChangeDetection()`\n *    then hit Enter.\n *\n * @publicApi\n */\nfunction enableDebugTools(ref) {\n    exportNgVar(PROFILER_GLOBAL_NAME, new AngularProfiler(ref));\n    return ref;\n}\n/**\n * Disables Angular tools.\n *\n * @publicApi\n */\nfunction disableDebugTools() {\n    exportNgVar(PROFILER_GLOBAL_NAME, null);\n}\n\n/**\n * Predicates for use with {@link DebugElement}'s query functions.\n *\n * @publicApi\n */\nclass By {\n    /**\n     * Match all nodes.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example platform-browser/dom/debug/ts/by/by.ts region='by_all'}\n     */\n    static all() {\n        return () => true;\n    }\n    /**\n     * Match elements by the given CSS selector.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example platform-browser/dom/debug/ts/by/by.ts region='by_css'}\n     */\n    static css(selector) {\n        return (debugElement) => {\n            return debugElement.nativeElement != null\n                ? elementMatches(debugElement.nativeElement, selector)\n                : false;\n        };\n    }\n    /**\n     * Match nodes that have the given directive present.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example platform-browser/dom/debug/ts/by/by.ts region='by_directive'}\n     */\n    static directive(type) {\n        return (debugNode) => debugNode.providerTokens.indexOf(type) !== -1;\n    }\n}\nfunction elementMatches(n, selector) {\n    if (_getDOM().isElementNode(n)) {\n        return ((n.matches && n.matches(selector)) ||\n            (n.msMatchesSelector && n.msMatchesSelector(selector)) ||\n            (n.webkitMatchesSelector && n.webkitMatchesSelector(selector)));\n    }\n    return false;\n}\n\n/// <reference types=\"hammerjs\" />\n/**\n * Supported HammerJS recognizer event names.\n */\nconst EVENT_NAMES = {\n    // pan\n    'pan': true,\n    'panstart': true,\n    'panmove': true,\n    'panend': true,\n    'pancancel': true,\n    'panleft': true,\n    'panright': true,\n    'panup': true,\n    'pandown': true,\n    // pinch\n    'pinch': true,\n    'pinchstart': true,\n    'pinchmove': true,\n    'pinchend': true,\n    'pinchcancel': true,\n    'pinchin': true,\n    'pinchout': true,\n    // press\n    'press': true,\n    'pressup': true,\n    // rotate\n    'rotate': true,\n    'rotatestart': true,\n    'rotatemove': true,\n    'rotateend': true,\n    'rotatecancel': true,\n    // swipe\n    'swipe': true,\n    'swipeleft': true,\n    'swiperight': true,\n    'swipeup': true,\n    'swipedown': true,\n    // tap\n    'tap': true,\n    'doubletap': true,\n};\n/**\n * DI token for providing [HammerJS](https://hammerjs.github.io/) support to Angular.\n * @see {@link HammerGestureConfig}\n *\n * @ngModule HammerModule\n * @publicApi\n *\n * @deprecated The HammerJS integration is deprecated. Replace it by your own implementation.\n */\nconst HAMMER_GESTURE_CONFIG = new InjectionToken(typeof ngDevMode === 'undefined' || ngDevMode ? 'HammerGestureConfig' : '');\n/**\n * Injection token used to provide a HammerLoader to Angular.\n *\n * @see {@link HammerLoader}\n *\n * @publicApi\n *\n * @deprecated The HammerJS integration is deprecated. Replace it by your own implementation.\n */\nconst HAMMER_LOADER = new InjectionToken(typeof ngDevMode === 'undefined' || ngDevMode ? 'HammerLoader' : '');\n/**\n * An injectable [HammerJS Manager](https://hammerjs.github.io/api/#hammermanager)\n * for gesture recognition. Configures specific event recognition.\n * @publicApi\n *\n * @deprecated The HammerJS integration is deprecated. Replace it by your own implementation.\n */\nclass HammerGestureConfig {\n    /**\n     * A set of supported event names for gestures to be used in Angular.\n     * Angular supports all built-in recognizers, as listed in\n     * [HammerJS documentation](https://hammerjs.github.io/).\n     */\n    events = [];\n    /**\n     * Maps gesture event names to a set of configuration options\n     * that specify overrides to the default values for specific properties.\n     *\n     * The key is a supported event name to be configured,\n     * and the options object contains a set of properties, with override values\n     * to be applied to the named recognizer event.\n     * For example, to disable recognition of the rotate event, specify\n     *  `{\"rotate\": {\"enable\": false}}`.\n     *\n     * Properties that are not present take the HammerJS default values.\n     * For information about which properties are supported for which events,\n     * and their allowed and default values, see\n     * [HammerJS documentation](https://hammerjs.github.io/).\n     *\n     */\n    overrides = {};\n    /**\n     * Properties whose default values can be overridden for a given event.\n     * Different sets of properties apply to different events.\n     * For information about which properties are supported for which events,\n     * and their allowed and default values, see\n     * [HammerJS documentation](https://hammerjs.github.io/).\n     */\n    options;\n    /**\n     * Creates a [HammerJS Manager](https://hammerjs.github.io/api/#hammermanager)\n     * and attaches it to a given HTML element.\n     * @param element The element that will recognize gestures.\n     * @returns A HammerJS event-manager object.\n     */\n    buildHammer(element) {\n        const mc = new Hammer(element, this.options);\n        mc.get('pinch').set({ enable: true });\n        mc.get('rotate').set({ enable: true });\n        for (const eventName in this.overrides) {\n            mc.get(eventName).set(this.overrides[eventName]);\n        }\n        return mc;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: HammerGestureConfig, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: HammerGestureConfig });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: HammerGestureConfig, decorators: [{\n            type: Injectable\n        }] });\n/**\n * Event plugin that adds Hammer support to an application.\n *\n * @ngModule HammerModule\n */\nclass HammerGesturesPlugin extends EventManagerPlugin {\n    _config;\n    _injector;\n    loader;\n    _loaderPromise = null;\n    constructor(doc, _config, _injector, loader) {\n        super(doc);\n        this._config = _config;\n        this._injector = _injector;\n        this.loader = loader;\n    }\n    supports(eventName) {\n        if (!EVENT_NAMES.hasOwnProperty(eventName.toLowerCase()) && !this.isCustomEvent(eventName)) {\n            return false;\n        }\n        if (!window.Hammer && !this.loader) {\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                // Get a `Console` through an injector to tree-shake the\n                // class when it is unused in production.\n                const _console = this._injector.get(_Console);\n                _console.warn(`The \"${eventName}\" event cannot be bound because Hammer.JS is not ` +\n                    `loaded and no custom loader has been specified.`);\n            }\n            return false;\n        }\n        return true;\n    }\n    addEventListener(element, eventName, handler) {\n        const zone = this.manager.getZone();\n        eventName = eventName.toLowerCase();\n        // If Hammer is not present but a loader is specified, we defer adding the event listener\n        // until Hammer is loaded.\n        if (!window.Hammer && this.loader) {\n            this._loaderPromise = this._loaderPromise || zone.runOutsideAngular(() => this.loader());\n            // This `addEventListener` method returns a function to remove the added listener.\n            // Until Hammer is loaded, the returned function needs to *cancel* the registration rather\n            // than remove anything.\n            let cancelRegistration = false;\n            let deregister = () => {\n                cancelRegistration = true;\n            };\n            zone.runOutsideAngular(() => this._loaderPromise.then(() => {\n                // If Hammer isn't actually loaded when the custom loader resolves, give up.\n                if (!window.Hammer) {\n                    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                        const _console = this._injector.get(_Console);\n                        _console.warn(`The custom HAMMER_LOADER completed, but Hammer.JS is not present.`);\n                    }\n                    deregister = () => { };\n                    return;\n                }\n                if (!cancelRegistration) {\n                    // Now that Hammer is loaded and the listener is being loaded for real,\n                    // the deregistration function changes from canceling registration to\n                    // removal.\n                    deregister = this.addEventListener(element, eventName, handler);\n                }\n            }).catch(() => {\n                if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                    const _console = this._injector.get(_Console);\n                    _console.warn(`The \"${eventName}\" event cannot be bound because the custom ` +\n                        `Hammer.JS loader failed.`);\n                }\n                deregister = () => { };\n            }));\n            // Return a function that *executes* `deregister` (and not `deregister` itself) so that we\n            // can change the behavior of `deregister` once the listener is added. Using a closure in\n            // this way allows us to avoid any additional data structures to track listener removal.\n            return () => {\n                deregister();\n            };\n        }\n        return zone.runOutsideAngular(() => {\n            // Creating the manager bind events, must be done outside of angular\n            const mc = this._config.buildHammer(element);\n            const callback = function (eventObj) {\n                zone.runGuarded(function () {\n                    handler(eventObj);\n                });\n            };\n            mc.on(eventName, callback);\n            return () => {\n                mc.off(eventName, callback);\n                // destroy mc to prevent memory leak\n                if (typeof mc.destroy === 'function') {\n                    mc.destroy();\n                }\n            };\n        });\n    }\n    isCustomEvent(eventName) {\n        return this._config.events.indexOf(eventName) > -1;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: HammerGesturesPlugin, deps: [{ token: DOCUMENT }, { token: HAMMER_GESTURE_CONFIG }, { token: i0.Injector }, { token: HAMMER_LOADER, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: HammerGesturesPlugin });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: HammerGesturesPlugin, decorators: [{\n            type: Injectable\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: HammerGestureConfig, decorators: [{\n                    type: Inject,\n                    args: [HAMMER_GESTURE_CONFIG]\n                }] }, { type: i0.Injector }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [HAMMER_LOADER]\n                }] }] });\n/**\n * Adds support for HammerJS.\n *\n * Import this module at the root of your application so that Angular can work with\n * HammerJS to detect gesture events.\n *\n * Note that applications still need to include the HammerJS script itself. This module\n * simply sets up the coordination layer between HammerJS and Angular's `EventManager`.\n *\n * @publicApi\n *\n * @deprecated The hammer integration is deprecated. Replace it by your own implementation.\n */\nclass HammerModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: HammerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.1.7\", ngImport: i0, type: HammerModule });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: HammerModule, providers: [\n            {\n                provide: EVENT_MANAGER_PLUGINS,\n                useClass: HammerGesturesPlugin,\n                multi: true,\n                deps: [DOCUMENT, HAMMER_GESTURE_CONFIG, Injector, [new Optional(), HAMMER_LOADER]],\n            },\n            { provide: HAMMER_GESTURE_CONFIG, useClass: HammerGestureConfig },\n        ] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: HammerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    providers: [\n                        {\n                            provide: EVENT_MANAGER_PLUGINS,\n                            useClass: HammerGesturesPlugin,\n                            multi: true,\n                            deps: [DOCUMENT, HAMMER_GESTURE_CONFIG, Injector, [new Optional(), HAMMER_LOADER]],\n                        },\n                        { provide: HAMMER_GESTURE_CONFIG, useClass: HammerGestureConfig },\n                    ],\n                }]\n        }] });\n\n/**\n * DomSanitizer helps preventing Cross Site Scripting Security bugs (XSS) by sanitizing\n * values to be safe to use in the different DOM contexts.\n *\n * For example, when binding a URL in an `<a [href]=\"someValue\">` hyperlink, `someValue` will be\n * sanitized so that an attacker cannot inject e.g. a `javascript:` URL that would execute code on\n * the website.\n *\n * In specific situations, it might be necessary to disable sanitization, for example if the\n * application genuinely needs to produce a `javascript:` style link with a dynamic value in it.\n * Users can bypass security by constructing a value with one of the `bypassSecurityTrust...`\n * methods, and then binding to that value from the template.\n *\n * These situations should be very rare, and extraordinary care must be taken to avoid creating a\n * Cross Site Scripting (XSS) security bug!\n *\n * When using `bypassSecurityTrust...`, make sure to call the method as early as possible and as\n * close as possible to the source of the value, to make it easy to verify no security bug is\n * created by its use.\n *\n * It is not required (and not recommended) to bypass security if the value is safe, e.g. a URL that\n * does not start with a suspicious protocol, or an HTML snippet that does not contain dangerous\n * code. The sanitizer leaves safe values intact.\n *\n * @security Calling any of the `bypassSecurityTrust...` APIs disables Angular's built-in\n * sanitization for the value passed in. Carefully check and audit all values and code paths going\n * into this call. Make sure any user data is appropriately escaped for this security context.\n * For more detail, see the [Security Guide](https://g.co/ng/security).\n *\n * @publicApi\n */\nclass DomSanitizer {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: DomSanitizer, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: DomSanitizer, providedIn: 'root', useExisting: i0.forwardRef(() => DomSanitizerImpl) });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: DomSanitizer, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root', useExisting: forwardRef(() => DomSanitizerImpl) }]\n        }] });\nclass DomSanitizerImpl extends DomSanitizer {\n    _doc;\n    constructor(_doc) {\n        super();\n        this._doc = _doc;\n    }\n    sanitize(ctx, value) {\n        if (value == null)\n            return null;\n        switch (ctx) {\n            case SecurityContext.NONE:\n                return value;\n            case SecurityContext.HTML:\n                if (_allowSanitizationBypassAndThrow(value, \"HTML\" /* BypassType.Html */)) {\n                    return _unwrapSafeValue(value);\n                }\n                return __sanitizeHtml(this._doc, String(value)).toString();\n            case SecurityContext.STYLE:\n                if (_allowSanitizationBypassAndThrow(value, \"Style\" /* BypassType.Style */)) {\n                    return _unwrapSafeValue(value);\n                }\n                return value;\n            case SecurityContext.SCRIPT:\n                if (_allowSanitizationBypassAndThrow(value, \"Script\" /* BypassType.Script */)) {\n                    return _unwrapSafeValue(value);\n                }\n                throw new _RuntimeError(5200 /* RuntimeErrorCode.SANITIZATION_UNSAFE_SCRIPT */, (typeof ngDevMode === 'undefined' || ngDevMode) &&\n                    'unsafe value used in a script context');\n            case SecurityContext.URL:\n                if (_allowSanitizationBypassAndThrow(value, \"URL\" /* BypassType.Url */)) {\n                    return _unwrapSafeValue(value);\n                }\n                return __sanitizeUrl(String(value));\n            case SecurityContext.RESOURCE_URL:\n                if (_allowSanitizationBypassAndThrow(value, \"ResourceURL\" /* BypassType.ResourceUrl */)) {\n                    return _unwrapSafeValue(value);\n                }\n                throw new _RuntimeError(5201 /* RuntimeErrorCode.SANITIZATION_UNSAFE_RESOURCE_URL */, (typeof ngDevMode === 'undefined' || ngDevMode) &&\n                    `unsafe value used in a resource URL context (see ${_XSS_SECURITY_URL})`);\n            default:\n                throw new _RuntimeError(5202 /* RuntimeErrorCode.SANITIZATION_UNEXPECTED_CTX */, (typeof ngDevMode === 'undefined' || ngDevMode) &&\n                    `Unexpected SecurityContext ${ctx} (see ${_XSS_SECURITY_URL})`);\n        }\n    }\n    bypassSecurityTrustHtml(value) {\n        return _bypassSanitizationTrustHtml(value);\n    }\n    bypassSecurityTrustStyle(value) {\n        return _bypassSanitizationTrustStyle(value);\n    }\n    bypassSecurityTrustScript(value) {\n        return _bypassSanitizationTrustScript(value);\n    }\n    bypassSecurityTrustUrl(value) {\n        return _bypassSanitizationTrustUrl(value);\n    }\n    bypassSecurityTrustResourceUrl(value) {\n        return _bypassSanitizationTrustResourceUrl(value);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: DomSanitizerImpl, deps: [{ token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: DomSanitizerImpl, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.1.7\", ngImport: i0, type: DomSanitizerImpl, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }] });\n\n/**\n * The list of features as an enum to uniquely type each `HydrationFeature`.\n * @see {@link HydrationFeature}\n *\n * @publicApi\n */\nvar HydrationFeatureKind;\n(function (HydrationFeatureKind) {\n    HydrationFeatureKind[HydrationFeatureKind[\"NoHttpTransferCache\"] = 0] = \"NoHttpTransferCache\";\n    HydrationFeatureKind[HydrationFeatureKind[\"HttpTransferCacheOptions\"] = 1] = \"HttpTransferCacheOptions\";\n    HydrationFeatureKind[HydrationFeatureKind[\"I18nSupport\"] = 2] = \"I18nSupport\";\n    HydrationFeatureKind[HydrationFeatureKind[\"EventReplay\"] = 3] = \"EventReplay\";\n    HydrationFeatureKind[HydrationFeatureKind[\"IncrementalHydration\"] = 4] = \"IncrementalHydration\";\n})(HydrationFeatureKind || (HydrationFeatureKind = {}));\n/**\n * Helper function to create an object that represents a Hydration feature.\n */\nfunction hydrationFeature(ɵkind, ɵproviders = [], ɵoptions = {}) {\n    return { ɵkind, ɵproviders };\n}\n/**\n * Disables HTTP transfer cache. Effectively causes HTTP requests to be performed twice: once on the\n * server and other one on the browser.\n *\n * @publicApi\n */\nfunction withNoHttpTransferCache() {\n    // This feature has no providers and acts as a flag that turns off\n    // HTTP transfer cache (which otherwise is turned on by default).\n    return hydrationFeature(HydrationFeatureKind.NoHttpTransferCache);\n}\n/**\n * The function accepts an object, which allows to configure cache parameters,\n * such as which headers should be included (no headers are included by default),\n * whether POST requests should be cached or a callback function to determine if a\n * particular request should be cached.\n *\n * @publicApi\n */\nfunction withHttpTransferCacheOptions(options) {\n    // This feature has no providers and acts as a flag to pass options to the HTTP transfer cache.\n    return hydrationFeature(HydrationFeatureKind.HttpTransferCacheOptions, _withHttpTransferCache(options));\n}\n/**\n * Enables support for hydrating i18n blocks.\n *\n * @publicApi 20.0\n */\nfunction withI18nSupport() {\n    return hydrationFeature(HydrationFeatureKind.I18nSupport, _withI18nSupport());\n}\n/**\n * Enables support for replaying user events (e.g. `click`s) that happened on a page\n * before hydration logic has completed. Once an application is hydrated, all captured\n * events are replayed and relevant event listeners are executed.\n *\n * @usageNotes\n *\n * Basic example of how you can enable event replay in your application when\n * `bootstrapApplication` function is used:\n * ```ts\n * bootstrapApplication(AppComponent, {\n *   providers: [provideClientHydration(withEventReplay())]\n * });\n * ```\n * @publicApi\n * @see {@link provideClientHydration}\n */\nfunction withEventReplay() {\n    return hydrationFeature(HydrationFeatureKind.EventReplay, _withEventReplay());\n}\n/**\n * Enables support for incremental hydration using the `hydrate` trigger syntax.\n *\n * @usageNotes\n *\n * Basic example of how you can enable incremental hydration in your application when\n * the `bootstrapApplication` function is used:\n * ```ts\n * bootstrapApplication(AppComponent, {\n *   providers: [provideClientHydration(withIncrementalHydration())]\n * });\n * ```\n * @publicApi 20.0\n * @see {@link provideClientHydration}\n */\nfunction withIncrementalHydration() {\n    return hydrationFeature(HydrationFeatureKind.IncrementalHydration, _withIncrementalHydration());\n}\n/**\n * Returns an `ENVIRONMENT_INITIALIZER` token setup with a function\n * that verifies whether compatible ZoneJS was used in an application\n * and logs a warning in a console if it's not the case.\n */\nfunction provideZoneJsCompatibilityDetector() {\n    return [\n        {\n            provide: ENVIRONMENT_INITIALIZER,\n            useValue: () => {\n                const ngZone = inject(NgZone);\n                const isZoneless = inject(_ZONELESS_ENABLED);\n                // Checking `ngZone instanceof NgZone` would be insufficient here,\n                // because custom implementations might use NgZone as a base class.\n                if (!isZoneless && ngZone.constructor !== NgZone) {\n                    const console = inject(_Console);\n                    const message = _formatRuntimeError(-5000 /* RuntimeErrorCode.UNSUPPORTED_ZONEJS_INSTANCE */, 'Angular detected that hydration was enabled for an application ' +\n                        'that uses a custom or a noop Zone.js implementation. ' +\n                        'This is not yet a fully supported configuration.');\n                    console.warn(message);\n                }\n            },\n            multi: true,\n        },\n    ];\n}\n/**\n * Sets up providers necessary to enable hydration functionality for the application.\n *\n * By default, the function enables the recommended set of features for the optimal\n * performance for most of the applications. It includes the following features:\n *\n * * Reconciling DOM hydration. Learn more about it [here](guide/hydration).\n * * [`HttpClient`](api/common/http/HttpClient) response caching while running on the server and\n * transferring this cache to the client to avoid extra HTTP requests. Learn more about data caching\n * [here](guide/ssr#caching-data-when-using-httpclient).\n *\n * These functions allow you to disable some of the default features or enable new ones:\n *\n * * {@link withNoHttpTransferCache} to disable HTTP transfer cache\n * * {@link withHttpTransferCacheOptions} to configure some HTTP transfer cache options\n * * {@link withI18nSupport} to enable hydration support for i18n blocks\n * * {@link withEventReplay} to enable support for replaying user events\n *\n * @usageNotes\n *\n * Basic example of how you can enable hydration in your application when\n * `bootstrapApplication` function is used:\n * ```ts\n * bootstrapApplication(AppComponent, {\n *   providers: [provideClientHydration()]\n * });\n * ```\n *\n * Alternatively if you are using NgModules, you would add `provideClientHydration`\n * to your root app module's provider list.\n * ```ts\n * @NgModule({\n *   declarations: [RootCmp],\n *   bootstrap: [RootCmp],\n *   providers: [provideClientHydration()],\n * })\n * export class AppModule {}\n * ```\n *\n * @see {@link withNoHttpTransferCache}\n * @see {@link withHttpTransferCacheOptions}\n * @see {@link withI18nSupport}\n * @see {@link withEventReplay}\n *\n * @param features Optional features to configure additional hydration behaviors.\n * @returns A set of providers to enable hydration.\n *\n * @publicApi 17.0\n */\nfunction provideClientHydration(...features) {\n    const providers = [];\n    const featuresKind = new Set();\n    for (const { ɵproviders, ɵkind } of features) {\n        featuresKind.add(ɵkind);\n        if (ɵproviders.length) {\n            providers.push(ɵproviders);\n        }\n    }\n    const hasHttpTransferCacheOptions = featuresKind.has(HydrationFeatureKind.HttpTransferCacheOptions);\n    if (typeof ngDevMode !== 'undefined' &&\n        ngDevMode &&\n        featuresKind.has(HydrationFeatureKind.NoHttpTransferCache) &&\n        hasHttpTransferCacheOptions) {\n        throw new _RuntimeError(5001 /* RuntimeErrorCode.HYDRATION_CONFLICTING_FEATURES */, 'Configuration error: found both withHttpTransferCacheOptions() and withNoHttpTransferCache() in the same call to provideClientHydration(), which is a contradiction.');\n    }\n    return makeEnvironmentProviders([\n        typeof ngDevMode !== 'undefined' && ngDevMode ? provideZoneJsCompatibilityDetector() : [],\n        _withDomHydration(),\n        featuresKind.has(HydrationFeatureKind.NoHttpTransferCache) || hasHttpTransferCacheOptions\n            ? []\n            : _withHttpTransferCache({}),\n        providers,\n    ]);\n}\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the platform-browser package.\n */\n/**\n * @publicApi\n */\nconst VERSION = new Version('20.1.7');\n\nexport { By, DomSanitizer, EVENT_MANAGER_PLUGINS, EventManagerPlugin, HAMMER_GESTURE_CONFIG, HAMMER_LOADER, HammerGestureConfig, HammerModule, HydrationFeatureKind, Meta, Title, VERSION, disableDebugTools, enableDebugTools, provideClientHydration, withEventReplay, withHttpTransferCacheOptions, withI18nSupport, withIncrementalHydration, withNoHttpTransferCache, DomSanitizerImpl as ɵDomSanitizerImpl, HammerGesturesPlugin as ɵHammerGesturesPlugin };\n\n","import * as i1 from '@angular/common/http';\nimport { HttpClient } from '@angular/common/http';\nimport * as i0 from '@angular/core';\nimport { SecurityContext, DOCUMENT, Injectable, Optional, Inject, SkipSelf, ErrorHandler } from '@angular/core';\nimport * as i2 from '@angular/platform-browser';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { of, throwError, forkJoin } from 'rxjs';\nimport { tap, map, catchError, finalize, share } from 'rxjs/operators';\n\n/**\n * The Trusted Types policy, or null if Trusted Types are not\n * enabled/supported, or undefined if the policy has not been created yet.\n */\nlet policy;\n/**\n * Returns the Trusted Types policy, or null if Trusted Types are not\n * enabled/supported. The first call to this function will create the policy.\n */\nfunction getPolicy() {\n    if (policy === undefined) {\n        policy = null;\n        if (typeof window !== 'undefined') {\n            const ttWindow = window;\n            if (ttWindow.trustedTypes !== undefined) {\n                policy = ttWindow.trustedTypes.createPolicy('angular#components', {\n                    createHTML: (s) => s,\n                });\n            }\n        }\n    }\n    return policy;\n}\n/**\n * Unsafely promote a string to a TrustedHTML, falling back to strings when\n * Trusted Types are not available.\n * @security This is a security-sensitive function; any use of this function\n * must go through security review. In particular, it must be assured that the\n * provided string will never cause an XSS vulnerability if used in a context\n * that will be interpreted as HTML by a browser, e.g. when assigning to\n * element.innerHTML.\n */\nfunction trustedHTMLFromString(html) {\n    return getPolicy()?.createHTML(html) || html;\n}\n\n/**\n * Returns an exception to be thrown in the case when attempting to\n * load an icon with a name that cannot be found.\n * @docs-private\n */\nfunction getMatIconNameNotFoundError(iconName) {\n    return Error(`Unable to find icon with the name \"${iconName}\"`);\n}\n/**\n * Returns an exception to be thrown when the consumer attempts to use\n * `<mat-icon>` without including @angular/common/http.\n * @docs-private\n */\nfunction getMatIconNoHttpProviderError() {\n    return Error('Could not find HttpClient for use with Angular Material icons. ' +\n        'Please add provideHttpClient() to your providers.');\n}\n/**\n * Returns an exception to be thrown when a URL couldn't be sanitized.\n * @param url URL that was attempted to be sanitized.\n * @docs-private\n */\nfunction getMatIconFailedToSanitizeUrlError(url) {\n    return Error(`The URL provided to MatIconRegistry was not trusted as a resource URL ` +\n        `via Angular's DomSanitizer. Attempted URL was \"${url}\".`);\n}\n/**\n * Returns an exception to be thrown when a HTML string couldn't be sanitized.\n * @param literal HTML that was attempted to be sanitized.\n * @docs-private\n */\nfunction getMatIconFailedToSanitizeLiteralError(literal) {\n    return Error(`The literal provided to MatIconRegistry was not trusted as safe HTML by ` +\n        `Angular's DomSanitizer. Attempted literal was \"${literal}\".`);\n}\n/**\n * Configuration for an icon, including the URL and possibly the cached SVG element.\n * @docs-private\n */\nclass SvgIconConfig {\n    url;\n    svgText;\n    options;\n    svgElement;\n    constructor(url, svgText, options) {\n        this.url = url;\n        this.svgText = svgText;\n        this.options = options;\n    }\n}\n/**\n * Service to register and display icons used by the `<mat-icon>` component.\n * - Registers icon URLs by namespace and name.\n * - Registers icon set URLs by namespace.\n * - Registers aliases for CSS classes, for use with icon fonts.\n * - Loads icons from URLs and extracts individual icons from icon sets.\n */\nclass MatIconRegistry {\n    _httpClient;\n    _sanitizer;\n    _errorHandler;\n    _document;\n    /**\n     * URLs and cached SVG elements for individual icons. Keys are of the format \"[namespace]:[icon]\".\n     */\n    _svgIconConfigs = new Map();\n    /**\n     * SvgIconConfig objects and cached SVG elements for icon sets, keyed by namespace.\n     * Multiple icon sets can be registered under the same namespace.\n     */\n    _iconSetConfigs = new Map();\n    /** Cache for icons loaded by direct URLs. */\n    _cachedIconsByUrl = new Map();\n    /** In-progress icon fetches. Used to coalesce multiple requests to the same URL. */\n    _inProgressUrlFetches = new Map();\n    /** Map from font identifiers to their CSS class names. Used for icon fonts. */\n    _fontCssClassesByAlias = new Map();\n    /** Registered icon resolver functions. */\n    _resolvers = [];\n    /**\n     * The CSS classes to apply when an `<mat-icon>` component has no icon name, url, or font\n     * specified. The default 'material-icons' value assumes that the material icon font has been\n     * loaded as described at https://google.github.io/material-design-icons/#icon-font-for-the-web\n     */\n    _defaultFontSetClass = ['material-icons', 'mat-ligature-font'];\n    constructor(_httpClient, _sanitizer, document, _errorHandler) {\n        this._httpClient = _httpClient;\n        this._sanitizer = _sanitizer;\n        this._errorHandler = _errorHandler;\n        this._document = document;\n    }\n    /**\n     * Registers an icon by URL in the default namespace.\n     * @param iconName Name under which the icon should be registered.\n     * @param url\n     */\n    addSvgIcon(iconName, url, options) {\n        return this.addSvgIconInNamespace('', iconName, url, options);\n    }\n    /**\n     * Registers an icon using an HTML string in the default namespace.\n     * @param iconName Name under which the icon should be registered.\n     * @param literal SVG source of the icon.\n     */\n    addSvgIconLiteral(iconName, literal, options) {\n        return this.addSvgIconLiteralInNamespace('', iconName, literal, options);\n    }\n    /**\n     * Registers an icon by URL in the specified namespace.\n     * @param namespace Namespace in which the icon should be registered.\n     * @param iconName Name under which the icon should be registered.\n     * @param url\n     */\n    addSvgIconInNamespace(namespace, iconName, url, options) {\n        return this._addSvgIconConfig(namespace, iconName, new SvgIconConfig(url, null, options));\n    }\n    /**\n     * Registers an icon resolver function with the registry. The function will be invoked with the\n     * name and namespace of an icon when the registry tries to resolve the URL from which to fetch\n     * the icon. The resolver is expected to return a `SafeResourceUrl` that points to the icon,\n     * an object with the icon URL and icon options, or `null` if the icon is not supported. Resolvers\n     * will be invoked in the order in which they have been registered.\n     * @param resolver Resolver function to be registered.\n     */\n    addSvgIconResolver(resolver) {\n        this._resolvers.push(resolver);\n        return this;\n    }\n    /**\n     * Registers an icon using an HTML string in the specified namespace.\n     * @param namespace Namespace in which the icon should be registered.\n     * @param iconName Name under which the icon should be registered.\n     * @param literal SVG source of the icon.\n     */\n    addSvgIconLiteralInNamespace(namespace, iconName, literal, options) {\n        const cleanLiteral = this._sanitizer.sanitize(SecurityContext.HTML, literal);\n        // TODO: add an ngDevMode check\n        if (!cleanLiteral) {\n            throw getMatIconFailedToSanitizeLiteralError(literal);\n        }\n        // Security: The literal is passed in as SafeHtml, and is thus trusted.\n        const trustedLiteral = trustedHTMLFromString(cleanLiteral);\n        return this._addSvgIconConfig(namespace, iconName, new SvgIconConfig('', trustedLiteral, options));\n    }\n    /**\n     * Registers an icon set by URL in the default namespace.\n     * @param url\n     */\n    addSvgIconSet(url, options) {\n        return this.addSvgIconSetInNamespace('', url, options);\n    }\n    /**\n     * Registers an icon set using an HTML string in the default namespace.\n     * @param literal SVG source of the icon set.\n     */\n    addSvgIconSetLiteral(literal, options) {\n        return this.addSvgIconSetLiteralInNamespace('', literal, options);\n    }\n    /**\n     * Registers an icon set by URL in the specified namespace.\n     * @param namespace Namespace in which to register the icon set.\n     * @param url\n     */\n    addSvgIconSetInNamespace(namespace, url, options) {\n        return this._addSvgIconSetConfig(namespace, new SvgIconConfig(url, null, options));\n    }\n    /**\n     * Registers an icon set using an HTML string in the specified namespace.\n     * @param namespace Namespace in which to register the icon set.\n     * @param literal SVG source of the icon set.\n     */\n    addSvgIconSetLiteralInNamespace(namespace, literal, options) {\n        const cleanLiteral = this._sanitizer.sanitize(SecurityContext.HTML, literal);\n        if (!cleanLiteral) {\n            throw getMatIconFailedToSanitizeLiteralError(literal);\n        }\n        // Security: The literal is passed in as SafeHtml, and is thus trusted.\n        const trustedLiteral = trustedHTMLFromString(cleanLiteral);\n        return this._addSvgIconSetConfig(namespace, new SvgIconConfig('', trustedLiteral, options));\n    }\n    /**\n     * Defines an alias for CSS class names to be used for icon fonts. Creating an matIcon\n     * component with the alias as the fontSet input will cause the class name to be applied\n     * to the `<mat-icon>` element.\n     *\n     * If the registered font is a ligature font, then don't forget to also include the special\n     * class `mat-ligature-font` to allow the usage via attribute. So register like this:\n     *\n     * ```ts\n     * iconRegistry.registerFontClassAlias('f1', 'font1 mat-ligature-font');\n     * ```\n     *\n     * And use like this:\n     *\n     * ```html\n     * <mat-icon fontSet=\"f1\" fontIcon=\"home\"></mat-icon>\n     * ```\n     *\n     * @param alias Alias for the font.\n     * @param classNames Class names override to be used instead of the alias.\n     */\n    registerFontClassAlias(alias, classNames = alias) {\n        this._fontCssClassesByAlias.set(alias, classNames);\n        return this;\n    }\n    /**\n     * Returns the CSS class name associated with the alias by a previous call to\n     * registerFontClassAlias. If no CSS class has been associated, returns the alias unmodified.\n     */\n    classNameForFontAlias(alias) {\n        return this._fontCssClassesByAlias.get(alias) || alias;\n    }\n    /**\n     * Sets the CSS classes to be used for icon fonts when an `<mat-icon>` component does not\n     * have a fontSet input value, and is not loading an icon by name or URL.\n     */\n    setDefaultFontSetClass(...classNames) {\n        this._defaultFontSetClass = classNames;\n        return this;\n    }\n    /**\n     * Returns the CSS classes to be used for icon fonts when an `<mat-icon>` component does not\n     * have a fontSet input value, and is not loading an icon by name or URL.\n     */\n    getDefaultFontSetClass() {\n        return this._defaultFontSetClass;\n    }\n    /**\n     * Returns an Observable that produces the icon (as an `<svg>` DOM element) from the given URL.\n     * The response from the URL may be cached so this will not always cause an HTTP request, but\n     * the produced element will always be a new copy of the originally fetched icon. (That is,\n     * it will not contain any modifications made to elements previously returned).\n     *\n     * @param safeUrl URL from which to fetch the SVG icon.\n     */\n    getSvgIconFromUrl(safeUrl) {\n        const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, safeUrl);\n        if (!url) {\n            throw getMatIconFailedToSanitizeUrlError(safeUrl);\n        }\n        const cachedIcon = this._cachedIconsByUrl.get(url);\n        if (cachedIcon) {\n            return of(cloneSvg(cachedIcon));\n        }\n        return this._loadSvgIconFromConfig(new SvgIconConfig(safeUrl, null)).pipe(tap(svg => this._cachedIconsByUrl.set(url, svg)), map(svg => cloneSvg(svg)));\n    }\n    /**\n     * Returns an Observable that produces the icon (as an `<svg>` DOM element) with the given name\n     * and namespace. The icon must have been previously registered with addIcon or addIconSet;\n     * if not, the Observable will throw an error.\n     *\n     * @param name Name of the icon to be retrieved.\n     * @param namespace Namespace in which to look for the icon.\n     */\n    getNamedSvgIcon(name, namespace = '') {\n        const key = iconKey(namespace, name);\n        let config = this._svgIconConfigs.get(key);\n        // Return (copy of) cached icon if possible.\n        if (config) {\n            return this._getSvgFromConfig(config);\n        }\n        // Otherwise try to resolve the config from one of the resolver functions.\n        config = this._getIconConfigFromResolvers(namespace, name);\n        if (config) {\n            this._svgIconConfigs.set(key, config);\n            return this._getSvgFromConfig(config);\n        }\n        // See if we have any icon sets registered for the namespace.\n        const iconSetConfigs = this._iconSetConfigs.get(namespace);\n        if (iconSetConfigs) {\n            return this._getSvgFromIconSetConfigs(name, iconSetConfigs);\n        }\n        return throwError(getMatIconNameNotFoundError(key));\n    }\n    ngOnDestroy() {\n        this._resolvers = [];\n        this._svgIconConfigs.clear();\n        this._iconSetConfigs.clear();\n        this._cachedIconsByUrl.clear();\n    }\n    /**\n     * Returns the cached icon for a SvgIconConfig if available, or fetches it from its URL if not.\n     */\n    _getSvgFromConfig(config) {\n        if (config.svgText) {\n            // We already have the SVG element for this icon, return a copy.\n            return of(cloneSvg(this._svgElementFromConfig(config)));\n        }\n        else {\n            // Fetch the icon from the config's URL, cache it, and return a copy.\n            return this._loadSvgIconFromConfig(config).pipe(map(svg => cloneSvg(svg)));\n        }\n    }\n    /**\n     * Attempts to find an icon with the specified name in any of the SVG icon sets.\n     * First searches the available cached icons for a nested element with a matching name, and\n     * if found copies the element to a new `<svg>` element. If not found, fetches all icon sets\n     * that have not been cached, and searches again after all fetches are completed.\n     * The returned Observable produces the SVG element if possible, and throws\n     * an error if no icon with the specified name can be found.\n     */\n    _getSvgFromIconSetConfigs(name, iconSetConfigs) {\n        // For all the icon set SVG elements we've fetched, see if any contain an icon with the\n        // requested name.\n        const namedIcon = this._extractIconWithNameFromAnySet(name, iconSetConfigs);\n        if (namedIcon) {\n            // We could cache namedIcon in _svgIconConfigs, but since we have to make a copy every\n            // time anyway, there's probably not much advantage compared to just always extracting\n            // it from the icon set.\n            return of(namedIcon);\n        }\n        // Not found in any cached icon sets. If there are icon sets with URLs that we haven't\n        // fetched, fetch them now and look for iconName in the results.\n        const iconSetFetchRequests = iconSetConfigs\n            .filter(iconSetConfig => !iconSetConfig.svgText)\n            .map(iconSetConfig => {\n            return this._loadSvgIconSetFromConfig(iconSetConfig).pipe(catchError((err) => {\n                const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, iconSetConfig.url);\n                // Swallow errors fetching individual URLs so the\n                // combined Observable won't necessarily fail.\n                const errorMessage = `Loading icon set URL: ${url} failed: ${err.message}`;\n                this._errorHandler.handleError(new Error(errorMessage));\n                return of(null);\n            }));\n        });\n        // Fetch all the icon set URLs. When the requests complete, every IconSet should have a\n        // cached SVG element (unless the request failed), and we can check again for the icon.\n        return forkJoin(iconSetFetchRequests).pipe(map(() => {\n            const foundIcon = this._extractIconWithNameFromAnySet(name, iconSetConfigs);\n            // TODO: add an ngDevMode check\n            if (!foundIcon) {\n                throw getMatIconNameNotFoundError(name);\n            }\n            return foundIcon;\n        }));\n    }\n    /**\n     * Searches the cached SVG elements for the given icon sets for a nested icon element whose \"id\"\n     * tag matches the specified name. If found, copies the nested element to a new SVG element and\n     * returns it. Returns null if no matching element is found.\n     */\n    _extractIconWithNameFromAnySet(iconName, iconSetConfigs) {\n        // Iterate backwards, so icon sets added later have precedence.\n        for (let i = iconSetConfigs.length - 1; i >= 0; i--) {\n            const config = iconSetConfigs[i];\n            // Parsing the icon set's text into an SVG element can be expensive. We can avoid some of\n            // the parsing by doing a quick check using `indexOf` to see if there's any chance for the\n            // icon to be in the set. This won't be 100% accurate, but it should help us avoid at least\n            // some of the parsing.\n            if (config.svgText && config.svgText.toString().indexOf(iconName) > -1) {\n                const svg = this._svgElementFromConfig(config);\n                const foundIcon = this._extractSvgIconFromSet(svg, iconName, config.options);\n                if (foundIcon) {\n                    return foundIcon;\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Loads the content of the icon URL specified in the SvgIconConfig and creates an SVG element\n     * from it.\n     */\n    _loadSvgIconFromConfig(config) {\n        return this._fetchIcon(config).pipe(tap(svgText => (config.svgText = svgText)), map(() => this._svgElementFromConfig(config)));\n    }\n    /**\n     * Loads the content of the icon set URL specified in the\n     * SvgIconConfig and attaches it to the config.\n     */\n    _loadSvgIconSetFromConfig(config) {\n        if (config.svgText) {\n            return of(null);\n        }\n        return this._fetchIcon(config).pipe(tap(svgText => (config.svgText = svgText)));\n    }\n    /**\n     * Searches the cached element of the given SvgIconConfig for a nested icon element whose \"id\"\n     * tag matches the specified name. If found, copies the nested element to a new SVG element and\n     * returns it. Returns null if no matching element is found.\n     */\n    _extractSvgIconFromSet(iconSet, iconName, options) {\n        // Use the `id=\"iconName\"` syntax in order to escape special\n        // characters in the ID (versus using the #iconName syntax).\n        const iconSource = iconSet.querySelector(`[id=\"${iconName}\"]`);\n        if (!iconSource) {\n            return null;\n        }\n        // Clone the element and remove the ID to prevent multiple elements from being added\n        // to the page with the same ID.\n        const iconElement = iconSource.cloneNode(true);\n        iconElement.removeAttribute('id');\n        // If the icon node is itself an <svg> node, clone and return it directly. If not, set it as\n        // the content of a new <svg> node.\n        if (iconElement.nodeName.toLowerCase() === 'svg') {\n            return this._setSvgAttributes(iconElement, options);\n        }\n        // If the node is a <symbol>, it won't be rendered so we have to convert it into <svg>. Note\n        // that the same could be achieved by referring to it via <use href=\"#id\">, however the <use>\n        // tag is problematic on Firefox, because it needs to include the current page path.\n        if (iconElement.nodeName.toLowerCase() === 'symbol') {\n            return this._setSvgAttributes(this._toSvgElement(iconElement), options);\n        }\n        // createElement('SVG') doesn't work as expected; the DOM ends up with\n        // the correct nodes, but the SVG content doesn't render. Instead we\n        // have to create an empty SVG node using innerHTML and append its content.\n        // Elements created using DOMParser.parseFromString have the same problem.\n        // http://stackoverflow.com/questions/23003278/svg-innerhtml-in-firefox-can-not-display\n        const svg = this._svgElementFromString(trustedHTMLFromString('<svg></svg>'));\n        // Clone the node so we don't remove it from the parent icon set element.\n        svg.appendChild(iconElement);\n        return this._setSvgAttributes(svg, options);\n    }\n    /**\n     * Creates a DOM element from the given SVG string.\n     */\n    _svgElementFromString(str) {\n        const div = this._document.createElement('DIV');\n        div.innerHTML = str;\n        const svg = div.querySelector('svg');\n        // TODO: add an ngDevMode check\n        if (!svg) {\n            throw Error('<svg> tag not found');\n        }\n        return svg;\n    }\n    /**\n     * Converts an element into an SVG node by cloning all of its children.\n     */\n    _toSvgElement(element) {\n        const svg = this._svgElementFromString(trustedHTMLFromString('<svg></svg>'));\n        const attributes = element.attributes;\n        // Copy over all the attributes from the `symbol` to the new SVG, except the id.\n        for (let i = 0; i < attributes.length; i++) {\n            const { name, value } = attributes[i];\n            if (name !== 'id') {\n                svg.setAttribute(name, value);\n            }\n        }\n        for (let i = 0; i < element.childNodes.length; i++) {\n            if (element.childNodes[i].nodeType === this._document.ELEMENT_NODE) {\n                svg.appendChild(element.childNodes[i].cloneNode(true));\n            }\n        }\n        return svg;\n    }\n    /**\n     * Sets the default attributes for an SVG element to be used as an icon.\n     */\n    _setSvgAttributes(svg, options) {\n        svg.setAttribute('fit', '');\n        svg.setAttribute('height', '100%');\n        svg.setAttribute('width', '100%');\n        svg.setAttribute('preserveAspectRatio', 'xMidYMid meet');\n        svg.setAttribute('focusable', 'false'); // Disable IE11 default behavior to make SVGs focusable.\n        if (options && options.viewBox) {\n            svg.setAttribute('viewBox', options.viewBox);\n        }\n        return svg;\n    }\n    /**\n     * Returns an Observable which produces the string contents of the given icon. Results may be\n     * cached, so future calls with the same URL may not cause another HTTP request.\n     */\n    _fetchIcon(iconConfig) {\n        const { url: safeUrl, options } = iconConfig;\n        const withCredentials = options?.withCredentials ?? false;\n        if (!this._httpClient) {\n            throw getMatIconNoHttpProviderError();\n        }\n        // TODO: add an ngDevMode check\n        if (safeUrl == null) {\n            throw Error(`Cannot fetch icon from URL \"${safeUrl}\".`);\n        }\n        const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, safeUrl);\n        // TODO: add an ngDevMode check\n        if (!url) {\n            throw getMatIconFailedToSanitizeUrlError(safeUrl);\n        }\n        // Store in-progress fetches to avoid sending a duplicate request for a URL when there is\n        // already a request in progress for that URL. It's necessary to call share() on the\n        // Observable returned by http.get() so that multiple subscribers don't cause multiple XHRs.\n        const inProgressFetch = this._inProgressUrlFetches.get(url);\n        if (inProgressFetch) {\n            return inProgressFetch;\n        }\n        const req = this._httpClient.get(url, { responseType: 'text', withCredentials }).pipe(map(svg => {\n            // Security: This SVG is fetched from a SafeResourceUrl, and is thus\n            // trusted HTML.\n            return trustedHTMLFromString(svg);\n        }), finalize(() => this._inProgressUrlFetches.delete(url)), share());\n        this._inProgressUrlFetches.set(url, req);\n        return req;\n    }\n    /**\n     * Registers an icon config by name in the specified namespace.\n     * @param namespace Namespace in which to register the icon config.\n     * @param iconName Name under which to register the config.\n     * @param config Config to be registered.\n     */\n    _addSvgIconConfig(namespace, iconName, config) {\n        this._svgIconConfigs.set(iconKey(namespace, iconName), config);\n        return this;\n    }\n    /**\n     * Registers an icon set config in the specified namespace.\n     * @param namespace Namespace in which to register the icon config.\n     * @param config Config to be registered.\n     */\n    _addSvgIconSetConfig(namespace, config) {\n        const configNamespace = this._iconSetConfigs.get(namespace);\n        if (configNamespace) {\n            configNamespace.push(config);\n        }\n        else {\n            this._iconSetConfigs.set(namespace, [config]);\n        }\n        return this;\n    }\n    /** Parses a config's text into an SVG element. */\n    _svgElementFromConfig(config) {\n        if (!config.svgElement) {\n            const svg = this._svgElementFromString(config.svgText);\n            this._setSvgAttributes(svg, config.options);\n            config.svgElement = svg;\n        }\n        return config.svgElement;\n    }\n    /** Tries to create an icon config through the registered resolver functions. */\n    _getIconConfigFromResolvers(namespace, name) {\n        for (let i = 0; i < this._resolvers.length; i++) {\n            const result = this._resolvers[i](name, namespace);\n            if (result) {\n                return isSafeUrlWithOptions(result)\n                    ? new SvgIconConfig(result.url, null, result.options)\n                    : new SvgIconConfig(result, null);\n            }\n        }\n        return undefined;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatIconRegistry, deps: [{ token: i1.HttpClient, optional: true }, { token: i2.DomSanitizer }, { token: DOCUMENT, optional: true }, { token: i0.ErrorHandler }], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatIconRegistry, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatIconRegistry, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: i1.HttpClient, decorators: [{\n                    type: Optional\n                }] }, { type: i2.DomSanitizer }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i0.ErrorHandler }] });\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nfunction ICON_REGISTRY_PROVIDER_FACTORY(parentRegistry, httpClient, sanitizer, errorHandler, document) {\n    return parentRegistry || new MatIconRegistry(httpClient, sanitizer, document, errorHandler);\n}\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nconst ICON_REGISTRY_PROVIDER = {\n    // If there is already an MatIconRegistry available, use that. Otherwise, provide a new one.\n    provide: MatIconRegistry,\n    deps: [\n        [new Optional(), new SkipSelf(), MatIconRegistry],\n        [new Optional(), HttpClient],\n        DomSanitizer,\n        ErrorHandler,\n        [new Optional(), DOCUMENT],\n    ],\n    useFactory: ICON_REGISTRY_PROVIDER_FACTORY,\n};\n/** Clones an SVGElement while preserving type information. */\nfunction cloneSvg(svg) {\n    return svg.cloneNode(true);\n}\n/** Returns the cache key to use for an icon namespace and name. */\nfunction iconKey(namespace, name) {\n    return namespace + ':' + name;\n}\nfunction isSafeUrlWithOptions(value) {\n    return !!(value.url && value.options);\n}\n\nexport { ICON_REGISTRY_PROVIDER_FACTORY as I, MatIconRegistry as M, getMatIconNoHttpProviderError as a, getMatIconFailedToSanitizeUrlError as b, getMatIconFailedToSanitizeLiteralError as c, ICON_REGISTRY_PROVIDER as d, getMatIconNameNotFoundError as g };\n\n","import * as i0 from '@angular/core';\nimport { InjectionToken, inject, DOCUMENT, ElementRef, ErrorHandler, HostAttributeToken, booleanAttribute, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, NgModule } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { M as MatIconRegistry } from './icon-registry-CwOTJ7YM.mjs';\nexport { d as ICON_REGISTRY_PROVIDER, I as ICON_REGISTRY_PROVIDER_FACTORY, c as getMatIconFailedToSanitizeLiteralError, b as getMatIconFailedToSanitizeUrlError, g as getMatIconNameNotFoundError, a as getMatIconNoHttpProviderError } from './icon-registry-CwOTJ7YM.mjs';\nimport { M as MatCommonModule } from './common-module-cKSwHniA.mjs';\nimport '@angular/common/http';\nimport '@angular/platform-browser';\nimport '@angular/cdk/a11y';\nimport '@angular/cdk/bidi';\n\n/** Injection token to be used to override the default options for `mat-icon`. */\nconst MAT_ICON_DEFAULT_OPTIONS = new InjectionToken('MAT_ICON_DEFAULT_OPTIONS');\n/**\n * Injection token used to provide the current location to `MatIcon`.\n * Used to handle server-side rendering and to stub out during unit tests.\n * @docs-private\n */\nconst MAT_ICON_LOCATION = new InjectionToken('mat-icon-location', {\n    providedIn: 'root',\n    factory: MAT_ICON_LOCATION_FACTORY,\n});\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nfunction MAT_ICON_LOCATION_FACTORY() {\n    const _document = inject(DOCUMENT);\n    const _location = _document ? _document.location : null;\n    return {\n        // Note that this needs to be a function, rather than a property, because Angular\n        // will only resolve it once, but we want the current path on each call.\n        getPathname: () => (_location ? _location.pathname + _location.search : ''),\n    };\n}\n/** SVG attributes that accept a FuncIRI (e.g. `url(<something>)`). */\nconst funcIriAttributes = [\n    'clip-path',\n    'color-profile',\n    'src',\n    'cursor',\n    'fill',\n    'filter',\n    'marker',\n    'marker-start',\n    'marker-mid',\n    'marker-end',\n    'mask',\n    'stroke',\n];\n/** Selector that can be used to find all elements that are using a `FuncIRI`. */\nconst funcIriAttributeSelector = funcIriAttributes.map(attr => `[${attr}]`).join(', ');\n/** Regex that can be used to extract the id out of a FuncIRI. */\nconst funcIriPattern = /^url\\(['\"]?#(.*?)['\"]?\\)$/;\n/**\n * Component to display an icon. It can be used in the following ways:\n *\n * - Specify the svgIcon input to load an SVG icon from a URL previously registered with the\n *   addSvgIcon, addSvgIconInNamespace, addSvgIconSet, or addSvgIconSetInNamespace methods of\n *   MatIconRegistry. If the svgIcon value contains a colon it is assumed to be in the format\n *   \"[namespace]:[name]\", if not the value will be the name of an icon in the default namespace.\n *   Examples:\n *     `<mat-icon svgIcon=\"left-arrow\"></mat-icon>\n *     <mat-icon svgIcon=\"animals:cat\"></mat-icon>`\n *\n * - Use a font ligature as an icon by putting the ligature text in the `fontIcon` attribute or the\n *   content of the `<mat-icon>` component. If you register a custom font class, don't forget to also\n *   include the special class `mat-ligature-font`. It is recommended to use the attribute alternative\n *   to prevent the ligature text to be selectable and to appear in search engine results.\n *   By default, the Material icons font is used as described at\n *   http://google.github.io/material-design-icons/#icon-font-for-the-web. You can specify an\n *   alternate font by setting the fontSet input to either the CSS class to apply to use the\n *   desired font, or to an alias previously registered with MatIconRegistry.registerFontClassAlias.\n *   Examples:\n *     `<mat-icon fontIcon=\"home\"></mat-icon>\n *     <mat-icon>home</mat-icon>\n *     <mat-icon fontSet=\"myfont\" fontIcon=\"sun\"></mat-icon>\n *     <mat-icon fontSet=\"myfont\">sun</mat-icon>`\n *\n * - Specify a font glyph to be included via CSS rules by setting the fontSet input to specify the\n *   font, and the fontIcon input to specify the icon. Typically the fontIcon will specify a\n *   CSS class which causes the glyph to be displayed via a :before selector, as in\n *   https://fontawesome-v4.github.io/examples/\n *   Example:\n *     `<mat-icon fontSet=\"fa\" fontIcon=\"alarm\"></mat-icon>`\n */\nclass MatIcon {\n    _elementRef = inject(ElementRef);\n    _iconRegistry = inject(MatIconRegistry);\n    _location = inject(MAT_ICON_LOCATION);\n    _errorHandler = inject(ErrorHandler);\n    _defaultColor;\n    /**\n     * Theme color of the icon. This API is supported in M2 themes only, it\n     * has no effect in M3 themes. For color customization in M3, see https://material.angular.dev/components/icon/styling.\n     *\n     * For information on applying color variants in M3, see\n     * https://material.angular.dev/guide/material-2-theming#optional-add-backwards-compatibility-styles-for-color-variants\n     */\n    get color() {\n        return this._color || this._defaultColor;\n    }\n    set color(value) {\n        this._color = value;\n    }\n    _color;\n    /**\n     * Whether the icon should be inlined, automatically sizing the icon to match the font size of\n     * the element the icon is contained in.\n     */\n    inline = false;\n    /** Name of the icon in the SVG icon set. */\n    get svgIcon() {\n        return this._svgIcon;\n    }\n    set svgIcon(value) {\n        if (value !== this._svgIcon) {\n            if (value) {\n                this._updateSvgIcon(value);\n            }\n            else if (this._svgIcon) {\n                this._clearSvgElement();\n            }\n            this._svgIcon = value;\n        }\n    }\n    _svgIcon;\n    /** Font set that the icon is a part of. */\n    get fontSet() {\n        return this._fontSet;\n    }\n    set fontSet(value) {\n        const newValue = this._cleanupFontValue(value);\n        if (newValue !== this._fontSet) {\n            this._fontSet = newValue;\n            this._updateFontIconClasses();\n        }\n    }\n    _fontSet;\n    /** Name of an icon within a font set. */\n    get fontIcon() {\n        return this._fontIcon;\n    }\n    set fontIcon(value) {\n        const newValue = this._cleanupFontValue(value);\n        if (newValue !== this._fontIcon) {\n            this._fontIcon = newValue;\n            this._updateFontIconClasses();\n        }\n    }\n    _fontIcon;\n    _previousFontSetClass = [];\n    _previousFontIconClass;\n    _svgName;\n    _svgNamespace;\n    /** Keeps track of the current page path. */\n    _previousPath;\n    /** Keeps track of the elements and attributes that we've prefixed with the current path. */\n    _elementsWithExternalReferences;\n    /** Subscription to the current in-progress SVG icon request. */\n    _currentIconFetch = Subscription.EMPTY;\n    constructor() {\n        const ariaHidden = inject(new HostAttributeToken('aria-hidden'), { optional: true });\n        const defaults = inject(MAT_ICON_DEFAULT_OPTIONS, { optional: true });\n        if (defaults) {\n            if (defaults.color) {\n                this.color = this._defaultColor = defaults.color;\n            }\n            if (defaults.fontSet) {\n                this.fontSet = defaults.fontSet;\n            }\n        }\n        // If the user has not explicitly set aria-hidden, mark the icon as hidden, as this is\n        // the right thing to do for the majority of icon use-cases.\n        if (!ariaHidden) {\n            this._elementRef.nativeElement.setAttribute('aria-hidden', 'true');\n        }\n    }\n    /**\n     * Splits an svgIcon binding value into its icon set and icon name components.\n     * Returns a 2-element array of [(icon set), (icon name)].\n     * The separator for the two fields is ':'. If there is no separator, an empty\n     * string is returned for the icon set and the entire value is returned for\n     * the icon name. If the argument is falsy, returns an array of two empty strings.\n     * Throws an error if the name contains two or more ':' separators.\n     * Examples:\n     *   `'social:cake' -> ['social', 'cake']\n     *   'penguin' -> ['', 'penguin']\n     *   null -> ['', '']\n     *   'a:b:c' -> (throws Error)`\n     */\n    _splitIconName(iconName) {\n        if (!iconName) {\n            return ['', ''];\n        }\n        const parts = iconName.split(':');\n        switch (parts.length) {\n            case 1:\n                return ['', parts[0]]; // Use default namespace.\n            case 2:\n                return parts;\n            default:\n                throw Error(`Invalid icon name: \"${iconName}\"`); // TODO: add an ngDevMode check\n        }\n    }\n    ngOnInit() {\n        // Update font classes because ngOnChanges won't be called if none of the inputs are present,\n        // e.g. <mat-icon>arrow</mat-icon> In this case we need to add a CSS class for the default font.\n        this._updateFontIconClasses();\n    }\n    ngAfterViewChecked() {\n        const cachedElements = this._elementsWithExternalReferences;\n        if (cachedElements && cachedElements.size) {\n            const newPath = this._location.getPathname();\n            // We need to check whether the URL has changed on each change detection since\n            // the browser doesn't have an API that will let us react on link clicks and\n            // we can't depend on the Angular router. The references need to be updated,\n            // because while most browsers don't care whether the URL is correct after\n            // the first render, Safari will break if the user navigates to a different\n            // page and the SVG isn't re-rendered.\n            if (newPath !== this._previousPath) {\n                this._previousPath = newPath;\n                this._prependPathToReferences(newPath);\n            }\n        }\n    }\n    ngOnDestroy() {\n        this._currentIconFetch.unsubscribe();\n        if (this._elementsWithExternalReferences) {\n            this._elementsWithExternalReferences.clear();\n        }\n    }\n    _usingFontIcon() {\n        return !this.svgIcon;\n    }\n    _setSvgElement(svg) {\n        this._clearSvgElement();\n        // Note: we do this fix here, rather than the icon registry, because the\n        // references have to point to the URL at the time that the icon was created.\n        const path = this._location.getPathname();\n        this._previousPath = path;\n        this._cacheChildrenWithExternalReferences(svg);\n        this._prependPathToReferences(path);\n        this._elementRef.nativeElement.appendChild(svg);\n    }\n    _clearSvgElement() {\n        const layoutElement = this._elementRef.nativeElement;\n        let childCount = layoutElement.childNodes.length;\n        if (this._elementsWithExternalReferences) {\n            this._elementsWithExternalReferences.clear();\n        }\n        // Remove existing non-element child nodes and SVGs, and add the new SVG element. Note that\n        // we can't use innerHTML, because IE will throw if the element has a data binding.\n        while (childCount--) {\n            const child = layoutElement.childNodes[childCount];\n            // 1 corresponds to Node.ELEMENT_NODE. We remove all non-element nodes in order to get rid\n            // of any loose text nodes, as well as any SVG elements in order to remove any old icons.\n            if (child.nodeType !== 1 || child.nodeName.toLowerCase() === 'svg') {\n                child.remove();\n            }\n        }\n    }\n    _updateFontIconClasses() {\n        if (!this._usingFontIcon()) {\n            return;\n        }\n        const elem = this._elementRef.nativeElement;\n        const fontSetClasses = (this.fontSet\n            ? this._iconRegistry.classNameForFontAlias(this.fontSet).split(/ +/)\n            : this._iconRegistry.getDefaultFontSetClass()).filter(className => className.length > 0);\n        this._previousFontSetClass.forEach(className => elem.classList.remove(className));\n        fontSetClasses.forEach(className => elem.classList.add(className));\n        this._previousFontSetClass = fontSetClasses;\n        if (this.fontIcon !== this._previousFontIconClass &&\n            !fontSetClasses.includes('mat-ligature-font')) {\n            if (this._previousFontIconClass) {\n                elem.classList.remove(this._previousFontIconClass);\n            }\n            if (this.fontIcon) {\n                elem.classList.add(this.fontIcon);\n            }\n            this._previousFontIconClass = this.fontIcon;\n        }\n    }\n    /**\n     * Cleans up a value to be used as a fontIcon or fontSet.\n     * Since the value ends up being assigned as a CSS class, we\n     * have to trim the value and omit space-separated values.\n     */\n    _cleanupFontValue(value) {\n        return typeof value === 'string' ? value.trim().split(' ')[0] : value;\n    }\n    /**\n     * Prepends the current path to all elements that have an attribute pointing to a `FuncIRI`\n     * reference. This is required because WebKit browsers require references to be prefixed with\n     * the current path, if the page has a `base` tag.\n     */\n    _prependPathToReferences(path) {\n        const elements = this._elementsWithExternalReferences;\n        if (elements) {\n            elements.forEach((attrs, element) => {\n                attrs.forEach(attr => {\n                    element.setAttribute(attr.name, `url('${path}#${attr.value}')`);\n                });\n            });\n        }\n    }\n    /**\n     * Caches the children of an SVG element that have `url()`\n     * references that we need to prefix with the current path.\n     */\n    _cacheChildrenWithExternalReferences(element) {\n        const elementsWithFuncIri = element.querySelectorAll(funcIriAttributeSelector);\n        const elements = (this._elementsWithExternalReferences =\n            this._elementsWithExternalReferences || new Map());\n        for (let i = 0; i < elementsWithFuncIri.length; i++) {\n            funcIriAttributes.forEach(attr => {\n                const elementWithReference = elementsWithFuncIri[i];\n                const value = elementWithReference.getAttribute(attr);\n                const match = value ? value.match(funcIriPattern) : null;\n                if (match) {\n                    let attributes = elements.get(elementWithReference);\n                    if (!attributes) {\n                        attributes = [];\n                        elements.set(elementWithReference, attributes);\n                    }\n                    attributes.push({ name: attr, value: match[1] });\n                }\n            });\n        }\n    }\n    /** Sets a new SVG icon with a particular name. */\n    _updateSvgIcon(rawName) {\n        this._svgNamespace = null;\n        this._svgName = null;\n        this._currentIconFetch.unsubscribe();\n        if (rawName) {\n            const [namespace, iconName] = this._splitIconName(rawName);\n            if (namespace) {\n                this._svgNamespace = namespace;\n            }\n            if (iconName) {\n                this._svgName = iconName;\n            }\n            this._currentIconFetch = this._iconRegistry\n                .getNamedSvgIcon(iconName, namespace)\n                .pipe(take(1))\n                .subscribe(svg => this._setSvgElement(svg), (err) => {\n                const errorMessage = `Error retrieving icon ${namespace}:${iconName}! ${err.message}`;\n                this._errorHandler.handleError(new Error(errorMessage));\n            });\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatIcon, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"16.1.0\", version: \"20.0.0\", type: MatIcon, isStandalone: true, selector: \"mat-icon\", inputs: { color: \"color\", inline: [\"inline\", \"inline\", booleanAttribute], svgIcon: \"svgIcon\", fontSet: \"fontSet\", fontIcon: \"fontIcon\" }, host: { attributes: { \"role\": \"img\" }, properties: { \"class\": \"color ? \\\"mat-\\\" + color : \\\"\\\"\", \"attr.data-mat-icon-type\": \"_usingFontIcon() ? \\\"font\\\" : \\\"svg\\\"\", \"attr.data-mat-icon-name\": \"_svgName || fontIcon\", \"attr.data-mat-icon-namespace\": \"_svgNamespace || fontSet\", \"attr.fontIcon\": \"_usingFontIcon() ? fontIcon : null\", \"class.mat-icon-inline\": \"inline\", \"class.mat-icon-no-color\": \"color !== \\\"primary\\\" && color !== \\\"accent\\\" && color !== \\\"warn\\\"\" }, classAttribute: \"mat-icon notranslate\" }, exportAs: [\"matIcon\"], ngImport: i0, template: '<ng-content></ng-content>', isInline: true, styles: [\"mat-icon,mat-icon.mat-primary,mat-icon.mat-accent,mat-icon.mat-warn{color:var(--mat-icon-color, inherit)}.mat-icon{-webkit-user-select:none;user-select:none;background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px;overflow:hidden}.mat-icon.mat-icon-inline{font-size:inherit;height:inherit;line-height:inherit;width:inherit}.mat-icon.mat-ligature-font[fontIcon]::before{content:attr(fontIcon)}[dir=rtl] .mat-icon-rtl-mirror{transform:scale(-1, 1)}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon{display:block}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-icon{margin:auto}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatIcon, decorators: [{\n            type: Component,\n            args: [{ template: '<ng-content></ng-content>', selector: 'mat-icon', exportAs: 'matIcon', host: {\n                        'role': 'img',\n                        'class': 'mat-icon notranslate',\n                        '[class]': 'color ? \"mat-\" + color : \"\"',\n                        '[attr.data-mat-icon-type]': '_usingFontIcon() ? \"font\" : \"svg\"',\n                        '[attr.data-mat-icon-name]': '_svgName || fontIcon',\n                        '[attr.data-mat-icon-namespace]': '_svgNamespace || fontSet',\n                        '[attr.fontIcon]': '_usingFontIcon() ? fontIcon : null',\n                        '[class.mat-icon-inline]': 'inline',\n                        '[class.mat-icon-no-color]': 'color !== \"primary\" && color !== \"accent\" && color !== \"warn\"',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\"mat-icon,mat-icon.mat-primary,mat-icon.mat-accent,mat-icon.mat-warn{color:var(--mat-icon-color, inherit)}.mat-icon{-webkit-user-select:none;user-select:none;background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px;overflow:hidden}.mat-icon.mat-icon-inline{font-size:inherit;height:inherit;line-height:inherit;width:inherit}.mat-icon.mat-ligature-font[fontIcon]::before{content:attr(fontIcon)}[dir=rtl] .mat-icon-rtl-mirror{transform:scale(-1, 1)}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon{display:block}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-icon{margin:auto}\\n\"] }]\n        }], ctorParameters: () => [], propDecorators: { color: [{\n                type: Input\n            }], inline: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], svgIcon: [{\n                type: Input\n            }], fontSet: [{\n                type: Input\n            }], fontIcon: [{\n                type: Input\n            }] } });\n\nclass MatIconModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatIconModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.0\", ngImport: i0, type: MatIconModule, imports: [MatCommonModule, MatIcon], exports: [MatIcon, MatCommonModule] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatIconModule, imports: [MatCommonModule, MatCommonModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatIconModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule, MatIcon],\n                    exports: [MatIcon, MatCommonModule],\n                }]\n        }] });\n\nexport { MAT_ICON_DEFAULT_OPTIONS, MAT_ICON_LOCATION, MAT_ICON_LOCATION_FACTORY, MatIcon, MatIconModule, MatIconRegistry };\n\n","import { Directionality } from '@angular/cdk/bidi';\nimport { Platform } from '@angular/cdk/platform';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, inject, ChangeDetectorRef, NgZone, Renderer2, ElementRef, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, ViewChild, booleanAttribute, numberAttribute, ViewChildren, ContentChild, ContentChildren, forwardRef, EventEmitter, signal, Directive, Output, NgModule } from '@angular/core';\nimport { b as RippleState, M as MatRipple, a as MAT_RIPPLE_GLOBAL_OPTIONS } from './ripple-BMyyyLz2.mjs';\nimport { _CdkPrivateStyleLoader } from '@angular/cdk/private';\nimport { _ as _animationsDisabled } from './animation-ChQ1vjiF.mjs';\nimport { _ as _StructuralStylesLoader } from './structural-styles-CObeNzjn.mjs';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { M as MatCommonModule } from './common-module-cKSwHniA.mjs';\nimport { M as MatRippleModule } from './index-BRImSAOu.mjs';\nimport '@angular/cdk/a11y';\nimport '@angular/cdk/coercion';\nimport '@angular/cdk/layout';\n\n/**\n * Thumb types: range slider has two thumbs (START, END) whereas single point\n * slider only has one thumb (END).\n */\nvar _MatThumb;\n(function (_MatThumb) {\n    _MatThumb[_MatThumb[\"START\"] = 1] = \"START\";\n    _MatThumb[_MatThumb[\"END\"] = 2] = \"END\";\n})(_MatThumb || (_MatThumb = {}));\n/** Tick mark enum, for discrete sliders. */\nvar _MatTickMark;\n(function (_MatTickMark) {\n    _MatTickMark[_MatTickMark[\"ACTIVE\"] = 0] = \"ACTIVE\";\n    _MatTickMark[_MatTickMark[\"INACTIVE\"] = 1] = \"INACTIVE\";\n})(_MatTickMark || (_MatTickMark = {}));\n/**\n * Injection token that can be used for a `MatSlider` to provide itself as a\n * parent to the `MatSliderThumb` and `MatSliderRangeThumb`.\n * Used primarily to avoid circular imports.\n * @docs-private\n */\nconst MAT_SLIDER = new InjectionToken('_MatSlider');\n/**\n * Injection token that can be used to query for a `MatSliderThumb`.\n * Used primarily to avoid circular imports.\n * @docs-private\n */\nconst MAT_SLIDER_THUMB = new InjectionToken('_MatSliderThumb');\n/**\n * Injection token that can be used to query for a `MatSliderRangeThumb`.\n * Used primarily to avoid circular imports.\n * @docs-private\n */\nconst MAT_SLIDER_RANGE_THUMB = new InjectionToken('_MatSliderRangeThumb');\n/**\n * Injection token that can be used to query for a `MatSliderVisualThumb`.\n * Used primarily to avoid circular imports.\n * @docs-private\n */\nconst MAT_SLIDER_VISUAL_THUMB = new InjectionToken('_MatSliderVisualThumb');\n/**\n * A simple change event emitted by the MatSlider component.\n * @deprecated Use event bindings directly on the MatSliderThumbs for `change` and `input` events. See https://v17.material.angular.dev/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatSliderChange {\n    /** The MatSliderThumb that was interacted with. */\n    source;\n    /** The MatSlider that was interacted with. */\n    parent;\n    /** The new value of the source slider. */\n    value;\n}\n\n/**\n * The visual slider thumb.\n *\n * Handles the slider thumb ripple states (hover, focus, and active),\n * and displaying the value tooltip on discrete sliders.\n * @docs-private\n */\nclass MatSliderVisualThumb {\n    _cdr = inject(ChangeDetectorRef);\n    _ngZone = inject(NgZone);\n    _slider = inject(MAT_SLIDER);\n    _renderer = inject(Renderer2);\n    _listenerCleanups;\n    /** Whether the slider displays a numeric value label upon pressing the thumb. */\n    discrete;\n    /** Indicates which slider thumb this input corresponds to. */\n    thumbPosition;\n    /** The display value of the slider thumb. */\n    valueIndicatorText;\n    /** The MatRipple for this slider thumb. */\n    _ripple;\n    /** The slider thumb knob. */\n    _knob;\n    /** The slider thumb value indicator container. */\n    _valueIndicatorContainer;\n    /** The slider input corresponding to this slider thumb. */\n    _sliderInput;\n    /** The native html element of the slider input corresponding to this thumb. */\n    _sliderInputEl;\n    /** The RippleRef for the slider thumbs hover state. */\n    _hoverRippleRef;\n    /** The RippleRef for the slider thumbs focus state. */\n    _focusRippleRef;\n    /** The RippleRef for the slider thumbs active state. */\n    _activeRippleRef;\n    /** Whether the slider thumb is currently being hovered. */\n    _isHovered = false;\n    /** Whether the slider thumb is currently being pressed. */\n    _isActive = false;\n    /** Whether the value indicator tooltip is visible. */\n    _isValueIndicatorVisible = false;\n    /** The host native HTML input element. */\n    _hostElement = inject(ElementRef).nativeElement;\n    _platform = inject(Platform);\n    constructor() { }\n    ngAfterViewInit() {\n        const sliderInput = this._slider._getInput(this.thumbPosition);\n        // No-op if the slider isn't configured properly. `MatSlider` will\n        // throw an error instructing the user how to set up the slider.\n        if (!sliderInput) {\n            return;\n        }\n        this._ripple.radius = 24;\n        this._sliderInput = sliderInput;\n        this._sliderInputEl = this._sliderInput._hostElement;\n        // These listeners don't update any data bindings so we bind them outside\n        // of the NgZone to prevent Angular from needlessly running change detection.\n        this._ngZone.runOutsideAngular(() => {\n            const input = this._sliderInputEl;\n            const renderer = this._renderer;\n            this._listenerCleanups = [\n                renderer.listen(input, 'pointermove', this._onPointerMove),\n                renderer.listen(input, 'pointerdown', this._onDragStart),\n                renderer.listen(input, 'pointerup', this._onDragEnd),\n                renderer.listen(input, 'pointerleave', this._onMouseLeave),\n                renderer.listen(input, 'focus', this._onFocus),\n                renderer.listen(input, 'blur', this._onBlur),\n            ];\n        });\n    }\n    ngOnDestroy() {\n        this._listenerCleanups?.forEach(cleanup => cleanup());\n    }\n    _onPointerMove = (event) => {\n        if (this._sliderInput._isFocused) {\n            return;\n        }\n        const rect = this._hostElement.getBoundingClientRect();\n        const isHovered = this._slider._isCursorOnSliderThumb(event, rect);\n        this._isHovered = isHovered;\n        if (isHovered) {\n            this._showHoverRipple();\n        }\n        else {\n            this._hideRipple(this._hoverRippleRef);\n        }\n    };\n    _onMouseLeave = () => {\n        this._isHovered = false;\n        this._hideRipple(this._hoverRippleRef);\n    };\n    _onFocus = () => {\n        // We don't want to show the hover ripple on top of the focus ripple.\n        // Happen when the users cursor is over a thumb and then the user tabs to it.\n        this._hideRipple(this._hoverRippleRef);\n        this._showFocusRipple();\n        this._hostElement.classList.add('mdc-slider__thumb--focused');\n    };\n    _onBlur = () => {\n        // Happens when the user tabs away while still dragging a thumb.\n        if (!this._isActive) {\n            this._hideRipple(this._focusRippleRef);\n        }\n        // Happens when the user tabs away from a thumb but their cursor is still over it.\n        if (this._isHovered) {\n            this._showHoverRipple();\n        }\n        this._hostElement.classList.remove('mdc-slider__thumb--focused');\n    };\n    _onDragStart = (event) => {\n        if (event.button !== 0) {\n            return;\n        }\n        this._isActive = true;\n        this._showActiveRipple();\n    };\n    _onDragEnd = () => {\n        this._isActive = false;\n        this._hideRipple(this._activeRippleRef);\n        // Happens when the user starts dragging a thumb, tabs away, and then stops dragging.\n        if (!this._sliderInput._isFocused) {\n            this._hideRipple(this._focusRippleRef);\n        }\n        // On Safari we need to immediately re-show the hover ripple because\n        // sliders do not retain focus from pointer events on that platform.\n        if (this._platform.SAFARI) {\n            this._showHoverRipple();\n        }\n    };\n    /** Handles displaying the hover ripple. */\n    _showHoverRipple() {\n        if (!this._isShowingRipple(this._hoverRippleRef)) {\n            this._hoverRippleRef = this._showRipple({ enterDuration: 0, exitDuration: 0 });\n            this._hoverRippleRef?.element.classList.add('mat-mdc-slider-hover-ripple');\n        }\n    }\n    /** Handles displaying the focus ripple. */\n    _showFocusRipple() {\n        // Show the focus ripple event if noop animations are enabled.\n        if (!this._isShowingRipple(this._focusRippleRef)) {\n            this._focusRippleRef = this._showRipple({ enterDuration: 0, exitDuration: 0 }, true);\n            this._focusRippleRef?.element.classList.add('mat-mdc-slider-focus-ripple');\n        }\n    }\n    /** Handles displaying the active ripple. */\n    _showActiveRipple() {\n        if (!this._isShowingRipple(this._activeRippleRef)) {\n            this._activeRippleRef = this._showRipple({ enterDuration: 225, exitDuration: 400 });\n            this._activeRippleRef?.element.classList.add('mat-mdc-slider-active-ripple');\n        }\n    }\n    /** Whether the given rippleRef is currently fading in or visible. */\n    _isShowingRipple(rippleRef) {\n        return rippleRef?.state === RippleState.FADING_IN || rippleRef?.state === RippleState.VISIBLE;\n    }\n    /** Manually launches the slider thumb ripple using the specified ripple animation config. */\n    _showRipple(animation, ignoreGlobalRippleConfig) {\n        if (this._slider.disabled) {\n            return;\n        }\n        this._showValueIndicator();\n        if (this._slider._isRange) {\n            const sibling = this._slider._getThumb(this.thumbPosition === _MatThumb.START ? _MatThumb.END : _MatThumb.START);\n            sibling._showValueIndicator();\n        }\n        if (this._slider._globalRippleOptions?.disabled && !ignoreGlobalRippleConfig) {\n            return;\n        }\n        return this._ripple.launch({\n            animation: this._slider._noopAnimations ? { enterDuration: 0, exitDuration: 0 } : animation,\n            centered: true,\n            persistent: true,\n        });\n    }\n    /**\n     * Fades out the given ripple.\n     * Also hides the value indicator if no ripple is showing.\n     */\n    _hideRipple(rippleRef) {\n        rippleRef?.fadeOut();\n        if (this._isShowingAnyRipple()) {\n            return;\n        }\n        if (!this._slider._isRange) {\n            this._hideValueIndicator();\n        }\n        const sibling = this._getSibling();\n        if (!sibling._isShowingAnyRipple()) {\n            this._hideValueIndicator();\n            sibling._hideValueIndicator();\n        }\n    }\n    /** Shows the value indicator ui. */\n    _showValueIndicator() {\n        this._hostElement.classList.add('mdc-slider__thumb--with-indicator');\n    }\n    /** Hides the value indicator ui. */\n    _hideValueIndicator() {\n        this._hostElement.classList.remove('mdc-slider__thumb--with-indicator');\n    }\n    _getSibling() {\n        return this._slider._getThumb(this.thumbPosition === _MatThumb.START ? _MatThumb.END : _MatThumb.START);\n    }\n    /** Gets the value indicator container's native HTML element. */\n    _getValueIndicatorContainer() {\n        return this._valueIndicatorContainer?.nativeElement;\n    }\n    /** Gets the native HTML element of the slider thumb knob. */\n    _getKnob() {\n        return this._knob.nativeElement;\n    }\n    _isShowingAnyRipple() {\n        return (this._isShowingRipple(this._hoverRippleRef) ||\n            this._isShowingRipple(this._focusRippleRef) ||\n            this._isShowingRipple(this._activeRippleRef));\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatSliderVisualThumb, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"20.0.0\", type: MatSliderVisualThumb, isStandalone: true, selector: \"mat-slider-visual-thumb\", inputs: { discrete: \"discrete\", thumbPosition: \"thumbPosition\", valueIndicatorText: \"valueIndicatorText\" }, host: { classAttribute: \"mdc-slider__thumb mat-mdc-slider-visual-thumb\" }, providers: [{ provide: MAT_SLIDER_VISUAL_THUMB, useExisting: MatSliderVisualThumb }], viewQueries: [{ propertyName: \"_ripple\", first: true, predicate: MatRipple, descendants: true }, { propertyName: \"_knob\", first: true, predicate: [\"knob\"], descendants: true }, { propertyName: \"_valueIndicatorContainer\", first: true, predicate: [\"valueIndicatorContainer\"], descendants: true }], ngImport: i0, template: \"@if (discrete) {\\n  <div class=\\\"mdc-slider__value-indicator-container\\\" #valueIndicatorContainer>\\n    <div class=\\\"mdc-slider__value-indicator\\\">\\n      <span class=\\\"mdc-slider__value-indicator-text\\\">{{valueIndicatorText}}</span>\\n    </div>\\n  </div>\\n}\\n<div class=\\\"mdc-slider__thumb-knob\\\" #knob></div>\\n<div matRipple class=\\\"mat-focus-indicator\\\" [matRippleDisabled]=\\\"true\\\"></div>\\n\", styles: [\".mat-mdc-slider-visual-thumb .mat-ripple{height:100%;width:100%}.mat-mdc-slider .mdc-slider__tick-marks{justify-content:start}.mat-mdc-slider .mdc-slider__tick-marks .mdc-slider__tick-mark--active,.mat-mdc-slider .mdc-slider__tick-marks .mdc-slider__tick-mark--inactive{position:absolute;left:2px}\\n\"], dependencies: [{ kind: \"directive\", type: MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatSliderVisualThumb, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-slider-visual-thumb', host: {\n                        'class': 'mdc-slider__thumb mat-mdc-slider-visual-thumb',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, providers: [{ provide: MAT_SLIDER_VISUAL_THUMB, useExisting: MatSliderVisualThumb }], imports: [MatRipple], template: \"@if (discrete) {\\n  <div class=\\\"mdc-slider__value-indicator-container\\\" #valueIndicatorContainer>\\n    <div class=\\\"mdc-slider__value-indicator\\\">\\n      <span class=\\\"mdc-slider__value-indicator-text\\\">{{valueIndicatorText}}</span>\\n    </div>\\n  </div>\\n}\\n<div class=\\\"mdc-slider__thumb-knob\\\" #knob></div>\\n<div matRipple class=\\\"mat-focus-indicator\\\" [matRippleDisabled]=\\\"true\\\"></div>\\n\", styles: [\".mat-mdc-slider-visual-thumb .mat-ripple{height:100%;width:100%}.mat-mdc-slider .mdc-slider__tick-marks{justify-content:start}.mat-mdc-slider .mdc-slider__tick-marks .mdc-slider__tick-mark--active,.mat-mdc-slider .mdc-slider__tick-marks .mdc-slider__tick-mark--inactive{position:absolute;left:2px}\\n\"] }]\n        }], ctorParameters: () => [], propDecorators: { discrete: [{\n                type: Input\n            }], thumbPosition: [{\n                type: Input\n            }], valueIndicatorText: [{\n                type: Input\n            }], _ripple: [{\n                type: ViewChild,\n                args: [MatRipple]\n            }], _knob: [{\n                type: ViewChild,\n                args: ['knob']\n            }], _valueIndicatorContainer: [{\n                type: ViewChild,\n                args: ['valueIndicatorContainer']\n            }] } });\n\n// TODO(wagnermaciel): maybe handle the following edge case:\n// 1. start dragging discrete slider\n// 2. tab to disable checkbox\n// 3. without ending drag, disable the slider\n/**\n * Allows users to select from a range of values by moving the slider thumb. It is similar in\n * behavior to the native `<input type=\"range\">` element.\n */\nclass MatSlider {\n    _ngZone = inject(NgZone);\n    _cdr = inject(ChangeDetectorRef);\n    _elementRef = inject(ElementRef);\n    _dir = inject(Directionality, { optional: true });\n    _globalRippleOptions = inject(MAT_RIPPLE_GLOBAL_OPTIONS, {\n        optional: true,\n    });\n    /** The active portion of the slider track. */\n    _trackActive;\n    /** The slider thumb(s). */\n    _thumbs;\n    /** The sliders hidden range input(s). */\n    _input;\n    /** The sliders hidden range input(s). */\n    _inputs;\n    /** Whether the slider is disabled. */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(v) {\n        this._disabled = v;\n        const endInput = this._getInput(_MatThumb.END);\n        const startInput = this._getInput(_MatThumb.START);\n        if (endInput) {\n            endInput.disabled = this._disabled;\n        }\n        if (startInput) {\n            startInput.disabled = this._disabled;\n        }\n    }\n    _disabled = false;\n    /** Whether the slider displays a numeric value label upon pressing the thumb. */\n    get discrete() {\n        return this._discrete;\n    }\n    set discrete(v) {\n        this._discrete = v;\n        this._updateValueIndicatorUIs();\n    }\n    _discrete = false;\n    /** Whether the slider displays tick marks along the slider track. */\n    get showTickMarks() {\n        return this._showTickMarks;\n    }\n    set showTickMarks(value) {\n        this._showTickMarks = value;\n        if (this._hasViewInitialized) {\n            this._updateTickMarkUI();\n            this._updateTickMarkTrackUI();\n        }\n    }\n    _showTickMarks = false;\n    /** The minimum value that the slider can have. */\n    get min() {\n        return this._min;\n    }\n    set min(v) {\n        const min = v === undefined || v === null || isNaN(v) ? this._min : v;\n        if (this._min !== min) {\n            this._updateMin(min);\n        }\n    }\n    _min = 0;\n    /**\n     * Theme color of the slider. This API is supported in M2 themes only, it\n     * has no effect in M3 themes. For color customization in M3, see https://material.angular.dev/components/slider/styling.\n     *\n     * For information on applying color variants in M3, see\n     * https://material.angular.dev/guide/material-2-theming#optional-add-backwards-compatibility-styles-for-color-variants\n     */\n    color;\n    /** Whether ripples are disabled in the slider. */\n    disableRipple = false;\n    _updateMin(min) {\n        const prevMin = this._min;\n        this._min = min;\n        this._isRange ? this._updateMinRange({ old: prevMin, new: min }) : this._updateMinNonRange(min);\n        this._onMinMaxOrStepChange();\n    }\n    _updateMinRange(min) {\n        const endInput = this._getInput(_MatThumb.END);\n        const startInput = this._getInput(_MatThumb.START);\n        const oldEndValue = endInput.value;\n        const oldStartValue = startInput.value;\n        startInput.min = min.new;\n        endInput.min = Math.max(min.new, startInput.value);\n        startInput.max = Math.min(endInput.max, endInput.value);\n        startInput._updateWidthInactive();\n        endInput._updateWidthInactive();\n        min.new < min.old\n            ? this._onTranslateXChangeBySideEffect(endInput, startInput)\n            : this._onTranslateXChangeBySideEffect(startInput, endInput);\n        if (oldEndValue !== endInput.value) {\n            this._onValueChange(endInput);\n        }\n        if (oldStartValue !== startInput.value) {\n            this._onValueChange(startInput);\n        }\n    }\n    _updateMinNonRange(min) {\n        const input = this._getInput(_MatThumb.END);\n        if (input) {\n            const oldValue = input.value;\n            input.min = min;\n            input._updateThumbUIByValue();\n            this._updateTrackUI(input);\n            if (oldValue !== input.value) {\n                this._onValueChange(input);\n            }\n        }\n    }\n    /** The maximum value that the slider can have. */\n    get max() {\n        return this._max;\n    }\n    set max(v) {\n        const max = v === undefined || v === null || isNaN(v) ? this._max : v;\n        if (this._max !== max) {\n            this._updateMax(max);\n        }\n    }\n    _max = 100;\n    _updateMax(max) {\n        const prevMax = this._max;\n        this._max = max;\n        this._isRange ? this._updateMaxRange({ old: prevMax, new: max }) : this._updateMaxNonRange(max);\n        this._onMinMaxOrStepChange();\n    }\n    _updateMaxRange(max) {\n        const endInput = this._getInput(_MatThumb.END);\n        const startInput = this._getInput(_MatThumb.START);\n        const oldEndValue = endInput.value;\n        const oldStartValue = startInput.value;\n        endInput.max = max.new;\n        startInput.max = Math.min(max.new, endInput.value);\n        endInput.min = startInput.value;\n        endInput._updateWidthInactive();\n        startInput._updateWidthInactive();\n        max.new > max.old\n            ? this._onTranslateXChangeBySideEffect(startInput, endInput)\n            : this._onTranslateXChangeBySideEffect(endInput, startInput);\n        if (oldEndValue !== endInput.value) {\n            this._onValueChange(endInput);\n        }\n        if (oldStartValue !== startInput.value) {\n            this._onValueChange(startInput);\n        }\n    }\n    _updateMaxNonRange(max) {\n        const input = this._getInput(_MatThumb.END);\n        if (input) {\n            const oldValue = input.value;\n            input.max = max;\n            input._updateThumbUIByValue();\n            this._updateTrackUI(input);\n            if (oldValue !== input.value) {\n                this._onValueChange(input);\n            }\n        }\n    }\n    /** The values at which the thumb will snap. */\n    get step() {\n        return this._step;\n    }\n    set step(v) {\n        const step = isNaN(v) ? this._step : v;\n        if (this._step !== step) {\n            this._updateStep(step);\n        }\n    }\n    _step = 1;\n    _updateStep(step) {\n        this._step = step;\n        this._isRange ? this._updateStepRange() : this._updateStepNonRange();\n        this._onMinMaxOrStepChange();\n    }\n    _updateStepRange() {\n        const endInput = this._getInput(_MatThumb.END);\n        const startInput = this._getInput(_MatThumb.START);\n        const oldEndValue = endInput.value;\n        const oldStartValue = startInput.value;\n        const prevStartValue = startInput.value;\n        endInput.min = this._min;\n        startInput.max = this._max;\n        endInput.step = this._step;\n        startInput.step = this._step;\n        if (this._platform.SAFARI) {\n            endInput.value = endInput.value;\n            startInput.value = startInput.value;\n        }\n        endInput.min = Math.max(this._min, startInput.value);\n        startInput.max = Math.min(this._max, endInput.value);\n        startInput._updateWidthInactive();\n        endInput._updateWidthInactive();\n        endInput.value < prevStartValue\n            ? this._onTranslateXChangeBySideEffect(startInput, endInput)\n            : this._onTranslateXChangeBySideEffect(endInput, startInput);\n        if (oldEndValue !== endInput.value) {\n            this._onValueChange(endInput);\n        }\n        if (oldStartValue !== startInput.value) {\n            this._onValueChange(startInput);\n        }\n    }\n    _updateStepNonRange() {\n        const input = this._getInput(_MatThumb.END);\n        if (input) {\n            const oldValue = input.value;\n            input.step = this._step;\n            if (this._platform.SAFARI) {\n                input.value = input.value;\n            }\n            input._updateThumbUIByValue();\n            if (oldValue !== input.value) {\n                this._onValueChange(input);\n            }\n        }\n    }\n    /**\n     * Function that will be used to format the value before it is displayed\n     * in the thumb label. Can be used to format very large number in order\n     * for them to fit into the slider thumb.\n     */\n    displayWith = (value) => `${value}`;\n    /** Used to keep track of & render the active & inactive tick marks on the slider track. */\n    _tickMarks;\n    /** Whether animations have been disabled. */\n    _noopAnimations = _animationsDisabled();\n    /** Subscription to changes to the directionality (LTR / RTL) context for the application. */\n    _dirChangeSubscription;\n    /** Observer used to monitor size changes in the slider. */\n    _resizeObserver;\n    // Stored dimensions to avoid calling getBoundingClientRect redundantly.\n    _cachedWidth;\n    _cachedLeft;\n    _rippleRadius = 24;\n    // The value indicator tooltip text for the visual slider thumb(s).\n    /** @docs-private */\n    startValueIndicatorText = '';\n    /** @docs-private */\n    endValueIndicatorText = '';\n    // Used to control the translateX of the visual slider thumb(s).\n    _endThumbTransform;\n    _startThumbTransform;\n    _isRange = false;\n    /** Whether the slider is rtl. */\n    _isRtl = false;\n    _hasViewInitialized = false;\n    /**\n     * The width of the tick mark track.\n     * The tick mark track width is different from full track width\n     */\n    _tickMarkTrackWidth = 0;\n    _hasAnimation = false;\n    _resizeTimer = null;\n    _platform = inject(Platform);\n    constructor() {\n        inject(_CdkPrivateStyleLoader).load(_StructuralStylesLoader);\n        if (this._dir) {\n            this._dirChangeSubscription = this._dir.change.subscribe(() => this._onDirChange());\n            this._isRtl = this._dir.value === 'rtl';\n        }\n    }\n    /** The radius of the native slider's knob. AFAIK there is no way to avoid hardcoding this. */\n    _knobRadius = 8;\n    _inputPadding;\n    ngAfterViewInit() {\n        if (this._platform.isBrowser) {\n            this._updateDimensions();\n        }\n        const eInput = this._getInput(_MatThumb.END);\n        const sInput = this._getInput(_MatThumb.START);\n        this._isRange = !!eInput && !!sInput;\n        this._cdr.detectChanges();\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            _validateInputs(this._isRange, this._getInput(_MatThumb.END), this._getInput(_MatThumb.START));\n        }\n        const thumb = this._getThumb(_MatThumb.END);\n        this._rippleRadius = thumb._ripple.radius;\n        this._inputPadding = this._rippleRadius - this._knobRadius;\n        this._isRange\n            ? this._initUIRange(eInput, sInput)\n            : this._initUINonRange(eInput);\n        this._updateTrackUI(eInput);\n        this._updateTickMarkUI();\n        this._updateTickMarkTrackUI();\n        this._observeHostResize();\n        this._cdr.detectChanges();\n    }\n    _initUINonRange(eInput) {\n        eInput.initProps();\n        eInput.initUI();\n        this._updateValueIndicatorUI(eInput);\n        this._hasViewInitialized = true;\n        eInput._updateThumbUIByValue();\n    }\n    _initUIRange(eInput, sInput) {\n        eInput.initProps();\n        eInput.initUI();\n        sInput.initProps();\n        sInput.initUI();\n        eInput._updateMinMax();\n        sInput._updateMinMax();\n        eInput._updateStaticStyles();\n        sInput._updateStaticStyles();\n        this._updateValueIndicatorUIs();\n        this._hasViewInitialized = true;\n        eInput._updateThumbUIByValue();\n        sInput._updateThumbUIByValue();\n    }\n    ngOnDestroy() {\n        this._dirChangeSubscription.unsubscribe();\n        this._resizeObserver?.disconnect();\n        this._resizeObserver = null;\n    }\n    /** Handles updating the slider ui after a dir change. */\n    _onDirChange() {\n        this._isRtl = this._dir?.value === 'rtl';\n        this._isRange ? this._onDirChangeRange() : this._onDirChangeNonRange();\n        this._updateTickMarkUI();\n    }\n    _onDirChangeRange() {\n        const endInput = this._getInput(_MatThumb.END);\n        const startInput = this._getInput(_MatThumb.START);\n        endInput._setIsLeftThumb();\n        startInput._setIsLeftThumb();\n        endInput.translateX = endInput._calcTranslateXByValue();\n        startInput.translateX = startInput._calcTranslateXByValue();\n        endInput._updateStaticStyles();\n        startInput._updateStaticStyles();\n        endInput._updateWidthInactive();\n        startInput._updateWidthInactive();\n        endInput._updateThumbUIByValue();\n        startInput._updateThumbUIByValue();\n    }\n    _onDirChangeNonRange() {\n        const input = this._getInput(_MatThumb.END);\n        input._updateThumbUIByValue();\n    }\n    /** Starts observing and updating the slider if the host changes its size. */\n    _observeHostResize() {\n        if (typeof ResizeObserver === 'undefined' || !ResizeObserver) {\n            return;\n        }\n        this._ngZone.runOutsideAngular(() => {\n            this._resizeObserver = new ResizeObserver(() => {\n                if (this._isActive()) {\n                    return;\n                }\n                if (this._resizeTimer) {\n                    clearTimeout(this._resizeTimer);\n                }\n                this._onResize();\n            });\n            this._resizeObserver.observe(this._elementRef.nativeElement);\n        });\n    }\n    /** Whether any of the thumbs are currently active. */\n    _isActive() {\n        return this._getThumb(_MatThumb.START)._isActive || this._getThumb(_MatThumb.END)._isActive;\n    }\n    _getValue(thumbPosition = _MatThumb.END) {\n        const input = this._getInput(thumbPosition);\n        if (!input) {\n            return this.min;\n        }\n        return input.value;\n    }\n    _skipUpdate() {\n        return !!(this._getInput(_MatThumb.START)?._skipUIUpdate || this._getInput(_MatThumb.END)?._skipUIUpdate);\n    }\n    /** Stores the slider dimensions. */\n    _updateDimensions() {\n        this._cachedWidth = this._elementRef.nativeElement.offsetWidth;\n        this._cachedLeft = this._elementRef.nativeElement.getBoundingClientRect().left;\n    }\n    /** Sets the styles for the active portion of the track. */\n    _setTrackActiveStyles(styles) {\n        const trackStyle = this._trackActive.nativeElement.style;\n        trackStyle.left = styles.left;\n        trackStyle.right = styles.right;\n        trackStyle.transformOrigin = styles.transformOrigin;\n        trackStyle.transform = styles.transform;\n    }\n    /** Returns the translateX positioning for a tick mark based on it's index. */\n    _calcTickMarkTransform(index) {\n        // TODO(wagnermaciel): See if we can avoid doing this and just using flex to position these.\n        const offset = index * (this._tickMarkTrackWidth / (this._tickMarks.length - 1));\n        const translateX = this._isRtl ? this._cachedWidth - 6 - offset : offset;\n        return `translateX(${translateX}px`;\n    }\n    // Handlers for updating the slider ui.\n    _onTranslateXChange(source) {\n        if (!this._hasViewInitialized) {\n            return;\n        }\n        this._updateThumbUI(source);\n        this._updateTrackUI(source);\n        this._updateOverlappingThumbUI(source);\n    }\n    _onTranslateXChangeBySideEffect(input1, input2) {\n        if (!this._hasViewInitialized) {\n            return;\n        }\n        input1._updateThumbUIByValue();\n        input2._updateThumbUIByValue();\n    }\n    _onValueChange(source) {\n        if (!this._hasViewInitialized) {\n            return;\n        }\n        this._updateValueIndicatorUI(source);\n        this._updateTickMarkUI();\n        this._cdr.detectChanges();\n    }\n    _onMinMaxOrStepChange() {\n        if (!this._hasViewInitialized) {\n            return;\n        }\n        this._updateTickMarkUI();\n        this._updateTickMarkTrackUI();\n        this._cdr.markForCheck();\n    }\n    _onResize() {\n        if (!this._hasViewInitialized) {\n            return;\n        }\n        this._updateDimensions();\n        if (this._isRange) {\n            const eInput = this._getInput(_MatThumb.END);\n            const sInput = this._getInput(_MatThumb.START);\n            eInput._updateThumbUIByValue();\n            sInput._updateThumbUIByValue();\n            eInput._updateStaticStyles();\n            sInput._updateStaticStyles();\n            eInput._updateMinMax();\n            sInput._updateMinMax();\n            eInput._updateWidthInactive();\n            sInput._updateWidthInactive();\n        }\n        else {\n            const eInput = this._getInput(_MatThumb.END);\n            if (eInput) {\n                eInput._updateThumbUIByValue();\n            }\n        }\n        this._updateTickMarkUI();\n        this._updateTickMarkTrackUI();\n        this._cdr.detectChanges();\n    }\n    /** Whether or not the slider thumbs overlap. */\n    _thumbsOverlap = false;\n    /** Returns true if the slider knobs are overlapping one another. */\n    _areThumbsOverlapping() {\n        const startInput = this._getInput(_MatThumb.START);\n        const endInput = this._getInput(_MatThumb.END);\n        if (!startInput || !endInput) {\n            return false;\n        }\n        return endInput.translateX - startInput.translateX < 20;\n    }\n    /**\n     * Updates the class names of overlapping slider thumbs so\n     * that the current active thumb is styled to be on \"top\".\n     */\n    _updateOverlappingThumbClassNames(source) {\n        const sibling = source.getSibling();\n        const sourceThumb = this._getThumb(source.thumbPosition);\n        const siblingThumb = this._getThumb(sibling.thumbPosition);\n        siblingThumb._hostElement.classList.remove('mdc-slider__thumb--top');\n        sourceThumb._hostElement.classList.toggle('mdc-slider__thumb--top', this._thumbsOverlap);\n    }\n    /** Updates the UI of slider thumbs when they begin or stop overlapping. */\n    _updateOverlappingThumbUI(source) {\n        if (!this._isRange || this._skipUpdate()) {\n            return;\n        }\n        if (this._thumbsOverlap !== this._areThumbsOverlapping()) {\n            this._thumbsOverlap = !this._thumbsOverlap;\n            this._updateOverlappingThumbClassNames(source);\n        }\n    }\n    // _MatThumb styles update conditions\n    //\n    // 1. TranslateX, resize, or dir change\n    //    - Reason: The thumb styles need to be updated according to the new translateX.\n    // 2. Min, max, or step\n    //    - Reason: The value may have silently changed.\n    /** Updates the translateX of the given thumb. */\n    _updateThumbUI(source) {\n        if (this._skipUpdate()) {\n            return;\n        }\n        const thumb = this._getThumb(source.thumbPosition === _MatThumb.END ? _MatThumb.END : _MatThumb.START);\n        thumb._hostElement.style.transform = `translateX(${source.translateX}px)`;\n    }\n    // Value indicator text update conditions\n    //\n    // 1. Value\n    //    - Reason: The value displayed needs to be updated.\n    // 2. Min, max, or step\n    //    - Reason: The value may have silently changed.\n    /** Updates the value indicator tooltip ui for the given thumb. */\n    _updateValueIndicatorUI(source) {\n        if (this._skipUpdate()) {\n            return;\n        }\n        const valuetext = this.displayWith(source.value);\n        this._hasViewInitialized\n            ? source._valuetext.set(valuetext)\n            : source._hostElement.setAttribute('aria-valuetext', valuetext);\n        if (this.discrete) {\n            source.thumbPosition === _MatThumb.START\n                ? (this.startValueIndicatorText = valuetext)\n                : (this.endValueIndicatorText = valuetext);\n            const visualThumb = this._getThumb(source.thumbPosition);\n            valuetext.length < 3\n                ? visualThumb._hostElement.classList.add('mdc-slider__thumb--short-value')\n                : visualThumb._hostElement.classList.remove('mdc-slider__thumb--short-value');\n        }\n    }\n    /** Updates all value indicator UIs in the slider. */\n    _updateValueIndicatorUIs() {\n        const eInput = this._getInput(_MatThumb.END);\n        const sInput = this._getInput(_MatThumb.START);\n        if (eInput) {\n            this._updateValueIndicatorUI(eInput);\n        }\n        if (sInput) {\n            this._updateValueIndicatorUI(sInput);\n        }\n    }\n    // Update Tick Mark Track Width\n    //\n    // 1. Min, max, or step\n    //    - Reason: The maximum reachable value may have changed.\n    //    - Side note: The maximum reachable value is different from the maximum value set by the\n    //      user. For example, a slider with [min: 5, max: 100, step: 10] would have a maximum\n    //      reachable value of 95.\n    // 2. Resize\n    //    - Reason: The position for the maximum reachable value needs to be recalculated.\n    /** Updates the width of the tick mark track. */\n    _updateTickMarkTrackUI() {\n        if (!this.showTickMarks || this._skipUpdate()) {\n            return;\n        }\n        const step = this._step && this._step > 0 ? this._step : 1;\n        const maxValue = Math.floor(this.max / step) * step;\n        const percentage = (maxValue - this.min) / (this.max - this.min);\n        this._tickMarkTrackWidth = (this._cachedWidth - 6) * percentage;\n    }\n    // Track active update conditions\n    //\n    // 1. TranslateX\n    //    - Reason: The track active should line up with the new thumb position.\n    // 2. Min or max\n    //    - Reason #1: The 'active' percentage needs to be recalculated.\n    //    - Reason #2: The value may have silently changed.\n    // 3. Step\n    //    - Reason: The value may have silently changed causing the thumb(s) to shift.\n    // 4. Dir change\n    //    - Reason: The track active will need to be updated according to the new thumb position(s).\n    // 5. Resize\n    //    - Reason: The total width the 'active' tracks translateX is based on has changed.\n    /** Updates the scale on the active portion of the track. */\n    _updateTrackUI(source) {\n        if (this._skipUpdate()) {\n            return;\n        }\n        this._isRange\n            ? this._updateTrackUIRange(source)\n            : this._updateTrackUINonRange(source);\n    }\n    _updateTrackUIRange(source) {\n        const sibling = source.getSibling();\n        if (!sibling || !this._cachedWidth) {\n            return;\n        }\n        const activePercentage = Math.abs(sibling.translateX - source.translateX) / this._cachedWidth;\n        if (source._isLeftThumb && this._cachedWidth) {\n            this._setTrackActiveStyles({\n                left: 'auto',\n                right: `${this._cachedWidth - sibling.translateX}px`,\n                transformOrigin: 'right',\n                transform: `scaleX(${activePercentage})`,\n            });\n        }\n        else {\n            this._setTrackActiveStyles({\n                left: `${sibling.translateX}px`,\n                right: 'auto',\n                transformOrigin: 'left',\n                transform: `scaleX(${activePercentage})`,\n            });\n        }\n    }\n    _updateTrackUINonRange(source) {\n        this._isRtl\n            ? this._setTrackActiveStyles({\n                left: 'auto',\n                right: '0px',\n                transformOrigin: 'right',\n                transform: `scaleX(${1 - source.fillPercentage})`,\n            })\n            : this._setTrackActiveStyles({\n                left: '0px',\n                right: 'auto',\n                transformOrigin: 'left',\n                transform: `scaleX(${source.fillPercentage})`,\n            });\n    }\n    // Tick mark update conditions\n    //\n    // 1. Value\n    //    - Reason: a tick mark which was once active might now be inactive or vice versa.\n    // 2. Min, max, or step\n    //    - Reason #1: the number of tick marks may have changed.\n    //    - Reason #2: The value may have silently changed.\n    /** Updates the dots along the slider track. */\n    _updateTickMarkUI() {\n        if (!this.showTickMarks ||\n            this.step === undefined ||\n            this.min === undefined ||\n            this.max === undefined) {\n            return;\n        }\n        const step = this.step > 0 ? this.step : 1;\n        this._isRange ? this._updateTickMarkUIRange(step) : this._updateTickMarkUINonRange(step);\n    }\n    _updateTickMarkUINonRange(step) {\n        const value = this._getValue();\n        let numActive = Math.max(Math.round((value - this.min) / step), 0) + 1;\n        let numInactive = Math.max(Math.round((this.max - value) / step), 0) - 1;\n        this._isRtl ? numActive++ : numInactive++;\n        this._tickMarks = Array(numActive)\n            .fill(_MatTickMark.ACTIVE)\n            .concat(Array(numInactive).fill(_MatTickMark.INACTIVE));\n    }\n    _updateTickMarkUIRange(step) {\n        const endValue = this._getValue();\n        const startValue = this._getValue(_MatThumb.START);\n        const numInactiveBeforeStartThumb = Math.max(Math.round((startValue - this.min) / step), 0);\n        const numActive = Math.max(Math.round((endValue - startValue) / step) + 1, 0);\n        const numInactiveAfterEndThumb = Math.max(Math.round((this.max - endValue) / step), 0);\n        this._tickMarks = Array(numInactiveBeforeStartThumb)\n            .fill(_MatTickMark.INACTIVE)\n            .concat(Array(numActive).fill(_MatTickMark.ACTIVE), Array(numInactiveAfterEndThumb).fill(_MatTickMark.INACTIVE));\n    }\n    /** Gets the slider thumb input of the given thumb position. */\n    _getInput(thumbPosition) {\n        if (thumbPosition === _MatThumb.END && this._input) {\n            return this._input;\n        }\n        if (this._inputs?.length) {\n            return thumbPosition === _MatThumb.START ? this._inputs.first : this._inputs.last;\n        }\n        return;\n    }\n    /** Gets the slider thumb HTML input element of the given thumb position. */\n    _getThumb(thumbPosition) {\n        return thumbPosition === _MatThumb.END ? this._thumbs?.last : this._thumbs?.first;\n    }\n    _setTransition(withAnimation) {\n        this._hasAnimation = !this._platform.IOS && withAnimation && !this._noopAnimations;\n        this._elementRef.nativeElement.classList.toggle('mat-mdc-slider-with-animation', this._hasAnimation);\n    }\n    /** Whether the given pointer event occurred within the bounds of the slider pointer's DOM Rect. */\n    _isCursorOnSliderThumb(event, rect) {\n        const radius = rect.width / 2;\n        const centerX = rect.x + radius;\n        const centerY = rect.y + radius;\n        const dx = event.clientX - centerX;\n        const dy = event.clientY - centerY;\n        return Math.pow(dx, 2) + Math.pow(dy, 2) < Math.pow(radius, 2);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatSlider, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"20.0.0\", type: MatSlider, isStandalone: true, selector: \"mat-slider\", inputs: { disabled: [\"disabled\", \"disabled\", booleanAttribute], discrete: [\"discrete\", \"discrete\", booleanAttribute], showTickMarks: [\"showTickMarks\", \"showTickMarks\", booleanAttribute], min: [\"min\", \"min\", numberAttribute], color: \"color\", disableRipple: [\"disableRipple\", \"disableRipple\", booleanAttribute], max: [\"max\", \"max\", numberAttribute], step: [\"step\", \"step\", numberAttribute], displayWith: \"displayWith\" }, host: { properties: { \"class\": \"\\\"mat-\\\" + (color || \\\"primary\\\")\", \"class.mdc-slider--range\": \"_isRange\", \"class.mdc-slider--disabled\": \"disabled\", \"class.mdc-slider--discrete\": \"discrete\", \"class.mdc-slider--tick-marks\": \"showTickMarks\", \"class._mat-animation-noopable\": \"_noopAnimations\" }, classAttribute: \"mat-mdc-slider mdc-slider\" }, providers: [{ provide: MAT_SLIDER, useExisting: MatSlider }], queries: [{ propertyName: \"_input\", first: true, predicate: MAT_SLIDER_THUMB, descendants: true }, { propertyName: \"_inputs\", predicate: MAT_SLIDER_RANGE_THUMB }], viewQueries: [{ propertyName: \"_trackActive\", first: true, predicate: [\"trackActive\"], descendants: true }, { propertyName: \"_thumbs\", predicate: MAT_SLIDER_VISUAL_THUMB, descendants: true }], exportAs: [\"matSlider\"], ngImport: i0, template: \"<!-- Inputs -->\\n<ng-content></ng-content>\\n\\n<!-- Track -->\\n<div class=\\\"mdc-slider__track\\\">\\n  <div class=\\\"mdc-slider__track--inactive\\\"></div>\\n  <div class=\\\"mdc-slider__track--active\\\">\\n    <div #trackActive class=\\\"mdc-slider__track--active_fill\\\"></div>\\n  </div>\\n  @if (showTickMarks) {\\n    <div class=\\\"mdc-slider__tick-marks\\\" #tickMarkContainer>\\n      @if (_cachedWidth) {\\n        @for (tickMark of _tickMarks; track i; let i = $index) {\\n          <div\\n            [class]=\\\"tickMark === 0 ? 'mdc-slider__tick-mark--active' : 'mdc-slider__tick-mark--inactive'\\\"\\n            [style.transform]=\\\"_calcTickMarkTransform(i)\\\"></div>\\n        }\\n      }\\n    </div>\\n  }\\n</div>\\n\\n<!-- Thumbs -->\\n@if (_isRange) {\\n  <mat-slider-visual-thumb\\n    [discrete]=\\\"discrete\\\"\\n    [thumbPosition]=\\\"1\\\"\\n    [valueIndicatorText]=\\\"startValueIndicatorText\\\">\\n  </mat-slider-visual-thumb>\\n}\\n\\n<mat-slider-visual-thumb\\n  [discrete]=\\\"discrete\\\"\\n  [thumbPosition]=\\\"2\\\"\\n  [valueIndicatorText]=\\\"endValueIndicatorText\\\">\\n</mat-slider-visual-thumb>\\n\", styles: [\".mdc-slider__track{position:absolute;top:50%;transform:translateY(-50%);width:100%;pointer-events:none;height:var(--mat-slider-inactive-track-height, 4px)}.mdc-slider__track--active,.mdc-slider__track--inactive{display:flex;height:100%;position:absolute;width:100%}.mdc-slider__track--active{overflow:hidden;border-radius:var(--mat-slider-active-track-shape, var(--mat-sys-corner-full));height:var(--mat-slider-active-track-height, 4px);top:calc((var(--mat-slider-inactive-track-height, 4px) - var(--mat-slider-active-track-height, 4px))/2)}.mdc-slider__track--active_fill{border-top-style:solid;box-sizing:border-box;height:100%;width:100%;position:relative;transform-origin:left;transition:transform 80ms ease;border-color:var(--mat-slider-active-track-color, var(--mat-sys-primary));border-top-width:var(--mat-slider-active-track-height, 4px)}.mdc-slider--disabled .mdc-slider__track--active_fill{border-color:var(--mat-slider-disabled-active-track-color, var(--mat-sys-on-surface))}[dir=rtl] .mdc-slider__track--active_fill{-webkit-transform-origin:right;transform-origin:right}.mdc-slider__track--inactive{left:0;top:0;opacity:.24;background-color:var(--mat-slider-inactive-track-color, var(--mat-sys-surface-variant));height:var(--mat-slider-inactive-track-height, 4px);border-radius:var(--mat-slider-inactive-track-shape, var(--mat-sys-corner-full))}.mdc-slider--disabled .mdc-slider__track--inactive{background-color:var(--mat-slider-disabled-inactive-track-color, var(--mat-sys-on-surface));opacity:.24}.mdc-slider__track--inactive::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media(forced-colors: active){.mdc-slider__track--inactive::before{border-color:CanvasText}}.mdc-slider__value-indicator-container{bottom:44px;left:50%;pointer-events:none;position:absolute;transform:var(--mat-slider-value-indicator-container-transform, translateX(-50%) rotate(-45deg))}.mdc-slider__thumb--with-indicator .mdc-slider__value-indicator-container{pointer-events:auto}.mdc-slider__value-indicator{display:flex;align-items:center;transform:scale(0);transform-origin:bottom;transition:transform 100ms cubic-bezier(0.4, 0, 1, 1);word-break:normal;background-color:var(--mat-slider-label-container-color, var(--mat-sys-primary));color:var(--mat-slider-label-label-text-color, var(--mat-sys-on-primary));width:var(--mat-slider-value-indicator-width, 28px);height:var(--mat-slider-value-indicator-height, 28px);padding:var(--mat-slider-value-indicator-padding, 0);opacity:var(--mat-slider-value-indicator-opacity, 1);border-radius:var(--mat-slider-value-indicator-border-radius, 50% 50% 50% 0)}.mdc-slider__thumb--with-indicator .mdc-slider__value-indicator{transition:transform 100ms cubic-bezier(0, 0, 0.2, 1);transform:scale(1)}.mdc-slider__value-indicator::before{border-left:6px solid rgba(0,0,0,0);border-right:6px solid rgba(0,0,0,0);border-top:6px solid;bottom:-5px;content:\\\"\\\";height:0;left:50%;position:absolute;transform:translateX(-50%);width:0;display:var(--mat-slider-value-indicator-caret-display, none);border-top-color:var(--mat-slider-label-container-color, var(--mat-sys-primary))}.mdc-slider__value-indicator::after{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media(forced-colors: active){.mdc-slider__value-indicator::after{border-color:CanvasText}}.mdc-slider__value-indicator-text{text-align:center;width:var(--mat-slider-value-indicator-width, 28px);transform:var(--mat-slider-value-indicator-text-transform, rotate(45deg));font-family:var(--mat-slider-label-label-text-font, var(--mat-sys-label-medium-font));font-size:var(--mat-slider-label-label-text-size, var(--mat-sys-label-medium-size));font-weight:var(--mat-slider-label-label-text-weight, var(--mat-sys-label-medium-weight));line-height:var(--mat-slider-label-label-text-line-height, var(--mat-sys-label-medium-line-height));letter-spacing:var(--mat-slider-label-label-text-tracking, var(--mat-sys-label-medium-tracking))}.mdc-slider__thumb{-webkit-user-select:none;user-select:none;display:flex;left:-24px;outline:none;position:absolute;height:48px;width:48px;pointer-events:none}.mdc-slider--discrete .mdc-slider__thumb{transition:transform 80ms ease}.mdc-slider--disabled .mdc-slider__thumb{pointer-events:none}.mdc-slider__thumb--top{z-index:1}.mdc-slider__thumb-knob{position:absolute;box-sizing:border-box;left:50%;top:50%;transform:translate(-50%, -50%);border-style:solid;width:var(--mat-slider-handle-width, 20px);height:var(--mat-slider-handle-height, 20px);border-width:calc(var(--mat-slider-handle-height, 20px)/2) calc(var(--mat-slider-handle-width, 20px)/2);box-shadow:var(--mat-slider-handle-elevation, var(--mat-sys-level1));background-color:var(--mat-slider-handle-color, var(--mat-sys-primary));border-color:var(--mat-slider-handle-color, var(--mat-sys-primary));border-radius:var(--mat-slider-handle-shape, var(--mat-sys-corner-full))}.mdc-slider__thumb:hover .mdc-slider__thumb-knob{background-color:var(--mat-slider-hover-handle-color, var(--mat-sys-primary));border-color:var(--mat-slider-hover-handle-color, var(--mat-sys-primary))}.mdc-slider__thumb--focused .mdc-slider__thumb-knob{background-color:var(--mat-slider-focus-handle-color, var(--mat-sys-primary));border-color:var(--mat-slider-focus-handle-color, var(--mat-sys-primary))}.mdc-slider--disabled .mdc-slider__thumb-knob{background-color:var(--mat-slider-disabled-handle-color, var(--mat-sys-on-surface));border-color:var(--mat-slider-disabled-handle-color, var(--mat-sys-on-surface))}.mdc-slider__thumb--top .mdc-slider__thumb-knob,.mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border:solid 1px #fff;box-sizing:content-box;border-color:var(--mat-slider-with-overlap-handle-outline-color, var(--mat-sys-on-primary));border-width:var(--mat-slider-with-overlap-handle-outline-width, 1px)}.mdc-slider__tick-marks{align-items:center;box-sizing:border-box;display:flex;height:100%;justify-content:space-between;padding:0 1px;position:absolute;width:100%}.mdc-slider__tick-mark--active,.mdc-slider__tick-mark--inactive{width:var(--mat-slider-with-tick-marks-container-size, 2px);height:var(--mat-slider-with-tick-marks-container-size, 2px);border-radius:var(--mat-slider-with-tick-marks-container-shape, var(--mat-sys-corner-full))}.mdc-slider__tick-mark--inactive{opacity:var(--mat-slider-with-tick-marks-inactive-container-opacity, 0.38);background-color:var(--mat-slider-with-tick-marks-inactive-container-color, var(--mat-sys-on-surface-variant))}.mdc-slider--disabled .mdc-slider__tick-mark--inactive{opacity:var(--mat-slider-with-tick-marks-inactive-container-opacity, 0.38);background-color:var(--mat-slider-with-tick-marks-disabled-container-color, var(--mat-sys-on-surface))}.mdc-slider__tick-mark--active{opacity:var(--mat-slider-with-tick-marks-active-container-opacity, 0.38);background-color:var(--mat-slider-with-tick-marks-active-container-color, var(--mat-sys-on-primary))}.mdc-slider__input{cursor:pointer;left:2px;margin:0;height:44px;opacity:0;position:absolute;top:2px;width:44px;box-sizing:content-box}.mdc-slider__input.mat-mdc-slider-input-no-pointer-events{pointer-events:none}.mdc-slider__input.mat-slider__right-input{left:auto;right:0}.mat-mdc-slider{display:inline-block;box-sizing:border-box;outline:none;vertical-align:middle;cursor:pointer;height:48px;margin:0 8px;position:relative;touch-action:pan-y;width:auto;min-width:112px;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-slider.mdc-slider--disabled{cursor:auto;opacity:.38}.mat-mdc-slider.mdc-slider--disabled .mdc-slider__input{cursor:auto}.mat-mdc-slider .mdc-slider__thumb,.mat-mdc-slider .mdc-slider__track--active_fill{transition-duration:0ms}.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__thumb,.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__track--active_fill{transition-duration:80ms}.mat-mdc-slider.mdc-slider--discrete .mdc-slider__thumb,.mat-mdc-slider.mdc-slider--discrete .mdc-slider__track--active_fill{transition-duration:0ms}.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__thumb,.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__track--active_fill{transition-duration:80ms}.mat-mdc-slider .mat-ripple .mat-ripple-element{background-color:var(--mat-slider-ripple-color, var(--mat-sys-primary))}.mat-mdc-slider .mat-ripple .mat-mdc-slider-hover-ripple{background-color:var(--mat-slider-hover-state-layer-color, color-mix(in srgb, var(--mat-sys-primary) 5%, transparent))}.mat-mdc-slider .mat-ripple .mat-mdc-slider-focus-ripple,.mat-mdc-slider .mat-ripple .mat-mdc-slider-active-ripple{background-color:var(--mat-slider-focus-state-layer-color, color-mix(in srgb, var(--mat-sys-primary) 20%, transparent))}.mat-mdc-slider._mat-animation-noopable.mdc-slider--discrete .mdc-slider__thumb,.mat-mdc-slider._mat-animation-noopable.mdc-slider--discrete .mdc-slider__track--active_fill,.mat-mdc-slider._mat-animation-noopable .mdc-slider__value-indicator{transition:none}.mat-mdc-slider .mat-focus-indicator::before{border-radius:50%}.mdc-slider__thumb--focused .mat-focus-indicator::before{content:\\\"\\\"}\\n\"], dependencies: [{ kind: \"component\", type: MatSliderVisualThumb, selector: \"mat-slider-visual-thumb\", inputs: [\"discrete\", \"thumbPosition\", \"valueIndicatorText\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatSlider, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-slider', host: {\n                        'class': 'mat-mdc-slider mdc-slider',\n                        '[class]': '\"mat-\" + (color || \"primary\")',\n                        '[class.mdc-slider--range]': '_isRange',\n                        '[class.mdc-slider--disabled]': 'disabled',\n                        '[class.mdc-slider--discrete]': 'discrete',\n                        '[class.mdc-slider--tick-marks]': 'showTickMarks',\n                        '[class._mat-animation-noopable]': '_noopAnimations',\n                    }, exportAs: 'matSlider', changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, providers: [{ provide: MAT_SLIDER, useExisting: MatSlider }], imports: [MatSliderVisualThumb], template: \"<!-- Inputs -->\\n<ng-content></ng-content>\\n\\n<!-- Track -->\\n<div class=\\\"mdc-slider__track\\\">\\n  <div class=\\\"mdc-slider__track--inactive\\\"></div>\\n  <div class=\\\"mdc-slider__track--active\\\">\\n    <div #trackActive class=\\\"mdc-slider__track--active_fill\\\"></div>\\n  </div>\\n  @if (showTickMarks) {\\n    <div class=\\\"mdc-slider__tick-marks\\\" #tickMarkContainer>\\n      @if (_cachedWidth) {\\n        @for (tickMark of _tickMarks; track i; let i = $index) {\\n          <div\\n            [class]=\\\"tickMark === 0 ? 'mdc-slider__tick-mark--active' : 'mdc-slider__tick-mark--inactive'\\\"\\n            [style.transform]=\\\"_calcTickMarkTransform(i)\\\"></div>\\n        }\\n      }\\n    </div>\\n  }\\n</div>\\n\\n<!-- Thumbs -->\\n@if (_isRange) {\\n  <mat-slider-visual-thumb\\n    [discrete]=\\\"discrete\\\"\\n    [thumbPosition]=\\\"1\\\"\\n    [valueIndicatorText]=\\\"startValueIndicatorText\\\">\\n  </mat-slider-visual-thumb>\\n}\\n\\n<mat-slider-visual-thumb\\n  [discrete]=\\\"discrete\\\"\\n  [thumbPosition]=\\\"2\\\"\\n  [valueIndicatorText]=\\\"endValueIndicatorText\\\">\\n</mat-slider-visual-thumb>\\n\", styles: [\".mdc-slider__track{position:absolute;top:50%;transform:translateY(-50%);width:100%;pointer-events:none;height:var(--mat-slider-inactive-track-height, 4px)}.mdc-slider__track--active,.mdc-slider__track--inactive{display:flex;height:100%;position:absolute;width:100%}.mdc-slider__track--active{overflow:hidden;border-radius:var(--mat-slider-active-track-shape, var(--mat-sys-corner-full));height:var(--mat-slider-active-track-height, 4px);top:calc((var(--mat-slider-inactive-track-height, 4px) - var(--mat-slider-active-track-height, 4px))/2)}.mdc-slider__track--active_fill{border-top-style:solid;box-sizing:border-box;height:100%;width:100%;position:relative;transform-origin:left;transition:transform 80ms ease;border-color:var(--mat-slider-active-track-color, var(--mat-sys-primary));border-top-width:var(--mat-slider-active-track-height, 4px)}.mdc-slider--disabled .mdc-slider__track--active_fill{border-color:var(--mat-slider-disabled-active-track-color, var(--mat-sys-on-surface))}[dir=rtl] .mdc-slider__track--active_fill{-webkit-transform-origin:right;transform-origin:right}.mdc-slider__track--inactive{left:0;top:0;opacity:.24;background-color:var(--mat-slider-inactive-track-color, var(--mat-sys-surface-variant));height:var(--mat-slider-inactive-track-height, 4px);border-radius:var(--mat-slider-inactive-track-shape, var(--mat-sys-corner-full))}.mdc-slider--disabled .mdc-slider__track--inactive{background-color:var(--mat-slider-disabled-inactive-track-color, var(--mat-sys-on-surface));opacity:.24}.mdc-slider__track--inactive::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media(forced-colors: active){.mdc-slider__track--inactive::before{border-color:CanvasText}}.mdc-slider__value-indicator-container{bottom:44px;left:50%;pointer-events:none;position:absolute;transform:var(--mat-slider-value-indicator-container-transform, translateX(-50%) rotate(-45deg))}.mdc-slider__thumb--with-indicator .mdc-slider__value-indicator-container{pointer-events:auto}.mdc-slider__value-indicator{display:flex;align-items:center;transform:scale(0);transform-origin:bottom;transition:transform 100ms cubic-bezier(0.4, 0, 1, 1);word-break:normal;background-color:var(--mat-slider-label-container-color, var(--mat-sys-primary));color:var(--mat-slider-label-label-text-color, var(--mat-sys-on-primary));width:var(--mat-slider-value-indicator-width, 28px);height:var(--mat-slider-value-indicator-height, 28px);padding:var(--mat-slider-value-indicator-padding, 0);opacity:var(--mat-slider-value-indicator-opacity, 1);border-radius:var(--mat-slider-value-indicator-border-radius, 50% 50% 50% 0)}.mdc-slider__thumb--with-indicator .mdc-slider__value-indicator{transition:transform 100ms cubic-bezier(0, 0, 0.2, 1);transform:scale(1)}.mdc-slider__value-indicator::before{border-left:6px solid rgba(0,0,0,0);border-right:6px solid rgba(0,0,0,0);border-top:6px solid;bottom:-5px;content:\\\"\\\";height:0;left:50%;position:absolute;transform:translateX(-50%);width:0;display:var(--mat-slider-value-indicator-caret-display, none);border-top-color:var(--mat-slider-label-container-color, var(--mat-sys-primary))}.mdc-slider__value-indicator::after{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media(forced-colors: active){.mdc-slider__value-indicator::after{border-color:CanvasText}}.mdc-slider__value-indicator-text{text-align:center;width:var(--mat-slider-value-indicator-width, 28px);transform:var(--mat-slider-value-indicator-text-transform, rotate(45deg));font-family:var(--mat-slider-label-label-text-font, var(--mat-sys-label-medium-font));font-size:var(--mat-slider-label-label-text-size, var(--mat-sys-label-medium-size));font-weight:var(--mat-slider-label-label-text-weight, var(--mat-sys-label-medium-weight));line-height:var(--mat-slider-label-label-text-line-height, var(--mat-sys-label-medium-line-height));letter-spacing:var(--mat-slider-label-label-text-tracking, var(--mat-sys-label-medium-tracking))}.mdc-slider__thumb{-webkit-user-select:none;user-select:none;display:flex;left:-24px;outline:none;position:absolute;height:48px;width:48px;pointer-events:none}.mdc-slider--discrete .mdc-slider__thumb{transition:transform 80ms ease}.mdc-slider--disabled .mdc-slider__thumb{pointer-events:none}.mdc-slider__thumb--top{z-index:1}.mdc-slider__thumb-knob{position:absolute;box-sizing:border-box;left:50%;top:50%;transform:translate(-50%, -50%);border-style:solid;width:var(--mat-slider-handle-width, 20px);height:var(--mat-slider-handle-height, 20px);border-width:calc(var(--mat-slider-handle-height, 20px)/2) calc(var(--mat-slider-handle-width, 20px)/2);box-shadow:var(--mat-slider-handle-elevation, var(--mat-sys-level1));background-color:var(--mat-slider-handle-color, var(--mat-sys-primary));border-color:var(--mat-slider-handle-color, var(--mat-sys-primary));border-radius:var(--mat-slider-handle-shape, var(--mat-sys-corner-full))}.mdc-slider__thumb:hover .mdc-slider__thumb-knob{background-color:var(--mat-slider-hover-handle-color, var(--mat-sys-primary));border-color:var(--mat-slider-hover-handle-color, var(--mat-sys-primary))}.mdc-slider__thumb--focused .mdc-slider__thumb-knob{background-color:var(--mat-slider-focus-handle-color, var(--mat-sys-primary));border-color:var(--mat-slider-focus-handle-color, var(--mat-sys-primary))}.mdc-slider--disabled .mdc-slider__thumb-knob{background-color:var(--mat-slider-disabled-handle-color, var(--mat-sys-on-surface));border-color:var(--mat-slider-disabled-handle-color, var(--mat-sys-on-surface))}.mdc-slider__thumb--top .mdc-slider__thumb-knob,.mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border:solid 1px #fff;box-sizing:content-box;border-color:var(--mat-slider-with-overlap-handle-outline-color, var(--mat-sys-on-primary));border-width:var(--mat-slider-with-overlap-handle-outline-width, 1px)}.mdc-slider__tick-marks{align-items:center;box-sizing:border-box;display:flex;height:100%;justify-content:space-between;padding:0 1px;position:absolute;width:100%}.mdc-slider__tick-mark--active,.mdc-slider__tick-mark--inactive{width:var(--mat-slider-with-tick-marks-container-size, 2px);height:var(--mat-slider-with-tick-marks-container-size, 2px);border-radius:var(--mat-slider-with-tick-marks-container-shape, var(--mat-sys-corner-full))}.mdc-slider__tick-mark--inactive{opacity:var(--mat-slider-with-tick-marks-inactive-container-opacity, 0.38);background-color:var(--mat-slider-with-tick-marks-inactive-container-color, var(--mat-sys-on-surface-variant))}.mdc-slider--disabled .mdc-slider__tick-mark--inactive{opacity:var(--mat-slider-with-tick-marks-inactive-container-opacity, 0.38);background-color:var(--mat-slider-with-tick-marks-disabled-container-color, var(--mat-sys-on-surface))}.mdc-slider__tick-mark--active{opacity:var(--mat-slider-with-tick-marks-active-container-opacity, 0.38);background-color:var(--mat-slider-with-tick-marks-active-container-color, var(--mat-sys-on-primary))}.mdc-slider__input{cursor:pointer;left:2px;margin:0;height:44px;opacity:0;position:absolute;top:2px;width:44px;box-sizing:content-box}.mdc-slider__input.mat-mdc-slider-input-no-pointer-events{pointer-events:none}.mdc-slider__input.mat-slider__right-input{left:auto;right:0}.mat-mdc-slider{display:inline-block;box-sizing:border-box;outline:none;vertical-align:middle;cursor:pointer;height:48px;margin:0 8px;position:relative;touch-action:pan-y;width:auto;min-width:112px;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-slider.mdc-slider--disabled{cursor:auto;opacity:.38}.mat-mdc-slider.mdc-slider--disabled .mdc-slider__input{cursor:auto}.mat-mdc-slider .mdc-slider__thumb,.mat-mdc-slider .mdc-slider__track--active_fill{transition-duration:0ms}.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__thumb,.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__track--active_fill{transition-duration:80ms}.mat-mdc-slider.mdc-slider--discrete .mdc-slider__thumb,.mat-mdc-slider.mdc-slider--discrete .mdc-slider__track--active_fill{transition-duration:0ms}.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__thumb,.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__track--active_fill{transition-duration:80ms}.mat-mdc-slider .mat-ripple .mat-ripple-element{background-color:var(--mat-slider-ripple-color, var(--mat-sys-primary))}.mat-mdc-slider .mat-ripple .mat-mdc-slider-hover-ripple{background-color:var(--mat-slider-hover-state-layer-color, color-mix(in srgb, var(--mat-sys-primary) 5%, transparent))}.mat-mdc-slider .mat-ripple .mat-mdc-slider-focus-ripple,.mat-mdc-slider .mat-ripple .mat-mdc-slider-active-ripple{background-color:var(--mat-slider-focus-state-layer-color, color-mix(in srgb, var(--mat-sys-primary) 20%, transparent))}.mat-mdc-slider._mat-animation-noopable.mdc-slider--discrete .mdc-slider__thumb,.mat-mdc-slider._mat-animation-noopable.mdc-slider--discrete .mdc-slider__track--active_fill,.mat-mdc-slider._mat-animation-noopable .mdc-slider__value-indicator{transition:none}.mat-mdc-slider .mat-focus-indicator::before{border-radius:50%}.mdc-slider__thumb--focused .mat-focus-indicator::before{content:\\\"\\\"}\\n\"] }]\n        }], ctorParameters: () => [], propDecorators: { _trackActive: [{\n                type: ViewChild,\n                args: ['trackActive']\n            }], _thumbs: [{\n                type: ViewChildren,\n                args: [MAT_SLIDER_VISUAL_THUMB]\n            }], _input: [{\n                type: ContentChild,\n                args: [MAT_SLIDER_THUMB]\n            }], _inputs: [{\n                type: ContentChildren,\n                args: [MAT_SLIDER_RANGE_THUMB, { descendants: false }]\n            }], disabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], discrete: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], showTickMarks: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], min: [{\n                type: Input,\n                args: [{ transform: numberAttribute }]\n            }], color: [{\n                type: Input\n            }], disableRipple: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], max: [{\n                type: Input,\n                args: [{ transform: numberAttribute }]\n            }], step: [{\n                type: Input,\n                args: [{ transform: numberAttribute }]\n            }], displayWith: [{\n                type: Input\n            }] } });\n/** Ensures that there is not an invalid configuration for the slider thumb inputs. */\nfunction _validateInputs(isRange, endInputElement, startInputElement) {\n    const startValid = !isRange || startInputElement?._hostElement.hasAttribute('matSliderStartThumb');\n    const endValid = endInputElement?._hostElement.hasAttribute(isRange ? 'matSliderEndThumb' : 'matSliderThumb');\n    if (!startValid || !endValid) {\n        _throwInvalidInputConfigurationError();\n    }\n}\nfunction _throwInvalidInputConfigurationError() {\n    throw Error(`Invalid slider thumb input configuration!\n\n   Valid configurations are as follows:\n\n     <mat-slider>\n       <input matSliderThumb>\n     </mat-slider>\n\n     or\n\n     <mat-slider>\n       <input matSliderStartThumb>\n       <input matSliderEndThumb>\n     </mat-slider>\n   `);\n}\n\n/**\n * Provider that allows the slider thumb to register as a ControlValueAccessor.\n * @docs-private\n */\nconst MAT_SLIDER_THUMB_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatSliderThumb),\n    multi: true,\n};\n/**\n * Provider that allows the range slider thumb to register as a ControlValueAccessor.\n * @docs-private\n */\nconst MAT_SLIDER_RANGE_THUMB_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatSliderRangeThumb),\n    multi: true,\n};\n/**\n * Directive that adds slider-specific behaviors to an input element inside `<mat-slider>`.\n * Up to two may be placed inside of a `<mat-slider>`.\n *\n * If one is used, the selector `matSliderThumb` must be used, and the outcome will be a normal\n * slider. If two are used, the selectors `matSliderStartThumb` and `matSliderEndThumb` must be\n * used, and the outcome will be a range slider with two slider thumbs.\n */\nclass MatSliderThumb {\n    _ngZone = inject(NgZone);\n    _elementRef = inject(ElementRef);\n    _cdr = inject(ChangeDetectorRef);\n    _slider = inject(MAT_SLIDER);\n    _platform = inject(Platform);\n    _listenerCleanups;\n    get value() {\n        return numberAttribute(this._hostElement.value, 0);\n    }\n    set value(value) {\n        if (value === null) {\n            value = this._getDefaultValue();\n        }\n        value = isNaN(value) ? 0 : value;\n        const stringValue = value + '';\n        if (!this._hasSetInitialValue) {\n            this._initialValue = stringValue;\n            return;\n        }\n        if (this._isActive) {\n            return;\n        }\n        this._setValue(stringValue);\n    }\n    /**\n     * Handles programmatic value setting. This has been split out to\n     * allow the range thumb to override it and add additional necessary logic.\n     */\n    _setValue(value) {\n        this._hostElement.value = value;\n        this._updateThumbUIByValue();\n        this._slider._onValueChange(this);\n        this._cdr.detectChanges();\n        this._slider._cdr.markForCheck();\n    }\n    /** Event emitted when the `value` is changed. */\n    valueChange = new EventEmitter();\n    /** Event emitted when the slider thumb starts being dragged. */\n    dragStart = new EventEmitter();\n    /** Event emitted when the slider thumb stops being dragged. */\n    dragEnd = new EventEmitter();\n    /**\n     * The current translateX in px of the slider visual thumb.\n     * @docs-private\n     */\n    get translateX() {\n        if (this._slider.min >= this._slider.max) {\n            this._translateX = this._tickMarkOffset;\n            return this._translateX;\n        }\n        if (this._translateX === undefined) {\n            this._translateX = this._calcTranslateXByValue();\n        }\n        return this._translateX;\n    }\n    set translateX(v) {\n        this._translateX = v;\n    }\n    _translateX;\n    /**\n     * Indicates whether this thumb is the start or end thumb.\n     * @docs-private\n     */\n    thumbPosition = _MatThumb.END;\n    /** @docs-private */\n    get min() {\n        return numberAttribute(this._hostElement.min, 0);\n    }\n    set min(v) {\n        this._hostElement.min = v + '';\n        this._cdr.detectChanges();\n    }\n    /** @docs-private */\n    get max() {\n        return numberAttribute(this._hostElement.max, 0);\n    }\n    set max(v) {\n        this._hostElement.max = v + '';\n        this._cdr.detectChanges();\n    }\n    get step() {\n        return numberAttribute(this._hostElement.step, 0);\n    }\n    set step(v) {\n        this._hostElement.step = v + '';\n        this._cdr.detectChanges();\n    }\n    /** @docs-private */\n    get disabled() {\n        return booleanAttribute(this._hostElement.disabled);\n    }\n    set disabled(v) {\n        this._hostElement.disabled = v;\n        this._cdr.detectChanges();\n        if (this._slider.disabled !== this.disabled) {\n            this._slider.disabled = this.disabled;\n        }\n    }\n    /** The percentage of the slider that coincides with the value. */\n    get percentage() {\n        if (this._slider.min >= this._slider.max) {\n            return this._slider._isRtl ? 1 : 0;\n        }\n        return (this.value - this._slider.min) / (this._slider.max - this._slider.min);\n    }\n    /** @docs-private */\n    get fillPercentage() {\n        if (!this._slider._cachedWidth) {\n            return this._slider._isRtl ? 1 : 0;\n        }\n        if (this._translateX === 0) {\n            return 0;\n        }\n        return this.translateX / this._slider._cachedWidth;\n    }\n    /** The host native HTML input element. */\n    _hostElement = this._elementRef.nativeElement;\n    /** The aria-valuetext string representation of the input's value. */\n    _valuetext = signal('');\n    /** The radius of a native html slider's knob. */\n    _knobRadius = 8;\n    /** The distance in px from the start of the slider track to the first tick mark. */\n    _tickMarkOffset = 3;\n    /** Whether user's cursor is currently in a mouse down state on the input. */\n    _isActive = false;\n    /** Whether the input is currently focused (either by tab or after clicking). */\n    _isFocused = false;\n    /** Used to relay updates to _isFocused to the slider visual thumbs. */\n    _setIsFocused(v) {\n        this._isFocused = v;\n    }\n    /**\n     * Whether the initial value has been set.\n     * This exists because the initial value cannot be immediately set because the min and max\n     * must first be relayed from the parent MatSlider component, which can only happen later\n     * in the component lifecycle.\n     */\n    _hasSetInitialValue = false;\n    /** The stored initial value. */\n    _initialValue;\n    /** Defined when a user is using a form control to manage slider value & validation. */\n    _formControl;\n    /** Emits when the component is destroyed. */\n    _destroyed = new Subject();\n    /**\n     * Indicates whether UI updates should be skipped.\n     *\n     * This flag is used to avoid flickering\n     * when correcting values on pointer up/down.\n     */\n    _skipUIUpdate = false;\n    /** Callback called when the slider input value changes. */\n    _onChangeFn;\n    /** Callback called when the slider input has been touched. */\n    _onTouchedFn = () => { };\n    /**\n     * Whether the NgModel has been initialized.\n     *\n     * This flag is used to ignore ghost null calls to\n     * writeValue which can break slider initialization.\n     *\n     * See https://github.com/angular/angular/issues/14988.\n     */\n    _isControlInitialized = false;\n    constructor() {\n        const renderer = inject(Renderer2);\n        this._ngZone.runOutsideAngular(() => {\n            this._listenerCleanups = [\n                renderer.listen(this._hostElement, 'pointerdown', this._onPointerDown.bind(this)),\n                renderer.listen(this._hostElement, 'pointermove', this._onPointerMove.bind(this)),\n                renderer.listen(this._hostElement, 'pointerup', this._onPointerUp.bind(this)),\n            ];\n        });\n    }\n    ngOnDestroy() {\n        this._listenerCleanups.forEach(cleanup => cleanup());\n        this._destroyed.next();\n        this._destroyed.complete();\n        this.dragStart.complete();\n        this.dragEnd.complete();\n    }\n    /** @docs-private */\n    initProps() {\n        this._updateWidthInactive();\n        // If this or the parent slider is disabled, just make everything disabled.\n        if (this.disabled !== this._slider.disabled) {\n            // The MatSlider setter for disabled will relay this and disable both inputs.\n            this._slider.disabled = true;\n        }\n        this.step = this._slider.step;\n        this.min = this._slider.min;\n        this.max = this._slider.max;\n        this._initValue();\n    }\n    /** @docs-private */\n    initUI() {\n        this._updateThumbUIByValue();\n    }\n    _initValue() {\n        this._hasSetInitialValue = true;\n        if (this._initialValue === undefined) {\n            this.value = this._getDefaultValue();\n        }\n        else {\n            this._hostElement.value = this._initialValue;\n            this._updateThumbUIByValue();\n            this._slider._onValueChange(this);\n            this._cdr.detectChanges();\n        }\n    }\n    _getDefaultValue() {\n        return this.min;\n    }\n    _onBlur() {\n        this._setIsFocused(false);\n        this._onTouchedFn();\n    }\n    _onFocus() {\n        this._slider._setTransition(false);\n        this._slider._updateTrackUI(this);\n        this._setIsFocused(true);\n    }\n    _onChange() {\n        this.valueChange.emit(this.value);\n        // only used to handle the edge case where user\n        // mousedown on the slider then uses arrow keys.\n        if (this._isActive) {\n            this._updateThumbUIByValue({ withAnimation: true });\n        }\n    }\n    _onInput() {\n        this._onChangeFn?.(this.value);\n        // handles arrowing and updating the value when\n        // a step is defined.\n        if (this._slider.step || !this._isActive) {\n            this._updateThumbUIByValue({ withAnimation: true });\n        }\n        this._slider._onValueChange(this);\n    }\n    _onNgControlValueChange() {\n        // only used to handle when the value change\n        // originates outside of the slider.\n        if (!this._isActive || !this._isFocused) {\n            this._slider._onValueChange(this);\n            this._updateThumbUIByValue();\n        }\n        this._slider.disabled = this._formControl.disabled;\n    }\n    _onPointerDown(event) {\n        if (this.disabled || event.button !== 0) {\n            return;\n        }\n        // On IOS, dragging only works if the pointer down happens on the\n        // slider thumb and the slider does not receive focus from pointer events.\n        if (this._platform.IOS) {\n            const isCursorOnSliderThumb = this._slider._isCursorOnSliderThumb(event, this._slider._getThumb(this.thumbPosition)._hostElement.getBoundingClientRect());\n            this._isActive = isCursorOnSliderThumb;\n            this._updateWidthActive();\n            this._slider._updateDimensions();\n            return;\n        }\n        this._isActive = true;\n        this._setIsFocused(true);\n        this._updateWidthActive();\n        this._slider._updateDimensions();\n        // Does nothing if a step is defined because we\n        // want the value to snap to the values on input.\n        if (!this._slider.step) {\n            this._updateThumbUIByPointerEvent(event, { withAnimation: true });\n        }\n        if (!this.disabled) {\n            this._handleValueCorrection(event);\n            this.dragStart.emit({ source: this, parent: this._slider, value: this.value });\n        }\n    }\n    /**\n     * Corrects the value of the slider on pointer up/down.\n     *\n     * Called on pointer down and up because the value is set based\n     * on the inactive width instead of the active width.\n     */\n    _handleValueCorrection(event) {\n        // Don't update the UI with the current value! The value on pointerdown\n        // and pointerup is calculated in the split second before the input(s)\n        // resize. See _updateWidthInactive() and _updateWidthActive() for more\n        // details.\n        this._skipUIUpdate = true;\n        // Note that this function gets triggered before the actual value of the\n        // slider is updated. This means if we were to set the value here, it\n        // would immediately be overwritten. Using setTimeout ensures the setting\n        // of the value happens after the value has been updated by the\n        // pointerdown event.\n        setTimeout(() => {\n            this._skipUIUpdate = false;\n            this._fixValue(event);\n        }, 0);\n    }\n    /** Corrects the value of the slider based on the pointer event's position. */\n    _fixValue(event) {\n        const xPos = event.clientX - this._slider._cachedLeft;\n        const width = this._slider._cachedWidth;\n        const step = this._slider.step === 0 ? 1 : this._slider.step;\n        const numSteps = Math.floor((this._slider.max - this._slider.min) / step);\n        const percentage = this._slider._isRtl ? 1 - xPos / width : xPos / width;\n        // To ensure the percentage is rounded to the necessary number of decimals.\n        const fixedPercentage = Math.round(percentage * numSteps) / numSteps;\n        const impreciseValue = fixedPercentage * (this._slider.max - this._slider.min) + this._slider.min;\n        const value = Math.round(impreciseValue / step) * step;\n        const prevValue = this.value;\n        if (value === prevValue) {\n            // Because we prevented UI updates, if it turns out that the race\n            // condition didn't happen and the value is already correct, we\n            // have to apply the ui updates now.\n            this._slider._onValueChange(this);\n            this._slider.step > 0\n                ? this._updateThumbUIByValue()\n                : this._updateThumbUIByPointerEvent(event, { withAnimation: this._slider._hasAnimation });\n            return;\n        }\n        this.value = value;\n        this.valueChange.emit(this.value);\n        this._onChangeFn?.(this.value);\n        this._slider._onValueChange(this);\n        this._slider.step > 0\n            ? this._updateThumbUIByValue()\n            : this._updateThumbUIByPointerEvent(event, { withAnimation: this._slider._hasAnimation });\n    }\n    _onPointerMove(event) {\n        // Again, does nothing if a step is defined because\n        // we want the value to snap to the values on input.\n        if (!this._slider.step && this._isActive) {\n            this._updateThumbUIByPointerEvent(event);\n        }\n    }\n    _onPointerUp() {\n        if (this._isActive) {\n            this._isActive = false;\n            if (this._platform.SAFARI) {\n                this._setIsFocused(false);\n            }\n            this.dragEnd.emit({ source: this, parent: this._slider, value: this.value });\n            // This setTimeout is to prevent the pointerup from triggering a value\n            // change on the input based on the inactive width. It's not clear why\n            // but for some reason on IOS this race condition is even more common so\n            // the timeout needs to be increased.\n            setTimeout(() => this._updateWidthInactive(), this._platform.IOS ? 10 : 0);\n        }\n    }\n    _clamp(v) {\n        const min = this._tickMarkOffset;\n        const max = this._slider._cachedWidth - this._tickMarkOffset;\n        return Math.max(Math.min(v, max), min);\n    }\n    _calcTranslateXByValue() {\n        if (this._slider._isRtl) {\n            return ((1 - this.percentage) * (this._slider._cachedWidth - this._tickMarkOffset * 2) +\n                this._tickMarkOffset);\n        }\n        return (this.percentage * (this._slider._cachedWidth - this._tickMarkOffset * 2) +\n            this._tickMarkOffset);\n    }\n    _calcTranslateXByPointerEvent(event) {\n        return event.clientX - this._slider._cachedLeft;\n    }\n    /**\n     * Used to set the slider width to the correct\n     * dimensions while the user is dragging.\n     */\n    _updateWidthActive() { }\n    /**\n     * Sets the slider input to disproportionate dimensions to allow for touch\n     * events to be captured on touch devices.\n     */\n    _updateWidthInactive() {\n        this._hostElement.style.padding = `0 ${this._slider._inputPadding}px`;\n        this._hostElement.style.width = `calc(100% + ${this._slider._inputPadding - this._tickMarkOffset * 2}px)`;\n        this._hostElement.style.left = `-${this._slider._rippleRadius - this._tickMarkOffset}px`;\n    }\n    _updateThumbUIByValue(options) {\n        this.translateX = this._clamp(this._calcTranslateXByValue());\n        this._updateThumbUI(options);\n    }\n    _updateThumbUIByPointerEvent(event, options) {\n        this.translateX = this._clamp(this._calcTranslateXByPointerEvent(event));\n        this._updateThumbUI(options);\n    }\n    _updateThumbUI(options) {\n        this._slider._setTransition(!!options?.withAnimation);\n        this._slider._onTranslateXChange(this);\n    }\n    /**\n     * Sets the input's value.\n     * @param value The new value of the input\n     * @docs-private\n     */\n    writeValue(value) {\n        if (this._isControlInitialized || value !== null) {\n            this.value = value;\n        }\n    }\n    /**\n     * Registers a callback to be invoked when the input's value changes from user input.\n     * @param fn The callback to register\n     * @docs-private\n     */\n    registerOnChange(fn) {\n        this._onChangeFn = fn;\n        this._isControlInitialized = true;\n    }\n    /**\n     * Registers a callback to be invoked when the input is blurred by the user.\n     * @param fn The callback to register\n     * @docs-private\n     */\n    registerOnTouched(fn) {\n        this._onTouchedFn = fn;\n    }\n    /**\n     * Sets the disabled state of the slider.\n     * @param isDisabled The new disabled state\n     * @docs-private\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    focus() {\n        this._hostElement.focus();\n    }\n    blur() {\n        this._hostElement.blur();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatSliderThumb, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"20.0.0\", type: MatSliderThumb, isStandalone: true, selector: \"input[matSliderThumb]\", inputs: { value: [\"value\", \"value\", numberAttribute] }, outputs: { valueChange: \"valueChange\", dragStart: \"dragStart\", dragEnd: \"dragEnd\" }, host: { attributes: { \"type\": \"range\" }, listeners: { \"change\": \"_onChange()\", \"input\": \"_onInput()\", \"blur\": \"_onBlur()\", \"focus\": \"_onFocus()\" }, properties: { \"attr.aria-valuetext\": \"_valuetext()\" }, classAttribute: \"mdc-slider__input\" }, providers: [\n            MAT_SLIDER_THUMB_VALUE_ACCESSOR,\n            { provide: MAT_SLIDER_THUMB, useExisting: MatSliderThumb },\n        ], exportAs: [\"matSliderThumb\"], ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatSliderThumb, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input[matSliderThumb]',\n                    exportAs: 'matSliderThumb',\n                    host: {\n                        'class': 'mdc-slider__input',\n                        'type': 'range',\n                        '[attr.aria-valuetext]': '_valuetext()',\n                        '(change)': '_onChange()',\n                        '(input)': '_onInput()',\n                        // TODO(wagnermaciel): Consider using a global event listener instead.\n                        // Reason: I have found a semi-consistent way to mouse up without triggering this event.\n                        '(blur)': '_onBlur()',\n                        '(focus)': '_onFocus()',\n                    },\n                    providers: [\n                        MAT_SLIDER_THUMB_VALUE_ACCESSOR,\n                        { provide: MAT_SLIDER_THUMB, useExisting: MatSliderThumb },\n                    ],\n                }]\n        }], ctorParameters: () => [], propDecorators: { value: [{\n                type: Input,\n                args: [{ transform: numberAttribute }]\n            }], valueChange: [{\n                type: Output\n            }], dragStart: [{\n                type: Output\n            }], dragEnd: [{\n                type: Output\n            }] } });\nclass MatSliderRangeThumb extends MatSliderThumb {\n    _cdr = inject(ChangeDetectorRef);\n    /** @docs-private */\n    getSibling() {\n        if (!this._sibling) {\n            this._sibling = this._slider._getInput(this._isEndThumb ? _MatThumb.START : _MatThumb.END);\n        }\n        return this._sibling;\n    }\n    _sibling;\n    /**\n     * Returns the minimum translateX position allowed for this slider input's visual thumb.\n     * @docs-private\n     */\n    getMinPos() {\n        const sibling = this.getSibling();\n        if (!this._isLeftThumb && sibling) {\n            return sibling.translateX;\n        }\n        return this._tickMarkOffset;\n    }\n    /**\n     * Returns the maximum translateX position allowed for this slider input's visual thumb.\n     * @docs-private\n     */\n    getMaxPos() {\n        const sibling = this.getSibling();\n        if (this._isLeftThumb && sibling) {\n            return sibling.translateX;\n        }\n        return this._slider._cachedWidth - this._tickMarkOffset;\n    }\n    _setIsLeftThumb() {\n        this._isLeftThumb =\n            (this._isEndThumb && this._slider._isRtl) || (!this._isEndThumb && !this._slider._isRtl);\n    }\n    /** Whether this slider corresponds to the input on the left hand side. */\n    _isLeftThumb;\n    /** Whether this slider corresponds to the input with greater value. */\n    _isEndThumb;\n    constructor() {\n        super();\n        this._isEndThumb = this._hostElement.hasAttribute('matSliderEndThumb');\n        this._setIsLeftThumb();\n        this.thumbPosition = this._isEndThumb ? _MatThumb.END : _MatThumb.START;\n    }\n    _getDefaultValue() {\n        return this._isEndThumb && this._slider._isRange ? this.max : this.min;\n    }\n    _onInput() {\n        super._onInput();\n        this._updateSibling();\n        if (!this._isActive) {\n            this._updateWidthInactive();\n        }\n    }\n    _onNgControlValueChange() {\n        super._onNgControlValueChange();\n        this.getSibling()?._updateMinMax();\n    }\n    _onPointerDown(event) {\n        if (this.disabled || event.button !== 0) {\n            return;\n        }\n        if (this._sibling) {\n            this._sibling._updateWidthActive();\n            this._sibling._hostElement.classList.add('mat-mdc-slider-input-no-pointer-events');\n        }\n        super._onPointerDown(event);\n    }\n    _onPointerUp() {\n        super._onPointerUp();\n        if (this._sibling) {\n            setTimeout(() => {\n                this._sibling._updateWidthInactive();\n                this._sibling._hostElement.classList.remove('mat-mdc-slider-input-no-pointer-events');\n            });\n        }\n    }\n    _onPointerMove(event) {\n        super._onPointerMove(event);\n        if (!this._slider.step && this._isActive) {\n            this._updateSibling();\n        }\n    }\n    _fixValue(event) {\n        super._fixValue(event);\n        this._sibling?._updateMinMax();\n    }\n    _clamp(v) {\n        return Math.max(Math.min(v, this.getMaxPos()), this.getMinPos());\n    }\n    _updateMinMax() {\n        const sibling = this.getSibling();\n        if (!sibling) {\n            return;\n        }\n        if (this._isEndThumb) {\n            this.min = Math.max(this._slider.min, sibling.value);\n            this.max = this._slider.max;\n        }\n        else {\n            this.min = this._slider.min;\n            this.max = Math.min(this._slider.max, sibling.value);\n        }\n    }\n    _updateWidthActive() {\n        const minWidth = this._slider._rippleRadius * 2 - this._slider._inputPadding * 2;\n        const maxWidth = this._slider._cachedWidth + this._slider._inputPadding - minWidth - this._tickMarkOffset * 2;\n        const percentage = this._slider.min < this._slider.max\n            ? (this.max - this.min) / (this._slider.max - this._slider.min)\n            : 1;\n        const width = maxWidth * percentage + minWidth;\n        this._hostElement.style.width = `${width}px`;\n        this._hostElement.style.padding = `0 ${this._slider._inputPadding}px`;\n    }\n    _updateWidthInactive() {\n        const sibling = this.getSibling();\n        if (!sibling) {\n            return;\n        }\n        const maxWidth = this._slider._cachedWidth - this._tickMarkOffset * 2;\n        const midValue = this._isEndThumb\n            ? this.value - (this.value - sibling.value) / 2\n            : this.value + (sibling.value - this.value) / 2;\n        const _percentage = this._isEndThumb\n            ? (this.max - midValue) / (this._slider.max - this._slider.min)\n            : (midValue - this.min) / (this._slider.max - this._slider.min);\n        const percentage = this._slider.min < this._slider.max ? _percentage : 1;\n        // Extend the native input width by the radius of the ripple\n        let ripplePadding = this._slider._rippleRadius;\n        // If one of the inputs is maximally sized (the value of both thumbs is\n        // equal to the min or max), make that input take up all of the width and\n        // make the other unselectable.\n        if (percentage === 1) {\n            ripplePadding = 48;\n        }\n        else if (percentage === 0) {\n            ripplePadding = 0;\n        }\n        const width = maxWidth * percentage + ripplePadding;\n        this._hostElement.style.width = `${width}px`;\n        this._hostElement.style.padding = '0px';\n        if (this._isLeftThumb) {\n            this._hostElement.style.left = `-${this._slider._rippleRadius - this._tickMarkOffset}px`;\n            this._hostElement.style.right = 'auto';\n        }\n        else {\n            this._hostElement.style.left = 'auto';\n            this._hostElement.style.right = `-${this._slider._rippleRadius - this._tickMarkOffset}px`;\n        }\n    }\n    _updateStaticStyles() {\n        this._hostElement.classList.toggle('mat-slider__right-input', !this._isLeftThumb);\n    }\n    _updateSibling() {\n        const sibling = this.getSibling();\n        if (!sibling) {\n            return;\n        }\n        sibling._updateMinMax();\n        if (this._isActive) {\n            sibling._updateWidthActive();\n        }\n        else {\n            sibling._updateWidthInactive();\n        }\n    }\n    /**\n     * Sets the input's value.\n     * @param value The new value of the input\n     * @docs-private\n     */\n    writeValue(value) {\n        if (this._isControlInitialized || value !== null) {\n            this.value = value;\n            this._updateWidthInactive();\n            this._updateSibling();\n        }\n    }\n    _setValue(value) {\n        super._setValue(value);\n        this._updateWidthInactive();\n        this._updateSibling();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatSliderRangeThumb, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatSliderRangeThumb, isStandalone: true, selector: \"input[matSliderStartThumb], input[matSliderEndThumb]\", providers: [\n            MAT_SLIDER_RANGE_THUMB_VALUE_ACCESSOR,\n            { provide: MAT_SLIDER_RANGE_THUMB, useExisting: MatSliderRangeThumb },\n        ], exportAs: [\"matSliderRangeThumb\"], usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatSliderRangeThumb, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input[matSliderStartThumb], input[matSliderEndThumb]',\n                    exportAs: 'matSliderRangeThumb',\n                    providers: [\n                        MAT_SLIDER_RANGE_THUMB_VALUE_ACCESSOR,\n                        { provide: MAT_SLIDER_RANGE_THUMB, useExisting: MatSliderRangeThumb },\n                    ],\n                }]\n        }], ctorParameters: () => [] });\n\nclass MatSliderModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatSliderModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.0\", ngImport: i0, type: MatSliderModule, imports: [MatCommonModule,\n            MatRippleModule,\n            MatSlider,\n            MatSliderThumb,\n            MatSliderRangeThumb,\n            MatSliderVisualThumb], exports: [MatSlider, MatSliderThumb, MatSliderRangeThumb] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatSliderModule, imports: [MatCommonModule,\n            MatRippleModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatSliderModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        MatCommonModule,\n                        MatRippleModule,\n                        MatSlider,\n                        MatSliderThumb,\n                        MatSliderRangeThumb,\n                        MatSliderVisualThumb,\n                    ],\n                    exports: [MatSlider, MatSliderThumb, MatSliderRangeThumb],\n                }]\n        }] });\n\nexport { MatSlider, MatSliderChange, MatSliderModule, MatSliderRangeThumb, MatSliderThumb, MatSliderVisualThumb };\n\n","import { FocusMonitor, _IdGenerator, FocusKeyManager } from '@angular/cdk/a11y';\nimport { ENTER, SPACE, BACKSPACE, DELETE, TAB, hasModifierKey, UP_ARROW, DOWN_ARROW } from '@angular/cdk/keycodes';\nimport { _CdkPrivateStyleLoader, _VisuallyHiddenLoader } from '@angular/cdk/private';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, inject, ElementRef, booleanAttribute, numberAttribute, Directive, Input, ChangeDetectorRef, HOST_TAG_NAME, NgZone, DOCUMENT, EventEmitter, Injector, Component, ViewEncapsulation, ChangeDetectionStrategy, ContentChildren, Output, ContentChild, ViewChild, afterNextRender, QueryList, forwardRef, NgModule } from '@angular/core';\nimport { Subject, merge } from 'rxjs';\nimport { _ as _StructuralStylesLoader } from './structural-styles-CObeNzjn.mjs';\nimport { a as MAT_RIPPLE_GLOBAL_OPTIONS } from './ripple-BMyyyLz2.mjs';\nimport { _ as _animationsDisabled } from './animation-ChQ1vjiF.mjs';\nimport { M as MatRippleLoader } from './ripple-loader-wNDzC_j6.mjs';\nimport { takeUntil, startWith, switchMap } from 'rxjs/operators';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { NG_VALUE_ACCESSOR, NgControl, Validators, NgForm, FormGroupDirective } from '@angular/forms';\nimport { E as ErrorStateMatcher } from './error-options-DCNQlTOA.mjs';\nimport { _ as _ErrorStateTracker } from './error-state-Dtb1IHM-.mjs';\nimport { k as MatFormFieldControl, h as MAT_FORM_FIELD } from './form-field-C_dE1cl0.mjs';\nimport { M as MatCommonModule } from './common-module-cKSwHniA.mjs';\nimport { M as MatRippleModule } from './index-BRImSAOu.mjs';\nimport '@angular/cdk/platform';\nimport '@angular/cdk/coercion';\nimport '@angular/cdk/layout';\nimport '@angular/common';\nimport '@angular/cdk/observers/private';\n\n/** Injection token to be used to override the default options for the chips module. */\nconst MAT_CHIPS_DEFAULT_OPTIONS = new InjectionToken('mat-chips-default-options', {\n    providedIn: 'root',\n    factory: () => ({\n        separatorKeyCodes: [ENTER],\n    }),\n});\n/**\n * Injection token that can be used to reference instances of `MatChipAvatar`. It serves as\n * alternative token to the actual `MatChipAvatar` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_CHIP_AVATAR = new InjectionToken('MatChipAvatar');\n/**\n * Injection token that can be used to reference instances of `MatChipTrailingIcon`. It serves as\n * alternative token to the actual `MatChipTrailingIcon` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_CHIP_TRAILING_ICON = new InjectionToken('MatChipTrailingIcon');\n/**\n * Injection token that can be used to reference instances of `MatChipEdit`. It serves as\n * alternative token to the actual `MatChipEdit` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_CHIP_EDIT = new InjectionToken('MatChipEdit');\n/**\n * Injection token that can be used to reference instances of `MatChipRemove`. It serves as\n * alternative token to the actual `MatChipRemove` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_CHIP_REMOVE = new InjectionToken('MatChipRemove');\n/**\n * Injection token used to avoid a circular dependency between the `MatChip` and `MatChipAction`.\n */\nconst MAT_CHIP = new InjectionToken('MatChip');\n\n/**\n * Section within a chip.\n * @docs-private\n */\nclass MatChipAction {\n    _elementRef = inject(ElementRef);\n    _parentChip = inject(MAT_CHIP);\n    /** Whether the action is interactive. */\n    isInteractive = true;\n    /** Whether this is the primary action in the chip. */\n    _isPrimary = true;\n    /** Whether this is the leading action in the chip. */\n    _isLeading = false; // TODO(adolgachev): consolidate usage to secondary css class\n    /** Whether the action is disabled. */\n    get disabled() {\n        return this._disabled || this._parentChip?.disabled || false;\n    }\n    set disabled(value) {\n        this._disabled = value;\n    }\n    _disabled = false;\n    /** Tab index of the action. */\n    tabIndex = -1;\n    /**\n     * Private API to allow focusing this chip when it is disabled.\n     */\n    _allowFocusWhenDisabled = false;\n    /**\n     * Determine the value of the disabled attribute for this chip action.\n     */\n    _getDisabledAttribute() {\n        // When this chip action is disabled and focusing disabled chips is not permitted, return empty\n        // string to indicate that disabled attribute should be included.\n        return this.disabled && !this._allowFocusWhenDisabled ? '' : null;\n    }\n    /**\n     * Determine the value of the tabindex attribute for this chip action.\n     */\n    _getTabindex() {\n        return (this.disabled && !this._allowFocusWhenDisabled) || !this.isInteractive\n            ? null\n            : this.tabIndex.toString();\n    }\n    constructor() {\n        inject(_CdkPrivateStyleLoader).load(_StructuralStylesLoader);\n        if (this._elementRef.nativeElement.nodeName === 'BUTTON') {\n            this._elementRef.nativeElement.setAttribute('type', 'button');\n        }\n    }\n    focus() {\n        this._elementRef.nativeElement.focus();\n    }\n    _handleClick(event) {\n        if (!this.disabled && this.isInteractive && this._isPrimary) {\n            event.preventDefault();\n            this._parentChip._handlePrimaryActionInteraction();\n        }\n    }\n    _handleKeydown(event) {\n        if ((event.keyCode === ENTER || event.keyCode === SPACE) &&\n            !this.disabled &&\n            this.isInteractive &&\n            this._isPrimary &&\n            !this._parentChip._isEditing) {\n            event.preventDefault();\n            this._parentChip._handlePrimaryActionInteraction();\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatChipAction, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"20.0.0\", type: MatChipAction, isStandalone: true, selector: \"[matChipAction]\", inputs: { isInteractive: \"isInteractive\", disabled: [\"disabled\", \"disabled\", booleanAttribute], tabIndex: [\"tabIndex\", \"tabIndex\", (value) => (value == null ? -1 : numberAttribute(value))], _allowFocusWhenDisabled: \"_allowFocusWhenDisabled\" }, host: { listeners: { \"click\": \"_handleClick($event)\", \"keydown\": \"_handleKeydown($event)\" }, properties: { \"class.mdc-evolution-chip__action--primary\": \"_isPrimary\", \"class.mdc-evolution-chip__action--presentational\": \"!isInteractive\", \"class.mdc-evolution-chip__action--secondary\": \"!_isPrimary\", \"class.mdc-evolution-chip__action--trailing\": \"!_isPrimary && !_isLeading\", \"attr.tabindex\": \"_getTabindex()\", \"attr.disabled\": \"_getDisabledAttribute()\", \"attr.aria-disabled\": \"disabled\" }, classAttribute: \"mdc-evolution-chip__action mat-mdc-chip-action\" }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatChipAction, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matChipAction]',\n                    host: {\n                        'class': 'mdc-evolution-chip__action mat-mdc-chip-action',\n                        '[class.mdc-evolution-chip__action--primary]': '_isPrimary',\n                        '[class.mdc-evolution-chip__action--presentational]': '!isInteractive',\n                        '[class.mdc-evolution-chip__action--secondary]': '!_isPrimary',\n                        '[class.mdc-evolution-chip__action--trailing]': '!_isPrimary && !_isLeading',\n                        '[attr.tabindex]': '_getTabindex()',\n                        '[attr.disabled]': '_getDisabledAttribute()',\n                        '[attr.aria-disabled]': 'disabled',\n                        '(click)': '_handleClick($event)',\n                        '(keydown)': '_handleKeydown($event)',\n                    },\n                }]\n        }], ctorParameters: () => [], propDecorators: { isInteractive: [{\n                type: Input\n            }], disabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], tabIndex: [{\n                type: Input,\n                args: [{\n                        transform: (value) => (value == null ? -1 : numberAttribute(value)),\n                    }]\n            }], _allowFocusWhenDisabled: [{\n                type: Input\n            }] } });\n\n/** Avatar image within a chip. */\nclass MatChipAvatar {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatChipAvatar, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatChipAvatar, isStandalone: true, selector: \"mat-chip-avatar, [matChipAvatar]\", host: { attributes: { \"role\": \"img\" }, classAttribute: \"mat-mdc-chip-avatar mdc-evolution-chip__icon mdc-evolution-chip__icon--primary\" }, providers: [{ provide: MAT_CHIP_AVATAR, useExisting: MatChipAvatar }], ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatChipAvatar, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-chip-avatar, [matChipAvatar]',\n                    host: {\n                        'class': 'mat-mdc-chip-avatar mdc-evolution-chip__icon mdc-evolution-chip__icon--primary',\n                        'role': 'img',\n                    },\n                    providers: [{ provide: MAT_CHIP_AVATAR, useExisting: MatChipAvatar }],\n                }]\n        }] });\n/** Non-interactive trailing icon in a chip. */\nclass MatChipTrailingIcon extends MatChipAction {\n    /**\n     * MDC considers all trailing actions as a remove icon,\n     * but we support non-interactive trailing icons.\n     */\n    isInteractive = false;\n    _isPrimary = false;\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatChipTrailingIcon, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatChipTrailingIcon, isStandalone: true, selector: \"mat-chip-trailing-icon, [matChipTrailingIcon]\", host: { attributes: { \"aria-hidden\": \"true\" }, classAttribute: \"mat-mdc-chip-trailing-icon mdc-evolution-chip__icon mdc-evolution-chip__icon--trailing\" }, providers: [{ provide: MAT_CHIP_TRAILING_ICON, useExisting: MatChipTrailingIcon }], usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatChipTrailingIcon, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-chip-trailing-icon, [matChipTrailingIcon]',\n                    host: {\n                        'class': 'mat-mdc-chip-trailing-icon mdc-evolution-chip__icon mdc-evolution-chip__icon--trailing',\n                        'aria-hidden': 'true',\n                    },\n                    providers: [{ provide: MAT_CHIP_TRAILING_ICON, useExisting: MatChipTrailingIcon }],\n                }]\n        }] });\n/**\n * Directive to edit the parent chip when the leading action icon is clicked or\n * when the ENTER key is pressed on it.\n *\n * Recommended for use with the Material Design \"edit\" icon\n * available at https://material.io/icons/#ic_edit.\n *\n * Example:\n *\n * ```\n * <mat-chip>\n *   <button matChipEdit aria-label=\"Edit\">\n *     <mat-icon>edit</mat-icon>\n *   </button>\n * </mat-chip>\n * ```\n */\nclass MatChipEdit extends MatChipAction {\n    _isPrimary = false;\n    _isLeading = true;\n    _handleClick(event) {\n        if (!this.disabled) {\n            event.stopPropagation();\n            event.preventDefault();\n            this._parentChip._edit();\n        }\n    }\n    _handleKeydown(event) {\n        if ((event.keyCode === ENTER || event.keyCode === SPACE) && !this.disabled) {\n            event.stopPropagation();\n            event.preventDefault();\n            this._parentChip._edit();\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatChipEdit, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatChipEdit, isStandalone: true, selector: \"[matChipEdit]\", host: { attributes: { \"role\": \"button\" }, properties: { \"attr.aria-hidden\": \"null\" }, classAttribute: \"mat-mdc-chip-edit mat-mdc-chip-avatar mat-focus-indicator mdc-evolution-chip__icon mdc-evolution-chip__icon--primary\" }, providers: [{ provide: MAT_CHIP_EDIT, useExisting: MatChipEdit }], usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatChipEdit, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matChipEdit]',\n                    host: {\n                        'class': 'mat-mdc-chip-edit mat-mdc-chip-avatar mat-focus-indicator ' +\n                            'mdc-evolution-chip__icon mdc-evolution-chip__icon--primary',\n                        'role': 'button',\n                        '[attr.aria-hidden]': 'null',\n                    },\n                    providers: [{ provide: MAT_CHIP_EDIT, useExisting: MatChipEdit }],\n                }]\n        }] });\n/**\n * Directive to remove the parent chip when the trailing icon is clicked or\n * when the ENTER key is pressed on it.\n *\n * Recommended for use with the Material Design \"cancel\" icon\n * available at https://material.io/icons/#ic_cancel.\n *\n * Example:\n *\n * ```\n * <mat-chip>\n *   <mat-icon matChipRemove>cancel</mat-icon>\n * </mat-chip>\n * ```\n */\nclass MatChipRemove extends MatChipAction {\n    _isPrimary = false;\n    _handleClick(event) {\n        if (!this.disabled) {\n            event.stopPropagation();\n            event.preventDefault();\n            this._parentChip.remove();\n        }\n    }\n    _handleKeydown(event) {\n        if ((event.keyCode === ENTER || event.keyCode === SPACE) && !this.disabled) {\n            event.stopPropagation();\n            event.preventDefault();\n            this._parentChip.remove();\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatChipRemove, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatChipRemove, isStandalone: true, selector: \"[matChipRemove]\", host: { attributes: { \"role\": \"button\" }, properties: { \"attr.aria-hidden\": \"null\" }, classAttribute: \"mat-mdc-chip-remove mat-mdc-chip-trailing-icon mat-focus-indicator mdc-evolution-chip__icon mdc-evolution-chip__icon--trailing\" }, providers: [{ provide: MAT_CHIP_REMOVE, useExisting: MatChipRemove }], usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatChipRemove, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matChipRemove]',\n                    host: {\n                        'class': 'mat-mdc-chip-remove mat-mdc-chip-trailing-icon mat-focus-indicator ' +\n                            'mdc-evolution-chip__icon mdc-evolution-chip__icon--trailing',\n                        'role': 'button',\n                        '[attr.aria-hidden]': 'null',\n                    },\n                    providers: [{ provide: MAT_CHIP_REMOVE, useExisting: MatChipRemove }],\n                }]\n        }] });\n\n/**\n * Material design styled Chip base component. Used inside the MatChipSet component.\n *\n * Extended by MatChipOption and MatChipRow for different interaction patterns.\n */\nclass MatChip {\n    _changeDetectorRef = inject(ChangeDetectorRef);\n    _elementRef = inject(ElementRef);\n    _tagName = inject(HOST_TAG_NAME);\n    _ngZone = inject(NgZone);\n    _focusMonitor = inject(FocusMonitor);\n    _globalRippleOptions = inject(MAT_RIPPLE_GLOBAL_OPTIONS, {\n        optional: true,\n    });\n    _document = inject(DOCUMENT);\n    /** Emits when the chip is focused. */\n    _onFocus = new Subject();\n    /** Emits when the chip is blurred. */\n    _onBlur = new Subject();\n    /** Whether this chip is a basic (unstyled) chip. */\n    _isBasicChip;\n    /** Role for the root of the chip. */\n    role = null;\n    /** Whether the chip has focus. */\n    _hasFocusInternal = false;\n    /** Whether moving focus into the chip is pending. */\n    _pendingFocus;\n    /** Subscription to changes in the chip's actions. */\n    _actionChanges;\n    /** Whether animations for the chip are enabled. */\n    _animationsDisabled = _animationsDisabled();\n    /** All avatars present in the chip. */\n    _allLeadingIcons;\n    /** All trailing icons present in the chip. */\n    _allTrailingIcons;\n    /** All edit icons present in the chip. */\n    _allEditIcons;\n    /** All remove icons present in the chip. */\n    _allRemoveIcons;\n    _hasFocus() {\n        return this._hasFocusInternal;\n    }\n    /** A unique id for the chip. If none is supplied, it will be auto-generated. */\n    id = inject(_IdGenerator).getId('mat-mdc-chip-');\n    // TODO(#26104): Consider deprecating and using `_computeAriaAccessibleName` instead.\n    // `ariaLabel` may be unnecessary, and `_computeAriaAccessibleName` only supports\n    // datepicker's use case.\n    /** ARIA label for the content of the chip. */\n    ariaLabel = null;\n    // TODO(#26104): Consider deprecating and using `_computeAriaAccessibleName` instead.\n    // `ariaDescription` may be unnecessary, and `_computeAriaAccessibleName` only supports\n    // datepicker's use case.\n    /** ARIA description for the content of the chip. */\n    ariaDescription = null;\n    /** Id of a span that contains this chip's aria description. */\n    _ariaDescriptionId = `${this.id}-aria-description`;\n    /** Whether the chip list is disabled. */\n    _chipListDisabled = false;\n    /** Whether the chip was focused when it was removed. */\n    _hadFocusOnRemove = false;\n    _textElement;\n    /**\n     * The value of the chip. Defaults to the content inside\n     * the `mat-mdc-chip-action-label` element.\n     */\n    get value() {\n        return this._value !== undefined ? this._value : this._textElement.textContent.trim();\n    }\n    set value(value) {\n        this._value = value;\n    }\n    _value;\n    // TODO: should be typed as `ThemePalette` but internal apps pass in arbitrary strings.\n    /**\n     * Theme color of the chip. This API is supported in M2 themes only, it has no\n     * effect in M3 themes. For color customization in M3, see https://material.angular.dev/components/chips/styling.\n     *\n     * For information on applying color variants in M3, see\n     * https://material.angular.dev/guide/material-2-theming#optional-add-backwards-compatibility-styles-for-color-variants\n     */\n    color;\n    /**\n     * Determines whether or not the chip displays the remove styling and emits (removed) events.\n     */\n    removable = true;\n    /**\n     * Colors the chip for emphasis as if it were selected.\n     */\n    highlighted = false;\n    /** Whether the ripple effect is disabled or not. */\n    disableRipple = false;\n    /** Whether the chip is disabled. */\n    get disabled() {\n        return this._disabled || this._chipListDisabled;\n    }\n    set disabled(value) {\n        this._disabled = value;\n    }\n    _disabled = false;\n    /** Emitted when a chip is to be removed. */\n    removed = new EventEmitter();\n    /** Emitted when the chip is destroyed. */\n    destroyed = new EventEmitter();\n    /** The unstyled chip selector for this component. */\n    basicChipAttrName = 'mat-basic-chip';\n    /** The chip's leading icon. */\n    leadingIcon;\n    /** The chip's leading edit icon. */\n    editIcon;\n    /** The chip's trailing icon. */\n    trailingIcon;\n    /** The chip's trailing remove icon. */\n    removeIcon;\n    /** Action receiving the primary set of user interactions. */\n    primaryAction;\n    /**\n     * Handles the lazy creation of the MatChip ripple.\n     * Used to improve initial load time of large applications.\n     */\n    _rippleLoader = inject(MatRippleLoader);\n    _injector = inject(Injector);\n    constructor() {\n        const styleLoader = inject(_CdkPrivateStyleLoader);\n        styleLoader.load(_StructuralStylesLoader);\n        styleLoader.load(_VisuallyHiddenLoader);\n        this._monitorFocus();\n        this._rippleLoader?.configureRipple(this._elementRef.nativeElement, {\n            className: 'mat-mdc-chip-ripple',\n            disabled: this._isRippleDisabled(),\n        });\n    }\n    ngOnInit() {\n        // This check needs to happen in `ngOnInit` so the overridden value of\n        // `basicChipAttrName` coming from base classes can be picked up.\n        this._isBasicChip =\n            this._elementRef.nativeElement.hasAttribute(this.basicChipAttrName) ||\n                this._tagName.toLowerCase() === this.basicChipAttrName;\n    }\n    ngAfterViewInit() {\n        this._textElement = this._elementRef.nativeElement.querySelector('.mat-mdc-chip-action-label');\n        if (this._pendingFocus) {\n            this._pendingFocus = false;\n            this.focus();\n        }\n    }\n    ngAfterContentInit() {\n        // Since the styling depends on the presence of some\n        // actions, we have to mark for check on changes.\n        this._actionChanges = merge(this._allLeadingIcons.changes, this._allTrailingIcons.changes, this._allEditIcons.changes, this._allRemoveIcons.changes).subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n    ngDoCheck() {\n        this._rippleLoader.setDisabled(this._elementRef.nativeElement, this._isRippleDisabled());\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        this._rippleLoader?.destroyRipple(this._elementRef.nativeElement);\n        this._actionChanges?.unsubscribe();\n        this.destroyed.emit({ chip: this });\n        this.destroyed.complete();\n    }\n    /**\n     * Allows for programmatic removal of the chip.\n     *\n     * Informs any listeners of the removal request. Does not remove the chip from the DOM.\n     */\n    remove() {\n        if (this.removable) {\n            this._hadFocusOnRemove = this._hasFocus();\n            this.removed.emit({ chip: this });\n        }\n    }\n    /** Whether or not the ripple should be disabled. */\n    _isRippleDisabled() {\n        return (this.disabled ||\n            this.disableRipple ||\n            this._animationsDisabled ||\n            this._isBasicChip ||\n            !!this._globalRippleOptions?.disabled);\n    }\n    /** Returns whether the chip has a trailing icon. */\n    _hasTrailingIcon() {\n        return !!(this.trailingIcon || this.removeIcon);\n    }\n    /** Handles keyboard events on the chip. */\n    _handleKeydown(event) {\n        // Ignore backspace events where the user is holding down the key\n        // so that we don't accidentally remove too many chips.\n        if ((event.keyCode === BACKSPACE && !event.repeat) || event.keyCode === DELETE) {\n            event.preventDefault();\n            this.remove();\n        }\n    }\n    /** Allows for programmatic focusing of the chip. */\n    focus() {\n        if (!this.disabled) {\n            // If `focus` is called before `ngAfterViewInit`, we won't have access to the primary action.\n            // This can happen if the consumer tries to focus a chip immediately after it is added.\n            // Queue the method to be called again on init.\n            if (this.primaryAction) {\n                this.primaryAction.focus();\n            }\n            else {\n                this._pendingFocus = true;\n            }\n        }\n    }\n    /** Gets the action that contains a specific target node. */\n    _getSourceAction(target) {\n        return this._getActions().find(action => {\n            const element = action._elementRef.nativeElement;\n            return element === target || element.contains(target);\n        });\n    }\n    /** Gets all of the actions within the chip. */\n    _getActions() {\n        const result = [];\n        if (this.editIcon) {\n            result.push(this.editIcon);\n        }\n        if (this.primaryAction) {\n            result.push(this.primaryAction);\n        }\n        if (this.removeIcon) {\n            result.push(this.removeIcon);\n        }\n        if (this.trailingIcon) {\n            result.push(this.trailingIcon);\n        }\n        return result;\n    }\n    /** Handles interactions with the primary action of the chip. */\n    _handlePrimaryActionInteraction() {\n        // Empty here, but is overwritten in child classes.\n    }\n    /** Handles interactions with the edit action of the chip. */\n    _edit(event) {\n        // Empty here, but is overwritten in child classes.\n    }\n    /** Starts the focus monitoring process on the chip. */\n    _monitorFocus() {\n        this._focusMonitor.monitor(this._elementRef, true).subscribe(origin => {\n            const hasFocus = origin !== null;\n            if (hasFocus !== this._hasFocusInternal) {\n                this._hasFocusInternal = hasFocus;\n                if (hasFocus) {\n                    this._onFocus.next({ chip: this });\n                }\n                else {\n                    // When animations are enabled, Angular may end up removing the chip from the DOM a little\n                    // earlier than usual, causing it to be blurred and throwing off the logic in the chip list\n                    // that moves focus to the next item. To work around the issue, we defer marking the chip\n                    // as not focused until after the next render.\n                    this._changeDetectorRef.markForCheck();\n                    setTimeout(() => this._ngZone.run(() => this._onBlur.next({ chip: this })));\n                }\n            }\n        });\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatChip, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"20.0.0\", type: MatChip, isStandalone: true, selector: \"mat-basic-chip, [mat-basic-chip], mat-chip, [mat-chip]\", inputs: { role: \"role\", id: \"id\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaDescription: [\"aria-description\", \"ariaDescription\"], value: \"value\", color: \"color\", removable: [\"removable\", \"removable\", booleanAttribute], highlighted: [\"highlighted\", \"highlighted\", booleanAttribute], disableRipple: [\"disableRipple\", \"disableRipple\", booleanAttribute], disabled: [\"disabled\", \"disabled\", booleanAttribute] }, outputs: { removed: \"removed\", destroyed: \"destroyed\" }, host: { listeners: { \"keydown\": \"_handleKeydown($event)\" }, properties: { \"class\": \"\\\"mat-\\\" + (color || \\\"primary\\\")\", \"class.mdc-evolution-chip\": \"!_isBasicChip\", \"class.mdc-evolution-chip--disabled\": \"disabled\", \"class.mdc-evolution-chip--with-trailing-action\": \"_hasTrailingIcon()\", \"class.mdc-evolution-chip--with-primary-graphic\": \"leadingIcon\", \"class.mdc-evolution-chip--with-primary-icon\": \"leadingIcon\", \"class.mdc-evolution-chip--with-avatar\": \"leadingIcon\", \"class.mat-mdc-chip-with-avatar\": \"leadingIcon\", \"class.mat-mdc-chip-highlighted\": \"highlighted\", \"class.mat-mdc-chip-disabled\": \"disabled\", \"class.mat-mdc-basic-chip\": \"_isBasicChip\", \"class.mat-mdc-standard-chip\": \"!_isBasicChip\", \"class.mat-mdc-chip-with-trailing-icon\": \"_hasTrailingIcon()\", \"class._mat-animation-noopable\": \"_animationsDisabled\", \"id\": \"id\", \"attr.role\": \"role\", \"attr.aria-label\": \"ariaLabel\" }, classAttribute: \"mat-mdc-chip\" }, providers: [{ provide: MAT_CHIP, useExisting: MatChip }], queries: [{ propertyName: \"leadingIcon\", first: true, predicate: MAT_CHIP_AVATAR, descendants: true }, { propertyName: \"editIcon\", first: true, predicate: MAT_CHIP_EDIT, descendants: true }, { propertyName: \"trailingIcon\", first: true, predicate: MAT_CHIP_TRAILING_ICON, descendants: true }, { propertyName: \"removeIcon\", first: true, predicate: MAT_CHIP_REMOVE, descendants: true }, { propertyName: \"_allLeadingIcons\", predicate: MAT_CHIP_AVATAR, descendants: true }, { propertyName: \"_allTrailingIcons\", predicate: MAT_CHIP_TRAILING_ICON, descendants: true }, { propertyName: \"_allEditIcons\", predicate: MAT_CHIP_EDIT, descendants: true }, { propertyName: \"_allRemoveIcons\", predicate: MAT_CHIP_REMOVE, descendants: true }], viewQueries: [{ propertyName: \"primaryAction\", first: true, predicate: MatChipAction, descendants: true }], exportAs: [\"matChip\"], ngImport: i0, template: \"<span class=\\\"mat-mdc-chip-focus-overlay\\\"></span>\\n\\n<span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--primary\\\">\\n  <span matChipAction [isInteractive]=\\\"false\\\">\\n    @if (leadingIcon) {\\n      <span class=\\\"mdc-evolution-chip__graphic mat-mdc-chip-graphic\\\">\\n        <ng-content select=\\\"mat-chip-avatar, [matChipAvatar]\\\"></ng-content>\\n      </span>\\n    }\\n    <span class=\\\"mdc-evolution-chip__text-label mat-mdc-chip-action-label\\\">\\n      <ng-content></ng-content>\\n      <span class=\\\"mat-mdc-chip-primary-focus-indicator mat-focus-indicator\\\"></span>\\n    </span>\\n  </span>\\n</span>\\n\\n@if (_hasTrailingIcon()) {\\n  <span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--trailing\\\">\\n    <ng-content select=\\\"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\\\"></ng-content>\\n  </span>\\n}\\n\", styles: [\".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{flex-basis:100%;overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}@media(forced-colors: active){.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{forced-color-adjust:none}}.mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit;overflow-x:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary::before{border-width:var(--mat-chip-outline-width, 1px);border-radius:var(--mat-chip-container-shape-radius, 8px);box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1;border-style:solid}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--primary::before{border-color:var(--mat-chip-outline-color, var(--mat-sys-outline))}.mdc-evolution-chip__action--primary:not(.mdc-evolution-chip__action--presentational):not(.mdc-ripple-upgraded):focus::before{border-color:var(--mat-chip-focus-outline-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--primary::before{border-color:var(--mat-chip-disabled-outline-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary::before{border-width:var(--mat-chip-flat-selected-outline-width, 0)}.mat-mdc-basic-chip .mdc-evolution-chip__action--primary{font:inherit}.mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip__action--secondary{position:relative;overflow:visible}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--secondary{color:var(--mat-chip-with-trailing-icon-trailing-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--secondary{color:var(--mat-chip-with-trailing-icon-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mdc-evolution-chip__text-label{-webkit-user-select:none;user-select:none;white-space:nowrap;text-overflow:ellipsis;overflow:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__text-label{font-family:var(--mat-chip-label-text-font, var(--mat-sys-label-large-font));line-height:var(--mat-chip-label-text-line-height, var(--mat-sys-label-large-line-height));font-size:var(--mat-chip-label-text-size, var(--mat-sys-label-large-size));font-weight:var(--mat-chip-label-text-weight, var(--mat-sys-label-large-weight));letter-spacing:var(--mat-chip-label-text-tracking, var(--mat-sys-label-large-tracking))}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mat-chip-label-text-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mat-chip-selected-label-text-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label,.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mat-chip-disabled-label-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{width:var(--mat-chip-with-avatar-avatar-size, 24px);height:var(--mat-chip-with-avatar-avatar-size, 24px);font-size:var(--mat-chip-with-avatar-avatar-size, 24px)}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__graphic{padding-left:0}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%;height:20px;width:20px}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mat-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mat-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}@media(forced-colors: active){.mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove{opacity:calc(var(--mat-chip-trailing-action-opacity, 1)*var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove:focus{opacity:calc(var(--mat-chip-trailing-action-focus-opacity, 1)*var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mat-mdc-standard-chip{border-radius:var(--mat-chip-container-shape-radius, 8px);height:var(--mat-chip-container-height, 32px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mat-chip-elevated-container-color, transparent)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mat-chip-elevated-disabled-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled){background-color:var(--mat-chip-elevated-selected-container-color, var(--mat-sys-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mat-chip-flat-disabled-selected-container-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}@media(forced-colors: active){.mat-mdc-standard-chip{outline:solid 1px}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mat-chip-with-avatar-avatar-shape-radius, 24px);width:var(--mat-chip-with-icon-icon-size, 18px);height:var(--mat-chip-with-icon-icon-size, 18px);font-size:var(--mat-chip-with-icon-icon-size, 18px)}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mat-chip-with-icon-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mat-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-highlighted{--mat-chip-with-icon-icon-color: var(--mat-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container));--mat-chip-elevated-container-color: var(--mat-chip-elevated-selected-container-color, var(--mat-sys-secondary-container));--mat-chip-label-text-color: var(--mat-chip-selected-label-text-color, var(--mat-sys-on-secondary-container));--mat-chip-outline-width: var(--mat-chip-flat-selected-outline-width, 0)}.mat-mdc-chip-focus-overlay{background:var(--mat-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-selected .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{background:var(--mat-chip-hover-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mat-chip-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-focus-overlay .mat-mdc-chip-selected:hover,.mat-mdc-chip-highlighted:hover .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-hover-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mat-chip-selected-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mat-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mat-chip-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected.cdk-focused .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mat-chip-selected-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mdc-evolution-chip--disabled:not(.mdc-evolution-chip--selected) .mat-mdc-chip-avatar{opacity:var(--mat-chip-with-avatar-disabled-avatar-opacity, 0.38)}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{opacity:var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38)}.mdc-evolution-chip--disabled.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{opacity:var(--mat-chip-with-icon-disabled-icon-opacity, 0.38)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:var(--mat-chip-disabled-container-opacity, 1)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-trailing-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-edit,.mat-mdc-chip-remove{opacity:var(--mat-chip-trailing-action-opacity, 1)}.mat-mdc-chip-edit:focus,.mat-mdc-chip-remove:focus{opacity:var(--mat-chip-trailing-action-focus-opacity, 1)}.mat-mdc-chip-edit::after,.mat-mdc-chip-remove::after{background-color:var(--mat-chip-trailing-action-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-edit:hover::after,.mat-mdc-chip-remove:hover::after{opacity:var(--mat-chip-trailing-action-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-edit:focus::after,.mat-mdc-chip-remove:focus::after{opacity:var(--mat-chip-trailing-action-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected .mat-mdc-chip-remove::after,.mat-mdc-chip-highlighted .mat-mdc-chip-remove::after{background-color:var(--mat-chip-selected-trailing-action-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip .mat-ripple.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mat-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative;z-index:0}.mat-mdc-chip-action-label{text-align:left;z-index:1}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-focus-indicator::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-chip-edit::before,.mat-mdc-chip-remove::before{margin:calc(var(--mat-focus-indicator-border-width, 3px)*-1);left:8px;right:8px}.mat-mdc-chip-edit::after,.mat-mdc-chip-remove::after{content:\\\"\\\";display:block;opacity:0;position:absolute;top:-3px;bottom:-3px;left:5px;right:5px;border-radius:50%;box-sizing:border-box;padding:12px;margin:-12px;background-clip:content-box}.mat-mdc-chip-edit .mat-icon,.mat-mdc-chip-remove .mat-icon{width:18px;height:18px;font-size:18px;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}@media(forced-colors: active){.mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}}.mat-mdc-chip-action:focus .mat-focus-indicator::before{content:\\\"\\\"}.mdc-evolution-chip__icon,.mat-mdc-chip-edit .mat-icon,.mat-mdc-chip-remove .mat-icon{min-height:fit-content}\\n\"], dependencies: [{ kind: \"directive\", type: MatChipAction, selector: \"[matChipAction]\", inputs: [\"isInteractive\", \"disabled\", \"tabIndex\", \"_allowFocusWhenDisabled\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatChip, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-basic-chip, [mat-basic-chip], mat-chip, [mat-chip]', exportAs: 'matChip', host: {\n                        'class': 'mat-mdc-chip',\n                        '[class]': '\"mat-\" + (color || \"primary\")',\n                        '[class.mdc-evolution-chip]': '!_isBasicChip',\n                        '[class.mdc-evolution-chip--disabled]': 'disabled',\n                        '[class.mdc-evolution-chip--with-trailing-action]': '_hasTrailingIcon()',\n                        '[class.mdc-evolution-chip--with-primary-graphic]': 'leadingIcon',\n                        '[class.mdc-evolution-chip--with-primary-icon]': 'leadingIcon',\n                        '[class.mdc-evolution-chip--with-avatar]': 'leadingIcon',\n                        '[class.mat-mdc-chip-with-avatar]': 'leadingIcon',\n                        '[class.mat-mdc-chip-highlighted]': 'highlighted',\n                        '[class.mat-mdc-chip-disabled]': 'disabled',\n                        '[class.mat-mdc-basic-chip]': '_isBasicChip',\n                        '[class.mat-mdc-standard-chip]': '!_isBasicChip',\n                        '[class.mat-mdc-chip-with-trailing-icon]': '_hasTrailingIcon()',\n                        '[class._mat-animation-noopable]': '_animationsDisabled',\n                        '[id]': 'id',\n                        '[attr.role]': 'role',\n                        '[attr.aria-label]': 'ariaLabel',\n                        '(keydown)': '_handleKeydown($event)',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, providers: [{ provide: MAT_CHIP, useExisting: MatChip }], imports: [MatChipAction], template: \"<span class=\\\"mat-mdc-chip-focus-overlay\\\"></span>\\n\\n<span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--primary\\\">\\n  <span matChipAction [isInteractive]=\\\"false\\\">\\n    @if (leadingIcon) {\\n      <span class=\\\"mdc-evolution-chip__graphic mat-mdc-chip-graphic\\\">\\n        <ng-content select=\\\"mat-chip-avatar, [matChipAvatar]\\\"></ng-content>\\n      </span>\\n    }\\n    <span class=\\\"mdc-evolution-chip__text-label mat-mdc-chip-action-label\\\">\\n      <ng-content></ng-content>\\n      <span class=\\\"mat-mdc-chip-primary-focus-indicator mat-focus-indicator\\\"></span>\\n    </span>\\n  </span>\\n</span>\\n\\n@if (_hasTrailingIcon()) {\\n  <span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--trailing\\\">\\n    <ng-content select=\\\"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\\\"></ng-content>\\n  </span>\\n}\\n\", styles: [\".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{flex-basis:100%;overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}@media(forced-colors: active){.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{forced-color-adjust:none}}.mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit;overflow-x:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary::before{border-width:var(--mat-chip-outline-width, 1px);border-radius:var(--mat-chip-container-shape-radius, 8px);box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1;border-style:solid}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--primary::before{border-color:var(--mat-chip-outline-color, var(--mat-sys-outline))}.mdc-evolution-chip__action--primary:not(.mdc-evolution-chip__action--presentational):not(.mdc-ripple-upgraded):focus::before{border-color:var(--mat-chip-focus-outline-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--primary::before{border-color:var(--mat-chip-disabled-outline-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary::before{border-width:var(--mat-chip-flat-selected-outline-width, 0)}.mat-mdc-basic-chip .mdc-evolution-chip__action--primary{font:inherit}.mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip__action--secondary{position:relative;overflow:visible}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--secondary{color:var(--mat-chip-with-trailing-icon-trailing-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--secondary{color:var(--mat-chip-with-trailing-icon-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mdc-evolution-chip__text-label{-webkit-user-select:none;user-select:none;white-space:nowrap;text-overflow:ellipsis;overflow:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__text-label{font-family:var(--mat-chip-label-text-font, var(--mat-sys-label-large-font));line-height:var(--mat-chip-label-text-line-height, var(--mat-sys-label-large-line-height));font-size:var(--mat-chip-label-text-size, var(--mat-sys-label-large-size));font-weight:var(--mat-chip-label-text-weight, var(--mat-sys-label-large-weight));letter-spacing:var(--mat-chip-label-text-tracking, var(--mat-sys-label-large-tracking))}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mat-chip-label-text-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mat-chip-selected-label-text-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label,.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mat-chip-disabled-label-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{width:var(--mat-chip-with-avatar-avatar-size, 24px);height:var(--mat-chip-with-avatar-avatar-size, 24px);font-size:var(--mat-chip-with-avatar-avatar-size, 24px)}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__graphic{padding-left:0}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%;height:20px;width:20px}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mat-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mat-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}@media(forced-colors: active){.mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove{opacity:calc(var(--mat-chip-trailing-action-opacity, 1)*var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove:focus{opacity:calc(var(--mat-chip-trailing-action-focus-opacity, 1)*var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mat-mdc-standard-chip{border-radius:var(--mat-chip-container-shape-radius, 8px);height:var(--mat-chip-container-height, 32px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mat-chip-elevated-container-color, transparent)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mat-chip-elevated-disabled-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled){background-color:var(--mat-chip-elevated-selected-container-color, var(--mat-sys-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mat-chip-flat-disabled-selected-container-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}@media(forced-colors: active){.mat-mdc-standard-chip{outline:solid 1px}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mat-chip-with-avatar-avatar-shape-radius, 24px);width:var(--mat-chip-with-icon-icon-size, 18px);height:var(--mat-chip-with-icon-icon-size, 18px);font-size:var(--mat-chip-with-icon-icon-size, 18px)}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mat-chip-with-icon-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mat-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-highlighted{--mat-chip-with-icon-icon-color: var(--mat-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container));--mat-chip-elevated-container-color: var(--mat-chip-elevated-selected-container-color, var(--mat-sys-secondary-container));--mat-chip-label-text-color: var(--mat-chip-selected-label-text-color, var(--mat-sys-on-secondary-container));--mat-chip-outline-width: var(--mat-chip-flat-selected-outline-width, 0)}.mat-mdc-chip-focus-overlay{background:var(--mat-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-selected .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{background:var(--mat-chip-hover-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mat-chip-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-focus-overlay .mat-mdc-chip-selected:hover,.mat-mdc-chip-highlighted:hover .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-hover-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mat-chip-selected-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mat-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mat-chip-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected.cdk-focused .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mat-chip-selected-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mdc-evolution-chip--disabled:not(.mdc-evolution-chip--selected) .mat-mdc-chip-avatar{opacity:var(--mat-chip-with-avatar-disabled-avatar-opacity, 0.38)}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{opacity:var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38)}.mdc-evolution-chip--disabled.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{opacity:var(--mat-chip-with-icon-disabled-icon-opacity, 0.38)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:var(--mat-chip-disabled-container-opacity, 1)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-trailing-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-edit,.mat-mdc-chip-remove{opacity:var(--mat-chip-trailing-action-opacity, 1)}.mat-mdc-chip-edit:focus,.mat-mdc-chip-remove:focus{opacity:var(--mat-chip-trailing-action-focus-opacity, 1)}.mat-mdc-chip-edit::after,.mat-mdc-chip-remove::after{background-color:var(--mat-chip-trailing-action-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-edit:hover::after,.mat-mdc-chip-remove:hover::after{opacity:var(--mat-chip-trailing-action-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-edit:focus::after,.mat-mdc-chip-remove:focus::after{opacity:var(--mat-chip-trailing-action-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected .mat-mdc-chip-remove::after,.mat-mdc-chip-highlighted .mat-mdc-chip-remove::after{background-color:var(--mat-chip-selected-trailing-action-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip .mat-ripple.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mat-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative;z-index:0}.mat-mdc-chip-action-label{text-align:left;z-index:1}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-focus-indicator::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-chip-edit::before,.mat-mdc-chip-remove::before{margin:calc(var(--mat-focus-indicator-border-width, 3px)*-1);left:8px;right:8px}.mat-mdc-chip-edit::after,.mat-mdc-chip-remove::after{content:\\\"\\\";display:block;opacity:0;position:absolute;top:-3px;bottom:-3px;left:5px;right:5px;border-radius:50%;box-sizing:border-box;padding:12px;margin:-12px;background-clip:content-box}.mat-mdc-chip-edit .mat-icon,.mat-mdc-chip-remove .mat-icon{width:18px;height:18px;font-size:18px;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}@media(forced-colors: active){.mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}}.mat-mdc-chip-action:focus .mat-focus-indicator::before{content:\\\"\\\"}.mdc-evolution-chip__icon,.mat-mdc-chip-edit .mat-icon,.mat-mdc-chip-remove .mat-icon{min-height:fit-content}\\n\"] }]\n        }], ctorParameters: () => [], propDecorators: { role: [{\n                type: Input\n            }], _allLeadingIcons: [{\n                type: ContentChildren,\n                args: [MAT_CHIP_AVATAR, { descendants: true }]\n            }], _allTrailingIcons: [{\n                type: ContentChildren,\n                args: [MAT_CHIP_TRAILING_ICON, { descendants: true }]\n            }], _allEditIcons: [{\n                type: ContentChildren,\n                args: [MAT_CHIP_EDIT, { descendants: true }]\n            }], _allRemoveIcons: [{\n                type: ContentChildren,\n                args: [MAT_CHIP_REMOVE, { descendants: true }]\n            }], id: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], ariaDescription: [{\n                type: Input,\n                args: ['aria-description']\n            }], value: [{\n                type: Input\n            }], color: [{\n                type: Input\n            }], removable: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], highlighted: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], disableRipple: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], disabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], removed: [{\n                type: Output\n            }], destroyed: [{\n                type: Output\n            }], leadingIcon: [{\n                type: ContentChild,\n                args: [MAT_CHIP_AVATAR]\n            }], editIcon: [{\n                type: ContentChild,\n                args: [MAT_CHIP_EDIT]\n            }], trailingIcon: [{\n                type: ContentChild,\n                args: [MAT_CHIP_TRAILING_ICON]\n            }], removeIcon: [{\n                type: ContentChild,\n                args: [MAT_CHIP_REMOVE]\n            }], primaryAction: [{\n                type: ViewChild,\n                args: [MatChipAction]\n            }] } });\n\n/** Event object emitted by MatChipOption when selected or deselected. */\nclass MatChipSelectionChange {\n    source;\n    selected;\n    isUserInput;\n    constructor(\n    /** Reference to the chip that emitted the event. */\n    source, \n    /** Whether the chip that emitted the event is selected. */\n    selected, \n    /** Whether the selection change was a result of a user interaction. */\n    isUserInput = false) {\n        this.source = source;\n        this.selected = selected;\n        this.isUserInput = isUserInput;\n    }\n}\n/**\n * An extension of the MatChip component that supports chip selection. Used with MatChipListbox.\n *\n * Unlike other chips, the user can focus on disabled chip options inside a MatChipListbox. The\n * user cannot click disabled chips.\n */\nclass MatChipOption extends MatChip {\n    /** Default chip options. */\n    _defaultOptions = inject(MAT_CHIPS_DEFAULT_OPTIONS, { optional: true });\n    /** Whether the chip list is selectable. */\n    chipListSelectable = true;\n    /** Whether the chip list is in multi-selection mode. */\n    _chipListMultiple = false;\n    /** Whether the chip list hides single-selection indicator. */\n    _chipListHideSingleSelectionIndicator = this._defaultOptions?.hideSingleSelectionIndicator ?? false;\n    /**\n     * Whether or not the chip is selectable.\n     *\n     * When a chip is not selectable, changes to its selected state are always\n     * ignored. By default an option chip is selectable, and it becomes\n     * non-selectable if its parent chip list is not selectable.\n     */\n    get selectable() {\n        return this._selectable && this.chipListSelectable;\n    }\n    set selectable(value) {\n        this._selectable = value;\n        this._changeDetectorRef.markForCheck();\n    }\n    _selectable = true;\n    /** Whether the chip is selected. */\n    get selected() {\n        return this._selected;\n    }\n    set selected(value) {\n        this._setSelectedState(value, false, true);\n    }\n    _selected = false;\n    /**\n     * The ARIA selected applied to the chip. Conforms to WAI ARIA best practices for listbox\n     * interaction patterns.\n     *\n     * From [WAI ARIA Listbox authoring practices guide](\n     * https://www.w3.org/WAI/ARIA/apg/patterns/listbox/):\n     *  \"If any options are selected, each selected option has either aria-selected or aria-checked\n     *  set to true. All options that are selectable but not selected have either aria-selected or\n     *  aria-checked set to false.\"\n     *\n     * Set `aria-selected=\"false\"` on not-selected listbox options that are selectable to fix\n     * VoiceOver reading every option as \"selected\" (#25736).\n     */\n    get ariaSelected() {\n        return this.selectable ? this.selected.toString() : null;\n    }\n    /** The unstyled chip selector for this component. */\n    basicChipAttrName = 'mat-basic-chip-option';\n    /** Emitted when the chip is selected or deselected. */\n    selectionChange = new EventEmitter();\n    ngOnInit() {\n        super.ngOnInit();\n        this.role = 'presentation';\n    }\n    /** Selects the chip. */\n    select() {\n        this._setSelectedState(true, false, true);\n    }\n    /** Deselects the chip. */\n    deselect() {\n        this._setSelectedState(false, false, true);\n    }\n    /** Selects this chip and emits userInputSelection event */\n    selectViaInteraction() {\n        this._setSelectedState(true, true, true);\n    }\n    /** Toggles the current selected state of this chip. */\n    toggleSelected(isUserInput = false) {\n        this._setSelectedState(!this.selected, isUserInput, true);\n        return this.selected;\n    }\n    _handlePrimaryActionInteraction() {\n        if (!this.disabled) {\n            // Interacting with the primary action implies that the chip already has focus, however\n            // there's a bug in Safari where focus ends up lingering on the previous chip (see #27544).\n            // We work around it by explicitly focusing the primary action of the current chip.\n            this.focus();\n            if (this.selectable) {\n                this.toggleSelected(true);\n            }\n        }\n    }\n    _hasLeadingGraphic() {\n        if (this.leadingIcon) {\n            return true;\n        }\n        // The checkmark graphic communicates selected state for both single-select and multi-select.\n        // Include checkmark in single-select to fix a11y issue where selected state is communicated\n        // visually only using color (#25886).\n        return !this._chipListHideSingleSelectionIndicator || this._chipListMultiple;\n    }\n    _setSelectedState(isSelected, isUserInput, emitEvent) {\n        if (isSelected !== this.selected) {\n            this._selected = isSelected;\n            if (emitEvent) {\n                this.selectionChange.emit({\n                    source: this,\n                    isUserInput,\n                    selected: this.selected,\n                });\n            }\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatChipOption, deps: null, target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"20.0.0\", type: MatChipOption, isStandalone: true, selector: \"mat-basic-chip-option, [mat-basic-chip-option], mat-chip-option, [mat-chip-option]\", inputs: { selectable: [\"selectable\", \"selectable\", booleanAttribute], selected: [\"selected\", \"selected\", booleanAttribute] }, outputs: { selectionChange: \"selectionChange\" }, host: { properties: { \"class.mdc-evolution-chip\": \"!_isBasicChip\", \"class.mdc-evolution-chip--filter\": \"!_isBasicChip\", \"class.mdc-evolution-chip--selectable\": \"!_isBasicChip\", \"class.mat-mdc-chip-selected\": \"selected\", \"class.mat-mdc-chip-multiple\": \"_chipListMultiple\", \"class.mat-mdc-chip-disabled\": \"disabled\", \"class.mat-mdc-chip-with-avatar\": \"leadingIcon\", \"class.mdc-evolution-chip--disabled\": \"disabled\", \"class.mdc-evolution-chip--selected\": \"selected\", \"class.mdc-evolution-chip--selecting\": \"!_animationsDisabled\", \"class.mdc-evolution-chip--with-trailing-action\": \"_hasTrailingIcon()\", \"class.mdc-evolution-chip--with-primary-icon\": \"leadingIcon\", \"class.mdc-evolution-chip--with-primary-graphic\": \"_hasLeadingGraphic()\", \"class.mdc-evolution-chip--with-avatar\": \"leadingIcon\", \"class.mat-mdc-chip-highlighted\": \"highlighted\", \"class.mat-mdc-chip-with-trailing-icon\": \"_hasTrailingIcon()\", \"attr.tabindex\": \"null\", \"attr.aria-label\": \"null\", \"attr.aria-description\": \"null\", \"attr.role\": \"role\", \"id\": \"id\" }, classAttribute: \"mat-mdc-chip mat-mdc-chip-option\" }, providers: [\n            { provide: MatChip, useExisting: MatChipOption },\n            { provide: MAT_CHIP, useExisting: MatChipOption },\n        ], usesInheritance: true, ngImport: i0, template: \"<span class=\\\"mat-mdc-chip-focus-overlay\\\"></span>\\n\\n<span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--primary\\\">\\n  <button\\n    matChipAction\\n    [_allowFocusWhenDisabled]=\\\"true\\\"\\n    [attr.aria-selected]=\\\"ariaSelected\\\"\\n    [attr.aria-label]=\\\"ariaLabel\\\"\\n    [attr.aria-describedby]=\\\"_ariaDescriptionId\\\"\\n    role=\\\"option\\\">\\n    @if (_hasLeadingGraphic()) {\\n      <span class=\\\"mdc-evolution-chip__graphic mat-mdc-chip-graphic\\\">\\n        <ng-content select=\\\"mat-chip-avatar, [matChipAvatar]\\\"></ng-content>\\n        <span class=\\\"mdc-evolution-chip__checkmark\\\">\\n          <svg\\n            class=\\\"mdc-evolution-chip__checkmark-svg\\\"\\n            viewBox=\\\"-2 -3 30 30\\\"\\n            focusable=\\\"false\\\"\\n            aria-hidden=\\\"true\\\">\\n            <path class=\\\"mdc-evolution-chip__checkmark-path\\\"\\n                  fill=\\\"none\\\" stroke=\\\"currentColor\\\" d=\\\"M1.73,12.91 8.1,19.28 22.79,4.59\\\" />\\n          </svg>\\n        </span>\\n      </span>\\n    }\\n    <span class=\\\"mdc-evolution-chip__text-label mat-mdc-chip-action-label\\\">\\n      <ng-content></ng-content>\\n      <span class=\\\"mat-mdc-chip-primary-focus-indicator mat-focus-indicator\\\"></span>\\n    </span>\\n  </button>\\n</span>\\n\\n@if (_hasTrailingIcon()) {\\n  <span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--trailing\\\">\\n    <ng-content select=\\\"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\\\"></ng-content>\\n  </span>\\n}\\n\\n<span class=\\\"cdk-visually-hidden\\\" [id]=\\\"_ariaDescriptionId\\\">{{ariaDescription}}</span>\\n\", styles: [\".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{flex-basis:100%;overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}@media(forced-colors: active){.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{forced-color-adjust:none}}.mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit;overflow-x:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary::before{border-width:var(--mat-chip-outline-width, 1px);border-radius:var(--mat-chip-container-shape-radius, 8px);box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1;border-style:solid}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--primary::before{border-color:var(--mat-chip-outline-color, var(--mat-sys-outline))}.mdc-evolution-chip__action--primary:not(.mdc-evolution-chip__action--presentational):not(.mdc-ripple-upgraded):focus::before{border-color:var(--mat-chip-focus-outline-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--primary::before{border-color:var(--mat-chip-disabled-outline-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary::before{border-width:var(--mat-chip-flat-selected-outline-width, 0)}.mat-mdc-basic-chip .mdc-evolution-chip__action--primary{font:inherit}.mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip__action--secondary{position:relative;overflow:visible}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--secondary{color:var(--mat-chip-with-trailing-icon-trailing-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--secondary{color:var(--mat-chip-with-trailing-icon-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mdc-evolution-chip__text-label{-webkit-user-select:none;user-select:none;white-space:nowrap;text-overflow:ellipsis;overflow:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__text-label{font-family:var(--mat-chip-label-text-font, var(--mat-sys-label-large-font));line-height:var(--mat-chip-label-text-line-height, var(--mat-sys-label-large-line-height));font-size:var(--mat-chip-label-text-size, var(--mat-sys-label-large-size));font-weight:var(--mat-chip-label-text-weight, var(--mat-sys-label-large-weight));letter-spacing:var(--mat-chip-label-text-tracking, var(--mat-sys-label-large-tracking))}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mat-chip-label-text-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mat-chip-selected-label-text-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label,.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mat-chip-disabled-label-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{width:var(--mat-chip-with-avatar-avatar-size, 24px);height:var(--mat-chip-with-avatar-avatar-size, 24px);font-size:var(--mat-chip-with-avatar-avatar-size, 24px)}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__graphic{padding-left:0}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%;height:20px;width:20px}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mat-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mat-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}@media(forced-colors: active){.mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove{opacity:calc(var(--mat-chip-trailing-action-opacity, 1)*var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove:focus{opacity:calc(var(--mat-chip-trailing-action-focus-opacity, 1)*var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mat-mdc-standard-chip{border-radius:var(--mat-chip-container-shape-radius, 8px);height:var(--mat-chip-container-height, 32px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mat-chip-elevated-container-color, transparent)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mat-chip-elevated-disabled-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled){background-color:var(--mat-chip-elevated-selected-container-color, var(--mat-sys-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mat-chip-flat-disabled-selected-container-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}@media(forced-colors: active){.mat-mdc-standard-chip{outline:solid 1px}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mat-chip-with-avatar-avatar-shape-radius, 24px);width:var(--mat-chip-with-icon-icon-size, 18px);height:var(--mat-chip-with-icon-icon-size, 18px);font-size:var(--mat-chip-with-icon-icon-size, 18px)}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mat-chip-with-icon-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mat-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-highlighted{--mat-chip-with-icon-icon-color: var(--mat-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container));--mat-chip-elevated-container-color: var(--mat-chip-elevated-selected-container-color, var(--mat-sys-secondary-container));--mat-chip-label-text-color: var(--mat-chip-selected-label-text-color, var(--mat-sys-on-secondary-container));--mat-chip-outline-width: var(--mat-chip-flat-selected-outline-width, 0)}.mat-mdc-chip-focus-overlay{background:var(--mat-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-selected .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{background:var(--mat-chip-hover-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mat-chip-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-focus-overlay .mat-mdc-chip-selected:hover,.mat-mdc-chip-highlighted:hover .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-hover-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mat-chip-selected-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mat-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mat-chip-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected.cdk-focused .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mat-chip-selected-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mdc-evolution-chip--disabled:not(.mdc-evolution-chip--selected) .mat-mdc-chip-avatar{opacity:var(--mat-chip-with-avatar-disabled-avatar-opacity, 0.38)}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{opacity:var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38)}.mdc-evolution-chip--disabled.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{opacity:var(--mat-chip-with-icon-disabled-icon-opacity, 0.38)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:var(--mat-chip-disabled-container-opacity, 1)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-trailing-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-edit,.mat-mdc-chip-remove{opacity:var(--mat-chip-trailing-action-opacity, 1)}.mat-mdc-chip-edit:focus,.mat-mdc-chip-remove:focus{opacity:var(--mat-chip-trailing-action-focus-opacity, 1)}.mat-mdc-chip-edit::after,.mat-mdc-chip-remove::after{background-color:var(--mat-chip-trailing-action-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-edit:hover::after,.mat-mdc-chip-remove:hover::after{opacity:var(--mat-chip-trailing-action-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-edit:focus::after,.mat-mdc-chip-remove:focus::after{opacity:var(--mat-chip-trailing-action-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected .mat-mdc-chip-remove::after,.mat-mdc-chip-highlighted .mat-mdc-chip-remove::after{background-color:var(--mat-chip-selected-trailing-action-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip .mat-ripple.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mat-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative;z-index:0}.mat-mdc-chip-action-label{text-align:left;z-index:1}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-focus-indicator::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-chip-edit::before,.mat-mdc-chip-remove::before{margin:calc(var(--mat-focus-indicator-border-width, 3px)*-1);left:8px;right:8px}.mat-mdc-chip-edit::after,.mat-mdc-chip-remove::after{content:\\\"\\\";display:block;opacity:0;position:absolute;top:-3px;bottom:-3px;left:5px;right:5px;border-radius:50%;box-sizing:border-box;padding:12px;margin:-12px;background-clip:content-box}.mat-mdc-chip-edit .mat-icon,.mat-mdc-chip-remove .mat-icon{width:18px;height:18px;font-size:18px;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}@media(forced-colors: active){.mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}}.mat-mdc-chip-action:focus .mat-focus-indicator::before{content:\\\"\\\"}.mdc-evolution-chip__icon,.mat-mdc-chip-edit .mat-icon,.mat-mdc-chip-remove .mat-icon{min-height:fit-content}\\n\"], dependencies: [{ kind: \"directive\", type: MatChipAction, selector: \"[matChipAction]\", inputs: [\"isInteractive\", \"disabled\", \"tabIndex\", \"_allowFocusWhenDisabled\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatChipOption, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-basic-chip-option, [mat-basic-chip-option], mat-chip-option, [mat-chip-option]', host: {\n                        'class': 'mat-mdc-chip mat-mdc-chip-option',\n                        '[class.mdc-evolution-chip]': '!_isBasicChip',\n                        '[class.mdc-evolution-chip--filter]': '!_isBasicChip',\n                        '[class.mdc-evolution-chip--selectable]': '!_isBasicChip',\n                        '[class.mat-mdc-chip-selected]': 'selected',\n                        '[class.mat-mdc-chip-multiple]': '_chipListMultiple',\n                        '[class.mat-mdc-chip-disabled]': 'disabled',\n                        '[class.mat-mdc-chip-with-avatar]': 'leadingIcon',\n                        '[class.mdc-evolution-chip--disabled]': 'disabled',\n                        '[class.mdc-evolution-chip--selected]': 'selected',\n                        // This class enables the transition on the checkmark. Usually MDC adds it when selection\n                        // starts and removes it once the animation is finished. We don't need to go through all\n                        // the trouble, because we only care about the selection animation. MDC needs to do it,\n                        // because they also have an exit animation that we don't care about.\n                        '[class.mdc-evolution-chip--selecting]': '!_animationsDisabled',\n                        '[class.mdc-evolution-chip--with-trailing-action]': '_hasTrailingIcon()',\n                        '[class.mdc-evolution-chip--with-primary-icon]': 'leadingIcon',\n                        '[class.mdc-evolution-chip--with-primary-graphic]': '_hasLeadingGraphic()',\n                        '[class.mdc-evolution-chip--with-avatar]': 'leadingIcon',\n                        '[class.mat-mdc-chip-highlighted]': 'highlighted',\n                        '[class.mat-mdc-chip-with-trailing-icon]': '_hasTrailingIcon()',\n                        '[attr.tabindex]': 'null',\n                        '[attr.aria-label]': 'null',\n                        '[attr.aria-description]': 'null',\n                        '[attr.role]': 'role',\n                        '[id]': 'id',\n                    }, providers: [\n                        { provide: MatChip, useExisting: MatChipOption },\n                        { provide: MAT_CHIP, useExisting: MatChipOption },\n                    ], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, imports: [MatChipAction], template: \"<span class=\\\"mat-mdc-chip-focus-overlay\\\"></span>\\n\\n<span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--primary\\\">\\n  <button\\n    matChipAction\\n    [_allowFocusWhenDisabled]=\\\"true\\\"\\n    [attr.aria-selected]=\\\"ariaSelected\\\"\\n    [attr.aria-label]=\\\"ariaLabel\\\"\\n    [attr.aria-describedby]=\\\"_ariaDescriptionId\\\"\\n    role=\\\"option\\\">\\n    @if (_hasLeadingGraphic()) {\\n      <span class=\\\"mdc-evolution-chip__graphic mat-mdc-chip-graphic\\\">\\n        <ng-content select=\\\"mat-chip-avatar, [matChipAvatar]\\\"></ng-content>\\n        <span class=\\\"mdc-evolution-chip__checkmark\\\">\\n          <svg\\n            class=\\\"mdc-evolution-chip__checkmark-svg\\\"\\n            viewBox=\\\"-2 -3 30 30\\\"\\n            focusable=\\\"false\\\"\\n            aria-hidden=\\\"true\\\">\\n            <path class=\\\"mdc-evolution-chip__checkmark-path\\\"\\n                  fill=\\\"none\\\" stroke=\\\"currentColor\\\" d=\\\"M1.73,12.91 8.1,19.28 22.79,4.59\\\" />\\n          </svg>\\n        </span>\\n      </span>\\n    }\\n    <span class=\\\"mdc-evolution-chip__text-label mat-mdc-chip-action-label\\\">\\n      <ng-content></ng-content>\\n      <span class=\\\"mat-mdc-chip-primary-focus-indicator mat-focus-indicator\\\"></span>\\n    </span>\\n  </button>\\n</span>\\n\\n@if (_hasTrailingIcon()) {\\n  <span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--trailing\\\">\\n    <ng-content select=\\\"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\\\"></ng-content>\\n  </span>\\n}\\n\\n<span class=\\\"cdk-visually-hidden\\\" [id]=\\\"_ariaDescriptionId\\\">{{ariaDescription}}</span>\\n\", styles: [\".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{flex-basis:100%;overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}@media(forced-colors: active){.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{forced-color-adjust:none}}.mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit;overflow-x:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary::before{border-width:var(--mat-chip-outline-width, 1px);border-radius:var(--mat-chip-container-shape-radius, 8px);box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1;border-style:solid}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--primary::before{border-color:var(--mat-chip-outline-color, var(--mat-sys-outline))}.mdc-evolution-chip__action--primary:not(.mdc-evolution-chip__action--presentational):not(.mdc-ripple-upgraded):focus::before{border-color:var(--mat-chip-focus-outline-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--primary::before{border-color:var(--mat-chip-disabled-outline-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary::before{border-width:var(--mat-chip-flat-selected-outline-width, 0)}.mat-mdc-basic-chip .mdc-evolution-chip__action--primary{font:inherit}.mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip__action--secondary{position:relative;overflow:visible}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--secondary{color:var(--mat-chip-with-trailing-icon-trailing-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--secondary{color:var(--mat-chip-with-trailing-icon-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mdc-evolution-chip__text-label{-webkit-user-select:none;user-select:none;white-space:nowrap;text-overflow:ellipsis;overflow:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__text-label{font-family:var(--mat-chip-label-text-font, var(--mat-sys-label-large-font));line-height:var(--mat-chip-label-text-line-height, var(--mat-sys-label-large-line-height));font-size:var(--mat-chip-label-text-size, var(--mat-sys-label-large-size));font-weight:var(--mat-chip-label-text-weight, var(--mat-sys-label-large-weight));letter-spacing:var(--mat-chip-label-text-tracking, var(--mat-sys-label-large-tracking))}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mat-chip-label-text-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mat-chip-selected-label-text-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label,.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mat-chip-disabled-label-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{width:var(--mat-chip-with-avatar-avatar-size, 24px);height:var(--mat-chip-with-avatar-avatar-size, 24px);font-size:var(--mat-chip-with-avatar-avatar-size, 24px)}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__graphic{padding-left:0}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%;height:20px;width:20px}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mat-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mat-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}@media(forced-colors: active){.mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove{opacity:calc(var(--mat-chip-trailing-action-opacity, 1)*var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove:focus{opacity:calc(var(--mat-chip-trailing-action-focus-opacity, 1)*var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mat-mdc-standard-chip{border-radius:var(--mat-chip-container-shape-radius, 8px);height:var(--mat-chip-container-height, 32px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mat-chip-elevated-container-color, transparent)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mat-chip-elevated-disabled-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled){background-color:var(--mat-chip-elevated-selected-container-color, var(--mat-sys-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mat-chip-flat-disabled-selected-container-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}@media(forced-colors: active){.mat-mdc-standard-chip{outline:solid 1px}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mat-chip-with-avatar-avatar-shape-radius, 24px);width:var(--mat-chip-with-icon-icon-size, 18px);height:var(--mat-chip-with-icon-icon-size, 18px);font-size:var(--mat-chip-with-icon-icon-size, 18px)}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mat-chip-with-icon-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mat-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-highlighted{--mat-chip-with-icon-icon-color: var(--mat-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container));--mat-chip-elevated-container-color: var(--mat-chip-elevated-selected-container-color, var(--mat-sys-secondary-container));--mat-chip-label-text-color: var(--mat-chip-selected-label-text-color, var(--mat-sys-on-secondary-container));--mat-chip-outline-width: var(--mat-chip-flat-selected-outline-width, 0)}.mat-mdc-chip-focus-overlay{background:var(--mat-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-selected .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{background:var(--mat-chip-hover-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mat-chip-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-focus-overlay .mat-mdc-chip-selected:hover,.mat-mdc-chip-highlighted:hover .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-hover-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mat-chip-selected-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mat-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mat-chip-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected.cdk-focused .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mat-chip-selected-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mdc-evolution-chip--disabled:not(.mdc-evolution-chip--selected) .mat-mdc-chip-avatar{opacity:var(--mat-chip-with-avatar-disabled-avatar-opacity, 0.38)}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{opacity:var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38)}.mdc-evolution-chip--disabled.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{opacity:var(--mat-chip-with-icon-disabled-icon-opacity, 0.38)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:var(--mat-chip-disabled-container-opacity, 1)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-trailing-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-edit,.mat-mdc-chip-remove{opacity:var(--mat-chip-trailing-action-opacity, 1)}.mat-mdc-chip-edit:focus,.mat-mdc-chip-remove:focus{opacity:var(--mat-chip-trailing-action-focus-opacity, 1)}.mat-mdc-chip-edit::after,.mat-mdc-chip-remove::after{background-color:var(--mat-chip-trailing-action-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-edit:hover::after,.mat-mdc-chip-remove:hover::after{opacity:var(--mat-chip-trailing-action-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-edit:focus::after,.mat-mdc-chip-remove:focus::after{opacity:var(--mat-chip-trailing-action-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected .mat-mdc-chip-remove::after,.mat-mdc-chip-highlighted .mat-mdc-chip-remove::after{background-color:var(--mat-chip-selected-trailing-action-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip .mat-ripple.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mat-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative;z-index:0}.mat-mdc-chip-action-label{text-align:left;z-index:1}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-focus-indicator::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-chip-edit::before,.mat-mdc-chip-remove::before{margin:calc(var(--mat-focus-indicator-border-width, 3px)*-1);left:8px;right:8px}.mat-mdc-chip-edit::after,.mat-mdc-chip-remove::after{content:\\\"\\\";display:block;opacity:0;position:absolute;top:-3px;bottom:-3px;left:5px;right:5px;border-radius:50%;box-sizing:border-box;padding:12px;margin:-12px;background-clip:content-box}.mat-mdc-chip-edit .mat-icon,.mat-mdc-chip-remove .mat-icon{width:18px;height:18px;font-size:18px;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}@media(forced-colors: active){.mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}}.mat-mdc-chip-action:focus .mat-focus-indicator::before{content:\\\"\\\"}.mdc-evolution-chip__icon,.mat-mdc-chip-edit .mat-icon,.mat-mdc-chip-remove .mat-icon{min-height:fit-content}\\n\"] }]\n        }], propDecorators: { selectable: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], selected: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], selectionChange: [{\n                type: Output\n            }] } });\n\n/**\n * A directive that makes a span editable and exposes functions to modify and retrieve the\n * element's contents.\n */\nclass MatChipEditInput {\n    _elementRef = inject(ElementRef);\n    _document = inject(DOCUMENT);\n    constructor() { }\n    initialize(initialValue) {\n        this.getNativeElement().focus();\n        this.setValue(initialValue);\n    }\n    getNativeElement() {\n        return this._elementRef.nativeElement;\n    }\n    setValue(value) {\n        this.getNativeElement().textContent = value;\n        this._moveCursorToEndOfInput();\n    }\n    getValue() {\n        return this.getNativeElement().textContent || '';\n    }\n    _moveCursorToEndOfInput() {\n        const range = this._document.createRange();\n        range.selectNodeContents(this.getNativeElement());\n        range.collapse(false);\n        const sel = window.getSelection();\n        sel.removeAllRanges();\n        sel.addRange(range);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatChipEditInput, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatChipEditInput, isStandalone: true, selector: \"span[matChipEditInput]\", host: { attributes: { \"role\": \"textbox\", \"tabindex\": \"-1\", \"contenteditable\": \"true\" }, classAttribute: \"mat-chip-edit-input\" }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatChipEditInput, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'span[matChipEditInput]',\n                    host: {\n                        'class': 'mat-chip-edit-input',\n                        'role': 'textbox',\n                        'tabindex': '-1',\n                        'contenteditable': 'true',\n                    },\n                }]\n        }], ctorParameters: () => [] });\n\n/**\n * An extension of the MatChip component used with MatChipGrid and\n * the matChipInputFor directive.\n */\nclass MatChipRow extends MatChip {\n    basicChipAttrName = 'mat-basic-chip-row';\n    /**\n     * The editing action has to be triggered in a timeout. While we're waiting on it, a blur\n     * event might occur which will interrupt the editing. This flag is used to avoid interruptions\n     * while the editing action is being initialized.\n     */\n    _editStartPending = false;\n    editable = false;\n    /** Emitted when the chip is edited. */\n    edited = new EventEmitter();\n    /** The default chip edit input that is used if none is projected into this chip row. */\n    defaultEditInput;\n    /** The projected chip edit input. */\n    contentEditInput;\n    /**\n     * Set on a mousedown when the chip is already focused via mouse or keyboard.\n     *\n     * This allows us to ensure chip is already focused when deciding whether to enter the\n     * edit mode on a subsequent click. Otherwise, the chip appears focused when handling the\n     * first click event.\n     */\n    _alreadyFocused = false;\n    _isEditing = false;\n    constructor() {\n        super();\n        this.role = 'row';\n        this._onBlur.pipe(takeUntil(this.destroyed)).subscribe(() => {\n            if (this._isEditing && !this._editStartPending) {\n                this._onEditFinish();\n            }\n            this._alreadyFocused = false;\n        });\n    }\n    ngAfterViewInit() {\n        super.ngAfterViewInit();\n        // Sets _alreadyFocused (ahead of click) when chip already has focus.\n        this._ngZone.runOutsideAngular(() => {\n            this._elementRef.nativeElement.addEventListener('mousedown', () => (this._alreadyFocused = this._hasFocus()));\n        });\n    }\n    _hasLeadingActionIcon() {\n        // The leading action (edit) icon is hidden while editing.\n        return !this._isEditing && !!this.editIcon;\n    }\n    _hasTrailingIcon() {\n        // The trailing icon is hidden while editing.\n        return !this._isEditing && super._hasTrailingIcon();\n    }\n    /** Sends focus to the first gridcell when the user clicks anywhere inside the chip. */\n    _handleFocus() {\n        if (!this._isEditing && !this.disabled) {\n            this.focus();\n        }\n    }\n    _handleKeydown(event) {\n        if (event.keyCode === ENTER && !this.disabled) {\n            if (this._isEditing) {\n                event.preventDefault();\n                this._onEditFinish();\n            }\n            else if (this.editable) {\n                this._startEditing(event);\n            }\n        }\n        else if (this._isEditing) {\n            // Stop the event from reaching the chip set in order to avoid navigating.\n            event.stopPropagation();\n        }\n        else {\n            super._handleKeydown(event);\n        }\n    }\n    _handleClick(event) {\n        if (!this.disabled && this.editable && !this._isEditing && this._alreadyFocused) {\n            // Ensure click event not picked up unintentionally by other listeners, as\n            // once editing starts, the source element is detached from DOM.\n            event.preventDefault();\n            event.stopPropagation();\n            this._startEditing(event);\n        }\n    }\n    _handleDoubleclick(event) {\n        if (!this.disabled && this.editable) {\n            this._startEditing(event);\n        }\n    }\n    _edit() {\n        // markForCheck necessary for edit input to be rendered\n        this._changeDetectorRef.markForCheck();\n        this._startEditing();\n    }\n    _startEditing(event) {\n        if (!this.primaryAction ||\n            (this.removeIcon &&\n                !!event &&\n                this._getSourceAction(event.target) === this.removeIcon)) {\n            return;\n        }\n        // The value depends on the DOM so we need to extract it before we flip the flag.\n        const value = this.value;\n        this._isEditing = this._editStartPending = true;\n        // Defer initializing the input until after it has been added to the DOM.\n        afterNextRender(() => {\n            this._getEditInput().initialize(value);\n            // Necessary when using edit icon to prevent edit from aborting\n            setTimeout(() => this._ngZone.run(() => (this._editStartPending = false)));\n        }, { injector: this._injector });\n    }\n    _onEditFinish() {\n        this._isEditing = this._editStartPending = false;\n        this.edited.emit({ chip: this, value: this._getEditInput().getValue() });\n        // If the edit input is still focused or focus was returned to the body after it was destroyed,\n        // return focus to the chip contents.\n        if (this._document.activeElement === this._getEditInput().getNativeElement() ||\n            this._document.activeElement === this._document.body) {\n            this.primaryAction.focus();\n        }\n    }\n    _isRippleDisabled() {\n        return super._isRippleDisabled() || this._isEditing;\n    }\n    /**\n     * Gets the projected chip edit input, or the default input if none is projected in. One of these\n     * two values is guaranteed to be defined.\n     */\n    _getEditInput() {\n        return this.contentEditInput || this.defaultEditInput;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatChipRow, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"20.0.0\", type: MatChipRow, isStandalone: true, selector: \"mat-chip-row, [mat-chip-row], mat-basic-chip-row, [mat-basic-chip-row]\", inputs: { editable: \"editable\" }, outputs: { edited: \"edited\" }, host: { listeners: { \"focus\": \"_handleFocus()\", \"click\": \"_handleClick($event)\", \"dblclick\": \"_handleDoubleclick($event)\" }, properties: { \"class.mat-mdc-chip-with-avatar\": \"leadingIcon\", \"class.mat-mdc-chip-disabled\": \"disabled\", \"class.mat-mdc-chip-editing\": \"_isEditing\", \"class.mat-mdc-chip-editable\": \"editable\", \"class.mdc-evolution-chip--disabled\": \"disabled\", \"class.mdc-evolution-chip--with-leading-action\": \"_hasLeadingActionIcon()\", \"class.mdc-evolution-chip--with-trailing-action\": \"_hasTrailingIcon()\", \"class.mdc-evolution-chip--with-primary-graphic\": \"leadingIcon\", \"class.mdc-evolution-chip--with-primary-icon\": \"leadingIcon\", \"class.mdc-evolution-chip--with-avatar\": \"leadingIcon\", \"class.mat-mdc-chip-highlighted\": \"highlighted\", \"class.mat-mdc-chip-with-trailing-icon\": \"_hasTrailingIcon()\", \"id\": \"id\", \"attr.tabindex\": \"disabled ? null : -1\", \"attr.aria-label\": \"null\", \"attr.aria-description\": \"null\", \"attr.role\": \"role\" }, classAttribute: \"mat-mdc-chip mat-mdc-chip-row mdc-evolution-chip\" }, providers: [\n            { provide: MatChip, useExisting: MatChipRow },\n            { provide: MAT_CHIP, useExisting: MatChipRow },\n        ], queries: [{ propertyName: \"contentEditInput\", first: true, predicate: MatChipEditInput, descendants: true }], viewQueries: [{ propertyName: \"defaultEditInput\", first: true, predicate: MatChipEditInput, descendants: true }], usesInheritance: true, ngImport: i0, template: \"@if (!_isEditing) {\\n  <span class=\\\"mat-mdc-chip-focus-overlay\\\"></span>\\n}\\n\\n@if (_hasLeadingActionIcon()) {\\n  <span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--leading\\\" role=\\\"gridcell\\\">\\n    <ng-content select=\\\"[matChipEdit]\\\"></ng-content>\\n  </span>\\n}\\n<span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--primary\\\" role=\\\"gridcell\\\"\\n    matChipAction\\n    [disabled]=\\\"disabled\\\"\\n    [attr.aria-label]=\\\"ariaLabel\\\"\\n    [attr.aria-describedby]=\\\"_ariaDescriptionId\\\">\\n  @if (leadingIcon) {\\n    <span class=\\\"mdc-evolution-chip__graphic mat-mdc-chip-graphic\\\">\\n      <ng-content select=\\\"mat-chip-avatar, [matChipAvatar]\\\"></ng-content>\\n    </span>\\n  }\\n\\n  <span class=\\\"mdc-evolution-chip__text-label mat-mdc-chip-action-label\\\">\\n    @if (_isEditing) {\\n      @if (contentEditInput) {\\n        <ng-content select=\\\"[matChipEditInput]\\\"></ng-content>\\n      } @else {\\n        <span matChipEditInput></span>\\n      }\\n    } @else {\\n      <ng-content></ng-content>\\n    }\\n\\n    <span class=\\\"mat-mdc-chip-primary-focus-indicator mat-focus-indicator\\\" aria-hidden=\\\"true\\\"></span>\\n  </span>\\n</span>\\n\\n@if (_hasTrailingIcon()) {\\n  <span\\n    class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--trailing\\\"\\n    role=\\\"gridcell\\\">\\n    <ng-content select=\\\"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\\\"></ng-content>\\n  </span>\\n}\\n\\n<span class=\\\"cdk-visually-hidden\\\" [id]=\\\"_ariaDescriptionId\\\">{{ariaDescription}}</span>\\n\", styles: [\".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{flex-basis:100%;overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}@media(forced-colors: active){.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{forced-color-adjust:none}}.mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit;overflow-x:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary::before{border-width:var(--mat-chip-outline-width, 1px);border-radius:var(--mat-chip-container-shape-radius, 8px);box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1;border-style:solid}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--primary::before{border-color:var(--mat-chip-outline-color, var(--mat-sys-outline))}.mdc-evolution-chip__action--primary:not(.mdc-evolution-chip__action--presentational):not(.mdc-ripple-upgraded):focus::before{border-color:var(--mat-chip-focus-outline-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--primary::before{border-color:var(--mat-chip-disabled-outline-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary::before{border-width:var(--mat-chip-flat-selected-outline-width, 0)}.mat-mdc-basic-chip .mdc-evolution-chip__action--primary{font:inherit}.mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip__action--secondary{position:relative;overflow:visible}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--secondary{color:var(--mat-chip-with-trailing-icon-trailing-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--secondary{color:var(--mat-chip-with-trailing-icon-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mdc-evolution-chip__text-label{-webkit-user-select:none;user-select:none;white-space:nowrap;text-overflow:ellipsis;overflow:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__text-label{font-family:var(--mat-chip-label-text-font, var(--mat-sys-label-large-font));line-height:var(--mat-chip-label-text-line-height, var(--mat-sys-label-large-line-height));font-size:var(--mat-chip-label-text-size, var(--mat-sys-label-large-size));font-weight:var(--mat-chip-label-text-weight, var(--mat-sys-label-large-weight));letter-spacing:var(--mat-chip-label-text-tracking, var(--mat-sys-label-large-tracking))}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mat-chip-label-text-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mat-chip-selected-label-text-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label,.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mat-chip-disabled-label-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{width:var(--mat-chip-with-avatar-avatar-size, 24px);height:var(--mat-chip-with-avatar-avatar-size, 24px);font-size:var(--mat-chip-with-avatar-avatar-size, 24px)}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__graphic{padding-left:0}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%;height:20px;width:20px}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mat-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mat-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}@media(forced-colors: active){.mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove{opacity:calc(var(--mat-chip-trailing-action-opacity, 1)*var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove:focus{opacity:calc(var(--mat-chip-trailing-action-focus-opacity, 1)*var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mat-mdc-standard-chip{border-radius:var(--mat-chip-container-shape-radius, 8px);height:var(--mat-chip-container-height, 32px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mat-chip-elevated-container-color, transparent)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mat-chip-elevated-disabled-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled){background-color:var(--mat-chip-elevated-selected-container-color, var(--mat-sys-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mat-chip-flat-disabled-selected-container-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}@media(forced-colors: active){.mat-mdc-standard-chip{outline:solid 1px}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mat-chip-with-avatar-avatar-shape-radius, 24px);width:var(--mat-chip-with-icon-icon-size, 18px);height:var(--mat-chip-with-icon-icon-size, 18px);font-size:var(--mat-chip-with-icon-icon-size, 18px)}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mat-chip-with-icon-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mat-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-highlighted{--mat-chip-with-icon-icon-color: var(--mat-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container));--mat-chip-elevated-container-color: var(--mat-chip-elevated-selected-container-color, var(--mat-sys-secondary-container));--mat-chip-label-text-color: var(--mat-chip-selected-label-text-color, var(--mat-sys-on-secondary-container));--mat-chip-outline-width: var(--mat-chip-flat-selected-outline-width, 0)}.mat-mdc-chip-focus-overlay{background:var(--mat-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-selected .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{background:var(--mat-chip-hover-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mat-chip-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-focus-overlay .mat-mdc-chip-selected:hover,.mat-mdc-chip-highlighted:hover .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-hover-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mat-chip-selected-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mat-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mat-chip-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected.cdk-focused .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mat-chip-selected-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mdc-evolution-chip--disabled:not(.mdc-evolution-chip--selected) .mat-mdc-chip-avatar{opacity:var(--mat-chip-with-avatar-disabled-avatar-opacity, 0.38)}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{opacity:var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38)}.mdc-evolution-chip--disabled.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{opacity:var(--mat-chip-with-icon-disabled-icon-opacity, 0.38)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:var(--mat-chip-disabled-container-opacity, 1)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-trailing-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-edit,.mat-mdc-chip-remove{opacity:var(--mat-chip-trailing-action-opacity, 1)}.mat-mdc-chip-edit:focus,.mat-mdc-chip-remove:focus{opacity:var(--mat-chip-trailing-action-focus-opacity, 1)}.mat-mdc-chip-edit::after,.mat-mdc-chip-remove::after{background-color:var(--mat-chip-trailing-action-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-edit:hover::after,.mat-mdc-chip-remove:hover::after{opacity:var(--mat-chip-trailing-action-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-edit:focus::after,.mat-mdc-chip-remove:focus::after{opacity:var(--mat-chip-trailing-action-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected .mat-mdc-chip-remove::after,.mat-mdc-chip-highlighted .mat-mdc-chip-remove::after{background-color:var(--mat-chip-selected-trailing-action-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip .mat-ripple.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mat-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative;z-index:0}.mat-mdc-chip-action-label{text-align:left;z-index:1}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-focus-indicator::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-chip-edit::before,.mat-mdc-chip-remove::before{margin:calc(var(--mat-focus-indicator-border-width, 3px)*-1);left:8px;right:8px}.mat-mdc-chip-edit::after,.mat-mdc-chip-remove::after{content:\\\"\\\";display:block;opacity:0;position:absolute;top:-3px;bottom:-3px;left:5px;right:5px;border-radius:50%;box-sizing:border-box;padding:12px;margin:-12px;background-clip:content-box}.mat-mdc-chip-edit .mat-icon,.mat-mdc-chip-remove .mat-icon{width:18px;height:18px;font-size:18px;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}@media(forced-colors: active){.mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}}.mat-mdc-chip-action:focus .mat-focus-indicator::before{content:\\\"\\\"}.mdc-evolution-chip__icon,.mat-mdc-chip-edit .mat-icon,.mat-mdc-chip-remove .mat-icon{min-height:fit-content}\\n\"], dependencies: [{ kind: \"directive\", type: MatChipAction, selector: \"[matChipAction]\", inputs: [\"isInteractive\", \"disabled\", \"tabIndex\", \"_allowFocusWhenDisabled\"] }, { kind: \"directive\", type: MatChipEditInput, selector: \"span[matChipEditInput]\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatChipRow, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-chip-row, [mat-chip-row], mat-basic-chip-row, [mat-basic-chip-row]', host: {\n                        'class': 'mat-mdc-chip mat-mdc-chip-row mdc-evolution-chip',\n                        '[class.mat-mdc-chip-with-avatar]': 'leadingIcon',\n                        '[class.mat-mdc-chip-disabled]': 'disabled',\n                        '[class.mat-mdc-chip-editing]': '_isEditing',\n                        '[class.mat-mdc-chip-editable]': 'editable',\n                        '[class.mdc-evolution-chip--disabled]': 'disabled',\n                        '[class.mdc-evolution-chip--with-leading-action]': '_hasLeadingActionIcon()',\n                        '[class.mdc-evolution-chip--with-trailing-action]': '_hasTrailingIcon()',\n                        '[class.mdc-evolution-chip--with-primary-graphic]': 'leadingIcon',\n                        '[class.mdc-evolution-chip--with-primary-icon]': 'leadingIcon',\n                        '[class.mdc-evolution-chip--with-avatar]': 'leadingIcon',\n                        '[class.mat-mdc-chip-highlighted]': 'highlighted',\n                        '[class.mat-mdc-chip-with-trailing-icon]': '_hasTrailingIcon()',\n                        '[id]': 'id',\n                        // Has to have a negative tabindex in order to capture\n                        // focus and redirect it to the primary action.\n                        '[attr.tabindex]': 'disabled ? null : -1',\n                        '[attr.aria-label]': 'null',\n                        '[attr.aria-description]': 'null',\n                        '[attr.role]': 'role',\n                        '(focus)': '_handleFocus()',\n                        '(click)': '_handleClick($event)',\n                        '(dblclick)': '_handleDoubleclick($event)',\n                    }, providers: [\n                        { provide: MatChip, useExisting: MatChipRow },\n                        { provide: MAT_CHIP, useExisting: MatChipRow },\n                    ], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, imports: [MatChipAction, MatChipEditInput], template: \"@if (!_isEditing) {\\n  <span class=\\\"mat-mdc-chip-focus-overlay\\\"></span>\\n}\\n\\n@if (_hasLeadingActionIcon()) {\\n  <span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--leading\\\" role=\\\"gridcell\\\">\\n    <ng-content select=\\\"[matChipEdit]\\\"></ng-content>\\n  </span>\\n}\\n<span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--primary\\\" role=\\\"gridcell\\\"\\n    matChipAction\\n    [disabled]=\\\"disabled\\\"\\n    [attr.aria-label]=\\\"ariaLabel\\\"\\n    [attr.aria-describedby]=\\\"_ariaDescriptionId\\\">\\n  @if (leadingIcon) {\\n    <span class=\\\"mdc-evolution-chip__graphic mat-mdc-chip-graphic\\\">\\n      <ng-content select=\\\"mat-chip-avatar, [matChipAvatar]\\\"></ng-content>\\n    </span>\\n  }\\n\\n  <span class=\\\"mdc-evolution-chip__text-label mat-mdc-chip-action-label\\\">\\n    @if (_isEditing) {\\n      @if (contentEditInput) {\\n        <ng-content select=\\\"[matChipEditInput]\\\"></ng-content>\\n      } @else {\\n        <span matChipEditInput></span>\\n      }\\n    } @else {\\n      <ng-content></ng-content>\\n    }\\n\\n    <span class=\\\"mat-mdc-chip-primary-focus-indicator mat-focus-indicator\\\" aria-hidden=\\\"true\\\"></span>\\n  </span>\\n</span>\\n\\n@if (_hasTrailingIcon()) {\\n  <span\\n    class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--trailing\\\"\\n    role=\\\"gridcell\\\">\\n    <ng-content select=\\\"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\\\"></ng-content>\\n  </span>\\n}\\n\\n<span class=\\\"cdk-visually-hidden\\\" [id]=\\\"_ariaDescriptionId\\\">{{ariaDescription}}</span>\\n\", styles: [\".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{flex-basis:100%;overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}@media(forced-colors: active){.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{forced-color-adjust:none}}.mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit;overflow-x:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary::before{border-width:var(--mat-chip-outline-width, 1px);border-radius:var(--mat-chip-container-shape-radius, 8px);box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1;border-style:solid}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--primary::before{border-color:var(--mat-chip-outline-color, var(--mat-sys-outline))}.mdc-evolution-chip__action--primary:not(.mdc-evolution-chip__action--presentational):not(.mdc-ripple-upgraded):focus::before{border-color:var(--mat-chip-focus-outline-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--primary::before{border-color:var(--mat-chip-disabled-outline-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary::before{border-width:var(--mat-chip-flat-selected-outline-width, 0)}.mat-mdc-basic-chip .mdc-evolution-chip__action--primary{font:inherit}.mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip__action--secondary{position:relative;overflow:visible}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--secondary{color:var(--mat-chip-with-trailing-icon-trailing-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--secondary{color:var(--mat-chip-with-trailing-icon-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mdc-evolution-chip__text-label{-webkit-user-select:none;user-select:none;white-space:nowrap;text-overflow:ellipsis;overflow:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__text-label{font-family:var(--mat-chip-label-text-font, var(--mat-sys-label-large-font));line-height:var(--mat-chip-label-text-line-height, var(--mat-sys-label-large-line-height));font-size:var(--mat-chip-label-text-size, var(--mat-sys-label-large-size));font-weight:var(--mat-chip-label-text-weight, var(--mat-sys-label-large-weight));letter-spacing:var(--mat-chip-label-text-tracking, var(--mat-sys-label-large-tracking))}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mat-chip-label-text-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mat-chip-selected-label-text-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label,.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mat-chip-disabled-label-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{width:var(--mat-chip-with-avatar-avatar-size, 24px);height:var(--mat-chip-with-avatar-avatar-size, 24px);font-size:var(--mat-chip-with-avatar-avatar-size, 24px)}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__graphic{padding-left:0}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%;height:20px;width:20px}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mat-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mat-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}@media(forced-colors: active){.mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove{opacity:calc(var(--mat-chip-trailing-action-opacity, 1)*var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove:focus{opacity:calc(var(--mat-chip-trailing-action-focus-opacity, 1)*var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mat-mdc-standard-chip{border-radius:var(--mat-chip-container-shape-radius, 8px);height:var(--mat-chip-container-height, 32px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mat-chip-elevated-container-color, transparent)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mat-chip-elevated-disabled-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled){background-color:var(--mat-chip-elevated-selected-container-color, var(--mat-sys-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mat-chip-flat-disabled-selected-container-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}@media(forced-colors: active){.mat-mdc-standard-chip{outline:solid 1px}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mat-chip-with-avatar-avatar-shape-radius, 24px);width:var(--mat-chip-with-icon-icon-size, 18px);height:var(--mat-chip-with-icon-icon-size, 18px);font-size:var(--mat-chip-with-icon-icon-size, 18px)}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mat-chip-with-icon-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mat-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-highlighted{--mat-chip-with-icon-icon-color: var(--mat-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container));--mat-chip-elevated-container-color: var(--mat-chip-elevated-selected-container-color, var(--mat-sys-secondary-container));--mat-chip-label-text-color: var(--mat-chip-selected-label-text-color, var(--mat-sys-on-secondary-container));--mat-chip-outline-width: var(--mat-chip-flat-selected-outline-width, 0)}.mat-mdc-chip-focus-overlay{background:var(--mat-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-selected .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{background:var(--mat-chip-hover-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mat-chip-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-focus-overlay .mat-mdc-chip-selected:hover,.mat-mdc-chip-highlighted:hover .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-hover-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mat-chip-selected-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mat-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mat-chip-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected.cdk-focused .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mat-chip-selected-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mdc-evolution-chip--disabled:not(.mdc-evolution-chip--selected) .mat-mdc-chip-avatar{opacity:var(--mat-chip-with-avatar-disabled-avatar-opacity, 0.38)}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{opacity:var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38)}.mdc-evolution-chip--disabled.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{opacity:var(--mat-chip-with-icon-disabled-icon-opacity, 0.38)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:var(--mat-chip-disabled-container-opacity, 1)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-trailing-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-edit,.mat-mdc-chip-remove{opacity:var(--mat-chip-trailing-action-opacity, 1)}.mat-mdc-chip-edit:focus,.mat-mdc-chip-remove:focus{opacity:var(--mat-chip-trailing-action-focus-opacity, 1)}.mat-mdc-chip-edit::after,.mat-mdc-chip-remove::after{background-color:var(--mat-chip-trailing-action-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-edit:hover::after,.mat-mdc-chip-remove:hover::after{opacity:var(--mat-chip-trailing-action-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-edit:focus::after,.mat-mdc-chip-remove:focus::after{opacity:var(--mat-chip-trailing-action-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected .mat-mdc-chip-remove::after,.mat-mdc-chip-highlighted .mat-mdc-chip-remove::after{background-color:var(--mat-chip-selected-trailing-action-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip .mat-ripple.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mat-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative;z-index:0}.mat-mdc-chip-action-label{text-align:left;z-index:1}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-focus-indicator::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-chip-edit::before,.mat-mdc-chip-remove::before{margin:calc(var(--mat-focus-indicator-border-width, 3px)*-1);left:8px;right:8px}.mat-mdc-chip-edit::after,.mat-mdc-chip-remove::after{content:\\\"\\\";display:block;opacity:0;position:absolute;top:-3px;bottom:-3px;left:5px;right:5px;border-radius:50%;box-sizing:border-box;padding:12px;margin:-12px;background-clip:content-box}.mat-mdc-chip-edit .mat-icon,.mat-mdc-chip-remove .mat-icon{width:18px;height:18px;font-size:18px;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}@media(forced-colors: active){.mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}}.mat-mdc-chip-action:focus .mat-focus-indicator::before{content:\\\"\\\"}.mdc-evolution-chip__icon,.mat-mdc-chip-edit .mat-icon,.mat-mdc-chip-remove .mat-icon{min-height:fit-content}\\n\"] }]\n        }], ctorParameters: () => [], propDecorators: { editable: [{\n                type: Input\n            }], edited: [{\n                type: Output\n            }], defaultEditInput: [{\n                type: ViewChild,\n                args: [MatChipEditInput]\n            }], contentEditInput: [{\n                type: ContentChild,\n                args: [MatChipEditInput]\n            }] } });\n\n/**\n * Basic container component for the MatChip component.\n *\n * Extended by MatChipListbox and MatChipGrid for different interaction patterns.\n */\nclass MatChipSet {\n    _elementRef = inject(ElementRef);\n    _changeDetectorRef = inject(ChangeDetectorRef);\n    _dir = inject(Directionality, { optional: true });\n    /** Index of the last destroyed chip that had focus. */\n    _lastDestroyedFocusedChipIndex = null;\n    /** Used to manage focus within the chip list. */\n    _keyManager;\n    /** Subject that emits when the component has been destroyed. */\n    _destroyed = new Subject();\n    /** Role to use if it hasn't been overwritten by the user. */\n    _defaultRole = 'presentation';\n    /** Combined stream of all of the child chips' focus events. */\n    get chipFocusChanges() {\n        return this._getChipStream(chip => chip._onFocus);\n    }\n    /** Combined stream of all of the child chips' destroy events. */\n    get chipDestroyedChanges() {\n        return this._getChipStream(chip => chip.destroyed);\n    }\n    /** Combined stream of all of the child chips' remove events. */\n    get chipRemovedChanges() {\n        return this._getChipStream(chip => chip.removed);\n    }\n    /** Whether the chip set is disabled. */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = value;\n        this._syncChipsState();\n    }\n    _disabled = false;\n    /** Whether the chip list contains chips or not. */\n    get empty() {\n        return !this._chips || this._chips.length === 0;\n    }\n    /** The ARIA role applied to the chip set. */\n    get role() {\n        if (this._explicitRole) {\n            return this._explicitRole;\n        }\n        return this.empty ? null : this._defaultRole;\n    }\n    /** Tabindex of the chip set. */\n    tabIndex = 0;\n    set role(value) {\n        this._explicitRole = value;\n    }\n    _explicitRole = null;\n    /** Whether any of the chips inside of this chip-set has focus. */\n    get focused() {\n        return this._hasFocusedChip();\n    }\n    /** The chips that are part of this chip set. */\n    _chips;\n    /** Flat list of all the actions contained within the chips. */\n    _chipActions = new QueryList();\n    constructor() { }\n    ngAfterViewInit() {\n        this._setUpFocusManagement();\n        this._trackChipSetChanges();\n        this._trackDestroyedFocusedChip();\n    }\n    ngOnDestroy() {\n        this._keyManager?.destroy();\n        this._chipActions.destroy();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Checks whether any of the chips is focused. */\n    _hasFocusedChip() {\n        return this._chips && this._chips.some(chip => chip._hasFocus());\n    }\n    /** Syncs the chip-set's state with the individual chips. */\n    _syncChipsState() {\n        this._chips?.forEach(chip => {\n            chip._chipListDisabled = this._disabled;\n            chip._changeDetectorRef.markForCheck();\n        });\n    }\n    /** Dummy method for subclasses to override. Base chip set cannot be focused. */\n    focus() { }\n    /** Handles keyboard events on the chip set. */\n    _handleKeydown(event) {\n        if (this._originatesFromChip(event)) {\n            this._keyManager.onKeydown(event);\n        }\n    }\n    /**\n     * Utility to ensure all indexes are valid.\n     *\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of chips.\n     */\n    _isValidIndex(index) {\n        return index >= 0 && index < this._chips.length;\n    }\n    /**\n     * Removes the `tabindex` from the chip set and resets it back afterwards, allowing the\n     * user to tab out of it. This prevents the set from capturing focus and redirecting\n     * it back to the first chip, creating a focus trap, if it user tries to tab away.\n     */\n    _allowFocusEscape() {\n        const previous = this._elementRef.nativeElement.tabIndex;\n        if (previous !== -1) {\n            // Set the tabindex directly on the element, instead of going through\n            // the data binding, because we aren't guaranteed that change detection\n            // will run quickly enough to allow focus to escape.\n            this._elementRef.nativeElement.tabIndex = -1;\n            // Note that this needs to be a `setTimeout`, because a `Promise.resolve`\n            // doesn't allow enough time for the focus to escape.\n            setTimeout(() => (this._elementRef.nativeElement.tabIndex = previous));\n        }\n    }\n    /**\n     * Gets a stream of events from all the chips within the set.\n     * The stream will automatically incorporate any newly-added chips.\n     */\n    _getChipStream(mappingFunction) {\n        return this._chips.changes.pipe(startWith(null), switchMap(() => merge(...this._chips.map(mappingFunction))));\n    }\n    /** Checks whether an event comes from inside a chip element. */\n    _originatesFromChip(event) {\n        let currentElement = event.target;\n        while (currentElement && currentElement !== this._elementRef.nativeElement) {\n            if (currentElement.classList.contains('mat-mdc-chip')) {\n                return true;\n            }\n            currentElement = currentElement.parentElement;\n        }\n        return false;\n    }\n    /** Sets up the chip set's focus management logic. */\n    _setUpFocusManagement() {\n        // Create a flat `QueryList` containing the actions of all of the chips.\n        // This allows us to navigate both within the chip and move to the next/previous\n        // one using the existing `ListKeyManager`.\n        this._chips.changes.pipe(startWith(this._chips)).subscribe((chips) => {\n            const actions = [];\n            chips.forEach(chip => chip._getActions().forEach(action => actions.push(action)));\n            this._chipActions.reset(actions);\n            this._chipActions.notifyOnChanges();\n        });\n        this._keyManager = new FocusKeyManager(this._chipActions)\n            .withVerticalOrientation()\n            .withHorizontalOrientation(this._dir ? this._dir.value : 'ltr')\n            .withHomeAndEnd()\n            .skipPredicate(action => this._skipPredicate(action));\n        // Keep the manager active index in sync so that navigation picks\n        // up from the current chip if the user clicks into the list directly.\n        this.chipFocusChanges.pipe(takeUntil(this._destroyed)).subscribe(({ chip }) => {\n            const action = chip._getSourceAction(document.activeElement);\n            if (action) {\n                this._keyManager.updateActiveItem(action);\n            }\n        });\n        this._dir?.change\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(direction => this._keyManager.withHorizontalOrientation(direction));\n    }\n    /**\n     * Determines if key manager should avoid putting a given chip action in the tab index. Skip\n     * non-interactive and disabled actions since the user can't do anything with them.\n     */\n    _skipPredicate(action) {\n        // Skip chips that the user cannot interact with. `mat-chip-set` does not permit focusing disabled\n        // chips.\n        return !action.isInteractive || action.disabled;\n    }\n    /** Listens to changes in the chip set and syncs up the state of the individual chips. */\n    _trackChipSetChanges() {\n        this._chips.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n            if (this.disabled) {\n                // Since this happens after the content has been\n                // checked, we need to defer it to the next tick.\n                Promise.resolve().then(() => this._syncChipsState());\n            }\n            this._redirectDestroyedChipFocus();\n        });\n    }\n    /** Starts tracking the destroyed chips in order to capture the focused one. */\n    _trackDestroyedFocusedChip() {\n        this.chipDestroyedChanges.pipe(takeUntil(this._destroyed)).subscribe((event) => {\n            // If the focused chip is destroyed, save its index so that we can move focus to the next\n            // chip. We only save the index here, rather than move the focus immediately, because we want\n            // to wait until the chip is removed from the chip list before focusing the next one. This\n            // allows us to keep focus on the same index if the chip gets swapped out.\n            const chipArray = this._chips.toArray();\n            const chipIndex = chipArray.indexOf(event.chip);\n            const hasFocus = event.chip._hasFocus();\n            const wasLastFocused = event.chip._hadFocusOnRemove &&\n                this._keyManager.activeItem &&\n                event.chip._getActions().includes(this._keyManager.activeItem);\n            // Note that depending on the timing, the chip might've already lost focus by the\n            // time we check this. We need the `wasLastFocused` as a fallback to detect such cases.\n            // In `wasLastFocused` we also need to ensure that the chip actually had focus when it was\n            // deleted so that we don't steal away the user's focus after they've moved on from the chip.\n            const shouldMoveFocus = hasFocus || wasLastFocused;\n            if (this._isValidIndex(chipIndex) && shouldMoveFocus) {\n                this._lastDestroyedFocusedChipIndex = chipIndex;\n            }\n        });\n    }\n    /**\n     * Finds the next appropriate chip to move focus to,\n     * if the currently-focused chip is destroyed.\n     */\n    _redirectDestroyedChipFocus() {\n        if (this._lastDestroyedFocusedChipIndex == null) {\n            return;\n        }\n        if (this._chips.length) {\n            const newIndex = Math.min(this._lastDestroyedFocusedChipIndex, this._chips.length - 1);\n            const chipToFocus = this._chips.toArray()[newIndex];\n            if (chipToFocus.disabled) {\n                // If we're down to one disabled chip, move focus back to the set.\n                if (this._chips.length === 1) {\n                    this.focus();\n                }\n                else {\n                    this._keyManager.setPreviousItemActive();\n                }\n            }\n            else {\n                chipToFocus.focus();\n            }\n        }\n        else {\n            this.focus();\n        }\n        this._lastDestroyedFocusedChipIndex = null;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatChipSet, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"16.1.0\", version: \"20.0.0\", type: MatChipSet, isStandalone: true, selector: \"mat-chip-set\", inputs: { disabled: [\"disabled\", \"disabled\", booleanAttribute], role: \"role\", tabIndex: [\"tabIndex\", \"tabIndex\", (value) => (value == null ? 0 : numberAttribute(value))] }, host: { listeners: { \"keydown\": \"_handleKeydown($event)\" }, properties: { \"attr.role\": \"role\" }, classAttribute: \"mat-mdc-chip-set mdc-evolution-chip-set\" }, queries: [{ propertyName: \"_chips\", predicate: MatChip, descendants: true }], ngImport: i0, template: `\n    <div class=\"mdc-evolution-chip-set__chips\" role=\"presentation\">\n      <ng-content></ng-content>\n    </div>\n  `, isInline: true, styles: [\".mat-mdc-chip-set{display:flex}.mat-mdc-chip-set:focus{outline:none}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%;margin-left:-8px;margin-right:0}.mat-mdc-chip-set .mdc-evolution-chip{margin:4px 0 4px 8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip-set__chips{margin-left:0;margin-right:-8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip{margin-left:0;margin-right:8px}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}.mat-mdc-chip-set-stacked .mdc-evolution-chip__graphic{flex-grow:0}.mat-mdc-chip-set-stacked .mdc-evolution-chip__action--primary{flex-basis:100%;justify-content:start}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::-moz-placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::-webkit-input-placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input:-ms-input-placeholder{opacity:1}.mat-mdc-chip-set+input.mat-mdc-chip-input{margin-left:0;margin-right:0}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatChipSet, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-chip-set', template: `\n    <div class=\"mdc-evolution-chip-set__chips\" role=\"presentation\">\n      <ng-content></ng-content>\n    </div>\n  `, host: {\n                        'class': 'mat-mdc-chip-set mdc-evolution-chip-set',\n                        '(keydown)': '_handleKeydown($event)',\n                        '[attr.role]': 'role',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".mat-mdc-chip-set{display:flex}.mat-mdc-chip-set:focus{outline:none}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%;margin-left:-8px;margin-right:0}.mat-mdc-chip-set .mdc-evolution-chip{margin:4px 0 4px 8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip-set__chips{margin-left:0;margin-right:-8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip{margin-left:0;margin-right:8px}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}.mat-mdc-chip-set-stacked .mdc-evolution-chip__graphic{flex-grow:0}.mat-mdc-chip-set-stacked .mdc-evolution-chip__action--primary{flex-basis:100%;justify-content:start}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::-moz-placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::-webkit-input-placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input:-ms-input-placeholder{opacity:1}.mat-mdc-chip-set+input.mat-mdc-chip-input{margin-left:0;margin-right:0}\\n\"] }]\n        }], ctorParameters: () => [], propDecorators: { disabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], role: [{\n                type: Input\n            }], tabIndex: [{\n                type: Input,\n                args: [{\n                        transform: (value) => (value == null ? 0 : numberAttribute(value)),\n                    }]\n            }], _chips: [{\n                type: ContentChildren,\n                args: [MatChip, {\n                        // We need to use `descendants: true`, because Ivy will no longer match\n                        // indirect descendants if it's left as false.\n                        descendants: true,\n                    }]\n            }] } });\n\n/** Change event object that is emitted when the chip listbox value has changed. */\nclass MatChipListboxChange {\n    source;\n    value;\n    constructor(\n    /** Chip listbox that emitted the event. */\n    source, \n    /** Value of the chip listbox when the event was emitted. */\n    value) {\n        this.source = source;\n        this.value = value;\n    }\n}\n/**\n * Provider Expression that allows mat-chip-listbox to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * @docs-private\n */\nconst MAT_CHIP_LISTBOX_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatChipListbox),\n    multi: true,\n};\n/**\n * An extension of the MatChipSet component that supports chip selection.\n * Used with MatChipOption chips.\n */\nclass MatChipListbox extends MatChipSet {\n    /**\n     * Function when touched. Set as part of ControlValueAccessor implementation.\n     * @docs-private\n     */\n    _onTouched = () => { };\n    /**\n     * Function when changed. Set as part of ControlValueAccessor implementation.\n     * @docs-private\n     */\n    _onChange = () => { };\n    // TODO: MDC uses `grid` here\n    _defaultRole = 'listbox';\n    /** Default chip options. */\n    _defaultOptions = inject(MAT_CHIPS_DEFAULT_OPTIONS, { optional: true });\n    /** Whether the user should be allowed to select multiple chips. */\n    get multiple() {\n        return this._multiple;\n    }\n    set multiple(value) {\n        this._multiple = value;\n        this._syncListboxProperties();\n    }\n    _multiple = false;\n    /** The array of selected chips inside the chip listbox. */\n    get selected() {\n        const selectedChips = this._chips.toArray().filter(chip => chip.selected);\n        return this.multiple ? selectedChips : selectedChips[0];\n    }\n    /** Orientation of the chip list. */\n    ariaOrientation = 'horizontal';\n    /**\n     * Whether or not this chip listbox is selectable.\n     *\n     * When a chip listbox is not selectable, the selected states for all\n     * the chips inside the chip listbox are always ignored.\n     */\n    get selectable() {\n        return this._selectable;\n    }\n    set selectable(value) {\n        this._selectable = value;\n        this._syncListboxProperties();\n    }\n    _selectable = true;\n    /**\n     * A function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     */\n    compareWith = (o1, o2) => o1 === o2;\n    /** Whether this chip listbox is required. */\n    required = false;\n    /** Whether checkmark indicator for single-selection options is hidden. */\n    get hideSingleSelectionIndicator() {\n        return this._hideSingleSelectionIndicator;\n    }\n    set hideSingleSelectionIndicator(value) {\n        this._hideSingleSelectionIndicator = value;\n        this._syncListboxProperties();\n    }\n    _hideSingleSelectionIndicator = this._defaultOptions?.hideSingleSelectionIndicator ?? false;\n    /** Combined stream of all of the child chips' selection change events. */\n    get chipSelectionChanges() {\n        return this._getChipStream(chip => chip.selectionChange);\n    }\n    /** Combined stream of all of the child chips' blur events. */\n    get chipBlurChanges() {\n        return this._getChipStream(chip => chip._onBlur);\n    }\n    /** The value of the listbox, which is the combined value of the selected chips. */\n    get value() {\n        return this._value;\n    }\n    set value(value) {\n        if (this._chips && this._chips.length) {\n            this._setSelectionByValue(value, false);\n        }\n        this._value = value;\n    }\n    _value;\n    /** Event emitted when the selected chip listbox value has been changed by the user. */\n    change = new EventEmitter();\n    _chips = undefined;\n    ngAfterContentInit() {\n        this._chips.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n            if (this.value !== undefined) {\n                Promise.resolve().then(() => {\n                    this._setSelectionByValue(this.value, false);\n                });\n            }\n            // Update listbox selectable/multiple properties on chips\n            this._syncListboxProperties();\n        });\n        this.chipBlurChanges.pipe(takeUntil(this._destroyed)).subscribe(() => this._blur());\n        this.chipSelectionChanges.pipe(takeUntil(this._destroyed)).subscribe(event => {\n            if (!this.multiple) {\n                this._chips.forEach(chip => {\n                    if (chip !== event.source) {\n                        chip._setSelectedState(false, false, false);\n                    }\n                });\n            }\n            if (event.isUserInput) {\n                this._propagateChanges();\n            }\n        });\n    }\n    /**\n     * Focuses the first selected chip in this chip listbox, or the first non-disabled chip when there\n     * are no selected chips.\n     */\n    focus() {\n        if (this.disabled) {\n            return;\n        }\n        const firstSelectedChip = this._getFirstSelectedChip();\n        if (firstSelectedChip && !firstSelectedChip.disabled) {\n            firstSelectedChip.focus();\n        }\n        else if (this._chips.length > 0) {\n            this._keyManager.setFirstItemActive();\n        }\n        else {\n            this._elementRef.nativeElement.focus();\n        }\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @docs-private\n     */\n    writeValue(value) {\n        if (value != null) {\n            this.value = value;\n        }\n        else {\n            this.value = undefined;\n        }\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @docs-private\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @docs-private\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @docs-private\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    /** Selects all chips with value. */\n    _setSelectionByValue(value, isUserInput = true) {\n        this._clearSelection();\n        if (Array.isArray(value)) {\n            value.forEach(currentValue => this._selectValue(currentValue, isUserInput));\n        }\n        else {\n            this._selectValue(value, isUserInput);\n        }\n    }\n    /** When blurred, marks the field as touched when focus moved outside the chip listbox. */\n    _blur() {\n        if (!this.disabled) {\n            // Wait to see if focus moves to an individual chip.\n            setTimeout(() => {\n                if (!this.focused) {\n                    this._markAsTouched();\n                }\n            });\n        }\n    }\n    _keydown(event) {\n        if (event.keyCode === TAB) {\n            super._allowFocusEscape();\n        }\n    }\n    /** Marks the field as touched */\n    _markAsTouched() {\n        this._onTouched();\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Emits change event to set the model value. */\n    _propagateChanges() {\n        let valueToEmit = null;\n        if (Array.isArray(this.selected)) {\n            valueToEmit = this.selected.map(chip => chip.value);\n        }\n        else {\n            valueToEmit = this.selected ? this.selected.value : undefined;\n        }\n        this._value = valueToEmit;\n        this.change.emit(new MatChipListboxChange(this, valueToEmit));\n        this._onChange(valueToEmit);\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Deselects every chip in the listbox.\n     * @param skip Chip that should not be deselected.\n     */\n    _clearSelection(skip) {\n        this._chips.forEach(chip => {\n            if (chip !== skip) {\n                chip.deselect();\n            }\n        });\n    }\n    /**\n     * Finds and selects the chip based on its value.\n     * @returns Chip that has the corresponding value.\n     */\n    _selectValue(value, isUserInput) {\n        const correspondingChip = this._chips.find(chip => {\n            return chip.value != null && this.compareWith(chip.value, value);\n        });\n        if (correspondingChip) {\n            isUserInput ? correspondingChip.selectViaInteraction() : correspondingChip.select();\n        }\n        return correspondingChip;\n    }\n    /** Syncs the chip-listbox selection state with the individual chips. */\n    _syncListboxProperties() {\n        if (this._chips) {\n            // Defer setting the value in order to avoid the \"Expression\n            // has changed after it was checked\" errors from Angular.\n            Promise.resolve().then(() => {\n                this._chips.forEach(chip => {\n                    chip._chipListMultiple = this.multiple;\n                    chip.chipListSelectable = this._selectable;\n                    chip._chipListHideSingleSelectionIndicator = this.hideSingleSelectionIndicator;\n                    chip._changeDetectorRef.markForCheck();\n                });\n            });\n        }\n    }\n    /** Returns the first selected chip in this listbox, or undefined if no chips are selected. */\n    _getFirstSelectedChip() {\n        if (Array.isArray(this.selected)) {\n            return this.selected.length ? this.selected[0] : undefined;\n        }\n        else {\n            return this.selected;\n        }\n    }\n    /**\n     * Determines if key manager should avoid putting a given chip action in the tab index. Skip\n     * non-interactive actions since the user can't do anything with them.\n     */\n    _skipPredicate(action) {\n        // Override the skip predicate in the base class to avoid skipping disabled chips. Allow\n        // disabled chip options to receive focus to align with WAI ARIA recommendation. Normally WAI\n        // ARIA's instructions are to exclude disabled items from the tab order, but it makes a few\n        // exceptions for compound widgets.\n        //\n        // From [Developing a Keyboard Interface](\n        // https://www.w3.org/WAI/ARIA/apg/practices/keyboard-interface/):\n        //   \"For the following composite widget elements, keep them focusable when disabled: Options in a\n        //   Listbox...\"\n        return !action.isInteractive;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatChipListbox, deps: null, target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"16.1.0\", version: \"20.0.0\", type: MatChipListbox, isStandalone: true, selector: \"mat-chip-listbox\", inputs: { multiple: [\"multiple\", \"multiple\", booleanAttribute], ariaOrientation: [\"aria-orientation\", \"ariaOrientation\"], selectable: [\"selectable\", \"selectable\", booleanAttribute], compareWith: \"compareWith\", required: [\"required\", \"required\", booleanAttribute], hideSingleSelectionIndicator: [\"hideSingleSelectionIndicator\", \"hideSingleSelectionIndicator\", booleanAttribute], value: \"value\" }, outputs: { change: \"change\" }, host: { listeners: { \"focus\": \"focus()\", \"blur\": \"_blur()\", \"keydown\": \"_keydown($event)\" }, properties: { \"attr.role\": \"role\", \"tabIndex\": \"(disabled || empty) ? -1 : tabIndex\", \"attr.aria-required\": \"role ? required : null\", \"attr.aria-disabled\": \"disabled.toString()\", \"attr.aria-multiselectable\": \"multiple\", \"attr.aria-orientation\": \"ariaOrientation\", \"class.mat-mdc-chip-list-disabled\": \"disabled\", \"class.mat-mdc-chip-list-required\": \"required\" }, classAttribute: \"mdc-evolution-chip-set mat-mdc-chip-listbox\" }, providers: [MAT_CHIP_LISTBOX_CONTROL_VALUE_ACCESSOR], queries: [{ propertyName: \"_chips\", predicate: MatChipOption, descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <div class=\"mdc-evolution-chip-set__chips\" role=\"presentation\">\n      <ng-content></ng-content>\n    </div>\n  `, isInline: true, styles: [\".mat-mdc-chip-set{display:flex}.mat-mdc-chip-set:focus{outline:none}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%;margin-left:-8px;margin-right:0}.mat-mdc-chip-set .mdc-evolution-chip{margin:4px 0 4px 8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip-set__chips{margin-left:0;margin-right:-8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip{margin-left:0;margin-right:8px}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}.mat-mdc-chip-set-stacked .mdc-evolution-chip__graphic{flex-grow:0}.mat-mdc-chip-set-stacked .mdc-evolution-chip__action--primary{flex-basis:100%;justify-content:start}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::-moz-placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::-webkit-input-placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input:-ms-input-placeholder{opacity:1}.mat-mdc-chip-set+input.mat-mdc-chip-input{margin-left:0;margin-right:0}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatChipListbox, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-chip-listbox', template: `\n    <div class=\"mdc-evolution-chip-set__chips\" role=\"presentation\">\n      <ng-content></ng-content>\n    </div>\n  `, host: {\n                        'class': 'mdc-evolution-chip-set mat-mdc-chip-listbox',\n                        '[attr.role]': 'role',\n                        '[tabIndex]': '(disabled || empty) ? -1 : tabIndex',\n                        '[attr.aria-required]': 'role ? required : null',\n                        '[attr.aria-disabled]': 'disabled.toString()',\n                        '[attr.aria-multiselectable]': 'multiple',\n                        '[attr.aria-orientation]': 'ariaOrientation',\n                        '[class.mat-mdc-chip-list-disabled]': 'disabled',\n                        '[class.mat-mdc-chip-list-required]': 'required',\n                        '(focus)': 'focus()',\n                        '(blur)': '_blur()',\n                        '(keydown)': '_keydown($event)',\n                    }, providers: [MAT_CHIP_LISTBOX_CONTROL_VALUE_ACCESSOR], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".mat-mdc-chip-set{display:flex}.mat-mdc-chip-set:focus{outline:none}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%;margin-left:-8px;margin-right:0}.mat-mdc-chip-set .mdc-evolution-chip{margin:4px 0 4px 8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip-set__chips{margin-left:0;margin-right:-8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip{margin-left:0;margin-right:8px}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}.mat-mdc-chip-set-stacked .mdc-evolution-chip__graphic{flex-grow:0}.mat-mdc-chip-set-stacked .mdc-evolution-chip__action--primary{flex-basis:100%;justify-content:start}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::-moz-placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::-webkit-input-placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input:-ms-input-placeholder{opacity:1}.mat-mdc-chip-set+input.mat-mdc-chip-input{margin-left:0;margin-right:0}\\n\"] }]\n        }], propDecorators: { multiple: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], ariaOrientation: [{\n                type: Input,\n                args: ['aria-orientation']\n            }], selectable: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], compareWith: [{\n                type: Input\n            }], required: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], hideSingleSelectionIndicator: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], value: [{\n                type: Input\n            }], change: [{\n                type: Output\n            }], _chips: [{\n                type: ContentChildren,\n                args: [MatChipOption, {\n                        // We need to use `descendants: true`, because Ivy will no longer match\n                        // indirect descendants if it's left as false.\n                        descendants: true,\n                    }]\n            }] } });\n\n/** Change event object that is emitted when the chip grid value has changed. */\nclass MatChipGridChange {\n    source;\n    value;\n    constructor(\n    /** Chip grid that emitted the event. */\n    source, \n    /** Value of the chip grid when the event was emitted. */\n    value) {\n        this.source = source;\n        this.value = value;\n    }\n}\n/**\n * An extension of the MatChipSet component used with MatChipRow chips and\n * the matChipInputFor directive.\n */\nclass MatChipGrid extends MatChipSet {\n    ngControl = inject(NgControl, { optional: true, self: true });\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    controlType = 'mat-chip-grid';\n    /** The chip input to add more chips */\n    _chipInput;\n    _defaultRole = 'grid';\n    _errorStateTracker;\n    /**\n     * List of element ids to propagate to the chipInput's aria-describedby attribute.\n     */\n    _ariaDescribedbyIds = [];\n    /**\n     * Function when touched. Set as part of ControlValueAccessor implementation.\n     * @docs-private\n     */\n    _onTouched = () => { };\n    /**\n     * Function when changed. Set as part of ControlValueAccessor implementation.\n     * @docs-private\n     */\n    _onChange = () => { };\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get disabled() {\n        return this.ngControl ? !!this.ngControl.disabled : this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = value;\n        this._syncChipsState();\n        this.stateChanges.next();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get id() {\n        return this._chipInput.id;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get empty() {\n        return ((!this._chipInput || this._chipInput.empty) && (!this._chips || this._chips.length === 0));\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get placeholder() {\n        return this._chipInput ? this._chipInput.placeholder : this._placeholder;\n    }\n    set placeholder(value) {\n        this._placeholder = value;\n        this.stateChanges.next();\n    }\n    _placeholder;\n    /** Whether any chips or the matChipInput inside of this chip-grid has focus. */\n    get focused() {\n        return this._chipInput.focused || this._hasFocusedChip();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get required() {\n        return this._required ?? this.ngControl?.control?.hasValidator(Validators.required) ?? false;\n    }\n    set required(value) {\n        this._required = value;\n        this.stateChanges.next();\n    }\n    _required;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get shouldLabelFloat() {\n        return !this.empty || this.focused;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get value() {\n        return this._value;\n    }\n    set value(value) {\n        this._value = value;\n    }\n    _value = [];\n    /** An object used to control when error messages are shown. */\n    get errorStateMatcher() {\n        return this._errorStateTracker.matcher;\n    }\n    set errorStateMatcher(value) {\n        this._errorStateTracker.matcher = value;\n    }\n    /** Combined stream of all of the child chips' blur events. */\n    get chipBlurChanges() {\n        return this._getChipStream(chip => chip._onBlur);\n    }\n    /** Emits when the chip grid value has been changed by the user. */\n    change = new EventEmitter();\n    /**\n     * Emits whenever the raw value of the chip-grid changes. This is here primarily\n     * to facilitate the two-way binding for the `value` input.\n     * @docs-private\n     */\n    valueChange = new EventEmitter();\n    _chips = undefined;\n    /**\n     * Emits whenever the component state changes and should cause the parent\n     * form-field to update. Implemented as part of `MatFormFieldControl`.\n     * @docs-private\n     */\n    stateChanges = new Subject();\n    /** Whether the chip grid is in an error state. */\n    get errorState() {\n        return this._errorStateTracker.errorState;\n    }\n    set errorState(value) {\n        this._errorStateTracker.errorState = value;\n    }\n    constructor() {\n        super();\n        const parentForm = inject(NgForm, { optional: true });\n        const parentFormGroup = inject(FormGroupDirective, { optional: true });\n        const defaultErrorStateMatcher = inject(ErrorStateMatcher);\n        if (this.ngControl) {\n            this.ngControl.valueAccessor = this;\n        }\n        this._errorStateTracker = new _ErrorStateTracker(defaultErrorStateMatcher, this.ngControl, parentFormGroup, parentForm, this.stateChanges);\n    }\n    ngAfterContentInit() {\n        this.chipBlurChanges.pipe(takeUntil(this._destroyed)).subscribe(() => {\n            this._blur();\n            this.stateChanges.next();\n        });\n        merge(this.chipFocusChanges, this._chips.changes)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this.stateChanges.next());\n    }\n    ngAfterViewInit() {\n        super.ngAfterViewInit();\n        if (!this._chipInput && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('mat-chip-grid must be used in combination with matChipInputFor.');\n        }\n    }\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this.stateChanges.complete();\n    }\n    /** Associates an HTML input element with this chip grid. */\n    registerInput(inputElement) {\n        this._chipInput = inputElement;\n        this._chipInput.setDescribedByIds(this._ariaDescribedbyIds);\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick(event) {\n        if (!this.disabled && !this._originatesFromChip(event)) {\n            this.focus();\n        }\n    }\n    /**\n     * Focuses the first chip in this chip grid, or the associated input when there\n     * are no eligible chips.\n     */\n    focus() {\n        if (this.disabled || this._chipInput.focused) {\n            return;\n        }\n        if (!this._chips.length || this._chips.first.disabled) {\n            // Delay until the next tick, because this can cause a \"changed after checked\"\n            // error if the input does something on focus (e.g. opens an autocomplete).\n            Promise.resolve().then(() => this._chipInput.focus());\n        }\n        else {\n            const activeItem = this._keyManager.activeItem;\n            if (activeItem) {\n                activeItem.focus();\n            }\n            else {\n                this._keyManager.setFirstItemActive();\n            }\n        }\n        this.stateChanges.next();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get describedByIds() {\n        return this._chipInput?.describedByIds || [];\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    setDescribedByIds(ids) {\n        // We must keep this up to date to handle the case where ids are set\n        // before the chip input is registered.\n        this._ariaDescribedbyIds = ids;\n        this._chipInput?.setDescribedByIds(ids);\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @docs-private\n     */\n    writeValue(value) {\n        // The user is responsible for creating the child chips, so we just store the value.\n        this._value = value;\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @docs-private\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @docs-private\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @docs-private\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this.stateChanges.next();\n    }\n    /** Refreshes the error state of the chip grid. */\n    updateErrorState() {\n        this._errorStateTracker.updateErrorState();\n    }\n    /** When blurred, mark the field as touched when focus moved outside the chip grid. */\n    _blur() {\n        if (!this.disabled) {\n            // Check whether the focus moved to chip input.\n            // If the focus is not moved to chip input, mark the field as touched. If the focus moved\n            // to chip input, do nothing.\n            // Timeout is needed to wait for the focus() event trigger on chip input.\n            setTimeout(() => {\n                if (!this.focused) {\n                    this._propagateChanges();\n                    this._markAsTouched();\n                }\n            });\n        }\n    }\n    /**\n     * Removes the `tabindex` from the chip grid and resets it back afterwards, allowing the\n     * user to tab out of it. This prevents the grid from capturing focus and redirecting\n     * it back to the first chip, creating a focus trap, if it user tries to tab away.\n     */\n    _allowFocusEscape() {\n        if (!this._chipInput.focused) {\n            super._allowFocusEscape();\n        }\n    }\n    /** Handles custom keyboard events. */\n    _handleKeydown(event) {\n        const keyCode = event.keyCode;\n        const activeItem = this._keyManager.activeItem;\n        if (keyCode === TAB) {\n            if (this._chipInput.focused &&\n                hasModifierKey(event, 'shiftKey') &&\n                this._chips.length &&\n                !this._chips.last.disabled) {\n                event.preventDefault();\n                if (activeItem) {\n                    this._keyManager.setActiveItem(activeItem);\n                }\n                else {\n                    this._focusLastChip();\n                }\n            }\n            else {\n                // Use the super method here since it doesn't check for the input\n                // focused state. This allows focus to escape if there's only one\n                // disabled chip left in the list.\n                super._allowFocusEscape();\n            }\n        }\n        else if (!this._chipInput.focused) {\n            // The up and down arrows are supposed to navigate between the individual rows in the grid.\n            // We do this by filtering the actions down to the ones that have the same `_isPrimary`\n            // flag as the active action and moving focus between them ourseles instead of delegating\n            // to the key manager. For more information, see #29359 and:\n            // https://www.w3.org/WAI/ARIA/apg/patterns/grid/examples/layout-grids/#ex2_label\n            if ((keyCode === UP_ARROW || keyCode === DOWN_ARROW) && activeItem) {\n                const eligibleActions = this._chipActions.filter(action => action._isPrimary === activeItem._isPrimary && !this._skipPredicate(action));\n                const currentIndex = eligibleActions.indexOf(activeItem);\n                const delta = event.keyCode === UP_ARROW ? -1 : 1;\n                event.preventDefault();\n                if (currentIndex > -1 && this._isValidIndex(currentIndex + delta)) {\n                    this._keyManager.setActiveItem(eligibleActions[currentIndex + delta]);\n                }\n            }\n            else {\n                super._handleKeydown(event);\n            }\n        }\n        this.stateChanges.next();\n    }\n    _focusLastChip() {\n        if (this._chips.length) {\n            this._chips.last.focus();\n        }\n    }\n    /** Emits change event to set the model value. */\n    _propagateChanges() {\n        const valueToEmit = this._chips.length ? this._chips.toArray().map(chip => chip.value) : [];\n        this._value = valueToEmit;\n        this.change.emit(new MatChipGridChange(this, valueToEmit));\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Mark the field as touched */\n    _markAsTouched() {\n        this._onTouched();\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatChipGrid, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"16.1.0\", version: \"20.0.0\", type: MatChipGrid, isStandalone: true, selector: \"mat-chip-grid\", inputs: { disabled: [\"disabled\", \"disabled\", booleanAttribute], placeholder: \"placeholder\", required: [\"required\", \"required\", booleanAttribute], value: \"value\", errorStateMatcher: \"errorStateMatcher\" }, outputs: { change: \"change\", valueChange: \"valueChange\" }, host: { listeners: { \"focus\": \"focus()\", \"blur\": \"_blur()\" }, properties: { \"attr.role\": \"role\", \"attr.tabindex\": \"(disabled || (_chips && _chips.length === 0)) ? -1 : tabIndex\", \"attr.aria-disabled\": \"disabled.toString()\", \"attr.aria-invalid\": \"errorState\", \"class.mat-mdc-chip-list-disabled\": \"disabled\", \"class.mat-mdc-chip-list-invalid\": \"errorState\", \"class.mat-mdc-chip-list-required\": \"required\" }, classAttribute: \"mat-mdc-chip-set mat-mdc-chip-grid mdc-evolution-chip-set\" }, providers: [{ provide: MatFormFieldControl, useExisting: MatChipGrid }], queries: [{ propertyName: \"_chips\", predicate: MatChipRow, descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <div class=\"mdc-evolution-chip-set__chips\" role=\"presentation\">\n      <ng-content></ng-content>\n    </div>\n  `, isInline: true, styles: [\".mat-mdc-chip-set{display:flex}.mat-mdc-chip-set:focus{outline:none}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%;margin-left:-8px;margin-right:0}.mat-mdc-chip-set .mdc-evolution-chip{margin:4px 0 4px 8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip-set__chips{margin-left:0;margin-right:-8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip{margin-left:0;margin-right:8px}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}.mat-mdc-chip-set-stacked .mdc-evolution-chip__graphic{flex-grow:0}.mat-mdc-chip-set-stacked .mdc-evolution-chip__action--primary{flex-basis:100%;justify-content:start}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::-moz-placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::-webkit-input-placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input:-ms-input-placeholder{opacity:1}.mat-mdc-chip-set+input.mat-mdc-chip-input{margin-left:0;margin-right:0}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatChipGrid, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-chip-grid', template: `\n    <div class=\"mdc-evolution-chip-set__chips\" role=\"presentation\">\n      <ng-content></ng-content>\n    </div>\n  `, host: {\n                        'class': 'mat-mdc-chip-set mat-mdc-chip-grid mdc-evolution-chip-set',\n                        '[attr.role]': 'role',\n                        '[attr.tabindex]': '(disabled || (_chips && _chips.length === 0)) ? -1 : tabIndex',\n                        '[attr.aria-disabled]': 'disabled.toString()',\n                        '[attr.aria-invalid]': 'errorState',\n                        '[class.mat-mdc-chip-list-disabled]': 'disabled',\n                        '[class.mat-mdc-chip-list-invalid]': 'errorState',\n                        '[class.mat-mdc-chip-list-required]': 'required',\n                        '(focus)': 'focus()',\n                        '(blur)': '_blur()',\n                    }, providers: [{ provide: MatFormFieldControl, useExisting: MatChipGrid }], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".mat-mdc-chip-set{display:flex}.mat-mdc-chip-set:focus{outline:none}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%;margin-left:-8px;margin-right:0}.mat-mdc-chip-set .mdc-evolution-chip{margin:4px 0 4px 8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip-set__chips{margin-left:0;margin-right:-8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip{margin-left:0;margin-right:8px}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}.mat-mdc-chip-set-stacked .mdc-evolution-chip__graphic{flex-grow:0}.mat-mdc-chip-set-stacked .mdc-evolution-chip__action--primary{flex-basis:100%;justify-content:start}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::-moz-placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::-webkit-input-placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input:-ms-input-placeholder{opacity:1}.mat-mdc-chip-set+input.mat-mdc-chip-input{margin-left:0;margin-right:0}\\n\"] }]\n        }], ctorParameters: () => [], propDecorators: { disabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], placeholder: [{\n                type: Input\n            }], required: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], value: [{\n                type: Input\n            }], errorStateMatcher: [{\n                type: Input\n            }], change: [{\n                type: Output\n            }], valueChange: [{\n                type: Output\n            }], _chips: [{\n                type: ContentChildren,\n                args: [MatChipRow, {\n                        // We need to use `descendants: true`, because Ivy will no longer match\n                        // indirect descendants if it's left as false.\n                        descendants: true,\n                    }]\n            }] } });\n\n/**\n * Directive that adds chip-specific behaviors to an input element inside `<mat-form-field>`.\n * May be placed inside or outside of a `<mat-chip-grid>`.\n */\nclass MatChipInput {\n    _elementRef = inject(ElementRef);\n    /** Whether the control is focused. */\n    focused = false;\n    /** Register input for chip list */\n    get chipGrid() {\n        return this._chipGrid;\n    }\n    set chipGrid(value) {\n        if (value) {\n            this._chipGrid = value;\n            this._chipGrid.registerInput(this);\n        }\n    }\n    _chipGrid;\n    /**\n     * Whether or not the chipEnd event will be emitted when the input is blurred.\n     */\n    addOnBlur = false;\n    /**\n     * The list of key codes that will trigger a chipEnd event.\n     *\n     * Defaults to `[ENTER]`.\n     */\n    separatorKeyCodes;\n    /** Emitted when a chip is to be added. */\n    chipEnd = new EventEmitter();\n    /** The input's placeholder text. */\n    placeholder = '';\n    /** Unique id for the input. */\n    id = inject(_IdGenerator).getId('mat-mdc-chip-list-input-');\n    /** Whether the input is disabled. */\n    get disabled() {\n        return this._disabled || (this._chipGrid && this._chipGrid.disabled);\n    }\n    set disabled(value) {\n        this._disabled = value;\n    }\n    _disabled = false;\n    /** Whether the input is readonly. */\n    readonly = false;\n    /** Whether the input should remain interactive when it is disabled. */\n    disabledInteractive;\n    /** Whether the input is empty. */\n    get empty() {\n        return !this.inputElement.value;\n    }\n    /** The native input element to which this directive is attached. */\n    inputElement;\n    constructor() {\n        const defaultOptions = inject(MAT_CHIPS_DEFAULT_OPTIONS);\n        const formField = inject(MAT_FORM_FIELD, { optional: true });\n        this.inputElement = this._elementRef.nativeElement;\n        this.separatorKeyCodes = defaultOptions.separatorKeyCodes;\n        this.disabledInteractive = defaultOptions.inputDisabledInteractive ?? false;\n        if (formField) {\n            this.inputElement.classList.add('mat-mdc-form-field-input-control');\n        }\n    }\n    ngOnChanges() {\n        this._chipGrid.stateChanges.next();\n    }\n    ngOnDestroy() {\n        this.chipEnd.complete();\n    }\n    /** Utility method to make host definition/tests more clear. */\n    _keydown(event) {\n        if (this.empty && event.keyCode === BACKSPACE) {\n            // Ignore events where the user is holding down backspace\n            // so that we don't accidentally remove too many chips.\n            if (!event.repeat) {\n                this._chipGrid._focusLastChip();\n            }\n            event.preventDefault();\n        }\n        else {\n            this._emitChipEnd(event);\n        }\n    }\n    /** Checks to see if the blur should emit the (chipEnd) event. */\n    _blur() {\n        if (this.addOnBlur) {\n            this._emitChipEnd();\n        }\n        this.focused = false;\n        // Blur the chip list if it is not focused\n        if (!this._chipGrid.focused) {\n            this._chipGrid._blur();\n        }\n        this._chipGrid.stateChanges.next();\n    }\n    _focus() {\n        this.focused = true;\n        this._chipGrid.stateChanges.next();\n    }\n    /** Checks to see if the (chipEnd) event needs to be emitted. */\n    _emitChipEnd(event) {\n        if (!event || (this._isSeparatorKey(event) && !event.repeat)) {\n            this.chipEnd.emit({\n                input: this.inputElement,\n                value: this.inputElement.value,\n                chipInput: this,\n            });\n            event?.preventDefault();\n        }\n    }\n    _onInput() {\n        // Let chip list know whenever the value changes.\n        this._chipGrid.stateChanges.next();\n    }\n    /** Focuses the input. */\n    focus() {\n        this.inputElement.focus();\n    }\n    /** Clears the input */\n    clear() {\n        this.inputElement.value = '';\n    }\n    /**\n     * Implemented as part of MatChipTextControl.\n     * @docs-private\n     */\n    get describedByIds() {\n        const element = this._elementRef.nativeElement;\n        const existingDescribedBy = element.getAttribute('aria-describedby');\n        return existingDescribedBy?.split(' ') || [];\n    }\n    setDescribedByIds(ids) {\n        const element = this._elementRef.nativeElement;\n        // Set the value directly in the DOM since this binding\n        // is prone to \"changed after checked\" errors.\n        if (ids.length) {\n            element.setAttribute('aria-describedby', ids.join(' '));\n        }\n        else {\n            element.removeAttribute('aria-describedby');\n        }\n    }\n    /** Checks whether a keycode is one of the configured separators. */\n    _isSeparatorKey(event) {\n        return !hasModifierKey(event) && new Set(this.separatorKeyCodes).has(event.keyCode);\n    }\n    /** Gets the value to set on the `readonly` attribute. */\n    _getReadonlyAttribute() {\n        return this.readonly || (this.disabled && this.disabledInteractive) ? 'true' : null;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatChipInput, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"20.0.0\", type: MatChipInput, isStandalone: true, selector: \"input[matChipInputFor]\", inputs: { chipGrid: [\"matChipInputFor\", \"chipGrid\"], addOnBlur: [\"matChipInputAddOnBlur\", \"addOnBlur\", booleanAttribute], separatorKeyCodes: [\"matChipInputSeparatorKeyCodes\", \"separatorKeyCodes\"], placeholder: \"placeholder\", id: \"id\", disabled: [\"disabled\", \"disabled\", booleanAttribute], readonly: [\"readonly\", \"readonly\", booleanAttribute], disabledInteractive: [\"matChipInputDisabledInteractive\", \"disabledInteractive\", booleanAttribute] }, outputs: { chipEnd: \"matChipInputTokenEnd\" }, host: { listeners: { \"keydown\": \"_keydown($event)\", \"blur\": \"_blur()\", \"focus\": \"_focus()\", \"input\": \"_onInput()\" }, properties: { \"id\": \"id\", \"attr.disabled\": \"disabled && !disabledInteractive ? \\\"\\\" : null\", \"attr.placeholder\": \"placeholder || null\", \"attr.aria-invalid\": \"_chipGrid && _chipGrid.ngControl ? _chipGrid.ngControl.invalid : null\", \"attr.aria-required\": \"_chipGrid && _chipGrid.required || null\", \"attr.aria-disabled\": \"disabled && disabledInteractive ? \\\"true\\\" : null\", \"attr.readonly\": \"_getReadonlyAttribute()\", \"attr.required\": \"_chipGrid && _chipGrid.required || null\" }, classAttribute: \"mat-mdc-chip-input mat-mdc-input-element mdc-text-field__input mat-input-element\" }, exportAs: [\"matChipInput\", \"matChipInputFor\"], usesOnChanges: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatChipInput, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input[matChipInputFor]',\n                    exportAs: 'matChipInput, matChipInputFor',\n                    host: {\n                        // TODO: eventually we should remove `mat-input-element` from here since it comes from the\n                        // non-MDC version of the input. It's currently being kept for backwards compatibility, because\n                        // the MDC chips were landed initially with it.\n                        'class': 'mat-mdc-chip-input mat-mdc-input-element mdc-text-field__input mat-input-element',\n                        '(keydown)': '_keydown($event)',\n                        '(blur)': '_blur()',\n                        '(focus)': '_focus()',\n                        '(input)': '_onInput()',\n                        '[id]': 'id',\n                        '[attr.disabled]': 'disabled && !disabledInteractive ? \"\" : null',\n                        '[attr.placeholder]': 'placeholder || null',\n                        '[attr.aria-invalid]': '_chipGrid && _chipGrid.ngControl ? _chipGrid.ngControl.invalid : null',\n                        '[attr.aria-required]': '_chipGrid && _chipGrid.required || null',\n                        '[attr.aria-disabled]': 'disabled && disabledInteractive ? \"true\" : null',\n                        '[attr.readonly]': '_getReadonlyAttribute()',\n                        '[attr.required]': '_chipGrid && _chipGrid.required || null',\n                    },\n                }]\n        }], ctorParameters: () => [], propDecorators: { chipGrid: [{\n                type: Input,\n                args: ['matChipInputFor']\n            }], addOnBlur: [{\n                type: Input,\n                args: [{ alias: 'matChipInputAddOnBlur', transform: booleanAttribute }]\n            }], separatorKeyCodes: [{\n                type: Input,\n                args: ['matChipInputSeparatorKeyCodes']\n            }], chipEnd: [{\n                type: Output,\n                args: ['matChipInputTokenEnd']\n            }], placeholder: [{\n                type: Input\n            }], id: [{\n                type: Input\n            }], disabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], readonly: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], disabledInteractive: [{\n                type: Input,\n                args: [{ alias: 'matChipInputDisabledInteractive', transform: booleanAttribute }]\n            }] } });\n\nconst CHIP_DECLARATIONS = [\n    MatChip,\n    MatChipAvatar,\n    MatChipEdit,\n    MatChipEditInput,\n    MatChipGrid,\n    MatChipInput,\n    MatChipListbox,\n    MatChipOption,\n    MatChipRemove,\n    MatChipRow,\n    MatChipSet,\n    MatChipTrailingIcon,\n];\nclass MatChipsModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatChipsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.0\", ngImport: i0, type: MatChipsModule, imports: [MatCommonModule, MatRippleModule, MatChipAction, MatChip,\n            MatChipAvatar,\n            MatChipEdit,\n            MatChipEditInput,\n            MatChipGrid,\n            MatChipInput,\n            MatChipListbox,\n            MatChipOption,\n            MatChipRemove,\n            MatChipRow,\n            MatChipSet,\n            MatChipTrailingIcon], exports: [MatCommonModule, MatChip,\n            MatChipAvatar,\n            MatChipEdit,\n            MatChipEditInput,\n            MatChipGrid,\n            MatChipInput,\n            MatChipListbox,\n            MatChipOption,\n            MatChipRemove,\n            MatChipRow,\n            MatChipSet,\n            MatChipTrailingIcon] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatChipsModule, providers: [\n            ErrorStateMatcher,\n            {\n                provide: MAT_CHIPS_DEFAULT_OPTIONS,\n                useValue: {\n                    separatorKeyCodes: [ENTER],\n                },\n            },\n        ], imports: [MatCommonModule, MatRippleModule, MatCommonModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatChipsModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule, MatRippleModule, MatChipAction, CHIP_DECLARATIONS],\n                    exports: [MatCommonModule, CHIP_DECLARATIONS],\n                    providers: [\n                        ErrorStateMatcher,\n                        {\n                            provide: MAT_CHIPS_DEFAULT_OPTIONS,\n                            useValue: {\n                                separatorKeyCodes: [ENTER],\n                            },\n                        },\n                    ],\n                }]\n        }] });\n\nexport { MAT_CHIP, MAT_CHIPS_DEFAULT_OPTIONS, MAT_CHIP_AVATAR, MAT_CHIP_EDIT, MAT_CHIP_LISTBOX_CONTROL_VALUE_ACCESSOR, MAT_CHIP_REMOVE, MAT_CHIP_TRAILING_ICON, MatChip, MatChipAvatar, MatChipEdit, MatChipEditInput, MatChipGrid, MatChipGridChange, MatChipInput, MatChipListbox, MatChipListboxChange, MatChipOption, MatChipRemove, MatChipRow, MatChipSelectionChange, MatChipSet, MatChipTrailingIcon, MatChipsModule };\n\n","import { Component } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatSnackBar, MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@Component({\r\n    selector: 'app-data-generation',\r\n    standalone: true,\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        MatCardModule,\r\n        MatFormFieldModule,\r\n        MatInputModule,\r\n        MatButtonModule,\r\n        MatProgressBarModule,\r\n        MatSnackBarModule,\r\n        MatIconModule,\r\n        MatSliderModule,\r\n        MatChipsModule\r\n    ],\r\n    template: `\r\n    <div class=\"page-container\">\r\n      <!-- Hero Section -->\r\n      <div class=\"hero-section\">\r\n        <div class=\"hero-content\">\r\n          <h1 class=\"hero-title\">\r\n            <mat-icon class=\"hero-icon\">data_usage</mat-icon>\r\n            Data Generation\r\n          </h1>\r\n          <p class=\"hero-subtitle\">\r\n            Generate comprehensive Excel files with realistic student data for testing and development\r\n          </p>\r\n        </div>\r\n        <div class=\"hero-visual\">\r\n          <div class=\"floating-card\">\r\n            <mat-icon>table_chart</mat-icon>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Main Form Card -->\r\n      <div class=\"form-container\">\r\n        <mat-card class=\"main-card\">\r\n          <mat-card-header class=\"card-header\">\r\n            <div class=\"header-icon\">\r\n              <mat-icon>add_circle</mat-icon>\r\n            </div>\r\n            <mat-card-title>Generate Student Data</mat-card-title>\r\n            <mat-card-subtitle>\r\n              Configure your data generation parameters\r\n            </mat-card-subtitle>\r\n          </mat-card-header>\r\n\r\n          <mat-card-content class=\"card-content\">\r\n            <form [formGroup]=\"generationForm\" (ngSubmit)=\"onSubmit()\" class=\"generation-form\">\r\n              \r\n              <!-- Number of Records Input -->\r\n              <div class=\"form-section\">\r\n                <label class=\"section-label\">\r\n                  <mat-icon>numbers</mat-icon>\r\n                  Number of Records\r\n                </label>\r\n                \r\n                <div class=\"input-group\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Enter number of student records</mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"number\"\r\n                      formControlName=\"numberOfRecords\"\r\n                      placeholder=\"e.g., 1000\"\r\n                      min=\"1\"\r\n                      max=\"1000000\">\r\n                    <mat-icon matSuffix>person</mat-icon>\r\n                  </mat-form-field>\r\n                  \r\n                  <!-- Quick Selection Chips -->\r\n                  <div class=\"quick-selection\">\r\n                    <mat-chip-set>\r\n                      <mat-chip \r\n                        *ngFor=\"let amount of quickAmounts\" \r\n                        (click)=\"selectAmount(amount)\"\r\n                        [class.selected]=\"generationForm.get('numberOfRecords')?.value === amount\"\r\n                        class=\"amount-chip\">\r\n                        {{ amount.toLocaleString() }}\r\n                      </mat-chip>\r\n                    </mat-chip-set>\r\n                  </div>\r\n                </div>\r\n\r\n                <!-- Validation Messages -->\r\n                <div class=\"validation-messages\" *ngIf=\"generationForm.get('numberOfRecords')?.touched\">\r\n                  <div class=\"error-message\" *ngIf=\"generationForm.get('numberOfRecords')?.hasError('required')\">\r\n                    <mat-icon>error</mat-icon>\r\n                    Number of records is required\r\n                  </div>\r\n                  <div class=\"error-message\" *ngIf=\"generationForm.get('numberOfRecords')?.hasError('min')\">\r\n                    <mat-icon>error</mat-icon>\r\n                    Minimum 1 record required\r\n                  </div>\r\n                  <div class=\"error-message\" *ngIf=\"generationForm.get('numberOfRecords')?.hasError('max')\">\r\n                    <mat-icon>error</mat-icon>\r\n                    Maximum 1,000,000 records allowed\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <!-- Submit Button -->\r\n              <div class=\"submit-section\">\r\n                <button\r\n                  mat-raised-button\r\n                  color=\"primary\"\r\n                  type=\"submit\"\r\n                  [disabled]=\"generationForm.invalid || isGenerating\"\r\n                  class=\"submit-button\">\r\n                  <mat-icon>{{ isGenerating ? 'hourglass_empty' : 'add_circle' }}</mat-icon>\r\n                  {{ isGenerating ? 'Generating Data...' : 'Generate Data' }}\r\n                </button>\r\n                \r\n                <button\r\n                  mat-stroked-button\r\n                  color=\"warn\"\r\n                  type=\"button\"\r\n                  (click)=\"runPerformanceTest()\"\r\n                  [disabled]=\"isGenerating\"\r\n                  class=\"performance-button\">\r\n                  <mat-icon>speed</mat-icon>\r\n                  Performance Test\r\n                </button>\r\n              </div>\r\n            </form>\r\n\r\n            <!-- Progress Bar -->\r\n            <div class=\"progress-section\" *ngIf=\"isGenerating\">\r\n              <div class=\"progress-header\">\r\n                <mat-icon class=\"progress-icon\">sync</mat-icon>\r\n                <span>Generating student data...</span>\r\n              </div>\r\n              <mat-progress-bar\r\n                mode=\"indeterminate\"\r\n                class=\"progress-bar\">\r\n              </mat-progress-bar>\r\n              <p class=\"progress-text\">This may take a few moments for large datasets</p>\r\n            </div>\r\n\r\n            <!-- Results Section -->\r\n            <div class=\"results-section\" *ngIf=\"generationResult\">\r\n              <div class=\"result-header\">\r\n                <mat-icon class=\"result-icon\" [class.success]=\"generationResult.success\" [class.error]=\"!generationResult.success\">\r\n                  {{ generationResult.success ? 'check_circle' : 'error' }}\r\n                </mat-icon>\r\n                <h3>Generation {{ generationResult.success ? 'Successful' : 'Failed' }}</h3>\r\n              </div>\r\n              \r\n              <div class=\"result-content\">\r\n                <div class=\"result-item\">\r\n                  <span class=\"label\">Status:</span>\r\n                  <span class=\"value\" [class.success]=\"generationResult.success\" [class.error]=\"!generationResult.success\">\r\n                    {{ generationResult.success ? 'Success' : 'Failed' }}\r\n                  </span>\r\n                </div>\r\n                \r\n                <div class=\"result-item\">\r\n                  <span class=\"label\">Message:</span>\r\n                  <span class=\"value\">{{ generationResult.message }}</span>\r\n                </div>\r\n                \r\n                <div class=\"result-item\" *ngIf=\"generationResult.filePath\">\r\n                  <span class=\"label\">File Path:</span>\r\n                  <span class=\"value file-path\">{{ generationResult.filePath }}</span>\r\n                </div>\r\n                \r\n                <div class=\"result-item\" *ngIf=\"generationResult.recordsGenerated\">\r\n                  <span class=\"label\">Records Generated:</span>\r\n                  <span class=\"value highlight\">{{ generationResult.recordsGenerated.toLocaleString() }}</span>\r\n                </div>\r\n              </div>\r\n\r\n              <!-- Success Actions -->\r\n              <div class=\"success-actions\" *ngIf=\"generationResult.success\">\r\n                <button mat-stroked-button color=\"primary\" class=\"action-button\">\r\n                  <mat-icon>download</mat-icon>\r\n                  Download File\r\n                </button>\r\n                <button mat-stroked-button color=\"accent\" class=\"action-button\">\r\n                  <mat-icon>share</mat-icon>\r\n                  Share Results\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </mat-card-content>\r\n        </mat-card>\r\n      </div>\r\n\r\n      <!-- Info Cards -->\r\n      <div class=\"info-section\">\r\n        <div class=\"info-grid\">\r\n          <mat-card class=\"info-card\">\r\n            <mat-card-header>\r\n              <mat-icon class=\"info-icon\">speed</mat-icon>\r\n              <mat-card-title>Fast Generation</mat-card-title>\r\n            </mat-card-header>\r\n            <mat-card-content>\r\n              <p>Generate thousands of records in seconds with our optimized algorithms</p>\r\n            </mat-card-content>\r\n          </mat-card>\r\n\r\n          <mat-card class=\"info-card\">\r\n            <mat-card-header>\r\n              <mat-icon class=\"info-icon\">security</mat-icon>\r\n              <mat-card-title>Realistic Data</mat-card-title>\r\n            </mat-card-header>\r\n            <mat-card-content>\r\n              <p>Data follows realistic patterns and distributions for authentic testing</p>\r\n            </mat-card-content>\r\n          </mat-card>\r\n\r\n          <mat-card class=\"info-card\">\r\n            <mat-card-header>\r\n              <mat-icon class=\"info-icon\">format_list_bulleted</mat-icon>\r\n              <mat-card-title>Multiple Formats</mat-card-title>\r\n            </mat-card-header>\r\n            <mat-card-content>\r\n              <p>Export to Excel, CSV, or JSON formats for maximum compatibility</p>\r\n            </mat-card-content>\r\n          </mat-card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `,\r\n    styles: [`\r\n    .page-container {\r\n      min-height: 100vh;\r\n      padding: 0;\r\n    }\r\n\r\n    /* Hero Section */\r\n    .hero-section {\r\n      background: linear-gradient(135deg, rgba(255, 255, 255, 0.1) 0%, rgba(255, 255, 255, 0.05) 100%);\r\n      backdrop-filter: blur(20px);\r\n      border-radius: 24px;\r\n      padding: 48px;\r\n      margin-bottom: 32px;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: space-between;\r\n      position: relative;\r\n      overflow: hidden;\r\n    }\r\n\r\n    .hero-section::before {\r\n      content: '';\r\n      position: absolute;\r\n      top: -50%;\r\n      right: -50%;\r\n      width: 200%;\r\n      height: 200%;\r\n      background: radial-gradient(circle, rgba(255, 255, 255, 0.1) 0%, transparent 70%);\r\n      animation: float 6s ease-in-out infinite;\r\n    }\r\n\r\n    @keyframes float {\r\n      0%, 100% { transform: translateY(0px) rotate(0deg); }\r\n      50% { transform: translateY(-20px) rotate(180deg); }\r\n    }\r\n\r\n    .hero-content {\r\n      flex: 1;\r\n      z-index: 1;\r\n    }\r\n\r\n    .hero-title {\r\n      color: white;\r\n      font-size: 48px;\r\n      font-weight: 700;\r\n      margin: 0 0 16px 0;\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 16px;\r\n      text-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\r\n    }\r\n\r\n    .hero-icon {\r\n      font-size: 48px;\r\n      width: 48px;\r\n      height: 48px;\r\n      color: #ff6b6b;\r\n    }\r\n\r\n    .hero-subtitle {\r\n      color: rgba(255, 255, 255, 0.9);\r\n      font-size: 20px;\r\n      margin: 0;\r\n      line-height: 1.6;\r\n      max-width: 600px;\r\n    }\r\n\r\n    .hero-visual {\r\n      position: relative;\r\n      z-index: 1;\r\n    }\r\n\r\n    .floating-card {\r\n      width: 120px;\r\n      height: 120px;\r\n      background: linear-gradient(135deg, #ff6b6b, #feca57);\r\n      border-radius: 20px;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      box-shadow: 0 20px 40px rgba(0, 0, 0, 0.2);\r\n      animation: float 4s ease-in-out infinite;\r\n    }\r\n\r\n    .floating-card mat-icon {\r\n      font-size: 48px;\r\n      width: 48px;\r\n      height: 48px;\r\n      color: white;\r\n    }\r\n\r\n    /* Form Container */\r\n    .form-container {\r\n      margin-bottom: 48px;\r\n    }\r\n\r\n    .main-card {\r\n      background: rgba(255, 255, 255, 0.95);\r\n      backdrop-filter: blur(20px);\r\n      border-radius: 24px;\r\n      box-shadow: 0 20px 60px rgba(0, 0, 0, 0.1);\r\n      border: 1px solid rgba(255, 255, 255, 0.2);\r\n      overflow: hidden;\r\n    }\r\n\r\n    .card-header {\r\n      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n      color: white;\r\n      padding: 32px;\r\n      text-align: center;\r\n    }\r\n\r\n    .header-icon {\r\n      width: 64px;\r\n      height: 64px;\r\n      background: rgba(255, 255, 255, 0.2);\r\n      border-radius: 16px;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      margin: 0 auto 16px;\r\n    }\r\n\r\n    .header-icon mat-icon {\r\n      font-size: 32px;\r\n      width: 32px;\r\n      height: 32px;\r\n      color: white;\r\n    }\r\n\r\n    .card-header mat-card-title {\r\n      font-size: 32px;\r\n      font-weight: 700;\r\n      margin: 0 0 8px 0;\r\n    }\r\n\r\n    .card-header mat-card-subtitle {\r\n      font-size: 16px;\r\n      opacity: 0.9;\r\n      margin: 0;\r\n    }\r\n\r\n    .card-content {\r\n      padding: 48px;\r\n    }\r\n\r\n    /* Form Styling */\r\n    .generation-form {\r\n      max-width: 600px;\r\n      margin: 0 auto;\r\n    }\r\n\r\n    .form-section {\r\n      margin-bottom: 32px;\r\n    }\r\n\r\n    .section-label {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 8px;\r\n      font-size: 18px;\r\n      font-weight: 600;\r\n      color: #333;\r\n      margin-bottom: 16px;\r\n    }\r\n\r\n    .section-label mat-icon {\r\n      color: #667eea;\r\n    }\r\n\r\n    .input-group {\r\n      margin-bottom: 16px;\r\n    }\r\n\r\n    .full-width {\r\n      width: 100%;\r\n    }\r\n\r\n    .quick-selection {\r\n      margin-top: 16px;\r\n    }\r\n\r\n    .amount-chip {\r\n      cursor: pointer;\r\n      transition: all 0.3s ease;\r\n      margin: 4px;\r\n    }\r\n\r\n    .amount-chip:hover {\r\n      transform: translateY(-2px);\r\n      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\r\n    }\r\n\r\n    .amount-chip.selected {\r\n      background: #667eea !important;\r\n      color: white !important;\r\n    }\r\n\r\n    /* Validation Messages */\r\n    .validation-messages {\r\n      margin-top: 8px;\r\n    }\r\n\r\n    .error-message {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 8px;\r\n      color: #f44336;\r\n      font-size: 14px;\r\n      margin: 4px 0;\r\n    }\r\n\r\n    .error-message mat-icon {\r\n      font-size: 16px;\r\n      width: 16px;\r\n      height: 16px;\r\n    }\r\n\r\n    /* Submit Section */\r\n    .submit-section {\r\n      text-align: center;\r\n      margin: 32px 0;\r\n    }\r\n\r\n    .submit-button {\r\n      padding: 16px 48px;\r\n      font-size: 18px;\r\n      font-weight: 600;\r\n      border-radius: 50px;\r\n      box-shadow: 0 8px 25px rgba(102, 126, 234, 0.3);\r\n      transition: all 0.3s ease;\r\n    }\r\n\r\n    .submit-button:hover:not(:disabled) {\r\n      transform: translateY(-2px);\r\n      box-shadow: 0 12px 35px rgba(102, 126, 234, 0.4);\r\n    }\r\n\r\n    .performance-button {\r\n      padding: 16px 32px;\r\n      font-size: 16px;\r\n      font-weight: 500;\r\n      border-radius: 50px;\r\n      margin-left: 16px;\r\n      transition: all 0.3s ease;\r\n    }\r\n\r\n    .performance-button:hover:not(:disabled) {\r\n      transform: translateY(-2px);\r\n      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\r\n    }\r\n\r\n    .submit-button mat-icon {\r\n      margin-right: 8px;\r\n    }\r\n\r\n    /* Progress Section */\r\n    .progress-section {\r\n      background: rgba(102, 126, 234, 0.1);\r\n      border-radius: 16px;\r\n      padding: 24px;\r\n      margin: 24px 0;\r\n      text-align: center;\r\n    }\r\n\r\n    .progress-header {\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      gap: 12px;\r\n      margin-bottom: 16px;\r\n      color: #667eea;\r\n      font-weight: 600;\r\n    }\r\n\r\n    .progress-icon {\r\n      animation: spin 2s linear infinite;\r\n    }\r\n\r\n    @keyframes spin {\r\n      from { transform: rotate(0deg); }\r\n      to { transform: rotate(360deg); }\r\n    }\r\n\r\n    .progress-bar {\r\n      height: 8px;\r\n      border-radius: 4px;\r\n    }\r\n\r\n    .progress-text {\r\n      color: #666;\r\n      margin: 16px 0 0 0;\r\n      font-size: 14px;\r\n    }\r\n\r\n    /* Results Section */\r\n    .results-section {\r\n      background: rgba(76, 175, 80, 0.1);\r\n      border-radius: 16px;\r\n      padding: 24px;\r\n      margin: 24px 0;\r\n      border-left: 4px solid #4caf50;\r\n    }\r\n\r\n    .result-header {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 12px;\r\n      margin-bottom: 20px;\r\n    }\r\n\r\n    .result-icon {\r\n      font-size: 32px;\r\n      width: 32px;\r\n      height: 32px;\r\n    }\r\n\r\n    .result-icon.success {\r\n      color: #4caf50;\r\n    }\r\n\r\n    .result-icon.error {\r\n      color: #f44336;\r\n    }\r\n\r\n    .result-header h3 {\r\n      margin: 0;\r\n      color: #333;\r\n      font-size: 24px;\r\n    }\r\n\r\n    .result-content {\r\n      margin-bottom: 20px;\r\n    }\r\n\r\n    .result-item {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n      padding: 12px 0;\r\n      border-bottom: 1px solid rgba(0, 0, 0, 0.1);\r\n    }\r\n\r\n    .result-item:last-child {\r\n      border-bottom: none;\r\n    }\r\n\r\n    .label {\r\n      font-weight: 600;\r\n      color: #666;\r\n    }\r\n\r\n    .value {\r\n      font-weight: 500;\r\n      color: #333;\r\n    }\r\n\r\n    .value.success {\r\n      color: #4caf50;\r\n    }\r\n\r\n    .value.error {\r\n      color: #f44336;\r\n    }\r\n\r\n    .value.highlight {\r\n      color: #667eea;\r\n      font-weight: 700;\r\n    }\r\n\r\n    .file-path {\r\n      font-family: 'Courier New', monospace;\r\n      background: rgba(0, 0, 0, 0.05);\r\n      padding: 4px 8px;\r\n      border-radius: 4px;\r\n      font-size: 12px;\r\n    }\r\n\r\n    /* Success Actions */\r\n    .success-actions {\r\n      display: flex;\r\n      gap: 16px;\r\n      justify-content: center;\r\n      flex-wrap: wrap;\r\n    }\r\n\r\n    .action-button {\r\n      border-radius: 25px;\r\n      padding: 8px 24px;\r\n      transition: all 0.3s ease;\r\n    }\r\n\r\n    .action-button:hover {\r\n      transform: translateY(-2px);\r\n      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\r\n    }\r\n\r\n    /* Info Section */\r\n    .info-section {\r\n      margin-top: 48px;\r\n    }\r\n\r\n    .info-grid {\r\n      display: grid;\r\n      grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\r\n      gap: 24px;\r\n    }\r\n\r\n    .info-card {\r\n      background: rgba(255, 255, 255, 0.9);\r\n      backdrop-filter: blur(20px);\r\n      border-radius: 16px;\r\n      border: 1px solid rgba(255, 255, 255, 0.2);\r\n      transition: all 0.3s ease;\r\n    }\r\n\r\n    .info-card:hover {\r\n      transform: translateY(-4px);\r\n      box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);\r\n    }\r\n\r\n    .info-card mat-card-header {\r\n      padding: 24px 24px 16px;\r\n    }\r\n\r\n    .info-icon {\r\n      color: #667eea;\r\n      font-size: 32px;\r\n      width: 32px;\r\n      height: 32px;\r\n    }\r\n\r\n    .info-card mat-card-title {\r\n      color: #333;\r\n      font-size: 20px;\r\n      font-weight: 600;\r\n    }\r\n\r\n    .info-card mat-card-content {\r\n      padding: 0 24px 24px;\r\n    }\r\n\r\n    .info-card p {\r\n      color: #666;\r\n      line-height: 1.6;\r\n      margin: 0;\r\n    }\r\n\r\n    /* Responsive Design */\r\n    @media (max-width: 768px) {\r\n      .hero-section {\r\n        flex-direction: column;\r\n        text-align: center;\r\n        padding: 32px 24px;\r\n      }\r\n\r\n      .hero-title {\r\n        font-size: 32px;\r\n      }\r\n\r\n      .hero-subtitle {\r\n        font-size: 16px;\r\n      }\r\n\r\n      .floating-card {\r\n        width: 80px;\r\n        height: 80px;\r\n        margin-top: 24px;\r\n      }\r\n\r\n      .floating-card mat-icon {\r\n        font-size: 32px;\r\n        width: 32px;\r\n        height: 32px;\r\n      }\r\n\r\n      .card-content {\r\n        padding: 24px;\r\n      }\r\n\r\n      .info-grid {\r\n        grid-template-columns: 1fr;\r\n      }\r\n    }\r\n  `]\r\n})\r\nexport class DataGenerationComponent {\r\n  generationForm: FormGroup;\r\n  isGenerating = false;\r\n  generationResult: any = null;\r\n  quickAmounts = [100, 500, 1000, 5000, 10000];\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private http: HttpClient,\r\n    private snackBar: MatSnackBar\r\n  ) {\r\n    this.generationForm = this.fb.group({\r\n      numberOfRecords: [1000, [Validators.required, Validators.min(1), Validators.max(1000000)]]\r\n    });\r\n  }\r\n\r\n  selectAmount(amount: number) {\r\n    this.generationForm.patchValue({ numberOfRecords: amount });\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.generationForm.valid) {\r\n      this.generateData();\r\n    }\r\n  }\r\n\r\n  generateData() {\r\n    this.isGenerating = true;\r\n    this.generationResult = null;\r\n\r\n    const request = {\r\n      numberOfRecords: this.generationForm.value.numberOfRecords\r\n    };\r\n\r\n    this.http.post('http://localhost:8081/api/data-generation/generate-excel', request)\r\n      .subscribe({\r\n        next: (response: any) => {\r\n          this.generationResult = response;\r\n          this.isGenerating = false;\r\n          \r\n          if (response.success) {\r\n            this.snackBar.open('Data generated successfully!', 'Close', {\r\n              duration: 5000,\r\n              horizontalPosition: 'center',\r\n              verticalPosition: 'bottom',\r\n              panelClass: ['success-snackbar']\r\n            });\r\n          } else {\r\n            this.snackBar.open('Error generating data: ' + response.message, 'Close', {\r\n              duration: 5000,\r\n              horizontalPosition: 'center',\r\n              verticalPosition: 'bottom',\r\n              panelClass: ['error-snackbar']\r\n            });\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.generationResult = {\r\n            success: false,\r\n            message: 'Network error: ' + error.message\r\n          };\r\n          this.isGenerating = false;\r\n          \r\n          this.snackBar.open('Network error occurred', 'Close', {\r\n            duration: 5000,\r\n            horizontalPosition: 'center',\r\n            verticalPosition: 'bottom',\r\n            panelClass: ['error-snackbar']\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  runPerformanceTest() {\r\n    this.isGenerating = true;\r\n    this.generationResult = null;\r\n\r\n    this.http.post('http://localhost:8081/api/data-generation/performance-test', {})\r\n      .subscribe({\r\n        next: (response: any) => {\r\n          if (response.success) {\r\n            this.generationResult = {\r\n              success: true,\r\n              message: 'Performance test completed successfully',\r\n              performanceResults: response\r\n            };\r\n            \r\n            this.snackBar.open('Performance test completed!', 'Close', {\r\n              duration: 5000,\r\n              horizontalPosition: 'center',\r\n              verticalPosition: 'bottom',\r\n              panelClass: ['success-snackbar']\r\n            });\r\n          } else {\r\n            this.generationResult = {\r\n              success: false,\r\n              message: 'Performance test failed: ' + response.message\r\n            };\r\n          }\r\n          this.isGenerating = false;\r\n        },\r\n        error: (error: any) => {\r\n          this.generationResult = {\r\n            success: false,\r\n            message: 'Error running performance test: ' + error.message\r\n          };\r\n          this.isGenerating = false;\r\n          \r\n          this.snackBar.open('Error running performance test', 'Close', {\r\n            duration: 5000,\r\n            horizontalPosition: 'center',\r\n            verticalPosition: 'bottom',\r\n            panelClass: ['error-snackbar']\r\n          });\r\n        }\r\n      });\r\n  }\r\n}\r\n","import { ComponentFixture, TestBed } from '@angular/core/testing';\r\nimport { HttpClientTestingModule } from '@angular/common/http/testing';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { DataGenerationComponent } from './data-generation.component';\r\n\r\ndescribe('DataGenerationComponent', () => {\r\n  let component: DataGenerationComponent;\r\n  let fixture: ComponentFixture<DataGenerationComponent>;\r\n\r\n  beforeEach(async () => {\r\n    await TestBed.configureTestingModule({\r\n      imports: [\r\n        DataGenerationComponent,\r\n        HttpClientTestingModule,\r\n        ReactiveFormsModule,\r\n        MatSnackBarModule,\r\n        NoopAnimationsModule\r\n      ]\r\n    })\r\n    .compileComponents();\r\n\r\n    fixture = TestBed.createComponent(DataGenerationComponent);\r\n    component = fixture.componentInstance;\r\n    fixture.detectChanges();\r\n  });\r\n\r\n  it('should create', () => {\r\n    expect(component).toBeTruthy();\r\n  });\r\n\r\n  it('should initialize with default form values', () => {\r\n    expect(component.generationForm.get('numberOfRecords')?.value).toBe(1000);\r\n  });\r\n\r\n  it('should have quick amounts array', () => {\r\n    expect(component.quickAmounts).toEqual([100, 500, 1000, 5000, 10000]);\r\n  });\r\n});\r\n"],"mappings":"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","names":["map","value","base","headers","params","HttpEventType","HttpStatusCode","req","signal","document","HttpFeatureKind","init_testing","noop","acc","FormControl","document","FocusMonitorDetectionMode","window","window","HighContrastMode","items","RtlScrollAxisType","RippleState","_ViewRepeaterOperation","from","document","window","documentElement","scrollBehaviorSupported","document","_animationsDisabled","style","AnimationMetadataType","map","LINE_START","defaults","map","init_browser","style","styleMetadata","ast","element","_a","value","player","index","i","delegate","fn","data","init_browser","init_private","init_private","defaults","defaults","httpResource","request","VERSION","elem","HydrationFeatureKind","document","defaults","_MatThumb","_MatTickMark","skip","init_testing","init_data_generation_component"],"x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66]}